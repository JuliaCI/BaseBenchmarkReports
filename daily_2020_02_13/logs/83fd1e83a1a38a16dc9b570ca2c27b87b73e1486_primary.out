cset: moving following pidspec: 24964
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.306225171 seconds)
loading group "string"... done (took 0.603422278 seconds)
loading group "linalg"... done (took 7.8185196 seconds)
loading group "parallel"... done (took 0.164215105 seconds)
loading group "find"... done (took 1.270025232 seconds)
loading group "tuple"... done (took 1.966985721 seconds)
loading group "dates"... done (took 1.304412602 seconds)
loading group "micro"... done (took 0.246892103 seconds)
loading group "io"... done (took 0.974530214 seconds)
loading group "scalar"... done (took 38.957390136 seconds)
loading group "sparse"... done (took 12.256669853 seconds)
loading group "broadcast"... done (took 0.983471909 seconds)
loading group "union"... done (took 12.708946368 seconds)
loading group "simd"... done (took 4.657214727 seconds)
loading group "random"... done (took 9.378099806 seconds)
loading group "problem"... done (took 1.860209 seconds)
loading group "array"... done (took 21.611571941 seconds)
loading group "misc"... done (took 1.708415395 seconds)
loading group "sort"... done (took 3.447020235 seconds)
loading group "collection"... done (took 17.95602263 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.52855352 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.130267 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.133076751 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.124389549 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.152217265 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.119240771 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.13131754 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.090535034 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.815826368 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.155425888 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.122909758 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.441238996 seconds)
done (took 5.263116427 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.177710692 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087548653 seconds)
    (2/2) benchmarking "String"...
    done (took 0.087694451 seconds)
  done (took 1.308288564 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.069533148 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.129991078 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.070992771 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.070660165 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.071286596 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.070071885 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.069746852 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.070078351 seconds)
  done (took 1.68669695 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.07682186 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.073115828 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.069752737 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.072131969 seconds)
  done (took 1.426063274 seconds)
done (took 5.811369104 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.813168794 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.220231088 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.193397524 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.429460392 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.133307602 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.164355861 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.639508544 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.313077096 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.194926646 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.085380583 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.113726029 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.351231818 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.113643194 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.637436244 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078407906 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.095414091 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.140838716 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.444181197 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.07117126 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.086245526 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.09267604 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.132135079 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.08933954 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078553809 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.150821206 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071626327 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.140780563 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.084004021 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069843679 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.225699146 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.176428009 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.666172423 seconds)
  done (took 10.472095578 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.105417554 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.10671213 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.072034458 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.129981645 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.105232477 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.073743598 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.079111022 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.071101043 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.095019729 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.135525524 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.096701548 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.108181619 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.069659769 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.073095211 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.089381961 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.210294141 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.084759721 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.086831832 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.07470258 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.084736059 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.112560119 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.082225245 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.084974928 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.085291771 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.132950833 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.183914536 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.101199674 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.103736167 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070671948 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.087075668 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.11829673 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.132398505 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.07031276 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.070017259 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.132144052 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.09853287 seconds)
  done (took 4.790348299 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.048633195 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.149903729 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.094795344 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.140667682 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.068534068 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.114004787 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.069615111 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085820064 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.217304201 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.344082647 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.643957077 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115767013 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.110906419 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071551721 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.07292675 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.071044287 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.584313879 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.102700159 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.112599079 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086073649 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.074911182 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.073320082 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.360473046 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.07282246 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.06797408 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072547126 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.061016428 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.130648731 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071646388 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.982849202 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.169296403 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070270826 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.1046737 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.165253061 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.088378874 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.221649969 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.149255513 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073348588 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.068248048 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.162711084 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074947348 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.071125703 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.088973666 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.108812686 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.122740114 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.069929586 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071473991 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.169592497 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.06868767 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084309643 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.121687329 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.158087468 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.082878273 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068791308 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.264384374 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.093863283 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.07347922 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.069378296 seconds)
    (58/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.097026269 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.182374624 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.133754149 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.071616135 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.071351669 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072707962 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.073061592 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.403993318 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.069586896 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.844594409 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.074331264 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079967473 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073123227 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073767146 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076752058 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07691107 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.092453498 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.07245172 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.079231931 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.06966924 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.069808844 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.071269142 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087424471 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.405753949 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.070305883 seconds)
    (83/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.067843652 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.072010905 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.069013197 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.093090825 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099673627 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.17312215 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.069972164 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103573898 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072478851 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.070611588 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.112829279 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.071629483 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.087270804 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.068115021 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.073553462 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.116309657 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.070909112 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.09353048 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.072413072 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.100128121 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.073883824 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101742797 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.084486855 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072252824 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.451619954 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.069079623 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.069411723 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.073078505 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.069171459 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.071160668 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069947026 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.082604362 seconds)
  done (took 22.213593564 seconds)
done (took 39.65769381 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.269431265 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.077784278 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.07737966 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077453833 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.077347578 seconds)
  done (took 1.811255724 seconds)
done (took 3.022297425 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.128067428 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104575137 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068514171 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.101786926 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06851331 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.106888264 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.105581945 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081992472 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105331926 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.068149162 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102539546 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.068351104 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067907603 seconds)
  done (took 2.410668209 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088869923 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088323777 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.074291842 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087262697 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068895532 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087886682 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086444486 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.093748179 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086386412 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076907483 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068173406 seconds)
  done (took 2.110841746 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08764878 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.089933198 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.074710432 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087484809 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.069844268 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086638286 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086512918 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090856696 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086548331 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.078098537 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067419777 seconds)
  done (took 2.104721952 seconds)
done (took 7.825355661 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.081871366 seconds)
  done (took 1.273340061 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.604843103 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.140937679 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.086005959 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.116163944 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.198997841 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.123332448 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.278034552 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.091020734 seconds)
  done (took 9.019326299 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.094985228 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.08663547 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.073650491 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.075889681 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.076139029 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.073269398 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.075814739 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.07217193 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.074654684 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.07463089 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.073537933 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.075703832 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.071875569 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.072798584 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.074894308 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.07244758 seconds)
  done (took 2.484402367 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.096814981 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.095755912 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.07743087 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.078748571 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.076489864 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.075561728 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.077682265 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.077185997 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.075562651 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.07597182 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.078576567 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.07725537 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.075214029 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.068191444 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.077808369 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078766319 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.074211276 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.077450924 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.077974692 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.079578884 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.07976554 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.068497002 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.075200002 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07788863 seconds)
  done (took 3.176979759 seconds)
done (took 17.153829654 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.110005455 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070647583 seconds)
  done (took 1.381895422 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.085259081 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.087446251 seconds)
  done (took 1.377599807 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.087745217 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.069809352 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.093422966 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.081785816 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.069949123 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.069309245 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.091975813 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.069675359 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.069418452 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.069945446 seconds)
  done (took 1.978814679 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.072558021 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.081288372 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.073108395 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.085744592 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.076918624 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.067772267 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.076167819 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.070963656 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080946852 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.066370856 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.075326857 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.086818763 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.075028433 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.088510114 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.075745933 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.072271404 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.074457301 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.07105625 seconds)
  done (took 2.579217985 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.069575071 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.070680624 seconds)
  done (took 1.351381644 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.071453522 seconds)
    (2/7) benchmarking "second"...
    done (took 0.068196953 seconds)
    (3/7) benchmarking "month"...
    done (took 0.070172621 seconds)
    (4/7) benchmarking "year"...
    done (took 0.070488863 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.067780237 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.066420593 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.066751526 seconds)
  done (took 1.689119908 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.39167918 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.119613295 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.326129177 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.07526098 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.085912172 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.269627771 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.070098364 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.074705477 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.074448976 seconds)
  done (took 2.741267408 seconds)
done (took 14.314010714 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.084287931 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.092049935 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.100786362 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.393342701 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.095332843 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.070140114 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.117406429 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.19327609 seconds)
done (took 2.367100393 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.217627173 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.723590471 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.44724718 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.219326676 seconds)
  done (took 2.603642502 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.358442164 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.093526849 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.062649272 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.070563814 seconds)
  done (took 1.807018476 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.069336224 seconds)
    (2/2) benchmarking "read"...
    done (took 0.073659544 seconds)
  done (took 1.363306957 seconds)
done (took 7.211452746 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070015063 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.070521601 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.068123874 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.07030159 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.068200527 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.067370915 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.069895524 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.069650716 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.070048835 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 0.069940645 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069900103 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067334443 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067409556 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.090950655 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069988212 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.076055426 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.067719933 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067652065 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067140563 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070918671 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.067376003 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.067371978 seconds)
    (23/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.067628487 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.067499429 seconds)
  done (took 2.935944642 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.087497404 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.070371709 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.075156057 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.075115881 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072818521 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.074560628 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.075253435 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.069670315 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.074841333 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.07267022 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072967673 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072743337 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.07174323 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072754439 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072083916 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.072937262 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.074589931 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069792138 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071408168 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.073077622 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.188682757 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069470525 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072678757 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074561183 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072560483 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073449267 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.071504712 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.069710354 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074778829 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.072740207 seconds)
  done (took 3.540698568 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.074018076 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.067271343 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.067978377 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.074145283 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.066785029 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.068556738 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.066942363 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.068224479 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.067669884 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.06729723 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.069723796 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.066721913 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.067649262 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.067756342 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.067853085 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.070879993 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.082877591 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.067640323 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.067196586 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.06738272 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.070570303 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.066794868 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.067151607 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.066663713 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.066561522 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.066548228 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.067175967 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.067000698 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.068019615 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.066898554 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.07065529 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.071471633 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.066541619 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.074139688 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.070462482 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.066926779 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.0716607 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.067125369 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.068060124 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.067367082 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.066596586 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.067025059 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.06707465 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.074459967 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.067363082 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.068391869 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.067361535 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.068213763 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.067549658 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.069357496 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.066786517 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.067379592 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.069170434 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.067921906 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.071350442 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.066677322 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.06816179 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.066640761 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.0682064 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.066751013 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.066941021 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.066687515 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.070191438 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.068138952 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.082801043 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.074979764 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.067369271 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.069083947 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.067916189 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.070128952 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.069250693 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.081714173 seconds)
  done (took 6.200624028 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.094332824 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.09265492 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069138757 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069073168 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065249306 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067770671 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073261949 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067590247 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070032708 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086135832 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067576026 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069005134 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068883315 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071648281 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067792159 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069506827 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076152604 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065778054 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.067956616 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071543996 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067951993 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072638226 seconds)
  done (took 2.834964349 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.161879604 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074839974 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.109854705 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.079134748 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073434165 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.078882604 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.074201323 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073582216 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073712349 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071232687 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071032623 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073639784 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07377564 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070881466 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0709441 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071102878 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073270844 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071463372 seconds)
  done (took 2.684246465 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.080150356 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.069270374 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.091808343 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069963568 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.070262308 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.072086402 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073973442 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077580104 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.072046015 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069621961 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.077414291 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072248425 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.072210219 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069498734 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072152347 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070019939 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.071500648 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069464532 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077717792 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074357836 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073793768 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077894076 seconds)
  done (took 2.863237316 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083711709 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072952612 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.085763705 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.071995536 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065292061 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06791498 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.073686996 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.069609028 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.073726033 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.071796648 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069268312 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06786991 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072266353 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069368711 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072530224 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069403649 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071867757 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069789848 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071324816 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06546552 seconds)
  done (took 2.673602435 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091430958 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072256267 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072576347 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080099996 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071363648 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071655812 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078545849 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071595642 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071474348 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.093865409 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071697294 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071981694 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078784725 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076423373 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071319834 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079389775 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07895801 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079016165 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071721878 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071737964 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.092455014 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071688056 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078972182 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071195626 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071307458 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07164072 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07129993 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07649725 seconds)
  done (took 3.369832138 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071184397 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07060551 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.067003456 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.068018064 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.067083786 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.067415122 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.067077744 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066931092 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.069690303 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067781234 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.070377164 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.069871323 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069665931 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.0699503 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069873908 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.06967088 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070042573 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.067449231 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067081943 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067077446 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.069988469 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070063796 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.07001628 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067383524 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067781023 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.069658385 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067610892 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067442939 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069949775 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06749089 seconds)
  done (took 3.304162767 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.079719953 seconds)
    (2/2) benchmarking "in"...
    done (took 0.07740852 seconds)
  done (took 1.400612959 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066544007 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084293598 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.067393574 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.07373168 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074177068 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070618842 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076977181 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072974729 seconds)
  done (took 1.827248988 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.086581112 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.080966066 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.071608403 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.082967962 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.08091776 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.088121432 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.141470883 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.070485318 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.078636458 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.068161065 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.08703121 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.069428086 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.077093189 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070758906 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.076109159 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.077502863 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.067636274 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.07592368 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.072218717 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.068454746 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.072076369 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078844609 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073267403 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.06543378 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.071878449 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093224167 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.082022503 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.06975475 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07366888 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.078022356 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.076826567 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.06432848 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.070193421 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.071097635 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.068003796 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.080191319 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085102463 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073487993 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.079605961 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071324831 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.079641603 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.065548394 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.075123043 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.077211509 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081067378 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.071289039 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.070712852 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.065054767 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.068095267 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.072519143 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.066093113 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071120939 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.064734272 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077507395 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.073942617 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081599141 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.070260034 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.07221391 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.073195935 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.073599614 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.077247846 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.072904366 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073214799 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.070155164 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.080774217 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.07532383 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078954242 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.065598629 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.064060188 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.068221791 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.080240917 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094260338 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.077797127 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.070867454 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071577505 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.068705526 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074431888 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071229272 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076730084 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.077533143 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.070503778 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07558577 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078548188 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071167579 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.073255786 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.078956314 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.069402338 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.073325885 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.068490109 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.087946491 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.069521609 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.068313554 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.068289035 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.080715519 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.073691428 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.069808417 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.067768537 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077477695 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.063757058 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.069769903 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070601778 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070781766 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079604656 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07382659 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074308967 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.077926723 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.077157297 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069298401 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.07271011 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.066153767 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069979561 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.069205565 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.077033675 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.063137997 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072257873 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.195899042 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.07282202 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.080581312 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.069420603 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.071347134 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.080098245 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.078078309 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.070479811 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.067661043 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.074108686 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.070899375 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074962591 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.078893595 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.069083729 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.065168159 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.066030319 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.074897262 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.071298922 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.07510997 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.076033803 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074172509 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.064891626 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.068669015 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.075390814 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.080542146 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.071591772 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.072258067 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.077634136 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.073540983 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.070046302 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.077793857 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.073761077 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.070033124 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.076894969 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.071556455 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.065745331 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073455841 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.074010196 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.069915418 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.074908199 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07409349 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.073675523 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.071519112 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069405512 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.077769112 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071953425 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.070466138 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071198501 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.069316759 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.082681236 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.074147461 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.066044832 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.067751068 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.079537261 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.07036137 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.070528604 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.070732278 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.072703143 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.071518068 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.068757269 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.070523813 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.073739473 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.081471443 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.074481025 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071655362 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.07609169 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.082587397 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.071308215 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.073393425 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.070903072 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071783356 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.071528935 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.079684492 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.076213729 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.075621685 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072982563 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.066716731 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075981716 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078521003 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.070499314 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.068077536 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.069953873 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.074718439 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.076685797 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.074746678 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.070843511 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068711151 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071992506 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073392325 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.073191443 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.070396323 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.069776379 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.076706643 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.068449767 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.077126333 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071063969 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.081259119 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074021645 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.065136095 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07359101 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06841824 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.076565142 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.065103985 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.067573945 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.06909545 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.070227538 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.068794993 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.072966583 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.064002636 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076362055 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077043695 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.070126934 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.069097122 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.068514378 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076060664 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.071145753 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073012286 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072918123 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.202863164 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.082769618 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.070795949 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.076105155 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.08283523 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.071111746 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.066049319 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.076680962 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.069676756 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.06992385 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.071376042 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.070364642 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074782805 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.078832783 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.078378313 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.065178338 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.073694542 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.069321405 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.070659105 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.066336372 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.076071262 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.074131909 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.072633641 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078332843 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072135022 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.07136922 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074327189 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.070611662 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.070898537 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.072678718 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073582418 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.071861887 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.072182734 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.070624293 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.074152988 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.070728493 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.06938938 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.07298141 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.070419919 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.071335898 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076118708 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.07078667 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071535612 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.073087576 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.071175516 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071869922 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.071188706 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.069923502 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073850886 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071598577 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.071349769 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.07323069 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.065412583 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078402882 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.070203171 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078690809 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.071439497 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.067491818 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.076786643 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.073105692 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.076041208 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.071479593 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.071504635 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.072934601 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.069836677 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.074441123 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077948968 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.06885689 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.081872942 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.079171691 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07207168 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.072894596 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.0715532 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.072639682 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.069573192 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.071733166 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.070957595 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.070822477 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.070226115 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.075272308 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.07427404 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.071141444 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072333383 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.071322067 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.071314726 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.07143799 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.064505056 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.069973432 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.069906591 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.073181892 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.080301819 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.070974816 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.071050717 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.069922923 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071302202 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.069713765 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.067118352 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.078091822 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.078994166 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.071477286 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077460385 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.0689711 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.072195332 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080368965 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.064368765 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.06831619 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.068014384 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.068392123 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07738289 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.070415206 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.079329756 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.070015315 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068646635 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.06660893 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.070224629 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.067687024 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063637511 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.066819075 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072789944 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.069073046 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068331951 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.069207827 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071703908 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069917991 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077972453 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.068737942 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.070290074 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.069520745 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.066957764 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.068742532 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068371175 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.071768971 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.069551549 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.067281096 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.066105031 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068910654 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069944703 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.070427171 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.069305984 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.07078438 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075843204 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068710509 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.072009064 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071511641 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063678547 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.072140957 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.068635637 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.069496147 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.068188735 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.072514613 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072846746 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069317805 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077996321 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.069116806 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070270873 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06916507 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.066685818 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068335226 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.068733383 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.06838675 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.06892295 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.069853001 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077085404 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.066830225 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.0722576 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069510472 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.070184351 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074488866 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069458795 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071160312 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072943843 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.069345283 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.07031631 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076483225 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071784851 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071870272 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069467183 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069922343 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074303492 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.0687924 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075168362 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069573895 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.068959374 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069635214 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066154992 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067841403 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067406976 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068293596 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.075420915 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.068705502 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067549467 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067566277 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.066160293 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069134176 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070717084 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07643421 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071062419 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071052886 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063237728 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.065877319 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068804324 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066849088 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.07040236 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.071747119 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073138126 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070214234 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068220592 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.06727914 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077926179 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073949191 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.073075168 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067142969 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.072536418 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.069354753 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070781607 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068992804 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069034046 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06959429 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072617847 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069340597 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067877476 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074275772 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.072006683 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07016759 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069633079 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069270293 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.070231883 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.063607908 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069417811 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070518348 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072955744 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070613972 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068570203 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078320479 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.067297596 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068646087 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071059515 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067354712 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072716616 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.063417563 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070312527 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069447311 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069102115 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062855346 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.067699167 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066536594 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070214408 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.067306669 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062642655 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078423503 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077084024 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070752722 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067682599 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06692702 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063056131 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062500554 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.067972783 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068365452 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069933096 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.077575548 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067302317 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066583253 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062346493 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067991262 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069997086 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071764281 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064680057 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062615184 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067870022 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070559795 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074212829 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066864717 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.067226909 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070351393 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069736666 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.065183434 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069986548 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.065150132 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072241411 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079934317 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068264924 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069047405 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074959027 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07525292 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068159127 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062817352 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067499478 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071089867 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.068024232 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067834059 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.068542929 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082517033 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071320443 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067789155 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067220474 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070417364 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067937038 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075522757 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068179527 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068403929 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072594628 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069812086 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074592326 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070551501 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074376198 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071555873 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070510399 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.067510515 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068433834 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.06659303 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067050254 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.06892581 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.068331759 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071327135 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075021747 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067374052 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078306898 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076852589 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.070103176 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.064721908 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067464077 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.067743322 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063727612 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068189651 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065739621 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.065663269 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065815898 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066832484 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069395202 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073020035 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068751792 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.068744519 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.068119333 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062113871 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070603239 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070137875 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068671688 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.065345231 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.067390838 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.068582614 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.07188045 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070810421 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065999065 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068796738 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069494138 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069162545 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.063908322 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.07406289 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067217153 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070132824 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067097963 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068215311 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068047212 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070859555 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071949833 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068418301 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070283918 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.071515259 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070710365 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064099113 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064926799 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.072702932 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.065858097 seconds)
  done (took 44.247769128 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.119218377 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070441122 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070168288 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068455186 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080040173 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069545821 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068931294 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070224955 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070607392 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072664971 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069327998 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069965803 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.0776564 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085243764 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08086576 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073564313 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069442214 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070249945 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069885312 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070479349 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077372168 seconds)
  done (took 3.22076621 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.080509122 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.085543297 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.083624631 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.089887816 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078830366 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.077348545 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.081727937 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077561381 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.084946983 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078801398 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085746701 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077050381 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.078749131 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.079031856 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079360724 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076936439 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087690188 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.077940871 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.077358863 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081675855 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077607613 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.081985572 seconds)
  done (took 3.172676658 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.074658643 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.073437105 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.075182297 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.067836545 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.073028995 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.067674241 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.076172302 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.070343352 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.07574956 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.072003634 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.072533756 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.072101682 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.074566095 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.067679231 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.072854459 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.071121799 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.114552728 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.076246984 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.073498949 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.07388106 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.067247488 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.074337122 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.067615583 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.068170456 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.071279406 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.075786669 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.073511694 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.070472905 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.071913852 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.071368053 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.072124229 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.070018338 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.074607793 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.072912673 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.072634198 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.072624328 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.072039754 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.072301748 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.067204089 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.070422775 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.073511946 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.067893134 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.072317735 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.073669429 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.070263005 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.070077531 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.074569253 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.072749208 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.067036604 seconds)
  done (took 4.96221356 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.085056838 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.117959021 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.072517914 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.095505758 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.085216483 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.077694075 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.075642579 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.097180648 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.06913039 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.06897835 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.086036804 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.084405055 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.070076105 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.074621937 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.07564285 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.070142524 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.071205429 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.069579977 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.074218206 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070026124 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.073673349 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.07728997 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.085396367 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.082725636 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073983364 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.069220815 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069915068 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.074956343 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.082470786 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.074473014 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.075052592 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.076023561 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.085816351 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.072520141 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069917323 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.072443627 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.086875132 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.070741862 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.07355734 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.068072592 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.073279646 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.075106249 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.077122658 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.086856946 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.071497155 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.076877846 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.070263779 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.068034299 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.083644589 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.073243311 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.078403977 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.084229763 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07484812 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.071254585 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.0754826 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.086546289 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.070886325 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.068336843 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.073795045 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.083191248 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.06809389 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.074608867 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.084005007 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.072155637 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.077641324 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.083255312 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.075734293 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073967202 seconds)
  done (took 6.775863939 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.081191133 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.101865898 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08786152 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087485787 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080260687 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.080567438 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.080158847 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.080017536 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.080064631 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.084824514 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080224304 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.122091721 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.075514175 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.082550096 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080980996 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080595576 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.080426405 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081379848 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.080032176 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080252713 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.08071343 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.087377174 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.08055288 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.087617383 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.093004987 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.076084837 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.080317626 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.080201089 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.087968811 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.080315958 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.084183533 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.08050739 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.08054995 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.088378002 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.084374387 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.080054988 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070559123 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080029771 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.080143762 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.080344598 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.075964979 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.087751236 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.080195193 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.075952874 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080156274 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080847252 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.087958368 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.084145446 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.082765979 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.084663714 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.080419598 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088445431 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080211102 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080297069 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.088108321 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.090385553 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08760105 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.087890301 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080591564 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.087559053 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.087755108 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.09046123 seconds)
  done (took 6.595024155 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088122983 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.078751549 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.087005325 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.065787521 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06927879 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.075951821 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069130181 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.069061464 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.078371324 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.078461979 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080601432 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076593081 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079531356 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080933184 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.076180585 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078504052 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0758265 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07601938 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.078709183 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.076573822 seconds)
  done (took 2.953328725 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.080216322 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087365093 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.071822324 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.076982966 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.073475767 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.075928594 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.073633812 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074088346 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071498017 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074592454 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.081472178 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.081114308 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072516525 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.076023496 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.080410218 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075857122 seconds)
  done (took 2.633980081 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.088879199 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.078438824 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.085264288 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.072209502 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.071981094 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.067405958 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.070814497 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.066189425 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.066983314 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.083691876 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.070748091 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.081300584 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.070493913 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.069556571 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.067763062 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.076364742 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.067247083 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.068298559 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.070457154 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.08344341 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.074521931 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.068984504 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.073961937 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.070856577 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.072969627 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.075119268 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.069401746 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.070685545 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.067899289 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.07079662 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.073669223 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.073657171 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.067569674 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.068482171 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.069214313 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.067229246 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.070140251 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.07060829 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.076120157 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.070405684 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.068603969 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.072476349 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.070685445 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.071671607 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.06680317 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.071130753 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.066674524 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.072825041 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.067829105 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.073481341 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.070273239 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.073152877 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070799441 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.077201481 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.073580946 seconds)
  done (took 5.376362232 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084179154 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074477148 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.066414243 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068592777 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.074582674 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.072105262 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.073777648 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071864445 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071485646 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068514021 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071740134 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.073588368 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071747037 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07397042 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071940904 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074112683 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.066103013 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071513383 seconds)
  done (took 2.720808634 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.076065274 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071548056 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.077872455 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.070902313 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.071064109 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.073353063 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066667738 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.06899099 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069345253 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070805523 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070363824 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.073019941 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071808282 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.073024966 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.070848983 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070872058 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.073227894 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069321454 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.071109828 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066690881 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.073281315 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069637128 seconds)
  done (took 2.984669532 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.100057742 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.088896145 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.144843812 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.084372612 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.090615491 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.076714441 seconds)
  done (took 2.001362249 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097161733 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106484257 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071249403 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074237058 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080802934 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074146347 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074748175 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075132257 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082908141 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080791224 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074513051 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083312482 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082788157 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082931569 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080165192 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080504074 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074337364 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074690303 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07061436 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088296147 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074514058 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08318375 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074354623 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074174322 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07493421 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082235055 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082795553 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080432767 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07516418 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083146794 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080470326 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074712472 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083060885 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081262395 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073913833 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083624178 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07507341 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089152168 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080574425 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083037445 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.073701733 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080758992 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08330465 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079077115 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083663003 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074979706 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079557358 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074612125 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074580153 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089717795 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080196226 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081613945 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080949818 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083850807 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082641343 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089828394 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080723846 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082893149 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080148395 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080813629 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08252856 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080277075 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081696063 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080165943 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080406263 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08275901 seconds)
  done (took 6.726733238 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110604504 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071813691 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074317164 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080436905 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081644907 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074878506 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07451275 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074445329 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074435041 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071438814 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113956696 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07496739 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082480268 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081664554 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075086395 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07448232 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074441201 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082271035 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071118518 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09002429 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074559121 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082652818 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081761609 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082062185 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080512407 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079932677 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074577724 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074486587 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074748051 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074158574 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079038652 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07427321 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08172561 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071247244 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081844244 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074923313 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074098582 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079132671 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074651155 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080426146 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081592148 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087894069 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074613902 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074444673 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080191523 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074096374 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074239933 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071860067 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074495798 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071185606 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079809596 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080122925 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079809678 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081772171 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074536789 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075317083 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07457957 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074242379 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074612151 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080703615 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081494552 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074918357 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089876955 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074290419 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074530834 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082268489 seconds)
  done (took 6.614667956 seconds)
done (took 135.838625986 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.193387319 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.174460818 seconds)
  done (took 1.783554439 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.073058819 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.104399445 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.081824408 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.133662016 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.070705295 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.104189358 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.103914853 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.082839589 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.070932333 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.070430387 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.070639823 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.07384086 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.135918843 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.070645699 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.070264707 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.073144129 seconds)
  done (took 2.820008435 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.105482421 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.171229081 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107815218 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06975116 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.105103524 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077372297 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.069234441 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079987887 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.075689504 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.069686671 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077330234 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.074480401 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.069316347 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.075292251 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.075303196 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.07678884 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.069227415 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.077784369 seconds)
  done (took 2.956461013 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.104053048 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.096268208 seconds)
  done (took 1.634134866 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.164647701 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.141373071 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.214570634 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.360863303 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.165676836 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.155190231 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.151560421 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.149194818 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.123870312 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.143915444 seconds)
  done (took 3.199956451 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.105165213 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.160615383 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.283234542 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.123837989 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.078055113 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.097686498 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.125482793 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.083260417 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084956435 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.084895213 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.084344342 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.081600483 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.105033174 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077441969 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.078639854 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.08087859 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.109172362 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.077639528 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.079384844 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.080024221 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.106004336 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.070125861 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.077380666 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.077561992 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.081966763 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.081280425 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.0704704 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069860252 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.08032008 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.078866642 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.081103946 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.096767455 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.081851142 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.110863803 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.075779491 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.112309263 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.081844902 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.077330311 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.079559207 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.078401441 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.082259645 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.082894175 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.077501023 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.08088403 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.069980592 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.081668046 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.070432162 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.070126349 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.081661977 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.071414462 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.082824512 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.081197012 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.110560785 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.072338894 seconds)
  done (took 6.321677151 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109874086 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.113753956 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075977496 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.120401781 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110284515 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076848083 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.110888328 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.103287944 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.11094977 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07415502 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.07273675 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074907423 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.086626101 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.087065048 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.122579474 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.11521858 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.078292132 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.075472099 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.113525053 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.112101997 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072581426 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.1046239 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098365072 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.111143349 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.072084365 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074794667 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.072997289 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074610598 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.08111261 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.082797281 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073959369 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.084308994 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.08894253 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.082350798 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.07246234 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.07273753 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073327699 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.084674713 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083739204 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.083138913 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.082240159 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072281995 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072282618 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.074461758 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.074994232 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072559339 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.082945108 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.085972934 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.083560321 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.075193582 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074705548 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.075233464 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073991021 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.085958975 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.082805422 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.085379699 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.084418469 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07243041 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072939523 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.077072724 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.084743342 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083701555 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084476162 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073694065 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.083211647 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072964757 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084445062 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.088129308 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.073159085 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074781177 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.073376427 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073819852 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.074177253 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.082043128 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.082931632 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074806515 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073875776 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073509139 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.084350248 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082481533 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072844911 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.082451746 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072141056 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072601563 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074098845 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07411575 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.08178352 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.084441065 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.074431198 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.07341458 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073494764 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072860578 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.071216396 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.080931843 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.08391777 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.083337239 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.083091734 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073807888 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.082511414 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.082679084 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074113105 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.082677713 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.202195571 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.075933372 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075560062 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.083778657 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.082790425 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084686026 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074834642 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.072376227 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.083377107 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085956663 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.07372227 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.083590266 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08591064 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.084240171 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.073079665 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.086117926 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07328555 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.084947916 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07440409 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083438081 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073547159 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.083848869 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072975788 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.072421521 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.073644898 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.083410234 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074470999 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072874788 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074478677 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074348395 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.083240245 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.08750393 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075930137 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082728452 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.082749853 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.075260783 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.082937803 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072529515 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.083538465 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073771678 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074994756 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072026336 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.086025496 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073146215 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.073966068 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.074035481 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.084741819 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073094735 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08554054 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.083816179 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07284994 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085329439 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.085260349 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.082196157 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.085406509 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075903716 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.073313131 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073257326 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.074652542 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.081741422 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.08360909 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075076409 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.073049592 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.081787624 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.084160802 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.071374553 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.082844513 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.082117559 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.083036668 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072461612 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073906987 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084578462 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.084490468 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.08250567 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.082125211 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.082547657 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.073013468 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081680276 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082480402 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072642413 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.088558881 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072711858 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.087134638 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.082801304 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.081230884 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.083271243 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.084986076 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.084998017 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.08478415 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.087888387 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073373417 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.073348714 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.083954239 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072902331 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073759219 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.081564132 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.073967226 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.073577395 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.087270641 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072611844 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.083815358 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.078217184 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.082475814 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071458501 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07399374 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.219429992 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.074438511 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.075309081 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.083926673 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.074881779 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.083569684 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.086227619 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.083638981 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073575207 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074623977 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.084696182 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.083395635 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072518017 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073404596 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074580435 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.081989866 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.083203503 seconds)
  done (took 19.812386281 seconds)
done (took 39.9675127 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.21938149 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.158708309 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.180457136 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.123279991 seconds)
  done (took 2.218310807 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.12090668 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.105940675 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.097058245 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.069766823 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.103894396 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.068928529 seconds)
  done (took 2.037239185 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.317704562 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.216627769 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.193133625 seconds)
  done (took 2.193474802 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.215655557 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.200157237 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.461412994 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.28320603 seconds)
  done (took 2.74229562 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.150746668 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.093190272 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.071631337 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.089139564 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.138169156 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.164556629 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.104730171 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.129894472 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.083651206 seconds)
  done (took 2.550530181 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.153984959 seconds)
done (took 13.36306316 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.243299035 seconds)
    (2/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.204346947 seconds)
    (3/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.187344224 seconds)
    (4/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.102586336 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.168993122 seconds)
    (6/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.094398443 seconds)
    (7/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.118508968 seconds)
    (8/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.083609314 seconds)
    (9/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.172462435 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.077090114 seconds)
    (11/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.081298402 seconds)
    (12/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.186952709 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.082987995 seconds)
    (14/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.081915065 seconds)
    (15/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.070136577 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.079000604 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.111634788 seconds)
    (18/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.195131285 seconds)
    (19/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.07644278 seconds)
    (20/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.23971837 seconds)
    (21/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.088018103 seconds)
    (22/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.163209299 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.119049854 seconds)
    (24/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.186566429 seconds)
    (25/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.078857572 seconds)
    (26/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.225366035 seconds)
    (27/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.214003128 seconds)
    (28/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.152462089 seconds)
    (29/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.153325547 seconds)
    (30/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.055815205 seconds)
    (31/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.081390364 seconds)
    (32/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.07936109 seconds)
    (33/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.208545274 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.076193855 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.094938661 seconds)
    (36/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.087368396 seconds)
    (37/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.163848656 seconds)
    (38/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.081975544 seconds)
    (39/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.078769919 seconds)
    (40/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.09112601 seconds)
    (41/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.217899644 seconds)
    (42/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.202063451 seconds)
    (43/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.187480743 seconds)
    (44/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.082671162 seconds)
    (45/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.070683871 seconds)
    (46/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.080282664 seconds)
    (47/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.159937598 seconds)
    (48/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.075837873 seconds)
    (49/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.10706659 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.078253537 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.119033486 seconds)
    (52/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.107433962 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.091102719 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.095326063 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.070415378 seconds)
    (56/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.078322412 seconds)
    (57/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.101202907 seconds)
    (58/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.072183568 seconds)
    (59/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.078333468 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.116767998 seconds)
    (61/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.213912233 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.124612234 seconds)
    (63/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.162078064 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.119241043 seconds)
    (65/309) benchmarking ("sort", Float64, false)...
    done (took 0.366541461 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.105447844 seconds)
    (67/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.05503898 seconds)
    (68/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.078389163 seconds)
    (69/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.09668766 seconds)
    (70/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.119084549 seconds)
    (71/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.056696279 seconds)
    (72/309) benchmarking ("sort", Int64, false)...
    done (took 0.070453409 seconds)
    (73/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.172829737 seconds)
    (74/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.079609343 seconds)
    (75/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.187935972 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.096882388 seconds)
    (77/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.078589382 seconds)
    (78/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.076516796 seconds)
    (79/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.149868043 seconds)
    (80/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.076088079 seconds)
    (81/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.084727862 seconds)
    (82/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.171607516 seconds)
    (83/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.155667565 seconds)
    (84/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.080943662 seconds)
    (85/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.076435128 seconds)
    (86/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.31911751 seconds)
    (87/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.078327053 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.095629893 seconds)
    (89/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.079341742 seconds)
    (90/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.090908433 seconds)
    (91/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.113247783 seconds)
    (92/309) benchmarking ("sort", BigInt, false)...
    done (took 0.203983748 seconds)
    (93/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.228349593 seconds)
    (94/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.074963326 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.096431015 seconds)
    (96/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.182784298 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.070281441 seconds)
    (98/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.170054547 seconds)
    (99/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.056820178 seconds)
    (100/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.071416084 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.070227573 seconds)
    (102/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.19010245 seconds)
    (103/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.181963571 seconds)
    (104/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.078493115 seconds)
    (105/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.070933449 seconds)
    (106/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.097910828 seconds)
    (107/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.077619794 seconds)
    (108/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.16162318 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.152704706 seconds)
    (110/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.055383369 seconds)
    (111/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.15851697 seconds)
    (112/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.054048039 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.092598581 seconds)
    (114/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.0557703 seconds)
    (115/309) benchmarking ("sort", Int8, false)...
    done (took 0.149414987 seconds)
    (116/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.05484906 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.095711067 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.081569789 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.070234673 seconds)
    (120/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.054722262 seconds)
    (121/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.162955293 seconds)
    (122/309) benchmarking ("sort", Bool, false)...
    done (took 0.145207226 seconds)
    (123/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.078571762 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.069922485 seconds)
    (125/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.162738225 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.099483637 seconds)
    (127/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.077561646 seconds)
    (128/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.172943341 seconds)
    (129/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.079105271 seconds)
    (130/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.098870752 seconds)
    (131/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.148136493 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.075930595 seconds)
    (133/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.077371117 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.091988759 seconds)
    (135/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.078367006 seconds)
    (136/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.188450548 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.13159572 seconds)
    (138/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.05550827 seconds)
    (139/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.20286472 seconds)
    (140/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.077106426 seconds)
    (141/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.085483205 seconds)
    (142/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.193945877 seconds)
    (143/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.080627847 seconds)
    (144/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.2119551 seconds)
    (145/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.054608477 seconds)
    (146/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.080178599 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.070003838 seconds)
    (148/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.16427198 seconds)
    (149/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.07752532 seconds)
    (150/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.107205628 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.069721035 seconds)
    (152/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.054529532 seconds)
    (153/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.069926215 seconds)
    (154/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.125047932 seconds)
    (155/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.116612128 seconds)
    (156/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.067175921 seconds)
    (157/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.07671535 seconds)
    (158/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.168110522 seconds)
    (159/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.078118784 seconds)
    (160/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.065708203 seconds)
    (161/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.068257766 seconds)
    (162/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.084196122 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.096029691 seconds)
    (164/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.067428254 seconds)
    (165/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.072252244 seconds)
    (166/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.073061435 seconds)
    (167/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.069845837 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.097820232 seconds)
    (169/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.070180885 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.094964479 seconds)
    (171/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.07595038 seconds)
    (172/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.069103619 seconds)
    (173/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.189785874 seconds)
    (174/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.146330189 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.119824662 seconds)
    (176/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.076146597 seconds)
    (177/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.054452838 seconds)
    (178/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.087303381 seconds)
    (179/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.054349629 seconds)
    (180/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.055602759 seconds)
    (181/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.054265653 seconds)
    (182/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.055865827 seconds)
    (183/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.199929182 seconds)
    (184/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.076200305 seconds)
    (185/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.055854189 seconds)
    (186/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.054052598 seconds)
    (187/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.085626769 seconds)
    (188/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.075313533 seconds)
    (189/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.126584327 seconds)
    (190/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.271912817 seconds)
    (191/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.0743808 seconds)
    (192/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.06995088 seconds)
    (193/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.055833409 seconds)
    (194/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.07814408 seconds)
    (195/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.068428314 seconds)
    (196/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.057802863 seconds)
    (197/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.056854713 seconds)
    (198/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.055494629 seconds)
    (199/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.070609023 seconds)
    (200/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.079879453 seconds)
    (201/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.071035593 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.095864996 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.142477209 seconds)
    (204/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.072230973 seconds)
    (205/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.083535049 seconds)
    (206/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.072571857 seconds)
    (207/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.076860258 seconds)
    (208/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.055820238 seconds)
    (209/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.071595782 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.067598874 seconds)
    (211/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.056416799 seconds)
    (212/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.054030158 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.095026734 seconds)
    (214/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.055060196 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.093766045 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.120730657 seconds)
    (217/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.057006693 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.079722566 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.077808198 seconds)
    (220/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.05779165 seconds)
    (221/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.070440245 seconds)
    (222/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.155801087 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.147908826 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.097441407 seconds)
    (225/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.194480582 seconds)
    (226/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.069713798 seconds)
    (227/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.079717731 seconds)
    (228/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.094944792 seconds)
    (229/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.069512397 seconds)
    (230/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.076288359 seconds)
    (231/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.055883154 seconds)
    (232/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.054808201 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.109472545 seconds)
    (234/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.056031134 seconds)
    (235/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.068842137 seconds)
    (236/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.068150154 seconds)
    (237/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.187492727 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.069461567 seconds)
    (239/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.094528394 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.091864735 seconds)
    (241/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.083720266 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.147014769 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.093326849 seconds)
    (244/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.055292879 seconds)
    (245/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.069707151 seconds)
    (246/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.05518322 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.070384054 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.069756 seconds)
    (249/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.054180671 seconds)
    (250/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.054201428 seconds)
    (251/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.055245669 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.099629898 seconds)
    (253/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.054972865 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.069480484 seconds)
    (255/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.078197823 seconds)
    (256/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.076834947 seconds)
    (257/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.07390662 seconds)
    (258/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.163944308 seconds)
    (259/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.071101552 seconds)
    (260/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.078558963 seconds)
    (261/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.093872318 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.069712723 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.138763653 seconds)
    (264/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.092559971 seconds)
    (265/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.071259304 seconds)
    (266/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.070572992 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.092741203 seconds)
    (268/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.078358324 seconds)
    (269/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.054343315 seconds)
    (270/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.07331278 seconds)
    (271/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.076851868 seconds)
    (272/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.072775997 seconds)
    (273/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.116841224 seconds)
    (274/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.073104327 seconds)
    (275/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.075658942 seconds)
    (276/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.078631142 seconds)
    (277/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.05496962 seconds)
    (278/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.05457237 seconds)
    (279/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.054750948 seconds)
    (280/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.056948012 seconds)
    (281/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.070507141 seconds)
    (282/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.054381564 seconds)
    (283/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.077032528 seconds)
    (284/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.055975372 seconds)
    (285/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.067457655 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.09473293 seconds)
    (287/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.056367186 seconds)
    (288/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.054751577 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.077421363 seconds)
    (290/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.069195255 seconds)
    (291/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.055604131 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.069479091 seconds)
    (293/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.094976007 seconds)
    (294/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.068735484 seconds)
    (295/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.054933369 seconds)
    (296/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.067732734 seconds)
    (297/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.077185171 seconds)
    (298/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.071154746 seconds)
    (299/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.057825168 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.06994816 seconds)
    (301/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.055313633 seconds)
    (302/309) benchmarking ("sort", Float32, false)...
    done (took 0.138500518 seconds)
    (303/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.075894014 seconds)
    (304/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.055056114 seconds)
    (305/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.069369875 seconds)
    (306/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.077081855 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.07550784 seconds)
    (308/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.054834343 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.133131965 seconds)
  done (took 32.73277538 seconds)
done (took 34.215033362 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08890393 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09729799 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.080104839 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.098305186 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.085577042 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.079970415 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.077152604 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.082995164 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.084941373 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.085718305 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.081817604 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.05809234 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.078840626 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.079027146 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.079253711 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09550235 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.083328185 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.077438261 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.077721671 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068998396 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.078139689 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.069333961 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.071348983 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.058315855 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.083848129 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.07615834 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.0770639 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.078701276 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.069687921 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.069667778 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.073519072 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.077647341 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.069187047 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.082692527 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.076495494 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.077230027 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.079249971 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.081322564 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.072358978 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.069737452 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07859863 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.069946944 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.077608108 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.078111871 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.076993654 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.075584293 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.0784321 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.081713383 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096014799 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072264812 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.078739741 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.079926462 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079478935 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.077481881 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.074037913 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.077202917 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074285805 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094922883 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.077350715 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072275254 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07873598 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.078656911 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.075433859 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.077415422 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.077381814 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.080405593 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.080594038 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.074996888 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.079303335 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.076067907 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.069743034 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076952471 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.07330395 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.069332464 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.080542883 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.08151873 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.068350343 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.075492276 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.078125797 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.075464186 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068869141 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.07192013 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.074008935 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.077058914 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07201552 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.058663987 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.074270601 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.076570982 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.068211886 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.077846482 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.076442525 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.077072083 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.071353589 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079889691 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068593436 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074460369 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.070305926 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.069338058 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.070816136 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.073854958 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.069236572 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071415538 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.079480198 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.070591165 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.076601586 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.083784521 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.069483503 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.077568229 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.068815528 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.069079097 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.083568361 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.0792767 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.069464733 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071531636 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.068059207 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.076376806 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.068038143 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.068917964 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.069226402 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.069604112 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.075172423 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.069333493 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070860079 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.077006312 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.082329176 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.069074372 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072657288 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071205053 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.069232342 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.075435951 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.203578333 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.071116388 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.072366102 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.065988504 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072283677 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.070569392 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.077027222 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072450435 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.07801118 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.070967027 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.078236029 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.075223068 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.075985954 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.075311483 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.068705767 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.062874733 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071118426 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071595033 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.071882617 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.069707121 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.0709788 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.069287494 seconds)
done (took 13.196590736 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.071044949 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.145082099 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.101048174 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.100541184 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.090265945 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.071070778 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.079720253 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.104110263 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.072340396 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.105495327 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.092325559 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.091070475 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.119330341 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.068763735 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06999566 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.074065048 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.071465847 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.086439529 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.103748236 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.091433213 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.119681506 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.070051613 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.096953174 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.093990333 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.092728151 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.10892395 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070907769 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.074860976 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.073725078 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.097002727 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.093017708 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.07366983 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.070933681 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.103329618 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.098610067 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.088024555 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.070112703 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.087368581 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.070608824 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.069858112 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.071669677 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.103839496 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.085010329 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.085309108 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.074051934 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.081258953 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.071293311 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.087795699 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.094741926 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.083257492 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.090933924 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.105848301 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.073122605 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.088904181 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.068929318 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.090549825 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.081489303 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.072671932 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.070641527 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.078662801 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.070842601 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.073229673 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.08487259 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.0846256 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.073955634 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.08926338 seconds)
  done (took 7.212319628 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.088584033 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.097082985 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.088362049 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.088168239 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.069436514 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.06991236 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.070302678 seconds)
  done (took 2.147890178 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.070708398 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.094327821 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.093335196 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.094836241 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.085826388 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.092972584 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080127257 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.070401254 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.092602147 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.071300841 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.091759677 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.105995744 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.074213077 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.078394027 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.095170626 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.070251963 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.095289161 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.070332664 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073869803 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.095487928 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072860035 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.100904197 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.073591329 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.070569225 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.085061735 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.07122299 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119308707 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074711698 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072775675 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.073405921 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068557663 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.112243645 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.084900068 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078624691 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070452877 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.086326231 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.085626298 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06898944 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.088136365 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.080027937 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.085112176 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.07177253 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.071682774 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068439715 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.074938522 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.081746567 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.071525971 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.071000174 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.073510701 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.091728443 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.071561931 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.08492532 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.073534652 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.076443031 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.072398016 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077232763 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081251963 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.071445499 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.091312387 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072792704 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087923855 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086986167 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.08541678 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086722028 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072762339 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.084446973 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.084884169 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.07336609 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072229309 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.074106927 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08708035 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.069172734 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.072196359 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.081453922 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072930719 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.095092064 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.094397495 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072933204 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.084697328 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.071531823 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070840023 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.070719204 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.09492937 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076011265 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070415652 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.074882187 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073706999 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.069348387 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.069386717 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.075242782 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.06901018 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072724799 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.073762816 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.074773788 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073740161 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.087687815 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.073334962 seconds)
  done (took 9.316001847 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072491036 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.071913941 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.073100241 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.071546981 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.072066895 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.072938512 seconds)
  done (took 2.032854328 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.096548591 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.071896279 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.08440136 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.076108195 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.110496922 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.091118318 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.091267874 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.08200954 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.088340471 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.083040988 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.091189155 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.092042192 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.096686327 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.077494641 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.091165951 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.075290207 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.091989486 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.078703926 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.082140266 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07672383 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.089944377 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.076165951 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076488834 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.086217319 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.079905984 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.075814889 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.081961322 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.08358411 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.082507966 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.082612962 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.077167359 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.079442996 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.074862058 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.081856742 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.091286286 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074523504 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075732225 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.081028576 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.075653886 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.079830671 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.092158132 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076846817 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.078049424 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.081649521 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.081731064 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074773849 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.081239475 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.083427625 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.090943798 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.080492358 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.081085442 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.074776635 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.079783165 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.081600726 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074346553 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.081632252 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.080959058 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.09156819 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.076558751 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074814431 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.072933006 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.080072532 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.081719832 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.08006534 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.084640654 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.081155957 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.07454863 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077046211 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07676028 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.075516134 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.080728315 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.072477761 seconds)
  done (took 7.469456339 seconds)
done (took 29.740587077 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.546265353 seconds)
  done (took 2.112397072 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.637265349 seconds)
  done (took 2.225746151 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.608183372 seconds)
  done (took 8.197527018 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.403839024 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.513033093 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.757012632 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.139076997 seconds)
  done (took 3.441430074 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.720147887 seconds)
  done (took 2.318475819 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.233551494 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.220895299 seconds)
  done (took 2.060203696 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.386031187 seconds)
  done (took 1.97535299 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.162495129 seconds)
  done (took 2.753533395 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.266251754 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184612376 seconds)
  done (took 2.045810711 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.493125751 seconds)
  done (took 2.088728378 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.892511153 seconds)
  done (took 6.490082875 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.221248822 seconds)
  done (took 1.857866308 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.242968768 seconds)
  done (took 1.839893721 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.746065999 seconds)
  done (took 3.340634743 seconds)
done (took 44.341913191 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.088371612 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.089089335 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.088965189 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.085206612 seconds)
  done (took 1.934278662 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.081335136 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.076760318 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.080672998 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.076983677 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.080924921 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.077183241 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.077933776 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.079031637 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.076605582 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.077043158 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.076555897 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.07671608 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.079199578 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.078558763 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.074886093 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.078668339 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.080094517 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.07609145 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.079334955 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.076249402 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.074227672 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.078979056 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.078981737 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.076170808 seconds)
  done (took 3.466738616 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.081693099 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.078064168 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.07848456 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.075686845 seconds)
  done (took 1.916759927 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.082911161 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.097360682 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.094469372 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.082361461 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.096867902 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.090555727 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.072765007 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.072735545 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.074546348 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.08233048 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.071872001 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.10012834 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.093059063 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.082521844 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.084430704 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.069630706 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.071712429 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.092538915 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.082201798 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.082131493 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.07394044 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.082359724 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.072766209 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.092505308 seconds)
  done (took 3.599240798 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.090575686 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.109432596 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.085677449 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.093434117 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.096648969 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.069052399 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.09158376 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.095120992 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.131568363 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.069023582 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.074735088 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.069283223 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.077001228 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068845504 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.085171164 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.112427216 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.116376376 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.072617215 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.102085482 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.069442086 seconds)
  done (took 3.389449243 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.077044963 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.073290409 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.071472378 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069952869 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.081190834 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.076183103 seconds)
  done (took 2.060639684 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.072096893 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.071551133 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.071242017 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.071589 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.075931407 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.070878804 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.06921096 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.071682219 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.071676451 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.07077763 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.070795721 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.069411303 seconds)
  done (took 2.463593073 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.2060296 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.072604445 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.072435325 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.069691907 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.074704034 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.070042725 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.085199757 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.071476998 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.096257458 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.070284224 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.07042953 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.072440813 seconds)
  done (took 2.639863712 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212873063 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079970315 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245108189 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156916772 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115445914 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120075787 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117901486 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117567686 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.147920516 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10525939 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171973575 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172303305 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11225009 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141571615 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093174718 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.103358902 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159338706 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168815239 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110494723 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169857379 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155928384 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130610344 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151730169 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106134212 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110382488 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12629296 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.074945492 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084501213 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175229379 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138415683 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1485792 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115615523 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096181173 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181124382 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176385001 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145627525 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15300954 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088519784 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.105938078 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.138221121 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204181726 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093333988 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168431659 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253487645 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085241292 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138226445 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12414306 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.123635877 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.109743501 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094401007 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150121486 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189560117 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.141493006 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092864122 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128933562 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117609849 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.118608457 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118357677 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185886385 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167605626 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13166389 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.075904186 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113478727 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155481234 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137172859 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.112823287 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.129367025 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097084264 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138880922 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159130305 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127125022 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148503007 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.122186046 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092765636 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12250964 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144534375 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131113952 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165354902 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127797685 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.076427007 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127408931 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105302998 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084508406 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.15362701 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079498807 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179233902 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103634364 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.109916241 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129541794 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112506209 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113550143 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163398118 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147328839 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106844814 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.069018794 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108189572 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.122725522 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14663703 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089752084 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111483163 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11812751 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.080144731 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138205071 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.077866566 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123668642 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.077725389 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124840981 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129073896 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.080307851 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122702205 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105605963 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.10175495 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131650318 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157175471 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089311175 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083504248 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167002571 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121323065 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103103456 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143393251 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154809275 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.100190332 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101272084 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149114374 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178080335 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090944835 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161311294 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106972176 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084784876 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.089525095 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123115596 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111749052 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.124175858 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083069955 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.117975499 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166498347 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.076624029 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096833474 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133358308 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079957042 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082771046 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106215267 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105698118 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.097568426 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.101121282 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.10382288 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135900041 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123881151 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106414314 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124718023 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.352839905 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17958725 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094016138 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.108094375 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110180361 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.075280958 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.140171122 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163065794 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083986478 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169564421 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.128062616 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122393592 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124786608 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088246053 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145720745 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083496363 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.074740027 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151540366 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114827166 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115224976 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.15516648 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121567385 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.130945184 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.126202498 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137875572 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135247979 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.135535574 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11051992 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.092952425 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11597884 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131800621 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.077515143 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.095164615 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.084285427 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10936639 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099832731 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087493581 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145806933 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128816265 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114917731 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115937921 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101934692 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151851283 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.080591397 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132501636 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.123805836 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100587522 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.15738367 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156238689 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136108907 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10327546 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1419176 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.074517391 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078080007 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.091884447 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.276490397 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088147314 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087835741 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120682178 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150778727 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134345257 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14107341 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128030682 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125843667 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160304985 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.073577402 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.124938112 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151820263 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126350514 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.109619355 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094016359 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.103571461 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146438155 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111658976 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187245664 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117225409 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126429041 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156480667 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.105018261 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08375018 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106624575 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139587875 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108840106 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14740864 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103066193 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092282294 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113289677 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.079123805 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102671619 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131135288 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123150324 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138166908 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.119816987 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137523073 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081486874 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119833077 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126073703 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126447448 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.068484369 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124046698 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165045615 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098918271 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121809528 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15572258 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082983654 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.139921994 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178582372 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.298253032 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091002943 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11402044 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123112516 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132693141 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125093702 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145005087 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111732915 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143003173 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114395939 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.089264677 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092183246 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102606934 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108949965 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.099147998 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.109334291 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.118031944 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.099944286 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136934628 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108593135 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11381297 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121540125 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.104765664 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.094983691 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100655401 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181294925 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124076056 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178100441 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.103205024 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.147876244 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168282788 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078584686 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083099403 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.081943232 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144352133 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088465707 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13428915 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.111855179 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121916571 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127736181 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146042055 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100019228 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.07228943 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114460235 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137195644 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128961789 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102620074 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.107790403 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167838179 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.104330979 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08313693 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11789077 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120211511 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106973801 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1737571 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.064733671 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110505015 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.223759011 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085187776 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133447471 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156854785 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.084770419 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.10752147 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12315171 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117352442 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132006457 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104318015 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113200227 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132609508 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158011805 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133039791 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.092921846 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115847077 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131081918 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159879582 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109535407 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.100962441 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176688984 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155249616 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.163287916 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.091021223 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117390534 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116783334 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111625785 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14092173 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087905621 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167035583 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085383898 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140864208 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107808727 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09278078 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133668885 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.113005948 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09178561 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151197866 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121962073 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086959468 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081567347 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122807789 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124157885 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110259302 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.079929799 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143618938 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.077629174 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135588079 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163212111 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084792682 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108492818 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099283171 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082615657 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.256877105 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106622377 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092806304 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.103398365 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176650247 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.090107962 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153110538 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137579223 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117099864 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13846 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1067476 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.644283817 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.08251402 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155220863 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120764801 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179433572 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104253484 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120580227 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1139019 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127179047 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149863136 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107632851 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.188840917 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137113671 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.120440102 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083482927 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10577867 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107691864 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.09128445 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111550646 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116144754 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118660064 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.097301066 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.119375143 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127537219 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.086427455 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100381714 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159259099 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121414831 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148169695 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144993685 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090248726 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121158918 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140988943 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084215427 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.125369264 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156146473 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109489146 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103770932 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.084603263 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.103804722 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.309981894 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.077798176 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165396565 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124778835 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114742702 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11770565 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.11648709 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134731391 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11130366 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124988351 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095727897 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.11266735 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117839629 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085792048 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.081447109 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112596685 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115937699 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.102355057 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101499167 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.103421014 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154099645 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.076508657 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10298248 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119465797 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148171296 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179074699 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.093801819 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086363625 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123691526 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119226464 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.116101411 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125201057 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.083219277 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086084779 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.083415919 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.082390165 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.112754698 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116632417 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118718375 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113950372 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167642231 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.087079627 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.241561872 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099709503 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10909875 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.073453959 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.081836329 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100022461 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102714646 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111883522 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115697167 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1643238 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.099257538 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.093747039 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095534783 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.078029127 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086570199 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131349901 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113410022 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269011017 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105617374 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.066343479 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112870431 seconds)
  done (took 60.99293946 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.111883198 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.085972634 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.099885979 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.147370022 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.125482036 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.205349834 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157383741 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.193639803 seconds)
  done (took 2.86499804 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.072112126 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.100671034 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.107266716 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.087146034 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.071604304 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.073098615 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.236027557 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.085505517 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.070025751 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.100301274 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.081372998 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.072449351 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.441010583 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.069607451 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.070508452 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.065302126 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.071539332 seconds)
  done (took 3.60848852 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.406774572 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.620608592 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.361683589 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.079709289 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.92277894 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.095334475 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.1512074 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.138224084 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.082329221 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.529958745 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.413311906 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.133960202 seconds)
  done (took 18.682213485 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.08491767 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.078728711 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.092908911 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.092530301 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.081275602 seconds)
  done (took 2.169724318 seconds)
done (took 111.416659644 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.085346276 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.621856348 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.056465052 seconds)
  done (took 2.448493284 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.087398912 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.088811267 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.089777743 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087259096 seconds)
  done (took 2.104849411 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.078720432 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.08032334 seconds)
  done (took 1.904393899 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.239334312 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.171543996 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.100271306 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086915074 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.083342411 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.084266413 seconds)
  done (took 2.007077836 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.076877792 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.078679848 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.07677112 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.080782154 seconds)
  done (took 2.061699788 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.081490488 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.05598919 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.058035867 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.060934294 seconds)
  done (took 2.004801551 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.091693592 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.083562114 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.082902697 seconds)
  done (took 2.006903027 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106481592 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.090524042 seconds)
  done (took 1.94603335 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085660471 seconds)
  done (took 1.836306605 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098668165 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.105163335 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.136125512 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.116047574 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.144450451 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.113097616 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.088634141 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.089430136 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.080815545 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.090867612 seconds)
  done (took 2.812437841 seconds)
done (took 23.469408957 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.082945709 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.373037598 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364882254 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.0946848 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.673795793 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.360177291 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.991247445 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096860042 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.11978111 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071632403 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088992634 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.652556296 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.981659221 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.328521117 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.968266021 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.332356114 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.653371739 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071849505 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071110147 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071283684 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.97570897 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071552434 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071391266 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071945062 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.652991294 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.376025087 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071554904 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.328012279 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07165417 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073669296 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.3591505 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072079333 seconds)
  done (took 16.379980118 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074051971 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126107705 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077486943 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08832258 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.073702473 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073767726 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.075497263 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.089833102 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.125306353 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07131396 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088972561 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071206373 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.075613787 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072269494 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091475809 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.07179752 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072479888 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072197627 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072024976 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07205234 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.091075265 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071570433 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072038674 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072574001 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.07173182 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084585996 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07276056 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071899318 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07306947 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074334785 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074857353 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072712742 seconds)
  done (took 4.300334809 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120188521 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.129622832 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077291598 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.109243753 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115915359 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073515962 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.148285546 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097891041 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.131745742 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071580491 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089476006 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.072006956 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.1072325 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.07284005 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092564753 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071970034 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073160859 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073182195 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072349535 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071898118 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.091906008 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071912953 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072049526 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072159031 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072599973 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.086319224 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073295976 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072549392 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072922746 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074224609 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075478354 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072610837 seconds)
  done (took 4.54537767 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.076353538 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.079130219 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.087380986 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.088579789 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.073298713 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.076219332 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.077279139 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.073326606 seconds)
  done (took 2.397492178 seconds)
done (took 29.378557662 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.083008796 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.073323685 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.076529766 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.085862523 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.078135492 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082880425 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.070374671 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.079581696 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.076662624 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.077083881 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.079053436 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070713913 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.075475603 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.070296214 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.077875178 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.071418717 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.083943273 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.075821122 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.0837608 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.083635206 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.0737099 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.077292092 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.078895286 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.083050824 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.083092962 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083814145 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.081188911 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.077058027 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.072415173 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.07439191 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.081377804 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.088265993 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.071870595 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.083544083 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.071079286 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.071305854 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.075205325 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.07128258 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.083597714 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.080679206 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.07329427 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.080142255 seconds)
  done (took 5.015799642 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.093140189 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.097026261 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.089700702 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.06583881 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.070446339 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.069689168 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.093243624 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.063528436 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.063262012 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.092583401 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.059343046 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.063367469 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.067190585 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.056838015 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.063756615 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.060269389 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.065686119 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.059353791 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.063964479 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.063448063 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.093584355 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.057100642 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.081787371 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.066798916 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059582618 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.065653868 seconds)
  done (took 3.622912198 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.078926694 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.088993721 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.09468906 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136374595 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.110034983 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.083666839 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.083222505 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.099583622 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.093350741 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.070771245 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.074959101 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.098049052 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093711786 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.078149882 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.07146869 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.101288559 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.087866557 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.072884982 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.077563506 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.098735958 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.091075406 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.089740678 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.09989317 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.087076142 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.070778737 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.073983465 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.075684172 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.08529301 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074243849 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080778024 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.074257276 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.075083227 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.073708997 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.08381037 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.074622538 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.07290628 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.099167806 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081536939 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.083432167 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.071795029 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.07985153 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.073019716 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.096910564 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.131526512 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.070879976 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.07741813 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075375402 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.081340313 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070809764 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092174428 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083779633 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.071319824 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.074882639 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.070628279 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.070814701 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.074404766 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.073383914 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.073383823 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.08055133 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.077584032 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.097039725 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.075848968 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.088074006 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.07101546 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.080099815 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.070423141 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.072556936 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.070295054 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.100228723 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.073075914 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.116283088 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.071554203 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.072707232 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.080569395 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.079260346 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.077608731 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.071347561 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.087975156 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.083180484 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.074823832 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.079671675 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.075100435 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.074586727 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.095044398 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.073774891 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.073357677 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.071922259 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.077071554 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.074191771 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.072656371 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084975787 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.070761768 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.074708746 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.08932017 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.071040374 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.072717216 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.077786615 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.076017965 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.07138924 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082774776 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.075838785 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.073097333 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.081987942 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.071796287 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.075046163 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.084428066 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.078614808 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.070384845 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.075782302 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.077684463 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.073312323 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.073120948 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.074606006 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.073208952 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.080933891 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.079135214 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.076153429 seconds)
  done (took 11.240952943 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.172209287 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.163533007 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.074267867 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.154465575 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.080162196 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.08296524 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.156856525 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.099055783 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.071735623 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.072025464 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.072205753 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.115001735 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.110865971 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.120643608 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.082874505 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.072390731 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.088333856 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.119706322 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.158643938 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.153078668 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.089478463 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.081331933 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.074241321 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.073062585 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.074669269 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.082988105 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.089589887 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.083597549 seconds)
  done (took 4.674521612 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.084426019 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.111461827 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.079277831 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.096205432 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.095556688 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.07197816 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.074472831 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.07370743 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.085938421 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.082188207 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.071251148 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.077261261 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.079434923 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.075677091 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.0724333 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.07959374 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079286852 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.072968855 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.075802776 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.07710647 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.08260218 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.096798759 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.076214516 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.07145991 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.076997228 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.07121153 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.067306009 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.088371668 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.072054435 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.100371767 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069520165 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.076912721 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.086491343 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.07304014 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.071717387 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.071952022 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.071637278 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.071970016 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.073682396 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.070193972 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.069878057 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.061123003 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.070866379 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.082986928 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.079503279 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.060068721 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.076484355 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.076882463 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.077013734 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.068883593 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.075079178 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.074146606 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.075209178 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.079797116 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.075669872 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.07697298 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.072719099 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.07843616 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.082187787 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.071657741 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.068800264 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.070586491 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.076308445 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.069130713 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.080693656 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.076452824 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.069649413 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.071739281 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.073576518 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.079611878 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.07164539 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.076635928 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.069221397 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.073764645 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.076362964 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.073682792 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.073487385 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.069900296 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.071324356 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.072261855 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.058507625 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.071332505 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.056713183 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.074891145 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.069594448 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.07016509 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.071325856 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.076814313 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.083471071 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.073060477 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.077757817 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.072590823 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.071635783 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.075073312 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.063836208 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.074587891 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.08352213 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.086695958 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.072055208 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.069481687 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.085611569 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.077009122 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.070778144 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.059705053 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.076211577 seconds)
  done (took 9.729077648 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.09460546 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.074070435 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.089366544 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.094990636 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.09214132 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.079387955 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.08216262 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.073217717 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.087968584 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.078508189 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.08162441 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.072106509 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.082702408 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.081323887 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.07365974 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.082283555 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.07666992 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.08919025 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.087113013 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.071944897 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.080921393 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.084715284 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.094797725 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.085996374 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.085730415 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.086063625 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.095227669 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.082069141 seconds)
  done (took 4.152738019 seconds)
done (took 40.196912209 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.844016157 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.016011726 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.84258688 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.188918055 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.066314803 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.863241898 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.936588038 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.839880038 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.10545654 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.875083578 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.137620887 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.081078411 seconds)
done (took 66.580212108 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.88158474 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.97818454 seconds)
    (2/2) benchmarking "String"...
    done (took 2.079090546 seconds)
  done (took 5.834513399 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.174461804 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.408751866 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.088497514 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.837211058 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.845423668 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.157115053 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.6529635 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.362549796 seconds)
  done (took 31.133121556 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.044663906 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.056889476 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.546033053 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.585487241 seconds)
  done (took 16.067442434 seconds)
done (took 64.947865616 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.830930232 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.870525382 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.86871625 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.822317864 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.897844134 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.844286689 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.942449016 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 8.073661872 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.840153427 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.825497123 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.842015376 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.317306509 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.843069213 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.981076719 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.840122463 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.84268373 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.857161635 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.31816922 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.99743096 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.845660638 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.85853125 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.90756292 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.842750952 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.975705566 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.89134562 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.84359688 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.275930776 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.853842341 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.474455868 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.845644064 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.873607957 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.1836391 seconds)
  done (took 207.106544432 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.842883474 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 4.029682694 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 4.085276737 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.882456627 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.549546562 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.055998883 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.955732753 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.561391613 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.844756809 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.867750408 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.140738853 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.843353283 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.163487081 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.79448027 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.876553224 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.954930086 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.115401506 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.164395038 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.879199138 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.00160819 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.856352316 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.986052053 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.946747349 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.121527726 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.874253843 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.855748647 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.847407978 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.864114623 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.038722769 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.082380623 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.890132231 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.857146574 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.049673094 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.718195143 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.854823979 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.844600029 seconds)
  done (took 174.080361119 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.006294131 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.845647953 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.844473573 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.845533888 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.85046217 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.846964923 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.967325049 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.975794974 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.464367274 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.380970365 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.899205815 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.638436256 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.843435946 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.914022745 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.859737878 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.847408648 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.862178722 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.873684514 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.845876745 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.846742674 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.970801207 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.860543021 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.953954642 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.851889949 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.845800212 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.852244457 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.215758526 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.846184346 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.85275738 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.088566519 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.848947435 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.846484227 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.68941608 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.520045887 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.847770737 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.928350854 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.848430945 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.85125247 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.845676943 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.064725825 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.847480633 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.84731247 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.850231571 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.977424503 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.849118056 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.969448364 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.849513238 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.322077913 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.847382763 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.846309463 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.810958493 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.416582044 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.849491545 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.849167016 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.849196759 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.846916422 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.845909624 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.852909007 seconds)
    (58/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.847695609 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.682409338 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 2.07658894 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.849511194 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.851926809 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.860191565 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.848450239 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 22.072143703 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.850424145 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.441613103 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.908532868 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.972660618 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.97730117 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.848973379 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.916035048 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.942458346 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.849172679 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.848788716 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.848416242 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.847276636 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.928213371 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.84983927 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 4.023639877 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.8576087 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.850685871 seconds)
    (83/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.850907855 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.904415019 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.921041734 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.849815583 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.694856671 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.851567762 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.848883413 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.124816071 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.914336837 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.849818261 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.849108055 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.848339836 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.994833759 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.850778985 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.971725451 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.575281945 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.854572876 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.716229901 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.851262503 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 4.001533139 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.85129488 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.984368524 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.850716651 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.932339325 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.856342284 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.850591673 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.848784636 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.883776487 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.852419864 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.910600759 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.85004207 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.22203471 seconds)
  done (took 411.474097127 seconds)
done (took 796.498868181 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.533748455 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.499174645 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.603788104 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.516777864 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.497656199 seconds)
  done (took 14.440377428 seconds)
done (took 16.22559306 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.943691744 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.946694399 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.875553172 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.944890755 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.874502957 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.942899698 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.92617931 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.876695651 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.911181601 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.876397071 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.91470002 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.876173484 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.865325941 seconds)
  done (took 26.563951948 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.088372937 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.091317553 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.924960228 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.082463389 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.900381713 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.078827702 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 2.016070592 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.005703128 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 2.006955275 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.871050217 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.86607709 seconds)
  done (took 23.722806305 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.078070724 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.092149012 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.933555435 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.084035958 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.904262922 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.087931148 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 2.018641797 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.009773081 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 2.006059751 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.87158135 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.86595304 seconds)
  done (took 23.744270201 seconds)
done (took 75.818524974 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.86183789 seconds)
  done (took 3.653965353 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.890419517 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.056462558 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.870178749 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.868154089 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.86270735 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.8632445 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.866768094 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.862015481 seconds)
  done (took 16.932808634 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.85851707 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.86280818 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.859322469 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.861103806 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.86252269 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.858680882 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.861939043 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.859663592 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.862901133 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.861668224 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.860763335 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.862520514 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.859711439 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.860809474 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.862525002 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.85955099 seconds)
  done (took 31.56839613 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.862320801 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.859366564 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.859677104 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.859800556 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.860245541 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.859539177 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.860385337 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.859257934 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.858954241 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.860924 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.860105655 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.859668374 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.861247042 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.861516688 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.861146696 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.860704585 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.861516307 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.860936013 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.865387246 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.860487716 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.860219434 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.861025406 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.860433165 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.861050932 seconds)
  done (took 46.450581716 seconds)
done (took 100.393778565 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.608016254 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.502078952 seconds)
  done (took 9.905000553 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.863155688 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.86335148 seconds)
  done (took 5.575725603 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.864391843 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.863907878 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.863439102 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.864579949 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.863352371 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.863210006 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.864277493 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.865407702 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.86375924 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.864168319 seconds)
  done (took 20.435353165 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.863666915 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.864197467 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.862339446 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.864385778 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.863875168 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.860339049 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.865668833 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.864813697 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.864523106 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.860661388 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.864229513 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.862758655 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.865913351 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.861195814 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.863643921 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.862123292 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.862976755 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.862192389 seconds)
  done (took 35.334991584 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.864411377 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.8651572 seconds)
  done (took 5.526549155 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.862986793 seconds)
    (2/7) benchmarking "second"...
    done (took 1.862514783 seconds)
    (3/7) benchmarking "month"...
    done (took 1.860596007 seconds)
    (4/7) benchmarking "year"...
    done (took 1.861489706 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.86188391 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.864126237 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.86272142 seconds)
  done (took 14.833170765 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.866531666 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.01998637 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.088841065 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.515194706 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.867171463 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.870274888 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.790253094 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.869566872 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.870207314 seconds)
  done (took 20.554237933 seconds)
done (took 113.95639509 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.694673071 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.861907186 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.070895657 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.913823613 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.911913677 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.201212359 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.872970915 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.169350286 seconds)
done (took 43.491262684 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.896066514 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 4.154466881 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 4.156918621 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.885853389 seconds)
  done (took 16.9952462 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.84644655 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.389461075 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.897636516 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.450786611 seconds)
  done (took 20.414886485 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.232481991 seconds)
    (2/2) benchmarking "read"...
    done (took 2.209469904 seconds)
  done (took 6.245193374 seconds)
done (took 52.346625553 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.867726031 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.868866422 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.86532992 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.868612981 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.864698463 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.864553284 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.867218501 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.86813778 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.867799981 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 1.867900436 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.866405764 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.865298844 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.865128973 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.86839738 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.868190697 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.869469522 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.866448616 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.864995117 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.866027011 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.869300573 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.865480739 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.865173384 seconds)
    (23/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.866422957 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.865512737 seconds)
  done (took 46.602854141 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.868708557 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.866643354 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.869290438 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.868689872 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.866879344 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.869859552 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.868524032 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.867326793 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.869331501 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.869696101 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.865988875 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.866433908 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.869599758 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.866856852 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.871190006 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.867370153 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.870538483 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.867645697 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.870611571 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.868353744 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.87017609 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.866736054 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.867481273 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.871479877 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.868563792 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.86733517 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.870060912 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.869059815 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.870270182 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.868100372 seconds)
  done (took 57.859833203 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.876483906 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.878517654 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.870295098 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.871296433 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.870022197 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.871601497 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.870580048 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.870454783 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.87173833 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.870740236 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.872245938 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.870823714 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.872161779 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.87100261 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.871125681 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.872258993 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.871282994 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.871028747 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.87140849 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.871353605 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.871096232 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.871354214 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.870884739 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.87282125 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.871919386 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.872968541 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.871656463 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.870852057 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.872158141 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.871274859 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.871440098 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.872646126 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.871740801 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.872523716 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.87218963 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.872856899 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.876385145 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.8806861 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.872988657 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.872547773 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.871952535 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.87364696 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.872318775 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.8727686 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.873275843 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.873588763 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.8743617 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.873227567 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.872719353 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.87315704 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.873040149 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.873476457 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.873248308 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.873021947 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.872825023 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.873183748 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.872455196 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.874374643 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.873338629 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.873017131 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.874383786 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.874648876 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.873893785 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.873563425 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.873457669 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.873803848 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.8737518 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.874195914 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.874893585 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.874334569 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.87338199 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.87408371 seconds)
  done (took 136.644815964 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.875151137 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.871901217 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.870910863 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.871573996 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.872234553 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.874718467 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.872490305 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.87419432 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.871254092 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.876447291 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.874471682 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.873132962 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.871387382 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.875840928 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.874838298 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.872693367 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.876452497 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.871326082 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.876319482 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.875737915 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.876588174 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.873280181 seconds)
  done (took 43.028612288 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.876490056 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.875345516 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.872932504 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.875661687 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.874931667 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.87749288 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.876381205 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.87673293 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.876786737 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.874695141 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.873378998 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.877155194 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.873632923 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.874564671 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.873832423 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.873999516 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.877341523 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.874050391 seconds)
  done (took 35.563876772 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.87509442 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.875278089 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.87648151 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.873229064 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.873697057 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.876445117 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.874421948 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.876964744 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.876227039 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.874299879 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.878474939 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.876940628 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.876471585 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.874149954 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.876228172 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.873916421 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.877586717 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.873731608 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.876787823 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.874658272 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.875227802 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.877768454 seconds)
  done (took 43.072677014 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.878424031 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.877764949 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.874476795 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.876159419 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.875318343 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.876927053 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.878316066 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.874738631 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.876716551 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.878373113 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.875309617 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.877579459 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.874932156 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.875843637 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.876320733 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.876988222 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.877736357 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.876758234 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.880000793 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.87720738 seconds)
  done (took 39.346100679 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.882491136 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.880781937 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.878869282 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.880886909 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.878869157 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.881172654 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.879039346 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.880417428 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.880253055 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.880222502 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.881721945 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.878823649 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.879030102 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.880206224 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.880213853 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.880826933 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.880291789 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.880266337 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.880298596 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.881052349 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.88112917 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.880092928 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.881165276 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.880469022 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.880202396 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.880220611 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.881838955 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.880495479 seconds)
  done (took 54.46240535 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.880426539 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.880305916 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.877010275 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.87728379 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.878273205 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.876990548 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.877095155 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.878534638 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.881433868 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.877608568 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.880948856 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.880839662 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.881147453 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.880968356 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.88123161 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.880613995 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.881147891 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.878953919 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.878891774 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.878635453 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.881102392 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.880839002 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.881974934 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.878721016 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.878528505 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.879657168 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.878940301 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.877541567 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.880946255 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.878650026 seconds)
  done (took 58.197122421 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.900020131 seconds)
    (2/2) benchmarking "in"...
    done (took 1.900341857 seconds)
  done (took 5.613727135 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.878702049 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.881647621 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.881567808 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.878781867 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.880379408 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.881432365 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.882176273 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.87962513 seconds)
  done (took 16.856240157 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.881628023 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.881420474 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.882735441 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.883380199 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.882087627 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.881535308 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.888967308 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.882668376 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.884790012 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.882829577 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.890367763 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.89122307 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.885051732 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.881820927 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.883758397 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.884184337 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.882388648 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.88269985 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.883364545 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.883095344 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.882305135 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.884867384 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.885246812 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.881119029 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.88546127 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.894873069 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.887359545 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.883484859 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.883455802 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.887326439 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.883400773 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.881820597 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.883668808 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.883758361 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.884223616 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.88423442 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.891867484 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.88479315 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.891156398 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.884028551 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.884430543 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.880644857 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.8857002 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.88569626 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.885199005 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.88396672 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.883476794 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.880720309 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.885075334 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.888296821 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.891460453 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.887308802 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.881843212 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.888926139 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.889311834 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.893847788 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.885252662 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.887999614 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.894572153 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.895638394 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.89789995 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.893005981 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.886958555 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.887271624 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.894685451 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.909543618 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.893326284 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.882876084 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.88335304 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.88683267 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.893369335 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.900033282 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.89505671 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.885812079 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.885613467 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.88627493 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.887164442 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.886805842 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.895199427 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.890022478 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.88789006 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.88773885 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.896271172 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.910108058 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.887026883 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.88735837 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.888563621 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.886998148 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.888078738 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.897896053 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.887430839 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.887503012 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.887752014 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.888098738 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.889166151 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.887647512 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.885777949 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.888902355 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.884054374 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.887939111 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.887723085 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.891247975 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.897472607 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.887938256 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.889459487 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.896323623 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.888466508 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.887539826 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.894483855 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.888178056 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.888271042 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.890278563 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.894379998 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.885591669 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.8913654 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.897812336 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.888795251 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.88970712 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.88965621 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.890100157 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.8985975 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.916392465 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.889159565 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.889786603 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.89433919 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.900802171 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.889606298 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.892329366 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.890133266 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.886453906 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.88804008 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.892183277 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.889973508 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.891196665 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.890630117 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.89228926 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.887418852 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.890807186 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.890965467 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.89256573 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.892708515 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.890685678 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.892104655 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.893302224 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.889922309 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.891033044 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.897392174 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.889532203 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.891731929 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.891353319 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.888263529 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.891915032 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.892504881 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.890366692 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.890989243 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.891148982 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.890926852 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.891741391 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.891193081 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.890769725 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.891908902 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.893078338 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.894634223 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.891837337 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.895877759 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.891842826 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.888325497 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.892484982 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.891606783 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.891959785 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.891840089 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.891458574 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.895514546 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.898809475 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.891529898 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.894029214 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.893831186 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.891928677 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.892313256 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.892314739 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.895407505 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.900192502 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.893247298 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.898360004 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.892406041 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.894054965 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.892850497 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.893044713 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.892885845 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.892928946 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.897058223 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.901066114 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.906916016 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.902490022 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.895100052 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.89766715 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.89578951 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.897876447 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.897155438 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.893895652 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.893675321 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.894953852 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.89345747 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.895087487 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.895263457 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.894508991 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.892590906 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.893224119 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.893768885 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.894173336 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.894970683 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.894612551 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.894459409 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.890555372 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.894011912 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.893044182 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.894044245 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.891898598 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.893627391 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.894583366 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.894785588 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.894776659 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.90184092 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.891706393 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.895244283 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.895618008 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.894283403 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.894968266 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.895629173 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.896238454 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.896184045 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.902792784 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.895626287 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.896743004 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.901785809 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.895814657 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.895320084 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.898297271 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.895772059 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.892990327 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.898309015 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.903564288 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.896718578 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.896846136 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.897270308 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.895344521 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.895677918 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.902944873 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.895504219 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.896148944 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.896714784 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.898123275 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.892345299 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.897549456 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.89729 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.897417117 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.898883482 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.895464991 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.898100581 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.897959824 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.896152882 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.896012629 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.896405552 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.899804605 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.904547919 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.902411167 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.897059339 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.899484311 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.897812054 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.900640281 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.898270262 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.897526983 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.895354969 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.911237598 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.906691824 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.903217578 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.899854004 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.897260978 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.903539542 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.897750232 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.902784554 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.897401249 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.896767925 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.896923 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.895555905 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.89433296 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.897925714 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.897835603 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.899558697 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.89828943 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.902792213 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.897586672 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.897891013 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.89861281 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.897757384 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.898715439 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.899086327 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.89817288 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.899429537 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.900304604 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.897271613 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.899546128 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.906166401 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.900953114 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.90136996 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.900144588 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.900813447 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.898622264 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.900756861 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.899712802 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.901925414 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.906747795 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.902821783 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.907873666 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.900121951 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.909396072 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.899306125 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.901864548 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.908258204 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.897356409 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.899112378 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.901137736 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.899646215 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.906765052 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.899561655 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.901133927 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.903481539 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.900793321 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.900377512 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.90019763 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.900774307 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.900394417 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.900280523 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.908582515 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.901199863 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.904486145 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.901413858 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.897792202 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.90213324 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.900586262 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.900919163 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.904995595 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.900793396 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.901500467 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.901067605 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.902211863 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.900725427 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.901098658 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.901337888 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.899171888 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.900848121 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.909306231 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.901808933 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.906238894 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.902147085 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.910000643 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.901627235 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.908802215 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.901053536 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.901091716 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.901827409 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.900640744 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.9019605 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.900845108 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.901833333 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.901059457 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.902796488 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.905121901 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.901013319 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.903241935 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.901089168 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.901575815 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.90108851 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.910927306 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.926466581 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.902871738 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.905004996 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.900614527 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.902862701 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.906851947 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.902574061 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.90221981 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.904398461 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.912667858 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.910087038 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.903526197 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.903136949 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.902465011 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.903375036 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.90265336 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.902530718 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.903584224 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.903055909 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.904800388 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.903234181 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.905788118 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.903586915 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.904255536 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.904796462 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.903459515 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.914055093 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.903434603 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.904634711 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.903492007 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.903375397 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.904214966 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.902816732 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.903509124 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.904029945 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.903519767 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.904351737 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.910466772 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.911403279 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.905671614 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.904036162 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.903456447 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.903139423 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.905097399 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.902995301 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.904210349 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.904461537 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.904186677 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.90337711 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.904814977 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.903478278 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.905120411 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.904795989 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.905214072 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.907186965 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.913424021 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.904892826 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.902023745 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.904524222 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.904634814 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.904045438 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.905076787 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.914005085 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.907787267 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.916572633 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.913144181 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.909205397 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.904495697 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.908543735 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.913118612 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.905763765 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.905911809 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.904068953 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.906508822 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.906540891 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.9088818 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.906837567 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.913783884 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.906221139 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.905437798 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.915336118 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.907635241 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.906668267 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.908759725 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.911334787 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.906202333 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.903740461 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.907199439 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.905852955 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.91361716 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.908194661 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.905681702 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.908975738 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.903814802 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.907962268 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.910677127 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.90646928 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.907285019 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.905018034 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.906433896 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.906264399 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.906743002 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.903409802 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.905735956 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.906476144 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.909954057 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.91626054 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.903790243 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.909206394 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.907215961 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.90744674 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.90746826 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.907306065 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.904769872 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.904007082 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.907328652 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.907077566 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.907968935 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.910253111 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.907094617 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.908630927 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.909630314 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.908364806 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.91049246 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.919111036 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.916310872 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.904741625 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.90757163 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.908713786 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.910932828 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.909635628 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.908801801 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.907458235 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.910793098 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.907973888 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.909296785 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.908547324 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.912173937 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.92640137 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.909578994 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.910826461 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.915074295 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.911831764 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.909785535 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.90728056 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.908234018 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.911152701 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.911103428 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.91702224 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.909201624 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.916259381 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.909840769 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.910232395 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.914526853 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.912555705 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.918299232 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.913664439 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.910680073 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.910086361 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.915281516 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.926915701 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.910418473 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.9196883 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.940419858 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.911021641 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.91072457 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.910384727 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.909975281 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.910088971 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.912836671 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.910753709 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.91108734 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.911231062 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.911262213 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.912538951 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.917016109 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.911888787 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.911032694 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.910446868 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.910648628 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.911465082 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.907462927 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.911375003 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.910951787 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.911934847 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.916074308 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.912358552 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.911465871 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.927233832 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.922034181 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.911990556 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.912969185 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.908085344 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.915819929 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.915305866 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.922031514 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.919860612 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.910949163 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.91168462 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.914224836 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.912289724 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.908813512 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.913201149 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.911948943 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.91273572 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.908408379 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.925549538 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.921775083 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.917453569 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.911715334 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.912476179 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.911806345 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.913930554 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.915094106 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.912448111 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.915608142 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.913723752 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.91765628 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.91230535 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.913073519 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.917023493 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.91943502 seconds)
  done (took 1134.259476647 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.910262596 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.909627754 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.909656903 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.909976509 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.910194439 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.909200741 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.90966509 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.910696505 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.90898494 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.910977691 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.909470374 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.911717311 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.91062398 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.911611261 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.910121786 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.909828234 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.911893275 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.910913484 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.910265981 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.910661972 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.911170665 seconds)
  done (took 41.960249286 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.912849068 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.911841631 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.911646133 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.91413531 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.910506128 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.914581344 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.912861523 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.914749384 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.914091428 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.909733272 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.915120494 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.914267921 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.912468187 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.911626626 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.910564799 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.914187245 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.914625851 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.911206871 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.913564803 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.912491603 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.914845519 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.912466781 seconds)
  done (took 43.930095038 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.915322208 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.915227252 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.91422029 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.912055803 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.914944015 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.91211401 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.91479909 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.915620715 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.914775236 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.915675632 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.914963588 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.916661063 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.922651096 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.920479472 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.916788463 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.915861007 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.06010251 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.916200773 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.916566936 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.917099028 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.913769396 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.922583902 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.915354078 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.913361948 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.916607646 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.915810658 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.915052044 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.916604698 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.916023718 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.916454391 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.920355482 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.917567514 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.916355764 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.918398107 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.915443711 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.915590026 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.920681772 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.916813564 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.913529485 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.918080431 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.926524839 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.93643658 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.916702399 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.923981292 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.916596412 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.917450215 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.922112053 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.925940966 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.912652054 seconds)
  done (took 95.941999261 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.916347801 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.916825001 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.914935886 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.917001004 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.916674793 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.916499787 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.916482225 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.917113011 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.914452008 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.915352338 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.918586162 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.914616062 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.915004832 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.918128483 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.917112331 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.914791469 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.91619524 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.915062649 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.915476442 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.914435387 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.91492064 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.91922306 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.918270143 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.915460833 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.917958718 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.916280081 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.91608899 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.918846574 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.916460329 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.915051402 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.918222111 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.918603462 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.920980401 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.919184063 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.914237156 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.917403087 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.91857687 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.915614488 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.917790539 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.915015297 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.917333095 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.919335535 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.920620991 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.919124055 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.915604247 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.916951634 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.916097656 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.915637723 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.917150161 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.91795358 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.917959428 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.916087682 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.919128144 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.915646436 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.919987075 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.919772633 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.91646322 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.917759738 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.919499061 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.917226577 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.918296484 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.920015778 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.919149058 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.919596083 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.918203051 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.917861599 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.918427522 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.921289303 seconds)
  done (took 132.22212038 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.920152324 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.921849035 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.922808466 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.92249352 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.922348444 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.920825467 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.922529709 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.921942804 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.921584963 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.921856216 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.923535205 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.921288377 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.922534686 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.920898105 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.922622045 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.921088802 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.921064806 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.921934602 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.922618843 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.921962366 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.921242114 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.921528117 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.923706371 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.922255529 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.923059622 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.922274778 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.921591505 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.924626135 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.922633293 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.923442199 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.923108553 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.923005547 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.922587413 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.921929273 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.923599408 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.923306671 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.922568748 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.923557056 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.922217333 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.922620794 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.923398862 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.924112809 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.925372165 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.922979562 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.923031966 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.924417574 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.922943093 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.9235522 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.922703204 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.924204163 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.924602605 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.924455138 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.924696158 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.924970613 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.923756312 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.92382276 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.923799865 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.924703081 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.924945091 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.925661927 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.923261101 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.923905723 seconds)
  done (took 121.074459957 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.924229512 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.92374773 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.921409207 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.923484167 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.924866372 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.922282948 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.924937964 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.925349029 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.925204221 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.924936312 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.923547734 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.921989944 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.922717882 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.924472316 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.922069832 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.922744452 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.921262854 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.917950112 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.922076263 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.91933379 seconds)
  done (took 40.311932544 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.921564995 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.922501748 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.917415225 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.918925343 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.920599192 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.919238318 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.920455904 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.920496679 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.917739269 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.920612911 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.920325367 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.922073536 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.917866217 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.918551385 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.922041313 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.917756743 seconds)
  done (took 32.568836593 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.916421125 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.919482255 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.920649216 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.919878539 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.918865724 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.917977347 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.921599293 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.917089234 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.916715373 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.923940007 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.913806031 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.912484337 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.912951384 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.914372981 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.910899623 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.914711905 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.909588293 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.908983303 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.911109042 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.914362536 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.928284011 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.907982881 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.911351346 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.91146541 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.908754684 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.90973897 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.908261039 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.907786649 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.909149781 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.911628813 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.909698886 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.916395754 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.909402519 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.909834891 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.913474664 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.908860946 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.912550472 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.911236884 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.911216651 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.912009376 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.911645198 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.909098878 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.91281775 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.912146379 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.909110509 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.911651848 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.909827742 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.910702921 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.909204106 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.909128535 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.912004091 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.913515684 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.911864997 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.913050196 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.912073047 seconds)
  done (took 107.068087714 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.911950578 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.913570617 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.910221296 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.914052182 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.913562465 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.910400312 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.916897889 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.909974453 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.91123743 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.914280877 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.911201471 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.915586079 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.909726593 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.912963597 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.910303799 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.912370959 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.914471985 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.910323357 seconds)
  done (took 36.260985875 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.910595204 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.910916927 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.915283345 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.910563823 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.91132623 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.913224423 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.911045792 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.912134214 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.916431657 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.911151256 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.910641339 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.913371463 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.913043505 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.915721592 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.909517265 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.910067735 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.914258465 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.913202517 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.912332068 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.911127234 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.914802898 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.91296517 seconds)
  done (took 43.913518956 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.912927307 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.912139202 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.928111435 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.9360324 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.934364047 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.950258181 seconds)
  done (took 13.41275446 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.910167554 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.913274063 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.908853821 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.912001747 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.910515085 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.905354728 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.904421909 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.903825355 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.906112863 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.905010101 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.904338901 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.907350929 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.90727245 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.902695977 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.909131758 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.908114359 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.90518693 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.905945903 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.905969101 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.909858874 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.906105598 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.908425011 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.905638892 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.902921032 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.905296349 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.904049947 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.905969756 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.90438079 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.90574793 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.906033312 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.907446278 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.904096693 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.906026266 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.905268656 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.9073526 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.908294878 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.904816702 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.905474629 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.906819421 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.90419283 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.905425376 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.907299472 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.90658874 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.904732833 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.907518266 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.904599505 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.904336344 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.901838076 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.905872843 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.908901211 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.90857923 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.903352934 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.906512377 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.907412754 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.906350178 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.907626349 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.905279775 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.904582996 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.908052267 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.904926355 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.904520038 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.907350804 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.906704233 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.905271748 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.907377159 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.907284479 seconds)
  done (took 127.672383398 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.904352295 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.902583617 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.903803663 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.90508927 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.903778086 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.903782473 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.902905962 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.902165497 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.902739999 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.902742053 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.907434872 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.900937954 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.902247763 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.901970736 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.902570396 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.901950004 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.90254345 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.900875111 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.900673277 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.904519789 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.901233937 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.901962456 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.900628345 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.89972209 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.901733234 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.903160128 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.902404995 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.899156864 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.898961358 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.900564741 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.899251608 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.901513147 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.898877438 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.898759214 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.898705193 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.898122917 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.897115462 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.898765901 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.897256896 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.899366649 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.897288819 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.899401163 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.901151806 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.896555424 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.89837305 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.897395971 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.897105895 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.899965417 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.897142095 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.897183399 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.89736195 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.896744865 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.898186676 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.896626636 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.897407659 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.897454025 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.897380975 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.897523675 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.8982771 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.899653531 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.895526805 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.897079033 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.899657625 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.895139273 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.8916813 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.892945146 seconds)
  done (took 127.222683272 seconds)
done (took 2636.864115677 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.897678295 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.879327018 seconds)
  done (took 15.59688946 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.055865632 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.008937493 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.896043955 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.922557551 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.895932783 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.914386896 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.914844187 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.897429963 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.896042651 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.898136959 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.898565679 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.078014584 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.889442209 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.894807164 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.894188408 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.984181009 seconds)
  done (took 52.764874775 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.896266149 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.897727253 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.905838353 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.897914902 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.895372708 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.910216488 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.934525949 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.898053713 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.929348654 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.909493871 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.962552512 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.90620323 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.892474658 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.941423387 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.908191329 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.909098098 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.988704216 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.968533813 seconds)
  done (took 36.37303547 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.971067377 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.89564923 seconds)
  done (took 10.691617435 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.892670063 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.950186641 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.896198004 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.907170031 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.89092544 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.912902448 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.907977471 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.897663939 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.911387876 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.921149389 seconds)
  done (took 70.908647389 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.895209008 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.889158969 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.889395575 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.886302085 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.879579392 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.886059029 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.885362712 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.885573742 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.554428837 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.925357636 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.896435954 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.892039189 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.888426393 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.889603708 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.885010676 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.913072347 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.983585697 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.885129277 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.884166972 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.892396815 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.889140228 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.941451809 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.900138661 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.886326774 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.915753474 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.55709414 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.895612978 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.890813837 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.978968195 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.883746595 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.885009271 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.88954297 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.888339915 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.284111196 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.169968348 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.88668538 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.900606258 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.896352296 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.88605657 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.977139184 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.887979112 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.892329924 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.516793305 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.153131569 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.993149093 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.926611383 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.210847681 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.906079598 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.887804459 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.913620535 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.890638796 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.889965113 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.900026773 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.364387619 seconds)
  done (took 133.141546908 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.88283016 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.236563793 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.052788908 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.883694834 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.173660217 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.094636217 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.885713932 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.935125103 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.885330682 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.116593922 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.141220303 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.994999396 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.885099395 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.882811884 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.882409113 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.881367677 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.042822186 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.95715708 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.884862487 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.881448424 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.916676127 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.129588601 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.012423197 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.882719732 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.914795424 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.100020278 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.009886239 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.992469089 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.689538476 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.881292814 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.950629612 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.885557433 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.885260722 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.881478948 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.043937781 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.982012102 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.97206845 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.886607045 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.882110078 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.881262152 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.557092667 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.087828712 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.982066906 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.0289175 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.087963328 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.09417096 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.670134082 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.88193643 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.627472931 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.053691972 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.119070993 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.118858161 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.010876166 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.887800756 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.220079316 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.881723029 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.883915707 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.137668267 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.033015649 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.988867862 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.887505991 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.885589828 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.88470493 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.134257898 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.890457248 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.983132411 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.887467329 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.883818433 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.986647402 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.98968049 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.026843524 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.101441124 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.917401426 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.8320131 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.420482472 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.135719477 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.954344626 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.139142462 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.886968773 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.883816689 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.967921119 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.735471694 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.142899721 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.13777218 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.141307939 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.923557946 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.610851357 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.884071008 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.116185849 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.108951834 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.139825851 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.094362434 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.128892981 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.207694788 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.889784595 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.885052448 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.121602175 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.024501161 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.88968208 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.241007848 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.126668487 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.452202305 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.909135484 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.197265857 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.022850224 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.887819257 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.532816727 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.8861253 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.112838212 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.93527914 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.887113741 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.889813952 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.110695609 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.866178258 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.885239628 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.756550685 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.952100899 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.890921954 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.124902211 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.889091946 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.151823342 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.890034528 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.133137879 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.07037177 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.922059858 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.068100174 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.094418585 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.889439814 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.13838551 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.137427877 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.00758447 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.165386926 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.803174214 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.888728875 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.181010221 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.890503016 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.889562296 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.070065114 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.889020805 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.040216457 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.891924846 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.17578025 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.917020686 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.124395301 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.891140948 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.145983077 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.927127878 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.940368723 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.890085059 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.018242582 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.891195039 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.7201918 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.049057555 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.890396645 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.887805044 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.463876925 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.887701803 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.049262228 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.12431231 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.915430678 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.966317125 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.561445582 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.888710305 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.982619771 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.917304645 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.280251621 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.888778463 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.14545433 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.893447258 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.888727317 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.894394429 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.136976825 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.136386824 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.896086402 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.894519906 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.791162462 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.893479802 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.893687162 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.077944569 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.250908041 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.89530025 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.100867626 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.896722276 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.026851023 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.897085994 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.980929499 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.236779359 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.895325853 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.895122832 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.894045883 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.893988493 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.902532545 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.107563902 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.92476826 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.436109468 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.036140683 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.166016295 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.210647049 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.148059834 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.94180125 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.896111161 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.15345565 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.89703771 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.968843429 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.897376065 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.920928774 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.128063871 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.899640838 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.163369843 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.177810825 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.93680834 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.946106925 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.900976353 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.893330705 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.892135588 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.047879029 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.989433901 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.898746328 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.897296216 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.01412317 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.02527201 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.113929696 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.897625225 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.985927221 seconds)
  done (took 908.388030349 seconds)
done (took 1229.684052517 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.895166438 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.897905673 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.883025207 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.894126654 seconds)
  done (took 29.397955946 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.903404543 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.899488933 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.898568814 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.899284176 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.901539646 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.898321448 seconds)
  done (took 13.225620284 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.934544692 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.894641438 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.894874089 seconds)
  done (took 21.553787178 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.967081409 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.282621743 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.008653133 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.319549011 seconds)
  done (took 10.405154966 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.90216369 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.901928495 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.900881126 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.902735003 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.905754039 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.90468924 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.902699855 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.902124001 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.90425614 seconds)
  done (took 18.955784353 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.381813156 seconds)
done (took 99.749391875 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.244249922 seconds)
    (2/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.074090191 seconds)
    (3/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.52448485 seconds)
    (4/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.994775775 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.933357891 seconds)
    (6/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.915585483 seconds)
    (7/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.447063246 seconds)
    (8/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.916611748 seconds)
    (9/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.378565987 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.043664105 seconds)
    (11/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.012577355 seconds)
    (12/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.007671248 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.951821483 seconds)
    (14/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.923548299 seconds)
    (15/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.907993688 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 2.01284007 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.230517228 seconds)
    (18/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.893298396 seconds)
    (19/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 3.337351814 seconds)
    (20/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.348158096 seconds)
    (21/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.755977785 seconds)
    (22/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.008893686 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.288048831 seconds)
    (24/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.960883218 seconds)
    (25/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.940687964 seconds)
    (26/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.324423214 seconds)
    (27/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.266382197 seconds)
    (28/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.289414989 seconds)
    (29/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.008293343 seconds)
    (30/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.093611708 seconds)
    (31/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.044985117 seconds)
    (32/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.932177179 seconds)
    (33/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.906789938 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.011223063 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.197614203 seconds)
    (36/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.04261334 seconds)
    (37/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.009557936 seconds)
    (38/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.921678203 seconds)
    (39/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.204414308 seconds)
    (40/309) benchmarking ("map", abs, Float32, true)...
    done (took 3.129554306 seconds)
    (41/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.219651117 seconds)
    (42/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.204494991 seconds)
    (43/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.088382277 seconds)
    (44/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.915286304 seconds)
    (45/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.998497083 seconds)
    (46/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.23123827 seconds)
    (47/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.043580613 seconds)
    (48/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.999256023 seconds)
    (49/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.223136388 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.060330796 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.923134177 seconds)
    (52/309) benchmarking ("map", abs, Int64, false)...
    done (took 3.020324488 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.163872025 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.246922867 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.289889461 seconds)
    (56/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.996794622 seconds)
    (57/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.901603762 seconds)
    (58/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.971327553 seconds)
    (59/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.167289871 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.896263285 seconds)
    (61/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.965107757 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.7405696 seconds)
    (63/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.086191212 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.899704264 seconds)
    (65/309) benchmarking ("sort", Float64, false)...
    done (took 7.206635917 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.986512093 seconds)
    (67/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.243347004 seconds)
    (68/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.937386953 seconds)
    (69/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.422617271 seconds)
    (70/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.098406623 seconds)
    (71/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.152925695 seconds)
    (72/309) benchmarking ("sort", Int64, false)...
    done (took 5.70061754 seconds)
    (73/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.364217487 seconds)
    (74/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.075596787 seconds)
    (75/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.221020934 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.5494637 seconds)
    (77/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.914535861 seconds)
    (78/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 2.945853314 seconds)
    (79/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.929544366 seconds)
    (80/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.306856197 seconds)
    (81/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.016574942 seconds)
    (82/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.392368176 seconds)
    (83/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.918330624 seconds)
    (84/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.921080693 seconds)
    (85/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.994595153 seconds)
    (86/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.008049614 seconds)
    (87/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.061194282 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.098810676 seconds)
    (89/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.946464722 seconds)
    (90/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.74247255 seconds)
    (91/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.93577894 seconds)
    (92/309) benchmarking ("sort", BigInt, false)...
    done (took 6.912018238 seconds)
    (93/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.900803198 seconds)
    (94/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 2.021484501 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.232168094 seconds)
    (96/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.914836031 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.160501646 seconds)
    (98/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.044952984 seconds)
    (99/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.122951585 seconds)
    (100/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.122453717 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.593581779 seconds)
    (102/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.88540971 seconds)
    (103/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.022545669 seconds)
    (104/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.115320208 seconds)
    (105/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.994866062 seconds)
    (106/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.909825598 seconds)
    (107/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 2.195573668 seconds)
    (108/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.08881394 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.91345934 seconds)
    (110/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.245617523 seconds)
    (111/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.062900692 seconds)
    (112/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.547415547 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.817830188 seconds)
    (114/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.355781552 seconds)
    (115/309) benchmarking ("sort", Int8, false)...
    done (took 4.879010109 seconds)
    (116/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.983730624 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.943947896 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.171993383 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.60924819 seconds)
    (120/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.219984679 seconds)
    (121/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.102876346 seconds)
    (122/309) benchmarking ("sort", Bool, false)...
    done (took 2.145132851 seconds)
    (123/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.93497209 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.301027485 seconds)
    (125/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.149804421 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.035667388 seconds)
    (127/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.163751238 seconds)
    (128/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.326973489 seconds)
    (129/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.916300131 seconds)
    (130/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 8.154644962 seconds)
    (131/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.977112658 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.141214034 seconds)
    (133/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.167707721 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.897150712 seconds)
    (135/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.937477802 seconds)
    (136/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.271588208 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.995074352 seconds)
    (138/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.397283171 seconds)
    (139/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.90328896 seconds)
    (140/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.130680721 seconds)
    (141/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.105295186 seconds)
    (142/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.914756633 seconds)
    (143/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.003956812 seconds)
    (144/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.899108255 seconds)
    (145/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.171967941 seconds)
    (146/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.920689208 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.215244292 seconds)
    (148/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.026665286 seconds)
    (149/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.947247526 seconds)
    (150/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.014299045 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.2510744 seconds)
    (152/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.012107805 seconds)
    (153/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.91923618 seconds)
    (154/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 8.230070635 seconds)
    (155/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.159958005 seconds)
    (156/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.991818856 seconds)
    (157/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.000733142 seconds)
    (158/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.108725052 seconds)
    (159/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.934894663 seconds)
    (160/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.365313579 seconds)
    (161/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.463792562 seconds)
    (162/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.608275001 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.569394214 seconds)
    (164/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.167672227 seconds)
    (165/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.006865723 seconds)
    (166/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.978698216 seconds)
    (167/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.914272927 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 4.318488761 seconds)
    (169/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.921587156 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.150595836 seconds)
    (171/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.395536085 seconds)
    (172/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.847601444 seconds)
    (173/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.922413125 seconds)
    (174/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.918803617 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.903187066 seconds)
    (176/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.07869818 seconds)
    (177/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.215602784 seconds)
    (178/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.829807923 seconds)
    (179/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.016886136 seconds)
    (180/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.426640477 seconds)
    (181/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.02160392 seconds)
    (182/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.20451255 seconds)
    (183/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.904287747 seconds)
    (184/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 3.302539493 seconds)
    (185/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.904230577 seconds)
    (186/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.239942498 seconds)
    (187/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.493707388 seconds)
    (188/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.95837451 seconds)
    (189/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.915776813 seconds)
    (190/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.071985851 seconds)
    (191/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.988650976 seconds)
    (192/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.047188273 seconds)
    (193/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.215337822 seconds)
    (194/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.94913203 seconds)
    (195/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.162964948 seconds)
    (196/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.905312143 seconds)
    (197/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.98553865 seconds)
    (198/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.269168855 seconds)
    (199/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.086026468 seconds)
    (200/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.956836 seconds)
    (201/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.917320363 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.664786234 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.026800101 seconds)
    (204/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.16568162 seconds)
    (205/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.987675482 seconds)
    (206/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.03966021 seconds)
    (207/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.254942901 seconds)
    (208/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.370988323 seconds)
    (209/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.179561122 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.072804917 seconds)
    (211/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.420898462 seconds)
    (212/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.620128447 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.024326465 seconds)
    (214/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.497591775 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.909798875 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.005677827 seconds)
    (217/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.903351302 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.802224163 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.143270278 seconds)
    (220/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.902721021 seconds)
    (221/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.259746482 seconds)
    (222/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 7.780933193 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.017487326 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.609029676 seconds)
    (225/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.93292974 seconds)
    (226/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.311271386 seconds)
    (227/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.025849307 seconds)
    (228/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.946982025 seconds)
    (229/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.194353294 seconds)
    (230/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.944737736 seconds)
    (231/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.246881614 seconds)
    (232/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 7.02683322 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.995496182 seconds)
    (234/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.385143282 seconds)
    (235/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.969544782 seconds)
    (236/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.206560624 seconds)
    (237/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.922246481 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.194167318 seconds)
    (239/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.999989042 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.853912864 seconds)
    (241/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.660416694 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.877035992 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.877608029 seconds)
    (244/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.998101176 seconds)
    (245/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.020119936 seconds)
    (246/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.115088023 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.226349534 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.211607666 seconds)
    (249/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.166503226 seconds)
    (250/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.159281486 seconds)
    (251/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.838679492 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.938540921 seconds)
    (253/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.277727775 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.31779565 seconds)
    (255/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.943104436 seconds)
    (256/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.153040236 seconds)
    (257/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.029658396 seconds)
    (258/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.906963808 seconds)
    (259/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.258674923 seconds)
    (260/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.932393445 seconds)
    (261/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 2.00587894 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.016238878 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.942641259 seconds)
    (264/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.938079173 seconds)
    (265/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.972320651 seconds)
    (266/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.02881163 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.873879952 seconds)
    (268/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.957356752 seconds)
    (269/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.060521484 seconds)
    (270/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.066459037 seconds)
    (271/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.948522021 seconds)
    (272/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.922137281 seconds)
    (273/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.754157765 seconds)
    (274/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.992699743 seconds)
    (275/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.93717172 seconds)
    (276/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.266066472 seconds)
    (277/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.833426933 seconds)
    (278/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.119990957 seconds)
    (279/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.093537655 seconds)
    (280/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.909010675 seconds)
    (281/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 7.418096705 seconds)
    (282/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.106194118 seconds)
    (283/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.952854973 seconds)
    (284/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.335218735 seconds)
    (285/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.162689667 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.751543845 seconds)
    (287/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.913377867 seconds)
    (288/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 4.104606209 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.038758056 seconds)
    (290/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.250477473 seconds)
    (291/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.913483153 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.374045229 seconds)
    (293/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.928755717 seconds)
    (294/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.089596331 seconds)
    (295/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.991953017 seconds)
    (296/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.094337852 seconds)
    (297/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.654465089 seconds)
    (298/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.926451006 seconds)
    (299/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.306499652 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.330552928 seconds)
    (301/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.268733978 seconds)
    (302/309) benchmarking ("sort", Float32, false)...
    done (took 5.645755586 seconds)
    (303/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.967778091 seconds)
    (304/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.015898958 seconds)
    (305/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.15037392 seconds)
    (306/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.952976299 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.942701347 seconds)
    (308/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.997316861 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.027559416 seconds)
  done (took 1023.011437527 seconds)
done (took 1025.119765967 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.956283555 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.950902165 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.93327288 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.956756769 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.045481183 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.961847078 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.945793104 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.934712233 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.98090336 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.985798691 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.933995363 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.962127988 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.937822057 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.934781337 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.9337664 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.949113894 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.251425403 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.96727736 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.951616416 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.945523165 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.952062421 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.934641238 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.98361798 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.962542042 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.938426493 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.937677933 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.937988897 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.956729251 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.045808712 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.939567606 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.936855786 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.946816439 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.251317251 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.965285557 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.93024242 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.957477321 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.947553634 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.945414098 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.939103423 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.967432363 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.346339872 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.977304832 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.936633187 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.936657062 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.938282852 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.941863439 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.937196932 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.942974275 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.950786258 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.951007586 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.340123177 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.995340112 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.941081955 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.936431315 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.947640199 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.939075787 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.942015189 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.95285662 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.95768486 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.954825093 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.241837966 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.973157497 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.939655304 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.954998179 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.945497702 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.379350458 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.97424983 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.943643532 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.346540239 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.984209821 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.377888792 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.989831226 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.940997816 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.9531331 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.972035068 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.252662839 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.964581978 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.938143282 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.945920804 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.940415191 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.948674844 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.952789042 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.944460957 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.939062824 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.953481459 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.968064238 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.948908376 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.942341759 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.947101398 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.959779208 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.945964521 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.950267368 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.944565256 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.936105872 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.950534075 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.945060336 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.942318066 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.942583524 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.945824398 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.950644177 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.344635309 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.998321312 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.938226026 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.937393658 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.93882498 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.956171143 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.347348718 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.982839434 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.962553226 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.988725106 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.943837758 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.242927958 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.975691737 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.956905224 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.949995579 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.945317525 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.936610355 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.244584634 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.375272592 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.997852086 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.942921317 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.941215647 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.957118576 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.943608809 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.938670334 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.255978347 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.973544909 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.954682978 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.062057021 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.952763634 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.974263536 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.940495182 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.94565056 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.972331874 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.958620812 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.975065221 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.94445228 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.956796342 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.958292165 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.939026889 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.952979454 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.9542826 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.944310436 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.948925721 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.936572535 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.976778032 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.954999064 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.954800317 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.964928417 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.063688771 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.939998421 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.246693396 seconds)
done (took 304.631895432 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.013384192 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.935640495 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.039251657 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.939696321 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.021753364 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.024834907 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.937109324 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.939156573 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.937298192 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.320679763 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.938061017 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.938650482 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.936623633 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.938379983 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.023600928 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.94174134 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.937647541 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.285916392 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.942142919 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.012230248 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.943150241 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.93784337 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.940453004 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.311293751 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.940317239 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.934924893 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.012038463 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.942552954 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.2818462 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.934350826 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.934811112 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.277566811 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.03306745 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.959320352 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.952554991 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.949306276 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.023445182 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.946953759 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.025314232 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.02215174 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.048609783 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.981918452 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.936529063 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.94376712 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.946188321 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.943557353 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.938803993 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.971186327 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.936672124 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.938263764 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.288319382 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.951840242 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.941277817 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.940275285 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.938620262 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.974031557 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.941919966 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.944758636 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.033771475 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.943470394 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.004607194 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.314417376 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.32304895 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.941917576 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.936061187 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.941322328 seconds)
  done (took 189.117404237 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.009108291 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.014097408 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.009996128 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.945827523 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.992476524 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.010325826 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.946252162 seconds)
  done (took 15.795400155 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.949953298 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.943188199 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.996371853 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.995488019 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.944967552 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.091330443 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.94559448 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.95515747 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.941335164 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.997624452 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.945030626 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.944167847 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.951053567 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.94315008 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.993630507 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.956549519 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.062638391 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.945720542 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.945822692 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.096696389 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.941834585 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.951800175 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.999460611 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.956659881 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.945486835 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.951827811 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.52845608 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.946704818 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.942309094 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.944990102 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.940850785 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.987184494 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.945443611 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.945716133 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.943203472 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.061977163 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.945762039 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.943676342 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.949010315 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.943885198 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.944572599 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.945869011 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.94525028 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.944206758 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.946231056 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.970697266 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.946275388 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.945598997 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.946371067 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.947138703 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.997955166 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.948661457 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.94469096 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.944348419 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 2.001628041 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.952611149 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.949513753 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.945181142 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.946483593 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.944924183 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.098636202 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.996454161 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.946557284 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.995680221 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.946476411 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.947101953 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.945827743 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.946355425 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.043163178 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.946945491 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.998020565 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.942805133 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.10701217 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.970107727 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.949233942 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.949990188 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.949196057 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.94824287 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.945418623 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.953804476 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.945030497 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.948070294 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.955666009 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.943424374 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.946350461 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.060276272 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.054246375 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.945718835 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.960222719 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.954372947 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.945929203 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 2.00035859 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.946202124 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.945779187 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.003773179 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.066707647 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 2.002763009 seconds)
  done (took 213.344107288 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.95256722 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.955426027 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.950066132 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.963658316 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.948300193 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.948332008 seconds)
  done (took 13.59118582 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.953990954 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.949144073 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.947213955 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.947577744 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.948502352 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.949850551 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.94756743 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.951678643 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.952754403 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.947537803 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.948723248 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.949147533 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.951023807 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.949540213 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.949982065 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.948960244 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.9511155 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.945655434 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.949499676 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.951858205 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.097796193 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.949675769 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.949126787 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.951731561 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.956115622 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.952570464 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.958768128 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.950154892 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.950599514 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.955731314 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.958277489 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.951650608 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.951569915 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.95520477 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.955865138 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.952169414 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.953846219 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.951247326 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.94705033 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.952283755 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.953586412 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.949963387 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.951887707 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.951880903 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.952497087 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.956139836 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.955674642 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.958044583 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.951915866 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.952417539 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.954846667 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.952050752 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.952200424 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.952947235 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.952804466 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.956388338 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.956655671 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.952605392 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.950435306 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.952029244 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.951492475 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.953528622 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.953018455 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.956427236 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.957411609 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.952514732 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.958540404 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.955973459 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.951373563 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.952259804 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.953780892 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.951239288 seconds)
  done (took 143.582076003 seconds)
done (took 577.313848958 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.113018534 seconds)
  done (took 8.987546714 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.105522637 seconds)
  done (took 9.023447923 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.400572093 seconds)
  done (took 10.281890794 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.965161657 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.975527971 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.955826106 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.944789347 seconds)
  done (took 29.74029571 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.066914658 seconds)
  done (took 8.942888196 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.967809364 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.944943573 seconds)
  done (took 15.821287272 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.949053426 seconds)
  done (took 8.824185352 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.076174575 seconds)
  done (took 8.977016208 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.957333736 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.984094452 seconds)
  done (took 15.828204143 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.925864637 seconds)
  done (took 8.797217503 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.543328377 seconds)
  done (took 11.515422681 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.959756561 seconds)
  done (took 8.940135506 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.961170624 seconds)
  done (took 8.835601855 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.997254334 seconds)
  done (took 8.870806942 seconds)
done (took 165.261190177 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.948049465 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.941951523 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.946191353 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.948109551 seconds)
  done (took 29.656445923 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.985922869 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.983609323 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.98489298 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.995732374 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.985999397 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.984074903 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.976039194 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.975746788 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.995365887 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.987378327 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.987217824 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.98574012 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.984729212 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.978461186 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.986497572 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.988031409 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.994772613 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.985494302 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.977482392 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.988392565 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.95194969 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.996932353 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.987129438 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.952497996 seconds)
  done (took 49.474593581 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.150658025 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.025658241 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.10540821 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.004352412 seconds)
  done (took 10.162003454 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.003886104 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 2.00604462 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 2.016789221 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.055738724 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.091880822 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 2.014680175 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.977098225 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.974992488 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.959165347 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 2.004003752 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.081267843 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 2.003040689 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.090519322 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.952728352 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.142087322 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.951212054 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.952726938 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 2.007831738 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.055239087 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.068866797 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.952894016 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.005146983 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 2.008345626 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 2.00110284 seconds)
  done (took 50.252837929 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.952213946 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.959158144 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.958407539 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.95292257 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.951699 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.953216619 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.958571341 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.953272162 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.973711946 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.952247946 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.950108787 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.951416988 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.950550286 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.951589123 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.950818669 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.965636255 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.964316887 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.951663555 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.958462093 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.959541129 seconds)
  done (took 40.995893704 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.947302556 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.800455024 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.298802893 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.201121879 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.946907536 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.950781455 seconds)
  done (took 32.023434051 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.967081896 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.96204566 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.953713055 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.011155372 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.097745309 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.960429697 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.954370971 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.965425377 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.001803436 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.017161113 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.976431988 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.98493291 seconds)
  done (took 25.730147164 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.950943382 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.961281009 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.950921787 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.9758403 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.966946182 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.962311072 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.963476185 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.949298685 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.968745331 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.975629726 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.964299541 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.96769963 seconds)
  done (took 45.43869776 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040588857 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.840755656 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.997615648 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.67066931 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.487341152 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.163529268 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.477668045 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.288537607 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.955147989 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.224164877 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.951818809 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.204036239 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.204726309 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.951059544 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.038973661 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.402582343 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.253453239 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.177289193 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.9759235 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.624615642 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.078297969 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.488556787 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.661960741 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.084788204 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.161637539 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.084653747 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.211834004 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.911291946 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.090511924 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.993700527 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.96228184 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.95300287 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.227213432 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.331628979 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.070853301 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962242734 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.609162455 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.670154576 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.938371472 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.75281687 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.826602989 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.092530578 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.960812869 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.953843398 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.887543632 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.514261364 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.299408145 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.95743794 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.654884083 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.951753125 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.962848492 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045027315 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.956273897 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.768367791 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.906548915 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.232498381 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.949850607 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.958112179 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.525379043 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.042917619 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.583767504 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.896067334 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.046343439 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.640223542 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.429986981 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.102801427 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.958650763 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.957351285 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.887525186 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.705781998 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.081375964 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.100567345 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.973030196 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.603081454 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.258225956 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.04701467 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.045819921 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.241119945 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.831350336 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.896283319 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.184000383 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.91824651 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.888848187 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.81521537 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.889363005 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.217430007 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.990339079 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.582968443 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993732029 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.29056469 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.967196246 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.978464008 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962949681 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.178788312 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.83899924 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.955791832 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.736096459 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.248625709 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.977139072 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.291643762 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.889091242 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.959175207 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.210742594 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.166660171 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.191155274 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.417524469 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.117782532 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.956644864 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.045321779 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.883562602 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.973459312 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.232152993 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.017869698 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.043281768 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.091176522 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.915936272 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.263732486 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.984633325 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.130943526 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.971226889 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.229670721 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.271231293 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.208069623 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040034733 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.960681846 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.957614139 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.668180267 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.588862157 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.180929796 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.959823294 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.460176902 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.974657825 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.958052636 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.892679142 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.583553112 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.970402108 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.074069709 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.184024026 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.928259527 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.238371577 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.89345702 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.105283095 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.075361282 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.181109089 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.615886066 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.043679201 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.219950408 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.459544099 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.341104118 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.972870712 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.977352005 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.051199088 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.98045345 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.39905994 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.218951428 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.962852843 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.961279782 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.716929877 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.031502097 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.966964481 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.964180911 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.78570328 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.24306965 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.987797086 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.966600888 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.849433937 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.973548491 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027874726 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.965957699 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.971995746 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.461899405 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.71164987 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.971063344 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.667133059 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.201473769 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.969930385 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.737828778 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.160790784 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.043746845 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.236989998 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.025747732 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.895188871 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.664170718 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.664474738 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.961622794 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.896159383 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.959371087 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.969875036 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.972646349 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.161091172 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.242997721 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.007672869 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.712298899 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.084836602 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.972774526 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.965581399 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.960218055 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.453711128 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.061848667 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.605125755 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.97396988 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.097796901 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.975884404 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.896843004 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.964919136 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.968804609 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.960998981 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.927362815 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.015307378 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.648734985 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422538979 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.224669572 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.609758468 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.980574347 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.745528599 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.098641501 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.987308384 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.759484289 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.056317056 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.973204282 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.037806719 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.973302075 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.724837166 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.743228163 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.529055611 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.286896968 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.275945014 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408057437 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.460019704 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.187662874 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.302634066 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.200916736 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.493924278 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.022635977 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.305308873 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.908178381 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.047968173 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.622327389 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.328402895 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.981171236 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.19282338 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.355084855 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.825634544 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.133495729 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.175151622 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.999419463 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.816210716 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.997790463 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.20534675 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.118124583 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.738852726 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.204917631 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.298613509 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.778619377 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.091914495 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.96468298 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.664298628 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.048164514 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.676423374 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.326642838 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.501128945 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.997906618 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.467677013 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.973121894 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.412716863 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.323224466 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.300494039 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.06058366 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.901875506 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.97787031 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.976036408 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.966452561 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.944642452 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.891152998 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.249458246 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.978279479 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.201832078 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.236029457 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.236012743 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.882004074 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.971483334 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.967655289 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.268386945 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.647948867 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.211214108 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.301137791 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.540756941 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.977541719 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.90226713 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.90148237 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.668700651 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.968279632 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.944027929 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.186292782 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.075519977 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.922519986 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.346513263 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.283536457 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.222797436 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.983015057 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.246087425 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.248378905 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.717490022 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.998940404 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.069720559 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.790639259 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.682251508 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.19095542 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.205307479 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.795912243 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.201158315 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.017241681 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.933205833 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.96968574 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.184505207 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.192431317 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.985928173 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.230798707 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.694426651 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.975379972 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348137711 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.027420695 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.001126089 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.193910271 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.063996488 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980538791 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.052038398 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.980716353 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.981049978 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.981597269 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.01703753 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.000652348 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.114938885 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.984159204 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.061163708 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.073990944 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.56067939 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.980134719 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.252624371 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334441444 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.305633375 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.033266816 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.972081223 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.974014632 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.905978359 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.110184028 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.416908355 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.246072032 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.099879016 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.1139059 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.996449008 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.768236259 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.261275619 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.287300429 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.247125155 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.868642089 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.972277744 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.08276481 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.196626622 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.982235232 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.183900627 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.199631071 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.286119976 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.443633055 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.101198285 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.412323352 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.246804444 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.342405506 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.973382124 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.565210872 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.987037596 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.736524403 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.012240226 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.00197451 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.267387601 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.983521141 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.355897798 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.995362666 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.172178819 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.489830628 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.754214263 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.344729746 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.975056801 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.036931412 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.253873287 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.366662577 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.289513303 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042286985 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.984762372 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.690019351 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.112615555 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.933425662 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.244705416 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.974800946 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.18555141 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.686813616 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.983878484 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.25813857 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.287624591 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.972701937 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.962566924 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.037522336 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.985396885 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.198799132 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.238444035 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.226659012 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.984217394 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.976586755 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.790594881 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.257903617 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.035959946 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.910385074 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.979973364 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.07306583 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.225575112 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.996374511 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.492467244 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.683418459 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.268303367 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.892714244 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.998931189 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.385136464 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.421419531 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3142348 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.516295118 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.206359468 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.535604536 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.843290834 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.353454527 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.982331048 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.37542166 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.355946026 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.981607553 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.473782916 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.091234705 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.252406386 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.303464155 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.988720747 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.718150668 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 4.027614921 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.199856314 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.564207342 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.914940866 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.979224746 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.030503511 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.973984797 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.100877344 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.986151552 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.963333993 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.84507825 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.809041866 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.461282723 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.978418034 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.960746579 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.777332236 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.531632292 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.082923418 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.130086792 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.976341451 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.688071683 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.267791191 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.230675477 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.482862757 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.043435358 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.979203307 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.975982493 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.903764053 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.175317632 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.173610771 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.269183565 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.316111725 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.086313699 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.976848425 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.188257259 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.184029348 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.97998796 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.13882722 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353570118 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.087452143 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.894663408 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.688744256 seconds)
  done (took 1733.319373463 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.980472979 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 7.019565221 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 7.019889773 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.043565322 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.025534821 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.053810278 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.018922936 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.067641616 seconds)
  done (took 58.136395206 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.989250493 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.201688402 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.995492203 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.987209415 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.008383712 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.982631941 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.170649286 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.994303685 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.053501016 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.994326342 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.984738366 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.98755002 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.823371364 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.011948838 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.984276842 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.991954084 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.004491661 seconds)
  done (took 77.109933229 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.983496328 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.390715959 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.000955981 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.005888465 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.971816247 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.998259925 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.002199505 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.023867498 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.992133939 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.164920661 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.325968576 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.997960656 seconds)
  done (took 91.773192642 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 2.001466455 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.991504757 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.990149472 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.990476717 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.989167986 seconds)
  done (took 11.886191328 seconds)
done (took 2257.850175698 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.27478903 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.200468349 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.224461409 seconds)
  done (took 6.340611436 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.139507586 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.188068994 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.308199973 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.314051918 seconds)
  done (took 10.8721936 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.278464865 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.365855785 seconds)
  done (took 6.565515073 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.32269736 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.016541603 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.373467967 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.992924259 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.989473363 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.994424244 seconds)
  done (took 22.903102751 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.993124816 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.99755546 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.994683744 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.997396841 seconds)
  done (took 9.903979059 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.97241191 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.711555713 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.973264182 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.988862105 seconds)
  done (took 21.565053944 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.742611213 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.392698049 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.736897039 seconds)
  done (took 9.79205146 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.452331352 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.144715278 seconds)
  done (took 9.516676853 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.256725719 seconds)
  done (took 4.179103645 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.02453065 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.266273996 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.51824646 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.503613485 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.604917066 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.818261571 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.326930491 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.236473668 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.435832423 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.452470766 seconds)
  done (took 26.108746172 seconds)
done (took 143.649283844 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.420243626 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.038005636 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.198295347 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.358324182 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.233130338 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.196670808 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.216139834 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.348711164 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.888366124 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.878040148 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.361605768 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.22930104 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.155262108 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.028850232 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.160964499 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.033057561 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.224602476 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.446328865 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.084102494 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.286624778 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.211645736 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.004733714 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.203620716 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.020520731 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.22884075 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.144727191 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.54729957 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.03613648 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.220575521 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.562990996 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.148963368 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.427974372 seconds)
  done (took 172.470263434 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.995677906 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.995835678 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.996170883 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.995416637 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.305484392 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.998376918 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.997576744 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.997165671 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.050580048 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.028356202 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.996470849 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.291835097 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.998581613 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.996753724 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.995290908 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.995634508 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.20349057 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.998287305 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.997072111 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.996784943 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.998237278 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.141410939 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.999406784 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.150798804 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.182148532 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.997488923 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.99696856 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.997380892 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.998183946 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.99567644 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.999073319 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.996832103 seconds)
  done (took 211.212871009 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.979477623 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.997471172 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.996320798 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.996702314 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.998753011 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.997191789 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.999457047 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.99848037 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.465363577 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.462173884 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.000727863 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.000919393 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.003217165 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.997306686 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.005631036 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.998274956 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.00835486 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.01062236 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.014214842 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.012033432 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.013467321 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.694091336 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.013605499 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.70429913 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.013120156 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.015334995 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.999003624 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.018177059 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.024080877 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.0200623 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.019258522 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.999939578 seconds)
  done (took 224.409246596 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.191968845 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 2.004468483 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.007021065 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 3.003751096 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.007772749 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 2.006610983 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 3.016838282 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.189454066 seconds)
  done (took 20.382911009 seconds)
done (took 630.408351207 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.490605447 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.335241155 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.188235168 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.03141074 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.269837666 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.063865476 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.027176467 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.091882995 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.749728623 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.096339233 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.719017633 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.049780208 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.807635156 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.056860531 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.147193408 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.083203225 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.618866653 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.715349115 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.202399177 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.09027689 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.196216055 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.963883282 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.10840243 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.785153223 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.828725118 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.01733635 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.19033452 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.624538745 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.038036861 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.187585621 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.818897543 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.417634438 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.04176217 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.026554815 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.080585876 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.060161468 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.367252985 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.041278175 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.152195577 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.768205719 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.094535581 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.629353508 seconds)
  done (took 109.203425043 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.994879371 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.994140654 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.993918295 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.993299674 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.99499525 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.993433441 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.991853932 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.993639559 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.993375506 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.994023955 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.992423323 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.995454517 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.993059935 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.995840761 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.9939521 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.994189258 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.994635449 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.997756401 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.993270509 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.992875315 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.994938522 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.993484942 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.010520229 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.994812457 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.996334982 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.995248364 seconds)
  done (took 53.808756864 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.009300701 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.160644087 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.253377137 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.029775449 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.008814157 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.014210524 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.026890721 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.01666211 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.01081723 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.011569103 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.118143676 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.016484169 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.02698523 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.249313105 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.027301921 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.019121198 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.011567061 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.010351603 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.167624441 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.025498936 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.031329968 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.015063294 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.026681681 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.021966758 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.012605918 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.009783836 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.013053466 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.505266506 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.020547144 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.118750917 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.05551854 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.036616622 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.423953858 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.261901855 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.067371936 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.022307532 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.009934937 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.123529954 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.017697561 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.012280517 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.029432295 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.015256305 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.251073094 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.505897823 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.027448638 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.01168762 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.513289918 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.132360264 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.052798869 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.023313726 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.253276401 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.030313911 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.012561987 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.009405934 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.048119737 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.015513801 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.012335281 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.365677936 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.024139502 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.030621686 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.019983612 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.012828095 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.179976025 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.02161153 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.163096968 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.0219497 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.018689777 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.01059473 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.252479303 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.029987962 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.505006377 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.028432705 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.012011841 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.121177522 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.168135121 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.547370419 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.024194111 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.183623602 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.440507133 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.036499055 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.019219895 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.495036036 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.041626968 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.020356254 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.014867088 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.014892409 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.012639948 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.056609899 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.026676271 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.442324121 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.511025571 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.386104948 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.04199029 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.028321094 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.012877156 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.367120434 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.021114119 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.013103769 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.247818841 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.521522939 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.02897499 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.019858716 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.491667365 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.029336988 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.033424544 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.021808247 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.254516615 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.031264991 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.058785478 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.013794288 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.019073105 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.014755975 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.033789062 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.021303496 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.013757976 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.486275101 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.142297947 seconds)
  done (took 249.130193984 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.009713127 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.008244878 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.00477345 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.012604351 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.0069021 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.013216558 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.006678031 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.007297594 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.01402534 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.007621852 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.007893957 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.00739387 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.010654486 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.012015986 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.122802327 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.01443467 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.620542528 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.003967216 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.008630149 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.017029916 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.760083735 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.013985146 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.008313051 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.017951278 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.008446274 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.01218154 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.021330501 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.111888361 seconds)
  done (took 171.810487721 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.014924293 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.134760633 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.036937143 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.044216952 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.022976537 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.013826414 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.039991012 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.032655371 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.021190786 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.014933834 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.015016752 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.077389525 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.027903716 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.117042195 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.048670367 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.048046756 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.119564096 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.025880331 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.015615197 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.014540159 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.045119988 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.009826234 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.077531247 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.146593562 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.039492996 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.135270354 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.023383007 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.017295347 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.016113701 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.134631546 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.034865254 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.077429789 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.046033186 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.033794492 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.139197738 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.136273144 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.126539648 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.047955712 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.020621866 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.015959673 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.014930674 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.001336041 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.13493318 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.038893929 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.017024901 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.126724124 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.040261773 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.017581218 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.026531294 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.015131902 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.029752371 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.034912314 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.08461126 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.153889889 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.056584773 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.04361458 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.040914021 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.301550974 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.026121353 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.118033274 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.011025989 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.137005735 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.039440178 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.002262021 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.01730392 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.022291899 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.046803556 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.048715468 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.123048433 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.02458852 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.116775506 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.055591222 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.023443517 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.018702383 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.021152958 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.13592029 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.1405613 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.051657244 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.05771404 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.047139635 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.013000711 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.017575082 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.003889882 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.035259197 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.02018818 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.134393599 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.138283805 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.02699701 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.019558082 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.019740726 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.02173376 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.046375134 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.144200401 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.058421903 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.11410194 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.088268177 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.093852465 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.033067352 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.032320993 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.022538249 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.081908459 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.034040173 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.02828317 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.348171164 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.091019384 seconds)
  done (took 218.284670435 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.495072842 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.073771041 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.077070453 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.353920396 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.457173045 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.893609674 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.0660516 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.065615985 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.092507581 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.260083642 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.142409239 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.085463096 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.055044257 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.045152059 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.06631223 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.091614438 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.079798032 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.408455362 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.193354933 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.140474792 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.052792963 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.343967933 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.394662641 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.473436956 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.106520095 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.422037094 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.748023338 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.209794897 seconds)
  done (took 65.845743253 seconds)
done (took 870.011760658 seconds)
SAVING RESULT...
DONE!
