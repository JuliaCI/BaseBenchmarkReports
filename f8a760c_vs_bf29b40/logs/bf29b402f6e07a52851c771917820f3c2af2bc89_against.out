cset: moving following pidspec: 31474
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.506237093 seconds)
loading group "string"... done (took 0.518569323 seconds)
loading group "linalg"... done (took 9.011328701 seconds)
loading group "parallel"... done (took 0.183926631 seconds)
loading group "find"... done (took 1.313100345 seconds)
loading group "tuple"... done (took 1.921980204 seconds)
loading group "dates"... done (took 1.384399297 seconds)
loading group "micro"... done (took 0.198450736 seconds)
loading group "io"... done (took 0.510743948 seconds)
loading group "scalar"... done (took 51.208654079 seconds)
loading group "sparse"... done (took 14.149833955 seconds)
loading group "broadcast"... done (took 1.341302792 seconds)
loading group "union"... done (took 10.352189508 seconds)
loading group "simd"... done (took 3.082559252 seconds)
loading group "random"... done (took 11.668642673 seconds)
loading group "problem"... done (took 2.229455871 seconds)
loading group "array"... done (took 24.591197209 seconds)
loading group "misc"... done (took 1.150884075 seconds)
loading group "sort"... done (took 3.828795995 seconds)
loading group "collection"... done (took 19.493802233 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.623839936 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.12644575 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.268321552 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.287480339 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.241353508 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.160475169 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.142438845 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.26517512 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.708790903 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.214286225 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.133427135 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.499039982 seconds)
done (took 6.49963506 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.253635527 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.180931198 seconds)
    (2/2) benchmarking "String"...
    done (took 0.169726265 seconds)
  done (took 1.12905188 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.075164825 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.154699623 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.105978496 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.093707461 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.0917926 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.107655572 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.091782041 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.108160995 seconds)
  done (took 1.531676251 seconds)
done (took 3.770190461 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.521080253 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.876505271 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.508123074 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.164253657 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.301227136 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.299557786 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.338841076 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.201430829 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.090474265 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.091308002 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.176005221 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.390393976 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.436317792 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.94538604 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.090379836 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.11569679 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.116948562 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.766400546 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.07888219 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.126482717 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.490713351 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.19850346 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.097334861 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.124953409 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.184519823 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.133798524 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.164042028 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.103643889 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.665085606 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.13182621 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.187317819 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.097923066 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.161065057 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.196823086 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.210303376 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.091777571 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.684988008 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.199579877 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.091405101 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.098793207 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.668350046 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.119775896 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.18774586 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.102496923 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.091939858 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.182318325 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.094008877 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.077110407 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.115736175 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.083548718 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.165862378 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.479612155 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.106536617 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.171874164 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.092253758 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.691363566 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.099177794 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.276748559 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.125545809 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.091721538 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.091160743 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.087532842 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.160771089 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.094711976 seconds)
  done (took 20.221477876 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.14717614 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.165636003 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.077546858 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.155198555 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.122046627 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.078930507 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.101355808 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.078372955 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.125087631 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.224529109 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.138271255 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.154120152 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.091904502 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.089594602 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.127320792 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.249602119 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.107201104 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.122533631 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.089292694 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.089785569 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.141073373 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.093641322 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.106970042 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094818147 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.169357387 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.204454119 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.10929758 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12330379 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.089775767 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.096027947 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.141785258 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.145409859 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.091916665 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.088665962 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.187684339 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.105863249 seconds)
  done (took 5.321537424 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.199585747 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.124974445 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.213969318 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.16419086 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.145267739 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.169756896 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.151597599 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.284152063 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.214229931 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.163389649 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.13040724 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.105704319 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079059345 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.097674645 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.07889177 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.478120804 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.183448848 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.130839588 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.156797908 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.105078862 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083209182 seconds)
    (22/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.189053792 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083706141 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.079120081 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.106547428 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.126902091 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.325812182 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.180779568 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105037065 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.095215341 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.084984966 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.088594372 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134167042 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.194956397 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.131052843 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.122081451 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101461109 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.083061762 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.218283 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.093414361 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.076384685 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.125905311 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116517827 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.133046675 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099529723 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.094699638 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.223930391 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.081272462 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.122261714 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.039448323 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.197604159 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.12458333 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.079398502 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.287237764 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.117267624 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086605189 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.081688441 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.243495785 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.114030727 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.083209372 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.099649729 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.07838594 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085714278 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.097142964 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.430062114 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.091151104 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.583023182 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083600627 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.160298373 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083956422 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.105618033 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086045536 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08405818 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.11882997 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079656175 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076896217 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.097182701 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.079827208 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.083085208 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.111324576 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.086046847 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.07769586 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.162239085 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.099708366 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.11603782 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.108884089 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.101011698 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.079817782 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.126212881 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08113802 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.083028455 seconds)
    (92/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.081184893 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.164877653 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084618354 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.113683369 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100353746 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.127450314 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.079619566 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.202470974 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.083394557 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.108051318 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.10299539 seconds)
    (103/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.083369658 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129711774 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.117946302 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080171581 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083593605 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.094687688 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.080528705 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.146619802 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.095921702 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.08327879 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.082711961 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109165955 seconds)
  done (took 22.723974604 seconds)
done (took 49.041059018 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.454464017 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.086703729 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.086248464 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.107259798 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.08776473 seconds)
  done (took 1.678027176 seconds)
done (took 2.506559706 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.326936447 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.197590247 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.099927303 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.193049073 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085512996 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.198381677 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.185517308 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.093124226 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.212179205 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.083183071 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.19229839 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082987782 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.103792507 seconds)
  done (took 2.908408913 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.101775327 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.109666262 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.101845912 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.118472101 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083025045 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099756814 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.118351024 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.111319332 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098752315 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.112198023 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.083294716 seconds)
  done (took 1.968106375 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.099472024 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105060128 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.09607494 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.116177806 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083670388 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.097182525 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.115610295 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107874898 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097861055 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.112818791 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.085284101 seconds)
  done (took 1.950554244 seconds)
done (took 7.653690461 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.081499959 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.778940653 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.1462618 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.211105947 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.35523247 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.238501428 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.575633927 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.154105942 seconds)
  done (took 14.530887194 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.174671476 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.113988754 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.092704216 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.094272979 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.090170515 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.114507447 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.095660322 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.090918306 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.11542961 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.090652413 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.095109484 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.111348356 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.091941796 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.091116908 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.090188012 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.107983637 seconds)
  done (took 2.556420396 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.140869162 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.124324647 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.116565074 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.096764591 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.09324787 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.116771155 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.098903031 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.094895574 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.112439438 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.093344367 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.099713821 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.114794171 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.096540083 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.091024113 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.113557975 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.111828414 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.091113375 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.115346469 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.110380715 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.114466985 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.100076724 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095016768 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.113356444 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.097011277 seconds)
  done (took 3.468901075 seconds)
done (took 21.388792722 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.148834506 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.101182439 seconds)
  done (took 1.088801385 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.144648136 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.163268064 seconds)
  done (took 1.148565332 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.112694161 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.089674307 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.137699748 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.103415211 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.089508337 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.107452473 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.116773371 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.106048239 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.090332697 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.089346281 seconds)
  done (took 1.887241948 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.093537128 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.094384432 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.121872712 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.137978402 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.115694669 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.093983805 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.094666516 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.090839712 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.114605097 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.089624746 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.095309276 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.126709136 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.093048894 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.126733332 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.095425097 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.094485875 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.118307777 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.09354529 seconds)
  done (took 2.738229297 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.090269956 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.091353573 seconds)
  done (took 1.027566106 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.092545291 seconds)
    (2/7) benchmarking "second"...
    done (took 0.089121298 seconds)
    (3/7) benchmarking "month"...
    done (took 0.091134389 seconds)
    (4/7) benchmarking "year"...
    done (took 0.109121611 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.089403934 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.088947649 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.106288662 seconds)
  done (took 1.514184851 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.497456392 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.26835348 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.373694517 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.106960043 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.146335555 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.35444608 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.147145018 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.10224151 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.100328652 seconds)
  done (took 2.977085653 seconds)
done (took 13.227248861 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.093513716 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.220363732 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.63568877 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.11232371 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.207754939 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.165669765 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.289570594 seconds)
done (took 2.578182386 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.350948432 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.150735809 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.086414247 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.089397903 seconds)
  done (took 1.525161526 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080823891 seconds)
    (2/2) benchmarking "read"...
    done (took 0.09718519 seconds)
  done (took 1.033377673 seconds)
done (took 3.412743734 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088333059 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.087372818 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.13786112 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.087634434 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.08704227 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.085534039 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.107483899 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.087156424 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.088199348 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.087076812 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.10946959 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.086822794 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.086030085 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10556306 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.088946943 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086876395 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087191845 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104251484 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.087548878 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086872049 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.104078934 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.088651464 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.088204259 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.086456454 seconds)
  done (took 3.125574911 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.112384546 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.089454524 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.109934628 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.094417484 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.092599923 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.109630945 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.09311953 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.089025438 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.109883105 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.091147485 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091567315 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.091443038 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.10705545 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.092946383 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0892883 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.111213712 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.092601437 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088031637 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107670495 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.09256298 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.092511296 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107216814 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.092222806 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091592709 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.110600016 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093300783 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.087934364 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.107844132 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093893348 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.091358951 seconds)
  done (took 3.778969553 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.097854271 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.085375257 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.087204011 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.115164769 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.085473278 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.088401525 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.103361958 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.087394424 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.088775944 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.08662276 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.108910187 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.087908318 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.085232485 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.107472562 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.090454944 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.091400009 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.096580009 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.104324735 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.085303835 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.088494948 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.109796939 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.086258314 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.088391094 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.087663896 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.106862665 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.085289396 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.088765955 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.107014169 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.08985588 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.088653658 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.09054265 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.110107219 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.089064288 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.099082994 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.11062458 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.089858114 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.093099361 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.104083289 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.091535902 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.085356147 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.08369122 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.106808186 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.086559184 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.0937067 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.106119373 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.090599455 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.08490014 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.090297033 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.108846079 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.092017014 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.084572205 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.104123125 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.090781187 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.089800627 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.090123362 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.103782224 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.090374453 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.084815983 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.107973672 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.089013997 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.085379635 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.084066775 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.112230303 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.089130354 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.103215212 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.114083531 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.086993111 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.091831702 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.107656877 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.09515959 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.090313713 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.116206868 seconds)
  done (took 7.687952994 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.102803659 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.097400613 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.088322026 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.108937904 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089430785 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.089366479 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113494262 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089922747 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089756253 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.1127076 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090586755 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.090783587 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089933726 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109309288 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089280842 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.088507546 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.113471865 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090234088 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.090120541 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.108614177 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090893936 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.093714717 seconds)
  done (took 2.98973639 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.234513693 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096480427 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.137176713 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.121260421 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.107098711 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.12003553 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.0942958 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.093889251 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111776151 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099336839 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097920706 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111677775 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.107613599 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095599483 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.115985266 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.099557181 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112714569 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.10062858 seconds)
  done (took 2.922236577 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.104038942 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.090527737 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.130872024 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.092040831 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.091864833 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.090653443 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.114890394 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112553975 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.109129888 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.092699803 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.099447798 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09065345 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.110308131 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091185677 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090242905 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.113293652 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.091942959 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091448897 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116275542 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098239294 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.096130885 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.116546039 seconds)
  done (took 3.101483279 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.104486868 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.091100881 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.126449294 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.094286874 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.089819213 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.088458419 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.115007691 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.090819105 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.094987843 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.11049376 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091086046 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.089073172 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.124430476 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091383983 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.095270263 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.110664208 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.091764838 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.089476656 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.1077464 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.091000575 seconds)
  done (took 2.853923287 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.174124619 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125182524 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.107741043 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114487271 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126369122 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.108028872 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113499325 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.126776695 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106539721 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.136800654 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107812422 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106981655 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.134506675 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112529194 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.107326573 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.13353265 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114722411 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.133754569 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10842735 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10673938 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.137154416 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107081012 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.133197201 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.109198826 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.106345375 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.125782949 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107527155 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.112196722 seconds)
  done (took 4.215658626 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090090495 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088871457 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.08918678 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.107953682 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.090475918 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.090282388 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.088103827 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.108753101 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090607407 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.089474112 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.10890873 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.089720806 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.089965155 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.089565121 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.109084152 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.091628729 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091037513 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.106288302 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090666065 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088484685 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.088175604 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108438686 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.090283141 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.089645521 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087376048 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.109496846 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090219796 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08909941 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107966399 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.089918079 seconds)
  done (took 3.715198896 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.101379254 seconds)
    (2/2) benchmarking "in"...
    done (took 0.098352583 seconds)
  done (took 1.07581243 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.099063511 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104824538 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.089109615 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.109437034 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.097564595 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.089240862 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.117490492 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097166203 seconds)
  done (took 1.68242911 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.145534466 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.165866255 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.095341454 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.102240766 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.16602409 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.156926171 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.135857365 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.095151776 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.110552767 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.084600527 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.15839999 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.083561251 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.092365842 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106552728 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.09272101 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097763959 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.110144813 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.101211699 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.09693138 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.092685179 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.115524183 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097321612 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.110977389 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.100987766 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.084760573 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092246556 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.115224338 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.101225832 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087280944 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.114416402 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090162505 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.091107069 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.113952932 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.09545319 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.090385163 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.167252596 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098258222 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107702393 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.092239628 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.094948455 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.145220115 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.092746088 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.092412037 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.109122481 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096213378 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.095405773 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.114277198 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.091906376 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.084619692 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086133844 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.111032159 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087529303 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.090772945 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.112447578 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.091948445 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097929523 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.112635111 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.089359161 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085871201 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.106177125 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.090962036 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.087293459 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113123762 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.096086834 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092762852 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.110948486 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092204544 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.091126148 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.111707869 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.092034581 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.091119851 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.124799784 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.093954969 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.09591258 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.095766676 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.112052663 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.09010516 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.097222033 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109361629 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.093315959 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.093918096 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.139034211 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093750421 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086075074 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.106869921 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.098990747 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.09295062 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.113402098 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.084643827 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100426456 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.111586156 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.093037953 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.083962962 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.10788097 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.089241475 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.094227185 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.083714608 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111574561 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.090785937 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.096207676 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.116347876 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.091615518 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.092595984 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.115157432 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.097966991 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.091566549 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.160434265 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088412683 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.086992186 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.114605705 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.096205522 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084628347 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.112105505 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.090147221 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088320418 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.10765058 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.097938066 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.091086576 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.111830428 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.097127031 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094291242 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.112072036 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.096734983 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.091431343 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.086965575 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.113927658 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099760472 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092433907 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.114201272 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.092957948 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.091704446 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.110698905 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.09616686 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088329229 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.116535481 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090642585 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.090859853 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.092622341 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.116695738 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092689266 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.086287892 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.110529736 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.092480069 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.089719227 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.113315176 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.093844088 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086204035 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.105189834 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.093386931 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.086629334 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.110621927 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100773146 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.08847184 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.112012918 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.089436119 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099805805 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.108630499 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.097832297 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.094513018 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.096262076 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.116508136 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.084226541 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088602669 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.115059731 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.095338 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.087603393 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.110868868 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.091625029 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.098424143 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.103370008 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.096950033 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.08485559 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.087995772 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.116836533 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.092944563 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.09417491 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.107881237 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.134686311 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10306648 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.117137567 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.091751761 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.093275033 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.115005434 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.091843005 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.09517204 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.116843181 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.098794761 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.092038771 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.109369361 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098823694 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.088834365 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.093260642 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110039616 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094518659 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084791768 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.113443674 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.085227871 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.097132557 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.114696366 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.097901268 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.097199316 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.113890023 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092720771 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099114533 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.107159194 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.097012942 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084526511 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.097052539 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.121628888 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.097870658 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.097166189 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.113662378 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09070683 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.092125428 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.121641105 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.094810338 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.092352003 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.11255228 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.087180818 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.086031233 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.116858096 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.096518441 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.089204455 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.09075132 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.114534921 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.09569304 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.088586061 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.10501733 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.096853734 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096290699 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.10691747 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093599468 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.088483655 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.110319082 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.101490477 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.08405918 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.108491234 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.095521273 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.097625857 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.111207254 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.093969443 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.095837253 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.096569918 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.114829318 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.095035505 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090200461 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.120143188 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091199004 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.091639071 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.107158913 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.096344655 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.085979248 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.091999273 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.112799604 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.089679586 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.087952955 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117142742 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.0991066 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.096867628 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110768742 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.096215949 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.097935141 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.118104488 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091107025 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.0976986 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.10711104 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.086793164 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.088724205 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.103981517 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.095438577 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.087890725 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.096633439 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.111244068 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09187879 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.095551043 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.114021847 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.090488434 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.098434862 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.123624093 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.086280824 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.085261584 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.11004479 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093445231 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.088673111 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.109466573 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.094433721 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093941183 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.116639773 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096297287 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.088574011 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.111754445 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.100877843 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.08857075 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.097113042 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.118672143 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.098485833 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.087258949 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.117597328 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.08963436 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.10542637 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.106765662 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.100680156 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090835793 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.111708587 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.090415433 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.089172603 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.107697297 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.087320285 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.088354606 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.117737424 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.092069464 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.09588179 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.110738456 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.091836142 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.08827538 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087394443 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.117957006 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.09152102 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.098465979 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.112537481 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.086697513 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.08530644 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.115989243 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093732436 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.097687329 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.106288585 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.097384016 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.098328263 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.095097273 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.11283547 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.102903411 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101211243 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.118977819 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098335538 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.085495679 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.110662321 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099178087 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.092587978 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.115861946 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.095612137 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.086637289 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094999122 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.119152003 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.094370565 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.090295774 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.106430253 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.093385787 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.097309081 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.11550347 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.096922991 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.092870304 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.112842361 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.089521678 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.09576417 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.097711604 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.113511785 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09960664 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092892885 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.116408408 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.089634343 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.098263285 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.112728025 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.087555936 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.085024978 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.10869593 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.1002332 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.08672092 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.095818269 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.117387405 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.089482239 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.090039739 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.117103721 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.090707751 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094573645 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.116677085 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.091987213 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102032607 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.114145549 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.091945903 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.097277296 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.097707529 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.106900347 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.090853925 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091228324 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.120147326 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.092402855 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.096997782 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.112549525 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.099818524 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.094888753 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.116946101 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.098708556 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.098642026 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.085944751 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.121223002 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097765571 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.094057814 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.110710253 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092160716 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.087142829 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.112408699 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.099939892 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.089775302 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.122344219 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.099975092 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.091187801 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.111004458 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.100327384 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092251979 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.119525316 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.091766716 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094967308 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.086595337 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.117784473 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.093106914 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.100004689 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.110919377 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.088162471 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098126283 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.118756316 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098849096 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.095101702 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.118961311 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.089507156 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.086683926 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.095494349 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.112636832 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10332143 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096220971 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.112312438 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093102382 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.094711575 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.115703588 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101579417 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.087420299 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.110616773 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.09612534 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094976519 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.11165116 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.090087469 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.09672961 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.111517894 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097285015 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.092620145 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.087169039 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.113438733 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.100361493 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.09019947 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.109641635 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.090985419 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.099293642 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.113356376 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.09149458 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.087217632 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.120326531 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.096437278 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100135101 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.110030843 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.094984112 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.090867174 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.115295138 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.10173554 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.091747046 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113024183 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.093044387 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098958611 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.09832076 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.108618207 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.091100385 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102126796 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.120453343 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.098970185 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.095021328 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.113528976 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.101438383 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.100839523 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.116505557 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.089062388 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.088758664 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.111213502 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.09074946 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.095993498 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098959723 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.114009607 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.092430956 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.09815045 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.119251467 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.096598667 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.095862944 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.107352354 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103837249 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.091136619 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.116013874 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.089785461 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.087613171 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.095045818 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.120239898 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094257498 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.094713023 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.116159311 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097593091 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.088085549 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.110772517 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.099598899 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098617835 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.098975404 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114830285 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.092788486 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.096093267 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.125156153 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.095383915 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.09176627 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122525461 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.100657103 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09374194 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.114634765 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.098994442 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.100545158 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.116858304 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.101970459 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.09100637 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.11321431 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.102581399 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.101335949 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.124054649 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094964262 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.088087357 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.09766382 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.113287133 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.089635339 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.096578736 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.122736776 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.102050304 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.093370124 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.112254996 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103890369 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.098198733 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.115528734 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.092990192 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.091624213 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.120273459 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093081784 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.098598809 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.110112085 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.102680309 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.101535884 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100227836 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.125003512 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.089385841 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100208128 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.118358501 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.102389495 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.095369312 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.109636311 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.090073205 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.09630932 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.121651931 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.102397095 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.098117855 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.09793266 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.120258842 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.095928796 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09391197 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.114091224 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.102805895 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.09878263 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.116158883 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.097766937 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.093685663 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.116033543 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.097253533 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.09985277 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.099744941 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.117220566 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106128332 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.100412043 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.114107483 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.092742505 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.094590823 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.118134015 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.097804619 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099028793 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.112141283 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.089980092 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100756647 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.101228531 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.117289549 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10339486 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101002651 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.1147355 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.098266521 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101941779 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.12035036 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.096890036 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.094867199 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.116719773 seconds)
  done (took 61.142060147 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.14843437 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102513779 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.118542523 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09766798 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115317149 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118442458 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097288184 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.096679268 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.118412524 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108615048 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.095982045 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116697858 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115442577 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.117265873 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.137334424 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106346255 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117217861 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099246747 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.096769824 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097143717 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.133471333 seconds)
  done (took 3.280901482 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.114797075 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.110641361 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.128347318 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.111278528 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103823465 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.129766848 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.106541263 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.129092014 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.112432603 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105354276 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.132294766 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106527136 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.125236417 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.106024913 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104925847 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.126788844 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.11186709 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102596895 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.129474805 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.109277564 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.124833563 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.110049666 seconds)
  done (took 3.470030223 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.108088352 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.099934106 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.098961701 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.118683115 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.102023355 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.09715728 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.124374743 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.098438937 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.105304915 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.11498685 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.092377664 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.095351859 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.099353211 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.118985484 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.091187754 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.09565374 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.127614955 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.100241126 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.102338412 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.116783614 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.108870295 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.096806632 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.116962333 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.092014523 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.107900542 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.101337866 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.119871936 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.100628416 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.090046979 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.121188607 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.097885498 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.094570344 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.117543377 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.091536149 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.089674705 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.120278958 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102184631 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.097993441 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.096344942 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.117114396 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.098585164 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.100146212 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.120934744 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.098096917 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.09669798 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.115770639 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.1025287 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.096789094 seconds)
  done (took 5.94888695 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.126135764 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.164727307 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.102031557 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.137741164 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.133975117 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.105760602 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.099244898 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.137978912 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.099389277 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.12333463 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.113837531 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.111696248 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.12538662 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.10477209 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.10190297 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.125300273 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103664835 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.099722964 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.127247299 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101435699 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.104593748 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.124995531 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.110403044 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.131587154 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.104690094 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101900566 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.12167849 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.104208371 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.108718045 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.128494883 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.106210085 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.104165925 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.37377118 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.100937928 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.100632775 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.124764803 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.114700925 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.122181141 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.104377129 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100773683 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.122392192 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.107519496 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.103394892 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.133032801 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103214791 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.103029362 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.123340009 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101225954 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.110793044 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.123207703 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.109206423 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.111095241 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.125197449 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.103209587 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.10380046 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.132720893 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.102333875 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.120812057 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.104195711 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.111005688 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.118500734 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.104679131 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.110153147 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.122422406 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.107909171 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.111387225 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.124304899 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.103367539 seconds)
  done (took 9.06583115 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.136687165 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.104170818 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.133520646 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112847525 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.103663804 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.126405302 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10527109 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.104034037 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.127188287 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109630837 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124248206 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.201539987 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.123221293 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.111806768 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.103231272 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.126278122 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.104919027 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103725112 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.127391037 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104361024 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.103498366 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.134091032 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.105384921 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.133333613 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.116417348 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.10015951 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.126113279 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.105574584 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111886675 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.127451739 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.114433778 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.125187788 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.104533455 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.112469543 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.138108288 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.104623889 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.09837119 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125823426 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.105570946 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.125181368 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.103258576 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112216472 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.126133678 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.103242811 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104704273 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.125094546 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.114536668 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.116127355 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.132376595 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111205915 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.126965296 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114190077 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.105321324 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.127007772 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.115163834 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.141216129 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115549385 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112051173 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.126765844 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.114801028 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.134662127 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.121815481 seconds)
  done (took 8.258915931 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100276906 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098191429 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.097928953 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.119577568 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.099812452 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097851186 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.09819378 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.121873696 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099904033 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.098191931 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119298515 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099161496 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09812484 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098061164 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.120499662 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099689101 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09731436 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.118937004 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100208118 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098587034 seconds)
  done (took 3.025715842 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.109569398 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.11557025 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.119816897 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107815666 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.100985264 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.126321744 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.102230983 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100894572 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101209069 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.123030528 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109086942 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.128954225 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101767676 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106698876 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.128300314 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108342647 seconds)
  done (took 2.736692453 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.121217649 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117872542 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.192412673 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.103619038 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.123550744 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.10948034 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.100820422 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.125186535 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.100789719 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.107291298 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.104751127 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.127301488 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.101136189 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.101195923 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.124601164 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.10522458 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.098852519 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.126992313 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.101887077 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.19536719 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.1052632 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.102151154 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.125571672 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.104021071 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.101351052 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.129165713 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.108379935 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.100723033 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.126464247 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.101939096 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.102037665 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.130143587 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101188927 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.106163268 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.123284672 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.10440795 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.101787527 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.122270885 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.106042722 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.1023633 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.102846327 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.124446461 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.101747807 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.102697837 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.123461444 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.103180512 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.099674827 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.130056485 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.103703698 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.102843198 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.123260649 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.110703727 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.10559952 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.130354379 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.110844129 seconds)
  done (took 7.218083079 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.114370218 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101995557 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.134315141 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.101843494 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.101505297 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.101949773 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.124956116 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.103441928 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102065063 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.121797276 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10391811 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.102622757 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.123847526 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10369099 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.102621548 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.123332857 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.101733808 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.102526488 seconds)
  done (took 2.924547843 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.107174102 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.100343322 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.10628464 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.124189671 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.102287995 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101045651 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.122826952 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.101340408 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100861294 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.100660239 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.125351792 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.101104386 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09943615 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.12333713 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10231559 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101439165 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.122879999 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100879006 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.100557391 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09905569 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.124075367 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100926539 seconds)
  done (took 3.320322631 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.113015303 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.184218509 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.108315475 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.193112414 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.098486851 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.09631708 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.130222646 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.098281514 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.114001783 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.119369814 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.097928388 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.096372825 seconds)
  done (took 2.404409392 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131339719 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138790582 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.124355537 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10329943 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11029556 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129079105 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107080612 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10607907 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135516153 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118917651 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128233043 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114751909 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1119961 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136202764 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111785718 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131087991 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108874653 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106127794 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122679815 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122169292 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106031364 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136024111 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106293537 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105308081 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129035042 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114603507 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135926077 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119057493 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1063314 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136301561 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110740865 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127191955 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116256948 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116934837 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124159669 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114318575 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10520081 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143643101 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110868134 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136184834 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102913986 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11027908 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136225944 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112602782 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135109691 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108567187 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1111264 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12817475 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106125631 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.149458711 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111544065 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113328115 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132134116 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114974713 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11403014 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.15168262 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116664843 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136747752 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110142348 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140051689 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114935897 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130665758 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116276191 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116982634 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132839115 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115343558 seconds)
  done (took 8.926710739 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.144688541 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.102035003 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12682581 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118238723 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135572816 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107911276 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10668667 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127183952 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107509253 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102759597 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.172706698 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106381382 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138267399 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116206789 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107136322 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129069811 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107929063 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113934083 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125766785 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128388396 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127954006 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116189921 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11313252 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137869765 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118412484 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133253816 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108955098 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106014132 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12812898 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10920883 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111104456 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129700961 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115165972 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.101826996 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137277341 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10712538 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129373941 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115973843 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106855461 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132533219 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116374287 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142623219 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109684691 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106769293 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140201167 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108846806 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10712701 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126013653 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108763963 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103412021 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141323898 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120223193 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140205061 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116793131 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106438749 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129896115 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108243975 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106638663 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129466853 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112423932 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136675715 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108254562 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126169421 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130301794 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108183002 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136474648 seconds)
  done (took 8.901562785 seconds)
done (took 168.626356732 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.150570393 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.191835177 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.146234702 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.181090303 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.094377012 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.130182598 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.150273615 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.148211611 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.092564492 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.11653355 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.093835796 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.096931705 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.186636378 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.094680496 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.093023619 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.119743671 seconds)
  done (took 3.043776177 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.193315582 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.309423477 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110239693 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.119901371 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103154989 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.100373721 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.12005436 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.101730061 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.09842466 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.128332746 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.103216643 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096140739 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.128531181 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.098051466 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.097740843 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.123691239 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106488671 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.099850054 seconds)
  done (took 3.202030161 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.120039328 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.144740143 seconds)
  done (took 1.237520845 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.13129138 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.198414649 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.275653181 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.171621123 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.123163977 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.13833909 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.151651768 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.132945184 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.180987213 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.134067828 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.113219838 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.099368732 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.14721997 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.105276013 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.114568017 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.122130281 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.128031825 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.133502263 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114726457 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.101357608 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.142078633 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.10398013 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.103823006 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.135057062 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.170571844 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.132309864 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.102770392 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.101119309 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.124203899 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.113103313 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.104686215 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.137463478 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.111513719 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.174235206 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.104144196 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.170082901 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.107249234 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.122311051 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.113013118 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.098542248 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.125886398 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.103760172 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.113391203 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.123023054 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.101837319 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.128771398 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.103686528 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.101556981 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.129073449 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.109754449 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.10550435 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.128334457 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.147045025 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.131855564 seconds)
  done (took 7.914433749 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.854260211 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.141798727 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100437917 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.006460392 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.150710752 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113989461 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.857459821 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.145532249 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.252884063 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.869824088 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115669967 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.139292718 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.235607659 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.231244419 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.010644353 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.328814885 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.708228486 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.11411938 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.125363846 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.164731892 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106728626 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.149289709 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.119587511 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.420184439 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.099881563 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.120084489 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.107827551 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.110916413 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.177145925 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.099235926 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.126470045 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.193475681 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.241907535 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.206582424 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122745831 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.098765121 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097716363 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.182684069 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268654325 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.217940646 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.183871671 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095011307 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.09719883 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.131960934 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118000147 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.118264678 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.157654812 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.188956257 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.188260385 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.101814069 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.136149038 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.109485043 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.128010881 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.155631183 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.120246631 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.334562752 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.325243427 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098273712 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13091122 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.115197615 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26623733 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.122284114 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.235655611 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126074718 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213122555 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.120447937 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.805685985 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.160072482 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.120527266 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.106709001 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.104920054 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129039659 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.106925174 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.18327435 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.37308086 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.134647201 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.103054537 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120769997 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.219982929 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.123089245 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099413333 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.183817717 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.100238904 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.129516322 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.1141482 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.110270966 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.187053804 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.24987631 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.110524434 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.132164518 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.10509692 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.133082711 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.103098362 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.230629004 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.229307848 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.173888905 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.212160599 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.131139894 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.179880284 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.162992627 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.127948824 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.162500492 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.130608001 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.113963763 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128940814 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.225978031 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.133200684 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.123119666 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.105949069 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.10804767 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.160867589 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102058202 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.130386217 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.162027335 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.455440918 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.182084012 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.095790256 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.125285363 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109695756 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.180270035 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106505618 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262587948 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130177567 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.161804307 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.129765124 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.097979601 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.106456022 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.18204068 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.129822104 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109546356 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.106935631 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.134374916 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.2306092 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.243840817 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.113814631 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.241573851 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.188519547 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.107917014 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.191734188 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.107821825 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.188202227 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.107969388 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.130387392 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101522801 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.797983075 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134296081 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.109316813 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.10455382 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.206641126 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099636398 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.099716976 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.123153345 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.098322566 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.795782687 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.101373758 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.120487772 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101169473 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.105848672 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.13162259 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107419743 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.104105055 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.180024375 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.23754893 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.137088387 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.106062144 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.122587692 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.156551893 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.124396917 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.100184206 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.099335804 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.122348367 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.110036569 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.103717894 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.123395337 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167942056 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.177147237 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.227316588 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.523458213 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.122512512 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.100772167 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.237317883 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0990033 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.32211027 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109182986 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.232546578 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.187793429 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.097595489 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.322312689 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.186921728 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.208354318 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.102979402 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.189608855 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.096757553 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.130259293 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.156740929 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.122734759 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107596626 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.176990502 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.114292424 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.13573118 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.019046789 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.100597072 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.249739441 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.096824658 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.186887441 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.100808475 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.130604596 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.308231828 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.099791627 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139338312 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.15683463 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.128138582 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.101376436 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.602452275 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.100376218 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133081849 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.1095095 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.233567073 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.184610025 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.107670929 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.13308936 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.114116061 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.181363625 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.232417228 seconds)
  done (took 45.254026307 seconds)
done (took 61.6113269 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.296184995 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.257190327 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.305191217 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.210215097 seconds)
  done (took 2.129837625 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.264437311 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.162153979 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.235585742 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.098480758 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.248178127 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.098493405 seconds)
  done (took 2.104458666 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.491159245 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.372231526 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.310270262 seconds)
  done (took 2.173751414 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.256928265 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.245803071 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.354217351 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.408854904 seconds)
  done (took 2.381610153 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.302552816 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.129991914 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.127146683 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.213943886 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.257696447 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.23281638 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.148523284 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.197998436 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.129211912 seconds)
  done (took 2.786219005 seconds)
done (took 12.56687441 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.385320355 seconds)
    (2/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.204509878 seconds)
    (3/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.135566093 seconds)
    (4/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.325352357 seconds)
    (5/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.114349585 seconds)
    (6/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.111560407 seconds)
    (7/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.340038445 seconds)
    (8/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.135533091 seconds)
    (9/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.356643028 seconds)
    (10/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.114291133 seconds)
    (11/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.118472109 seconds)
    (12/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.214132963 seconds)
    (13/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.188994145 seconds)
    (14/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.3347128 seconds)
    (15/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.109119974 seconds)
    (16/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.237779321 seconds)
    (17/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.215100016 seconds)
    (18/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.322882756 seconds)
    (19/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.175364639 seconds)
    (20/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.131319118 seconds)
    (21/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.132897986 seconds)
    (22/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.30079197 seconds)
    (23/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.104668207 seconds)
    (24/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.223986447 seconds)
    (25/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.080659237 seconds)
    (26/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.130662555 seconds)
    (27/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.216352022 seconds)
    (28/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.346710732 seconds)
    (29/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.108795032 seconds)
    (30/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.151787911 seconds)
    (31/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.340190267 seconds)
    (32/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.083566157 seconds)
    (33/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.192794033 seconds)
    (34/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.137006796 seconds)
    (35/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.192673258 seconds)
    (36/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.235064318 seconds)
    (37/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.104430278 seconds)
    (38/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.204789528 seconds)
    (39/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.232917578 seconds)
    (40/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.312165856 seconds)
    (41/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.083128541 seconds)
    (42/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.133371211 seconds)
    (43/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.124281325 seconds)
    (44/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.133757771 seconds)
    (45/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.13293787 seconds)
    (46/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.135079836 seconds)
    (47/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.084143337 seconds)
    (48/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.109054425 seconds)
    (49/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.082558397 seconds)
    (50/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.215228943 seconds)
    (51/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.187727528 seconds)
    (52/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.232422188 seconds)
    (53/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.206492201 seconds)
    (54/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.124536426 seconds)
    (55/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.135566563 seconds)
    (56/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.083009703 seconds)
    (57/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.243153166 seconds)
    (58/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.17469985 seconds)
    (59/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.240538769 seconds)
    (60/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.104010236 seconds)
    (61/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.149501302 seconds)
    (62/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.094808037 seconds)
    (63/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.105575807 seconds)
    (64/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.311226923 seconds)
    (65/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.151295898 seconds)
    (66/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.081956804 seconds)
    (67/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.129589682 seconds)
    (68/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.166331747 seconds)
    (69/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.104271457 seconds)
    (70/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.107691771 seconds)
    (71/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.107398635 seconds)
    (72/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.151571319 seconds)
    (73/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.174962475 seconds)
    (74/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.169681343 seconds)
    (75/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.082996568 seconds)
    (76/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.203035864 seconds)
    (77/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.099542916 seconds)
    (78/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.107030801 seconds)
    (79/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.127993734 seconds)
    (80/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.171020282 seconds)
    (81/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.148961849 seconds)
    (82/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.101519653 seconds)
    (83/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.217636612 seconds)
    (84/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.082995034 seconds)
    (85/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.135160321 seconds)
    (86/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.083728356 seconds)
    (87/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.09900915 seconds)
    (88/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.10929015 seconds)
    (89/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.21375477 seconds)
    (90/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.082954208 seconds)
    (91/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.103376146 seconds)
    (92/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.171405368 seconds)
    (93/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.126765759 seconds)
    (94/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.212984368 seconds)
    (95/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.106545389 seconds)
    (96/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.083603566 seconds)
    (97/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.082122866 seconds)
    (98/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.173643736 seconds)
    (99/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.084460631 seconds)
    (100/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.157734501 seconds)
    (101/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.088679958 seconds)
    (102/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.18508575 seconds)
    (103/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.114311395 seconds)
    (104/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.172873156 seconds)
    (105/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.168840179 seconds)
    (106/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.145737302 seconds)
    (107/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.084306364 seconds)
    (108/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.236283536 seconds)
    (109/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.084282731 seconds)
    (110/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.082379541 seconds)
    (111/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.099723959 seconds)
    (112/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.169820529 seconds)
    (113/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.109580695 seconds)
    (114/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.128778114 seconds)
    (115/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.112784453 seconds)
    (116/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.089304599 seconds)
    (117/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.083036217 seconds)
    (118/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.083884028 seconds)
    (119/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.082645536 seconds)
    (120/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.130641152 seconds)
    (121/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.083617092 seconds)
    (122/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.089158051 seconds)
    (123/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.093298593 seconds)
    (124/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.137230015 seconds)
    (125/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.08306752 seconds)
    (126/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.125648905 seconds)
    (127/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.125622959 seconds)
    (128/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.113667962 seconds)
    (129/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.100974449 seconds)
    (130/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.088144428 seconds)
    (131/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.104846986 seconds)
    (132/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.130706948 seconds)
    (133/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.08462188 seconds)
    (134/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.11181988 seconds)
    (135/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.128563619 seconds)
    (136/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.08413826 seconds)
    (137/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.110031301 seconds)
    (138/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.113374885 seconds)
    (139/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.10661913 seconds)
    (140/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.117969968 seconds)
    (141/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.083891382 seconds)
    (142/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.083989661 seconds)
    (143/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.172618951 seconds)
    (144/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.084798318 seconds)
    (145/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.110297086 seconds)
    (146/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.083763527 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.130032703 seconds)
    (148/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.112927852 seconds)
    (149/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.099672719 seconds)
    (150/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.108450785 seconds)
    (151/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.101437363 seconds)
    (152/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.100117556 seconds)
    (153/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.106106817 seconds)
    (154/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.112453289 seconds)
    (155/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.083329632 seconds)
    (156/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.109845793 seconds)
    (157/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.215406292 seconds)
    (158/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.104958065 seconds)
    (159/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.193938384 seconds)
    (160/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.153237605 seconds)
    (161/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.084688558 seconds)
    (162/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.083901946 seconds)
    (163/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.112457697 seconds)
    (164/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.130433797 seconds)
    (165/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.08516953 seconds)
    (166/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.084663608 seconds)
    (167/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.082541671 seconds)
    (168/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.109616019 seconds)
    (169/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.083543297 seconds)
    (170/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.084374509 seconds)
    (171/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.103860711 seconds)
    (172/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.127965218 seconds)
    (173/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.105348371 seconds)
    (174/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.104260201 seconds)
    (175/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.088369783 seconds)
    (176/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.15006921 seconds)
    (177/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.19227036 seconds)
    (178/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.082587983 seconds)
    (179/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.107801581 seconds)
    (180/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.113200121 seconds)
    (181/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.108493636 seconds)
    (182/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.083314346 seconds)
    (183/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.108655177 seconds)
    (184/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.084231998 seconds)
    (185/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.089827832 seconds)
    (186/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.104700205 seconds)
    (187/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.135396521 seconds)
    (188/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.084920272 seconds)
    (189/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.084437509 seconds)
    (190/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.083032315 seconds)
    (191/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.083145017 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.12925338 seconds)
  done (took 27.904414023 seconds)
done (took 28.914899336 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.216079516 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.129810535 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.109508885 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.108488277 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.20613146 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.115523858 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.146466551 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.112358028 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.117987062 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.134395925 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.101228352 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.119641939 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.108304813 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.205158477 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.110938879 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.128183383 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.101687089 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.117810283 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.147259404 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.122817236 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.207115017 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103175844 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.117895761 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.127190467 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.180454307 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.129229933 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.108908884 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.107687261 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.143178417 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.111940059 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.107237131 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.126454388 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.12330854 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.121620768 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.124294792 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.112320178 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101408756 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.088959454 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.134838615 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112490273 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.119408906 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.135837791 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.112724667 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.102009905 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.13572676 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.110034193 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101461039 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.137586194 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.101831538 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.10869796 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103014129 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.147869752 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.110029035 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.099719318 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.125266232 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.10344395 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.117383261 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.127155066 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.121499468 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.101490144 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.126805208 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103537184 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.111463495 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.100999119 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.135780905 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.101586487 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.110368593 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.138832534 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110893079 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.104106085 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.12634687 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.111382541 seconds)
done (took 9.901120735 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.107550614 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.147705867 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.202485524 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.217032072 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.128367325 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.114662628 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.141793816 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.125420269 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.112971188 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.146664328 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.138447969 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.159258895 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.184482636 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.143370313 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.116756447 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.112364455 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.139238588 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.111318322 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.213575918 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.126243804 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.126400217 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.146153425 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.130690224 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.14558109 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.106992387 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.136208695 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.134488105 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.115798369 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.104507553 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.138798307 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.127009786 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.10402681 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.133126625 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.125866174 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.122957511 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.142325135 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.117367689 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.113056729 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.132492161 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.106665532 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.113140442 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.14815994 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.106460951 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.140741942 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.116122895 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.120415418 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.111737344 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.145872943 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.107771733 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.112863741 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.1328814 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.132382313 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.141258623 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.124457347 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.118571799 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.143180649 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.12078181 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.119537644 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.132246144 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.121903666 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.10644724 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.104299187 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.133145861 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.127468456 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.132142717 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121574351 seconds)
  done (took 9.680078887 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.125840276 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.136373247 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.141324676 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.116774334 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.110046419 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.124860818 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.100805924 seconds)
  done (took 1.913265582 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.102469272 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.189634743 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.210077024 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.210407571 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.208338531 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.195005504 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.149823013 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.101540964 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.134037232 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.137492117 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.189378394 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.242465795 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.110190777 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.142293915 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.211534143 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.102257451 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.214312462 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.102702235 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.115423073 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.21299046 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118648639 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.157584059 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.115133719 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.101331305 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.2105277 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.102381924 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.264593862 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11931615 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.138357362 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.11593522 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114503301 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.206016169 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.21268423 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.115089238 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.109356439 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.209778913 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.209968623 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115405297 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.22569811 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.106423896 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.210948 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.116304679 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.116836292 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.141706715 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.116994077 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.197269574 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.12067025 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.116349577 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.140943449 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.193593129 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.138453554 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.188114453 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.139518909 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117442811 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.110510345 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.143002751 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.123835412 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.117261959 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.22110799 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.118357803 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.210936226 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.211106556 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.185309482 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.212487667 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125073711 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.216687745 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.207699488 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.115729868 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.108834327 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.143604379 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.187041664 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.142290082 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.113038096 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.202490128 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.12045334 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.215202899 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.185847322 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.139621449 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.114703028 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.104602379 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.141134826 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.103286059 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.202784213 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116646111 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112453706 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.145588012 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114724016 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.114655582 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.132673522 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.124030827 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.11555598 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.139709173 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.122407118 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.115676544 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.143325958 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.214518727 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.113033069 seconds)
  done (took 15.837647222 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.107951049 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.103498965 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.108019056 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.130208023 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.103916197 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.103880949 seconds)
  done (took 1.734147281 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.143446259 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.116324248 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.152843747 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.118539828 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.168886855 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.221375466 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.225056063 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.111208492 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.160830503 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128392275 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.222074461 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.197774269 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.222138905 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.118329768 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.225447168 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.143897064 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.201885007 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.140332572 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127500881 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116026826 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.142991826 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121413144 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115566866 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.213026384 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117683969 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.144580515 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.111484258 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.125674573 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.151655414 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.111839264 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.120906917 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.144508616 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.11027096 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.110623608 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.227359277 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.1345335 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115675782 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.12116384 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.144116885 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.120407195 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.223894818 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.116337696 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.12377182 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.146614088 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.1125413 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.108402647 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.147861915 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.112171344 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.227782069 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120577231 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120205751 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.144275491 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118208001 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.119421169 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.136797414 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.112427007 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.145446993 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.201096722 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.145644152 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.111037489 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.116683761 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.145349424 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.112992611 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.121962141 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.145541352 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.121424512 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.10867599 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.145564394 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.117686467 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.119432191 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.146394719 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.119285944 seconds)
  done (took 11.362733158 seconds)
done (took 41.580569413 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.541487304 seconds)
  done (took 2.615244575 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.91153344 seconds)
  done (took 1.984484225 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.665490982 seconds)
  done (took 19.770116537 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.528918245 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.610900109 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.024486081 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.153708387 seconds)
  done (took 3.393579858 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.055094273 seconds)
  done (took 2.148508918 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.297677685 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.267911378 seconds)
  done (took 1.646859178 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.751201128 seconds)
  done (took 1.845455464 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.567008103 seconds)
  done (took 2.648243137 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.351563715 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.178375272 seconds)
  done (took 1.623844531 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.626436933 seconds)
  done (took 1.721973331 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.763626681 seconds)
  done (took 21.859139583 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.240603585 seconds)
  done (took 1.34162259 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.286559973 seconds)
  done (took 1.390002374 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.793169998 seconds)
  done (took 4.89342561 seconds)
done (took 69.968046377 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.115294519 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.118170958 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.11676276 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.141913502 seconds)
  done (took 1.582797568 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.12442428 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.118599948 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.120421221 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.143447139 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.123307018 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.116161101 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.14506758 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.119434454 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.116541395 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.146802268 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.11821464 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.11626451 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.146613078 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.117214797 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.115444295 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.147019767 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.121432897 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.118723472 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.145434055 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.119788074 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118546987 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.145405334 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.121701454 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.11905104 seconds)
  done (took 4.147031034 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.113949625 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.107521181 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.109308226 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.132884517 seconds)
  done (took 1.570335784 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.12759303 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.129565882 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.154240297 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126458637 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.130487388 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.155524395 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.116438523 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.113910684 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.143663448 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126372455 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.132757213 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.156456586 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.130019513 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.118548803 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.155123561 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.112749726 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.117606739 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.156278524 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.124568588 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.125858683 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.145126584 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.123900997 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.121925344 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.152562958 seconds)
  done (took 4.3005413 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.192411546 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.128491616 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.168294009 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.161148695 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.169702838 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.115289909 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.138037809 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.148880115 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.122826183 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.116845435 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.146728115 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.161861582 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.148865394 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.119450632 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.117930316 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.149842873 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.130024756 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.121334792 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.186682257 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.121176224 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.150436103 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.129790435 seconds)
  done (took 4.251652866 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.120391681 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.107874834 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.103694682 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.135959405 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.119161218 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.110284546 seconds)
  done (took 1.809317658 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.108354452 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.102769608 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.102502857 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.128624084 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.108140539 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.102219353 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.100399148 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.132148715 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.101838364 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.102412547 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.12972929 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.103307485 seconds)
  done (took 2.434876173 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.337354775 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.107760447 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.134452329 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.110875259 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.113425193 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.104611081 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.146484151 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.106489888 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.269599943 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.103126493 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.145331761 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.195428312 seconds)
  done (took 2.98784876 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20703585 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145209373 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.300126076 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.369065301 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163951869 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.188368278 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.26922666 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192144487 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.208563433 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136746095 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246830878 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15437839 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178958347 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17380876 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164081392 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.157165719 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196645843 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188334169 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175090356 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224506707 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156178005 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.192071148 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18106894 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174679451 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132081828 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189415992 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.117999466 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125151252 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194603035 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189174153 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17073037 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17192035 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14254691 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220176711 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25755726 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171404772 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.312883901 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131670277 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.198345662 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.185985461 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.258652213 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163762172 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187863934 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180110081 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128019517 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206625151 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151138908 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.201803142 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.129746249 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168025035 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179005475 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200558718 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.202894687 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136889285 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.313259429 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163328649 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.168825753 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170019791 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210244553 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216129419 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166037149 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.12073686 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.208943565 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209342227 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203367132 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.141223767 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.189613226 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124623664 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191931306 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194673409 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206692946 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154852043 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.226045478 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157660034 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156691668 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197812382 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176963678 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204508115 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156589942 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.145507258 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149489261 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160072464 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126858244 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.197152074 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146322944 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199557162 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158702755 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.340597701 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185487195 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183665842 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157248047 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186107936 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156528796 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.173624443 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.105772082 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170961924 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.162449618 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182292696 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13239113 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182063631 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14009317 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.127050471 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176607112 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.120463266 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18401255 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.128732444 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189383186 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158079081 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.155781659 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164251164 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172682296 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.15405238 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192819909 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18191589 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158131781 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131256514 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21662201 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155804701 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.15610493 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176554274 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.211901531 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.142391873 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160697374 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164521149 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214872048 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139317087 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215411506 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134713472 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161853724 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.142052002 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185798663 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156801517 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.179434018 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127214446 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.176001244 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195976769 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.153010548 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136920163 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193264664 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132342955 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12327659 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164556422 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135071518 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.166219535 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.145151913 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.13238642 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180398731 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154316153 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182592962 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153113589 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160303394 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200948999 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132963987 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.157966307 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173164636 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.117894103 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.201081797 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182632593 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156512566 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19859742 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.19000189 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216083505 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157767024 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158776879 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175351 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153816204 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.118487319 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188134376 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155476276 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.186688968 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.178615842 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214143111 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.194019294 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.149899532 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174785871 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166060854 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.202675391 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150425477 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.171410068 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155635223 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192115184 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.11896852 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.149197421 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.127934441 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135228491 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156397773 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134003332 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201948989 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163341748 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.210498129 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.185167522 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137443899 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.209575851 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.125493864 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186239735 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.164588372 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16450228 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.181912015 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208519622 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163579778 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167275375 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158387363 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.148404997 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124075217 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.130978869 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.192325056 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133837003 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162062882 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139110903 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.209941877 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170435489 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174560302 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221874297 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163108369 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.223156229 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.117574531 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.193867233 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168663514 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184107605 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.181937448 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164744174 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.157119334 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.207072762 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138037119 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215238973 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155420449 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18969999 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214934907 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.155108929 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127199939 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175821273 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156850683 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166479169 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163116975 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174645568 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128198897 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179734896 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.136884776 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122844991 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209461241 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170743006 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169223026 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.187901007 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165244211 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153061167 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140204248 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186707608 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143337984 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.108105067 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196955506 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211877024 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145101688 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182590253 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174505931 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157254567 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.314410489 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217409123 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173355137 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162389832 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139270739 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189657492 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15941475 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19065924 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177689384 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168822005 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174891942 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186770324 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.140981608 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158705769 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146943935 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179193898 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.141298913 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.15924339 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.157095478 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.139460508 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212693291 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166789245 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160092295 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186419972 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.148023897 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.143126468 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169229957 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193283765 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184378236 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200846823 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.154449903 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.19406719 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18977525 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151122096 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127875699 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.128867577 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.207700386 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127123696 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189728967 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.203578052 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218311826 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161504138 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18742552 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137605201 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.124598308 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.184216492 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145928752 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219443858 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161513554 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.136227311 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218847149 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.131202204 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128371126 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188355916 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.30267994 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144998328 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20153325 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.114943482 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.296087319 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128412533 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130603482 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.192284181 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196926177 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.133831559 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.181003503 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192016846 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140283752 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192665334 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136078968 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.211508992 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217545064 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168217764 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201411976 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.140514165 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188593324 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158881497 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20604081 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141602786 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.173551982 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158774381 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210628088 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.210270301 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.131099402 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155468177 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186193488 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154214145 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197687981 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134475628 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219093638 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125368505 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191521851 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135371897 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152646938 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156046047 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.205329609 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128606438 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206268472 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185885473 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133048133 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124738752 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174776333 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153887522 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166462343 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.1292803 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210493697 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.127831804 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188896495 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179142594 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127270899 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18543604 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14334323 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158648403 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140312514 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16707785 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131457828 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.169154677 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21545824 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.129369935 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207714809 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161305091 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191692584 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181575426 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141632966 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.670030393 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.155147393 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181771805 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175499472 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186232056 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178208969 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159646935 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187907746 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146794894 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194293682 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145644304 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.26794525 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161287525 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.185915945 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12958594 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168550598 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13776713 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.159495084 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153111411 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154771936 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168499891 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.132227033 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.184979888 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140478019 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.172735214 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138306056 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211297705 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147914312 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211408309 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179481479 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165515925 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16080411 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199220378 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127054122 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.1923074 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170218783 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170352601 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146036373 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.161414133 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.13708596 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208742344 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.123414376 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156104943 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189769702 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156688814 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188299135 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.132630137 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190230166 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140878807 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189832788 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126576022 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.15044956 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1891634 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131824373 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.15616682 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158208868 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186561186 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.154025459 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152471789 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.172522559 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188129811 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.150777571 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131671902 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.303979181 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158298622 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217178064 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.140760786 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162008033 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14211889 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183363934 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.155265203 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188290232 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.129186958 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127159401 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.157960361 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.167892844 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.177518334 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158145644 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203356894 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159014267 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222520966 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.131700259 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.318089341 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136576884 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18603815 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.12146935 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.126404758 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169406962 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131772984 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167560013 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186338156 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209329813 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.15169374 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.17412781 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134010812 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.1523971 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130448336 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163451589 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179161768 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156607177 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175077331 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.106107588 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168592352 seconds)
  done (took 83.986864668 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.168084752 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.152112102 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.167946361 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.226707239 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.196113506 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.297889229 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.23536981 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.264323261 seconds)
  done (took 2.901901759 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.119762778 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.158441707 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.13995042 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.145526362 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.1173273 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.44913498 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.157987244 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.119510226 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.165530602 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.159252885 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.142056879 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.628347668 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.113980501 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.145242097 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.130793018 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.118278205 seconds)
  done (took 4.20263764 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.522127331 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.600780224 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.344671846 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.284759392 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.237012666 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.181187381 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.821469163 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.701275244 seconds)
  done (took 13.89673712 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.147408048 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.136370264 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.31768642 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.262942236 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.150343983 seconds)
  done (took 2.224465586 seconds)
done (took 131.386722515 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.12426836 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.122918549 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.122390443 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.153839448 seconds)
  done (took 1.719821449 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.184235294 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.094437878 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.096471978 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.121894218 seconds)
  done (took 1.703777169 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.449144207 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.093346297 seconds)
  done (took 1.775835332 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.149208899 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.143170503 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.167430147 seconds)
  done (took 1.674462764 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.14369365 seconds)
  done (took 1.346998636 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.128667408 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.1217882 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.240086148 seconds)
  done (took 1.70009635 seconds)
done (took 11.134369556 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120260886 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.414294075 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.433961923 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.134289018 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.711564723 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.427079556 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.037699256 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.174406886 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.173319844 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.137955989 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.132786265 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.688009534 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.059004255 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.359323054 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.01446618 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.482628668 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.694055112 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.110490628 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.146508383 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.112281258 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.018804306 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.138030588 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112142143 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.11030974 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.717397575 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.42180646 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.108707671 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.495384822 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.108664647 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.111802512 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.428238801 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.109710112 seconds)
  done (took 17.641075045 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118212819 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.171465248 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.145477681 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.111207668 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112747376 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.1397013 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.121292756 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.121818251 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.206757418 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.108328072 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.161781202 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.109037279 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.114943072 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.139005814 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.13748806 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.10910783 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.141021039 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.113411595 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117753313 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.140244855 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.133836531 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109271469 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.139822596 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.114017096 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.108852352 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.159395587 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.110687491 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.12190893 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.137739077 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.115456979 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.114587241 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.138012412 seconds)
  done (took 5.359628615 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.158296712 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.179623 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.148985454 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.147829406 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.187538992 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.111943259 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.222650495 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147904315 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.202991978 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.110994397 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.131979156 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.137578955 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.15090304 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.109163716 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.166547678 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.110410654 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.112962223 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.142049724 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119313552 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.110519992 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.163271675 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109698289 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.111436573 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.142174498 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.111073171 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.132362997 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.139154254 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.123429345 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.10886618 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.143361302 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.115736373 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.109970558 seconds)
  done (took 5.62926536 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.126871784 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126151677 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.133181195 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.16393128 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.119269157 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.12307617 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.154203338 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.120888887 seconds)
  done (took 2.286869184 seconds)
done (took 32.124195119 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.136660064 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.129047965 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.130202982 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.155373517 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.192582206 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.148290391 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.130099911 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.11511043 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.154112767 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.131485401 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.109506909 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.116470877 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.16145151 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.121030926 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.225292833 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.125401526 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.230700048 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.195496035 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.148558178 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.125551607 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.117419672 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.231246402 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.121027501 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.146917665 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.204200855 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.113034361 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.217408505 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.11881768 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.148988695 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.111968671 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.224947319 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.122855354 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.11638086 seconds)
  done (took 6.183356156 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.213164893 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.119699579 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.149661167 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.118303226 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.119437533 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.148908991 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.214403764 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.147932012 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.119600939 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.117523218 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.116467453 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.228762622 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.124449434 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.143792132 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.121135418 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.115053144 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.24658504 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.119621159 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.108773434 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.126490158 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.115443891 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.11722053 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.257382456 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.113676494 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.116641319 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.149489077 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.122266712 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.122477159 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.148880805 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.121836535 seconds)
  done (took 5.531086967 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.126559271 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.131567496 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.135074485 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.215382472 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.145736858 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.161507875 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.140420854 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.133337642 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.172647805 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.112166615 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.12685924 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.180125485 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128265494 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.121735174 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.147445693 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.131759281 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135190429 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.143956623 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.120675652 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.128964806 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.164132215 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.131572906 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.139591146 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.150384619 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.111510385 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.118716174 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.152374522 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.128044277 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.119963881 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.156046509 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.115549445 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.115764267 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.142276681 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.149112751 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.113805817 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.156118931 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.138975074 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.124534808 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.156418678 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.143558533 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.11623513 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.144915961 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.139975555 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.168932952 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.14307271 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.125908075 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.122834723 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.155953162 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.111699899 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130573201 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.184418137 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.112859756 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.132644615 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.143280607 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.111893716 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.120580921 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.112181912 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.147065187 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.127729627 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.116070909 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.1682077 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.120154203 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.122031114 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.144918134 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.123766419 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.110913055 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.14067153 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.118514181 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.141313327 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.148516152 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.152766516 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.11159537 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.122848836 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.155589562 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.123135998 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.122922128 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.142754863 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.123549518 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121627389 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.149090132 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.126023746 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.114579267 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.145254542 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.130012438 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.131937393 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.156478626 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.125850211 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.125708166 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.145364004 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.115858137 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130133726 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.112100745 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.149769563 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.125482052 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.111729549 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.14659959 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.126954859 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.123219475 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.140691916 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13909709 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.115820017 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.141324055 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.138947676 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.118007797 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.117582051 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.153804664 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.155056247 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.14182773 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.126236752 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.125620811 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.114052058 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.151321618 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.116961382 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.110624439 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.162359213 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.128943667 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.118877505 seconds)
  done (took 16.995073751 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.328490148 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.313512534 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.180679275 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.315597156 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.157101936 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.208215448 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.309582113 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.312270776 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.112275957 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.182892413 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.164035961 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.280259592 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.145834612 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.141852335 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.313004365 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.365122664 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.175703534 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.149361078 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.181941773 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.126757382 seconds)
  done (took 5.709366371 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.133614545 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.148022743 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.167956425 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.142592661 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.123003699 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.158309594 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.112715829 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.134742433 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.155718526 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.124350845 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.116019121 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.160583435 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.124578996 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.129571761 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.159159179 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.154297847 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.121211409 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.14907261 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.137594315 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.117713458 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.137145192 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.140533207 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.121173615 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.167281333 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.131757484 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.12547879 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.142672228 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.119038173 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.119983952 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.153100422 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.119129934 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.132253552 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.149498878 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.109515878 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.124131326 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.128971576 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.150379136 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.116360846 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.117386369 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.148379927 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129750971 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.125384195 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.152578811 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.103934895 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.132144001 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.114886697 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.156843875 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.129043506 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.10997692 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.131058672 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.15741232 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.127812179 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.119679529 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.167404759 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.121304795 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.129120069 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.156249974 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.127966784 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.117943249 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.143198005 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.112778876 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.116870416 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.152556956 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.128686567 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.125215838 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.162884721 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.132425495 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.113159286 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.14640184 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.120550723 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.118045554 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.127903849 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.166778671 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.122088869 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.11986271 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.157914916 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.121501077 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.098398986 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.153217565 seconds)
  done (took 11.831127918 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.140952873 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.121751926 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.132218554 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.180673095 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.125595925 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.118321325 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.153328021 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.134129947 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.126192607 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.162963354 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.127904787 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.126120831 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.168032896 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.123534899 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.121659994 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.162596031 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.125858387 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.151383237 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.164944519 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.141799731 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.125728469 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.150408435 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.126631646 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.125009505 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.17522406 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.125648099 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.140752142 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.159101428 seconds)
  done (took 5.186580099 seconds)
done (took 52.656327527 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.368385931 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.584992024 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.350990663 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.343184126 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.387684022 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.360096174 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.34883348 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.345362403 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.940264331 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.321810926 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.346404014 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.353623916 seconds)
done (took 30.295681102 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.350540751 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.875564534 seconds)
    (2/2) benchmarking "String"...
    done (took 1.65114372 seconds)
  done (took 4.766041077 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.335716401 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.33782052 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.561006012 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.337110383 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.341249235 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.338925983 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.338718948 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.341142856 seconds)
  done (took 16.832984118 seconds)
done (took 27.522652121 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.404428585 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.543111535 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.595272961 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.339269191 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.33911141 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.338891151 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.34846371 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.370657325 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.33887638 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.366421719 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.76554864 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.597586169 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.346525167 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.716093411 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.355440346 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.345793553 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.356503649 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.609213499 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.341100373 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.372089428 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.322114324 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.332114957 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.360629648 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.342158361 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.351683169 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.347166162 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.354111956 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.344090946 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.531688489 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.376222477 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.374011767 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.346004756 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.360995935 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.357967775 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.341229359 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.356515948 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.548298103 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.351136118 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.321176676 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.353732095 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.550389991 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.350525067 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.349561481 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.351997385 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.345658198 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.420010677 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.32408812 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.45774273 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.37074262 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.343335552 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.408949618 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.73892303 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.35508986 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.356562365 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.349308381 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.589654853 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.364354585 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.410790202 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.369013896 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.344850166 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.35057119 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.342306701 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.368785129 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.353721049 seconds)
  done (took 152.970489927 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.340946424 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.34165506 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.347669953 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.351527813 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.347804736 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.342835044 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.343517434 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.342104444 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.342302036 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.348897189 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.343305889 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.349542817 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.349210417 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.376439393 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.350632698 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.363850311 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.348509713 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.362210068 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.370230818 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.344382232 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.365397155 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.343749804 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.343687943 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.348665505 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.350341584 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.42770646 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.352691322 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.353528668 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.357509138 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.342941991 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.346320231 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.353655399 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.003716727 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.21499059 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.359001975 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.374584146 seconds)
  done (took 85.488927161 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.34212887 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.343906162 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.343665041 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.377682498 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.345318518 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.952758327 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.961321428 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.882449259 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.758167221 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.816245897 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.660512289 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.345416463 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.434929382 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.351568494 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.341458809 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.355755687 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.368095095 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.341512577 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.340003153 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.945137451 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.356555899 seconds)
    (22/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.339970439 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.519880049 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.356420113 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.375462374 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.735061399 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.365495215 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.340695331 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.372240645 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.674659016 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.390458899 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.339788527 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.743210925 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.430039857 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.451534121 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.337577969 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.367831806 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.333684863 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.616191794 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.333487355 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.335290659 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.337162657 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.037567641 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.339500933 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.922419058 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.339200657 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.293649116 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.333924304 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.335328434 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.552036101 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.065570321 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.337693983 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.33192131 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.336191008 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.33338805 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.333161337 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.367303435 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.524495072 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.433957014 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.334664102 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.335041767 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.337394598 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.367986807 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.334959533 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.358085311 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.34070964 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.410036622 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.394691317 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.454982088 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.92119721 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.33946189 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.432753488 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.455577842 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.334321463 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.33472909 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.335014266 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.334586731 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.44742994 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.335746186 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.786102218 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.517999957 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.352979092 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.725322775 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.439131145 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.335527916 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.721953371 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.340177454 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.335883042 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.101766449 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.433067589 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.336961798 seconds)
    (92/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.334655568 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.335427302 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.336319586 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.759534114 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.924261007 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.597687149 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.340768803 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.676955219 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.344747807 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.775255531 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.91197695 seconds)
    (103/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.335816804 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.047351717 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.342596974 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.451358997 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.515462343 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.354389964 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.338537287 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.726951239 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.343119056 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.396408843 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.336239724 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.739269098 seconds)
  done (took 381.15704864 seconds)
done (took 620.85436611 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.221654709 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.165686215 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.318275956 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.179070179 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.159400409 seconds)
  done (took 12.279511761 seconds)
done (took 13.51545417 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.533676654 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.534618794 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.40025791 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.533209311 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.372325927 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.549988853 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.522574445 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.356979811 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.45074445 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.419726696 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.451467956 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.391390216 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.373526929 seconds)
  done (took 20.126717625 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.620216561 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.345211377 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.40293823 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.603820775 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.385322954 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.625506714 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.666622436 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.346976145 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.49182508 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.355822049 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.35438813 seconds)
  done (took 19.435731111 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.616064045 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.347096117 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.395496712 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.610545255 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.381907587 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.617672949 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.655292392 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.348840109 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.53240902 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.360182235 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.354777138 seconds)
  done (took 19.455816316 seconds)
done (took 60.25334484 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.372940595 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.440777974 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.370811762 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.356106629 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.353191899 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.354449568 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.355978204 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.355018693 seconds)
  done (took 12.195298561 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.352485215 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.352503758 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.353063692 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.352442435 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.35060394 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.35483949 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.352722696 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.350894049 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.352483784 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.352844666 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.353022141 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.353041785 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.352750822 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.353303811 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.353349842 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.353539373 seconds)
  done (took 22.880546252 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.355569019 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.354812443 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.353060467 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.353392985 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.354144373 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.353130934 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.354848483 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.352691494 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.353185788 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.351893999 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.353439418 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.353592914 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.355100419 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.35310664 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.354293497 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.356732104 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.354037151 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.35504862 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.360258738 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.354185711 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.354554523 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.353086178 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.354857156 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.351826664 seconds)
  done (took 33.73951183 seconds)
done (took 70.050744691 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.34878441 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.346049341 seconds)
  done (took 5.93413311 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.41272592 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.417384193 seconds)
  done (took 4.065966988 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.355088923 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.351763095 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.354605271 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.352300382 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.35208781 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.353235595 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.355382206 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.354271702 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.351944531 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.353597479 seconds)
  done (took 14.770716497 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.353159096 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.354732419 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.351579177 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.355849876 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.353631875 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.352837004 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.353655944 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.353570286 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.353218542 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.354141389 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.353811134 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.353512103 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.354659575 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.355357567 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.35232096 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.352469143 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.353580929 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.354110378 seconds)
  done (took 25.603959033 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.368964284 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.375546073 seconds)
  done (took 3.982333317 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.493331433 seconds)
    (2/7) benchmarking "second"...
    done (took 1.394721408 seconds)
    (3/7) benchmarking "month"...
    done (took 1.469257177 seconds)
    (4/7) benchmarking "year"...
    done (took 1.460216939 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.394642288 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.374603365 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.396894615 seconds)
  done (took 11.219630885 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.356595443 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.561082628 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.693024335 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.914370884 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.356441322 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.356838207 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.166767657 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.358662805 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.359637928 seconds)
  done (took 15.360158247 seconds)
done (took 82.174017187 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.338075746 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.391773746 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.367214186 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.36942929 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.649916628 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.350661617 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.346833733 seconds)
done (took 17.050170446 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.322664996 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.328215239 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.326329064 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.362598614 seconds)
  done (took 10.576422835 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.341506311 seconds)
    (2/2) benchmarking "read"...
    done (took 1.634199477 seconds)
  done (took 5.213747932 seconds)
done (took 17.027161678 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.355971233 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.354661048 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.354712109 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.356467732 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.356526068 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.356567694 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.355830376 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.354221097 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.357485582 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.357147231 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.356463949 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.354409756 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.356147941 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.357084109 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.354645276 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.35538014 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.355254046 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.354564226 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.355989752 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.356676559 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.357311014 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.356422298 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.355443005 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.354800225 seconds)
  done (took 33.778105623 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.355994191 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.3595104 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.357175257 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.355978356 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.356158391 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.356250451 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.357717877 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.357541763 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.356936048 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.35700523 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.358705535 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.357504392 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.356956564 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.356876308 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.358457646 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.357783539 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.358901382 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.359621637 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.358989291 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.356930305 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.357098175 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.357440085 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.359701422 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.358684173 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.359631837 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.359212735 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.359020861 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.359435054 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.358843685 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.358197949 seconds)
  done (took 41.977957353 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.360930837 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.362510357 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.358184717 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.356754349 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.356746848 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.359056208 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.357620252 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.357002625 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.359534255 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.358901861 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.358790364 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.358030862 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.358529276 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.359482645 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.358535085 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.359379966 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.359896899 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.360155849 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.358021298 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.359849617 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.359733241 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.359365934 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.358987015 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.360599978 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.359893678 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.358977907 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.358759882 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.359459557 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.361353359 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.359234147 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.361370373 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.359081994 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.359831893 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.360612613 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.361720297 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.360735273 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.364288827 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.365930909 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.359963216 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.360476398 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.360916011 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.359588403 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.36054101 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.360166645 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.360729904 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.359489827 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.360433698 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.359158557 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.361180377 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.36077029 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.362301807 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.361300963 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.361874728 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.362865808 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.361600655 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.361624827 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.361025133 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.364676467 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.362253716 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.361329928 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.360328385 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.361934706 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.36092152 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.359581711 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.362253568 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.36148203 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.361571883 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.362486541 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.362659112 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.361225186 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.361871601 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.36151945 seconds)
  done (took 99.194047438 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.363865282 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.36128825 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.360647845 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.36233536 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.361963547 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.362737076 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.363929291 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.360864621 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.361335401 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.361458337 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.362566439 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.361446077 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.362496029 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.36656178 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.361954452 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.362629126 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.362537375 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.362233884 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.362435899 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.36320875 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.362728693 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.362074277 seconds)
  done (took 31.219463137 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.361188344 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.363804523 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.361868792 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.364603976 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.365513814 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.366482967 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.362381097 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.363865274 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.363124985 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.361688859 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.361819495 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.36192753 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.364988086 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.36116545 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.362381983 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.364458171 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.363398745 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.364356932 seconds)
  done (took 25.782442597 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.364745387 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.364076203 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.361726891 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.360606198 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.361042241 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.363069638 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.36301866 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.36282659 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.362634429 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.363142529 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.362154157 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.363338486 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.36462727 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.363427513 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.364356746 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.363328888 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.365146537 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.364050392 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.364460764 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.36492335 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.364499489 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.364654613 seconds)
  done (took 31.240548097 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.365360396 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.363079969 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.365220055 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.363978276 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.364419168 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.364486161 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.366002452 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.364098708 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.365766205 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.364899 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.36271247 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.365423372 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.36653561 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.364669952 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.362556274 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.365824812 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.365533156 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.363983189 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.364974436 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.365396427 seconds)
  done (took 28.539297344 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.366004625 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.365906663 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.362867092 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.362902967 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.364504151 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.363541624 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.365037581 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.363647946 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.365794293 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.364336499 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.364004422 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.364738364 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.364952632 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.364138151 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.367512785 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.362589191 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.36541861 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.36588564 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.365029055 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.365204831 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.365981545 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.365913431 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.36587671 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.367381617 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.363530665 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.365535569 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.367961611 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.365315583 seconds)
  done (took 39.468253443 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.366318907 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.365458826 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.364784524 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.365416425 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.366267466 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.366017847 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.366395079 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.36635305 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.365646037 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.365967633 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.364745746 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.367513787 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.366767138 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.364814105 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.367593212 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.36475109 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.369524408 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.36653606 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.367194077 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.367244927 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.366563807 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.367101993 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.365633732 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.366436428 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.367624926 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.369047816 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.365808479 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.367903419 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.367321497 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.366771816 seconds)
  done (took 42.242479773 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.389682539 seconds)
    (2/2) benchmarking "in"...
    done (took 1.385321535 seconds)
  done (took 4.020853061 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.365524267 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.367267898 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.365966162 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.367196938 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.367430946 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.367140178 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.365292194 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.367247284 seconds)
  done (took 12.180669705 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.358082977 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.368057525 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.367612326 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.36965141 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.366119659 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.359389513 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.367418016 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.371609883 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.360433137 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.360926948 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.365702117 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.365286492 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.364827162 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.364962607 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.364008654 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.364727167 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.369314709 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.368739258 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.367390965 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.366936912 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.366961258 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.362807586 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.365097177 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.369984901 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.362151179 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.369085997 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.36824879 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.368648951 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.361123231 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.365747217 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.36067137 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.370891555 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.368221413 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.367267723 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.368033818 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.365367247 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.367100043 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.365775288 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.369445581 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.371740508 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.369005548 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.367697155 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.362555055 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.36279218 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.365964309 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.370065403 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.370021475 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.369883803 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.360303429 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.364834477 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.373395606 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.360664705 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.369201912 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.365098736 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.366006879 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.370759121 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.374229509 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.363805702 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.366560237 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.36946288 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.377846816 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.375242282 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.363375268 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.369908202 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.370268916 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.377750716 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.370520485 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.372190528 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.371891449 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.368588508 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.366245592 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.375110222 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.374623192 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.369048779 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.367100145 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.368692521 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.362005803 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.369340632 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.368761817 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.367047532 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.369624932 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.368208466 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.369556121 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.377936406 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.361643804 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.370128743 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.366032966 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.366206066 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.361416042 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.370527392 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.373759802 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.369364007 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.360292126 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.361663509 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.362821901 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.366631521 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.359309927 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.362016712 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.369111245 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.36864722 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.369739164 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.364586765 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.367195505 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.370231912 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.368163493 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.370077906 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.373492665 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.360451476 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.368127127 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.371665283 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.368404337 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.362594946 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.367396171 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.371383316 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.364981376 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.367699847 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.370731129 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.363671724 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.370892842 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.371138957 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.371201779 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.380785659 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.371977679 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.368117367 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.366129011 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.375211822 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.367821562 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.366887053 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.372808316 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.370106602 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.369857671 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.36447026 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.372289204 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.363136237 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.371558441 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.363753708 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.371890415 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.371004355 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.370364784 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.364827713 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.368284357 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.36477026 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.366178779 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.36810534 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.374872562 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.365714472 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.372846267 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.368113673 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.367411296 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.368336554 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.373065858 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.372106688 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.365679865 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.374706319 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.364424316 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.37103792 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.366282363 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.37260104 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.370885123 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.372364353 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.370676602 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.363910495 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.368273368 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.373161292 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.368022706 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.365538107 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.371483552 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.370561122 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.371347461 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.364147161 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.37114424 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.363942819 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.367339833 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.375784175 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.371930594 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.37067754 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.36644406 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.372744891 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.374713721 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.370093584 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.366510575 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.369189413 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.371656564 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.371064911 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.374208181 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.371918847 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.372685061 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.364067659 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.365075928 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.371699312 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.367227956 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.376667799 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.375021254 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.376712947 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.366201412 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.374391763 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.36616211 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.373599818 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.369844531 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.37422898 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.372541495 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.371478966 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.365723993 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.372600715 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.36719461 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.37263067 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.364520083 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.373082744 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.374487198 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.371861112 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.371314467 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.365894283 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.368249939 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.372761491 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.372582563 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.373428037 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.365043158 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.373501177 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.365997994 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.367299907 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.375526235 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.37385422 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.37200101 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.376471324 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.368228661 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.370360912 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.369867182 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.366290359 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.375152605 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.370963382 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.368987005 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.374730313 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.371791419 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.369237376 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.376693119 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.371680138 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.369872106 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.373033484 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.37799845 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.37446872 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.368795583 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.378384117 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.376492834 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.372777472 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.374811632 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.366686788 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.376950502 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.37531224 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.379168211 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.365774488 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.374912523 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.370137509 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.375970428 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.370255564 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.369688904 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.371132874 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.372518657 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.377246907 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.375854941 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.370391394 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.377172213 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.37552629 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.374374371 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.372717266 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.379424376 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.375672425 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.370849272 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.372652094 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.370671432 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.377588173 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.369324275 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.377063791 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.371199244 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.382159845 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.386539476 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.376876785 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.376046005 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.379678602 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.375459748 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.374475206 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.372910218 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.370686967 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.371336528 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.371279695 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.370194545 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.380103229 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.372513312 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.378722359 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.373359383 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.372830647 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.380194794 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.379159692 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.371087969 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.378792712 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.375888777 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.378743643 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.371250299 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.378166613 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.373559765 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.375143123 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.371834716 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.371850315 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.380387704 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.376512698 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.373268432 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.373649807 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.372903326 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.372259553 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.374549211 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.380449253 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.37570342 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.382866349 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.373774708 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.37835923 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.373862143 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.380722476 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.381235117 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.374776876 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.38300489 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.378792718 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.370416188 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.373581528 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.381063105 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.381094236 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.383619861 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.373549989 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.380959106 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.379674009 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.379727377 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.380891163 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.38025734 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.381580818 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.378871292 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.38172181 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.378724543 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.376571953 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.375330653 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.383725752 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.382689661 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.38132513 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.371536394 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.376870207 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.382573299 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.37669126 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.376235616 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.37613868 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.382546072 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.381208887 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.380784229 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.381458636 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.38181234 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.382098267 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.379118263 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.382977288 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.381093316 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.382681544 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.385299389 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.380938466 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.385551354 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.377341926 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.383166358 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.38275167 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.375701128 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.374038588 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.375518143 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.383351622 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.377003418 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.385100733 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.382216281 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.376620821 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.378840324 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.385064108 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.37510362 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.384241976 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.396847431 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.375866406 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.385135697 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.384323134 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.376281757 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.385067567 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.382674874 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.374220755 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.378921088 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.381539585 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.38801149 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.3775762 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.382935156 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.377724689 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.383715805 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.383192446 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.383389514 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.384120582 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.383550899 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.376977013 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.38365125 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.381112946 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.386709896 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.378698144 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.379980368 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.377655122 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.386321354 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.386747008 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.378407213 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.384867688 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.387481997 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.378917973 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.380034634 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.385962373 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.379240215 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.3878791 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.378656648 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.382102225 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.381176721 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.382280323 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.381684564 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.386555187 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.37956267 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.381170843 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.38519112 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.385984048 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.385836354 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.380448847 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.388377412 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.379833479 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.378860134 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.385009701 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.380175772 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.386030964 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.381619631 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.383293379 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.380450651 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.386224573 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.387454287 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.386839319 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.378138791 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.380431845 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.387086625 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.384269789 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.38488024 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.383416807 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.389152598 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.380835189 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.384155832 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.38319611 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.379487812 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.380417412 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.386407937 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.381831653 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.382006722 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.381651979 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.387466635 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.389086357 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.38224914 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.38261312 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.389690406 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.387421048 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.388832357 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.382023089 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.383805064 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.38251851 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.387630528 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.389565532 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.382766092 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.390131639 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.38689774 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.387845658 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.384834335 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.382363162 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.381635962 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.392000787 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.390111112 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.382910845 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.39042127 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.383829298 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.391570063 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.389849074 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.388505602 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.381671362 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.384309292 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.385816402 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.387380067 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.391168814 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.385851802 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.385032624 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.385181067 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.393150019 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.391623809 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.390549219 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.388379002 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.382372855 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.391521364 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.383222766 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.386253879 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.385353086 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.386267304 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.392615334 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.389350716 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.386908116 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.389819148 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.393056801 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.389230505 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.384272629 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.385586357 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.389169759 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.392337271 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.392332932 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.384404937 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.384784072 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.391301011 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.391037534 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.392727423 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.385677841 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.397165511 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.39713827 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.38530391 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.385672201 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.389062367 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.395004042 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.391984844 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.392397354 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.387392168 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.388957202 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.395181863 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.391750352 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.391562126 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.389416505 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.386152015 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.394590329 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.388414603 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.390340485 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.38963432 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.393697482 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.394374339 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.389709077 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.397584071 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.396531858 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.393882825 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.406495917 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.393214823 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.388629031 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.394503009 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.384800672 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.394881472 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.389672922 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.394314767 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.394531566 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.394190408 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.392931358 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.387402644 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.391308524 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.391049879 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.396874882 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.395206747 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.387254458 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.390029888 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.394954445 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.391609347 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.395576425 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.394825682 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.393020459 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.393875732 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.388571719 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.399025506 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.400666482 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.395855806 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.39587065 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.394759861 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.392206781 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.392182692 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.396250629 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.399493045 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.394589873 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.394499082 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.390333828 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.396714318 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.398414795 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.386343116 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.389480082 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.388985306 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.397536539 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.398747006 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.405807429 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.39411879 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.39184051 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.396714028 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.395510726 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.390864871 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.396776124 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.396280685 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.390110523 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.391085963 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.393345181 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.389017878 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.388398536 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.385109746 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.394224363 seconds)
  done (took 822.437446898 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.390108249 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.387427542 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.386343333 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.386272404 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.387274105 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.38843601 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.389098025 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.386403773 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.38769564 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.387536252 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.387366877 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.387169237 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.38848608 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.389179674 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.386614705 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.389305024 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.387826738 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.387627975 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.387873846 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.389503003 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.389438538 seconds)
  done (took 30.413354813 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.389795185 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.387146374 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.385878722 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.387270367 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.385734705 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.385465721 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.38735286 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.387669514 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.387265501 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.383202622 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.38437953 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.385028133 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.3845775 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.384311403 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.384095957 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.384606312 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.381321367 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.381756993 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.382390776 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.382076262 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.381887818 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.381800214 seconds)
  done (took 31.72963068 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.378539847 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.378259693 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.371775044 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.38004769 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.378826664 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.378135322 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.378770841 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.377168058 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.375786568 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.368596512 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.369126152 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.368343477 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.371757957 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.381408613 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.372029686 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.37460119 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.370531924 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.37235416 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.370904459 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.371165292 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.372346484 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.377137168 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.368229229 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.359814552 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.369588717 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.368816578 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.369075453 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.367541054 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.362458472 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.365621061 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.365193184 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.357113994 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.359888588 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.359247529 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.358323413 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.368634848 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.363399259 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.362692739 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.362510921 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.362335705 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.375418781 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.363327523 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.362787087 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.366931463 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.359558631 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.352909944 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.361582869 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.358606164 seconds)
  done (took 66.949931971 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.360549192 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.360133423 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.358365928 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.356827126 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.354716605 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.356135061 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.355690694 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.356658655 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.355058887 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.356421908 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.355428852 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.352675463 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.352330491 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.352647693 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.353750891 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.353462651 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.355798365 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.351159126 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.350154345 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.351106432 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.34924888 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.350964472 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.352022472 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.35136225 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.351691959 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.347718305 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.348716539 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.352018608 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.348960079 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.349524978 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.349475146 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.352180397 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.345890576 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.348615704 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.346006794 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.348449689 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.348206306 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.345994061 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.346344953 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.345272417 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.343287258 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.345541506 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.344111591 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.344373876 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.344711236 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.346701591 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.342698276 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.343381916 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.343492442 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.342906807 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.342451848 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.345621252 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.34356111 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.344932625 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.342283023 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.341174853 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.341800707 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.341106288 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.341217766 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.342597509 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.339856703 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.343016295 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.340706529 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.342394557 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.341048788 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.342719402 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.342672214 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.341465713 seconds)
  done (took 92.923591583 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.34047618 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.340668987 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.341485347 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.341159155 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.341783586 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.343559849 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.342190015 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.341197 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.341601428 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.342919397 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.342733983 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.343591201 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.343269337 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.342589226 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.342020188 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.343240977 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.342803524 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.342549601 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.343420851 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.342570729 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.340906863 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.343013888 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.343468637 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.343331876 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.343457443 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.3444318 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.341603614 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.344073981 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.343656415 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.343310214 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.343875797 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.34394085 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.34510911 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.342413322 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.344097231 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.34307738 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.342416 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.34403989 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.344899486 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.343508194 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.342447395 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.342231283 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.344003921 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.343328682 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.346075782 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.343032963 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.342164829 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.340195678 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.342111104 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.34188246 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.343417065 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.342503208 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.342500094 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.340714252 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.340999533 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.341628767 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.340153522 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.341302134 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.341024329 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.342083638 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.33888018 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.340220274 seconds)
  done (took 84.465386191 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.339920021 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.340619636 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.34088647 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.340742223 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.340315039 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.338834324 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.338325494 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.340741331 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.338624432 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.339600465 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.340996145 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.340032108 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.339117575 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.338467984 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.338501103 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.338727496 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.338866717 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.339282696 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.339569123 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.337450444 seconds)
  done (took 28.015300333 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.337190928 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.338056276 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.336837036 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.337134608 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.33752807 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.338092543 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.33534669 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.33539117 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.335450281 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.335091844 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.334510438 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.337136748 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.336216079 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.33647286 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.33361152 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.335038227 seconds)
  done (took 22.602485476 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.334888704 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.335348388 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.335032456 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.334589512 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.332749066 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.333400547 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.332807739 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.333214586 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.332872737 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.332867321 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.333589774 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.334026122 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.331923772 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.332303896 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.330444501 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.332132672 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.33226076 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.331515716 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.331997252 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.328897575 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.330257366 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.330157881 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.330968332 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.332530351 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.331222997 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.329831344 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.330383506 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.330332687 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.330098194 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.329682226 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.330979388 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.330650084 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.328857211 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.329967133 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.327169347 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.330547569 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.330493938 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.329025905 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.328461147 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.329608011 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.330492103 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.331233708 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.329906375 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.330829462 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.329993191 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.330226482 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.32928459 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.330328284 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.345617238 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.360772368 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.329291212 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.330039052 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.329815986 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.330415265 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.330113348 seconds)
  done (took 74.478563975 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.331469084 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.330137946 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.329493873 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.32997773 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.330798155 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.330042069 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.33098533 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.333075363 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.33084731 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.330756324 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.332602855 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.331133982 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.33036016 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.332348749 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.331703665 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.330731092 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.331907321 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.331325078 seconds)
  done (took 25.17666818 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.331892097 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.330878855 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.33234447 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.332030724 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.332189408 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.332231985 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.330268474 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.332843193 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.332126241 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.331756941 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.332285894 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.331241938 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.33293965 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.331100998 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.330332701 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.332160105 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.33288461 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.332136386 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.332740632 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.333477756 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.332335757 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.333152312 seconds)
  done (took 30.524043862 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.32506515 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.324092102 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.323773575 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.338892004 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.335176922 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.324669243 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.323327332 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.323567056 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.345337837 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.363751041 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.358550165 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.337282049 seconds)
  done (took 17.242430741 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.336481866 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.3343515 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.333885013 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.334792338 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.333438954 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.33412602 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.334655409 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.335065036 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.334111903 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.332583206 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.333894907 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.333995619 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.334352446 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.335365667 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.332984507 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.333586111 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.335246572 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.332076483 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.33352053 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.333650231 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.335144665 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.333585845 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.331281299 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.331929891 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.333224773 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.333480873 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.333572638 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.332051437 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.33391164 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.331781229 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.332618695 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.332848001 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.33259411 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.333185104 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.333457478 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.333830097 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.33333012 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.333825678 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.332861444 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.33242814 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.333413752 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.33329709 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.333276191 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.332652251 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.333542177 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.331825621 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.333733039 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.333618747 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.333522463 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.334446885 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.333017617 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.33293872 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.335751319 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.33529521 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.332650393 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.33461565 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.334019568 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.33452737 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.33592547 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.333455385 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.334935909 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.335538643 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.333766904 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.334911449 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.335414961 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.333232569 seconds)
  done (took 89.248689732 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.335803856 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.334169397 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.333327831 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.33412926 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.333215929 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.333063605 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.335402259 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.335652503 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.333418019 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.334403287 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.334455157 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.334693954 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.334258503 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.335541533 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.33498106 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.335219769 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.336326473 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.334250033 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.335410061 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.336160316 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.335261146 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.336165536 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.336127486 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.335091372 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.334848976 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.334977644 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.336287779 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.335804357 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.335601213 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.335766481 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.334875801 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.335576521 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.336425641 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.335227183 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.336620985 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.335549827 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.334560822 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.337157473 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.336147498 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.339196868 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.337239536 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.33591074 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.337855544 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.337566668 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.33689336 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.337966207 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.337387863 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.33642129 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.338172016 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.337826602 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.336926687 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.338350963 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.337558108 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.337078398 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.339100594 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.336993042 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.338739286 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.33803263 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.338765783 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.337918804 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.337997401 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.33709375 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.338516642 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.338276242 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.338450668 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.338900132 seconds)
  done (took 89.414726866 seconds)
done (took 1896.503006492 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.495557602 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.453272781 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.328983034 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.34386587 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.329024948 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.327565913 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.342242722 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.329210717 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.328775111 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.328884235 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.329131397 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.521806208 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.36241893 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.329499364 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.329754852 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.425153956 seconds)
  done (took 27.129685727 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.356899332 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.338163059 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.44329082 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.336988127 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.357973466 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.51379523 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.394069245 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.335558628 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.494964462 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.35573572 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.326746877 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.355429209 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.334117775 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.328459619 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.351572249 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.516655451 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.572931192 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.328633794 seconds)
  done (took 29.2675857 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.763232325 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.33585013 seconds)
  done (took 5.323684618 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.351343437 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.333575991 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.332370398 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.32985219 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.335457029 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.321870481 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.328859758 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.336976827 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.332757342 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.449056432 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.329824628 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.340253612 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.34393076 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.3289647 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.336070546 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.370874469 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.472052832 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.335812256 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.334677388 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.332846224 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.326320523 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.421264464 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.366696977 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.335685512 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.446752208 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.3197368 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.334528844 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.334209369 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.45482836 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.336162121 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.327368744 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.326942676 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.328207983 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.321143078 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.800761672 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.324718722 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.365776079 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.336589506 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.33454977 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.472218029 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.330236084 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.331984546 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.320624396 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.784137164 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.47332505 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.444456114 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.340086627 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.343598023 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.32980644 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.393208484 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.331227128 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.330727937 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.383411507 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.165450258 seconds)
  done (took 85.120147858 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.357289932 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.32197023 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.491100663 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.339123299 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.321664464 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.333476418 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.327176942 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.59417679 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.371081142 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.334249383 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.609963692 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.844459733 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.329276242 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.369805544 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.88340177 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.362646188 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.325299226 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.322763138 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.326347256 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.330390782 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.833622848 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.325442249 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.323844671 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.370802368 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.361757841 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.796761083 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.330259515 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.32808417 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.338441204 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.323894848 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.793884755 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.324697492 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.392251502 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.326277607 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.594853571 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.686923306 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.654677512 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.327194836 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.372488651 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.328027903 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.35438288 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.783488031 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.664170077 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.323394616 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.324236476 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.784205911 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.325423216 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.327156659 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.332934864 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.546753905 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.326619437 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.326019566 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.337607676 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.328217501 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.331307069 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.397274421 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.337844157 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.820165941 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.325035074 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.327094598 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.360101628 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.327147398 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.330260095 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.32680237 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.33037983 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.675327334 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.509411458 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.328987955 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.673827467 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.787412006 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.328863984 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.865189564 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.330904356 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.343201026 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.531345924 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.326067815 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.346465343 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.842914375 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.378568274 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.328796472 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.660515614 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.336052608 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.623630217 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.345733524 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.326676342 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.861263421 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.340260112 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.392820908 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.328950183 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.331457372 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.331598402 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.331389394 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.600056654 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.35395457 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.328037968 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.32787274 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.357675008 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.328242322 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.348213472 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.329221838 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.866718267 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.336311359 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.326674364 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.330109867 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.32862137 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.329414969 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.328534289 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.329166818 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.568949058 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.334211002 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.34056516 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.329491688 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.329177155 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.337766235 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.376360444 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.336321906 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.628506622 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.336052125 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.330406562 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.333822158 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.335211548 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.387034692 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.330024007 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.336546655 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.197197546 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.566192911 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.346297838 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.329504491 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.331226605 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.331329396 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.330876914 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.330231493 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.366233411 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.334745295 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.074654771 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.35735452 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.355107492 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.33151869 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.332353072 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.331185365 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.339031875 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.333458029 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.628149627 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.602684846 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.509740848 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.333329183 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.331531731 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.074178976 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.342068702 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.470734108 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.34591357 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.331009944 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.551537164 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.522243031 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.334631761 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.330460826 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.33476071 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.55964856 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.334061138 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.643232362 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.832997968 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.334672983 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.337034534 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.078054656 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.038867233 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.337116772 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.333444235 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.615719433 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.34781506 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.332959659 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.333688781 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.332774662 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.334464829 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.334881113 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.34170265 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.33204894 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.332076016 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.608462022 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.508112706 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.348573055 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.334417636 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.800816939 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.404317916 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.333893659 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.335516279 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.337981356 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.332703886 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.418833508 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.333981155 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.353528158 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.333197809 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.342080582 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.822609626 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.334369619 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.339276537 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.487135751 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.98872688 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.336743367 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.335135684 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.33393256 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.928604234 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.863857863 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.397534506 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.629939519 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.338133947 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.375162887 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.334524278 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.369206145 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.827923298 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.335781173 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.334060096 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.959301543 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.334410931 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.742723766 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.335256254 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.336638974 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.879556076 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.338265946 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.335325316 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.33615735 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.334590838 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.623234437 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.338518034 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.38768473 seconds)
  done (took 495.633517513 seconds)
done (took 643.697931051 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.337366567 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.340767129 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.322875161 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.340702383 seconds)
  done (took 10.573309786 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.352439665 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.341414297 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.350185343 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.341541475 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.35145681 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.341454821 seconds)
  done (took 9.310759107 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.336629737 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.341418901 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.341463293 seconds)
  done (took 8.253289928 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.557167929 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.360414536 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.691369034 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.345800718 seconds)
  done (took 9.18670874 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.350916981 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.351002701 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.349987616 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.353496644 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.354319827 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.355392828 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.351925267 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.352086886 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.353734719 seconds)
  done (took 13.405235371 seconds)
done (took 51.961637831 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.997941238 seconds)
    (2/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.458561181 seconds)
    (3/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.407346028 seconds)
    (4/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.186408973 seconds)
    (5/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.379011252 seconds)
    (6/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.372542401 seconds)
    (7/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.31858742 seconds)
    (8/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.378064113 seconds)
    (9/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.318976917 seconds)
    (10/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.368198928 seconds)
    (11/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.363470048 seconds)
    (12/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.138372958 seconds)
    (13/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.464523834 seconds)
    (14/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.32435146 seconds)
    (15/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.367820302 seconds)
    (16/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.317966028 seconds)
    (17/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.328718363 seconds)
    (18/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.460359438 seconds)
    (19/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.559976562 seconds)
    (20/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.411941905 seconds)
    (21/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.445761236 seconds)
    (22/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.343647601 seconds)
    (23/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.511738719 seconds)
    (24/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.466143993 seconds)
    (25/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.372504364 seconds)
    (26/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.446380896 seconds)
    (27/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.319381274 seconds)
    (28/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.32751221 seconds)
    (29/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.375316106 seconds)
    (30/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.426270433 seconds)
    (31/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.320085557 seconds)
    (32/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.3285911 seconds)
    (33/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.335727389 seconds)
    (34/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.402672818 seconds)
    (35/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.280156689 seconds)
    (36/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.161571068 seconds)
    (37/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.561980932 seconds)
    (38/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.401554486 seconds)
    (39/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.320750845 seconds)
    (40/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.322715493 seconds)
    (41/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.04713032 seconds)
    (42/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.345635647 seconds)
    (43/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.519748515 seconds)
    (44/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.499720404 seconds)
    (45/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.511849288 seconds)
    (46/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.378800669 seconds)
    (47/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.320435487 seconds)
    (48/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.381392218 seconds)
    (49/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.320276065 seconds)
    (50/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.525146533 seconds)
    (51/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.226480076 seconds)
    (52/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.47864836 seconds)
    (53/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.184399754 seconds)
    (54/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.45748312 seconds)
    (55/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.349497504 seconds)
    (56/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.183077756 seconds)
    (57/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.473792498 seconds)
    (58/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.298220109 seconds)
    (59/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.039171715 seconds)
    (60/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.462238854 seconds)
    (61/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.436942293 seconds)
    (62/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.323556852 seconds)
    (63/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.409661296 seconds)
    (64/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.323181702 seconds)
    (65/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.375466167 seconds)
    (66/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.322756275 seconds)
    (67/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.593654221 seconds)
    (68/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.482842517 seconds)
    (69/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.321544374 seconds)
    (70/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.32601428 seconds)
    (71/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.594368648 seconds)
    (72/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.439601271 seconds)
    (73/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.512083608 seconds)
    (74/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.43657126 seconds)
    (75/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.524071335 seconds)
    (76/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.322715817 seconds)
    (77/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.326823974 seconds)
    (78/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.453213847 seconds)
    (79/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.416228864 seconds)
    (80/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.42585908 seconds)
    (81/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.469419318 seconds)
    (82/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.372172646 seconds)
    (83/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.418291148 seconds)
    (84/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.339338817 seconds)
    (85/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.375550248 seconds)
    (86/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.560337157 seconds)
    (87/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.459412445 seconds)
    (88/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.377382168 seconds)
    (89/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.153733964 seconds)
    (90/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.229286515 seconds)
    (91/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.49559789 seconds)
    (92/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.323688381 seconds)
    (93/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.436932275 seconds)
    (94/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.445741939 seconds)
    (95/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.471131416 seconds)
    (96/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.327017529 seconds)
    (97/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.10955783 seconds)
    (98/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.425764468 seconds)
    (99/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.337949708 seconds)
    (100/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.563425103 seconds)
    (101/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.347730113 seconds)
    (102/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.672595341 seconds)
    (103/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.497752853 seconds)
    (104/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.602780286 seconds)
    (105/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.378470026 seconds)
    (106/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.444909389 seconds)
    (107/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.042738877 seconds)
    (108/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.148697349 seconds)
    (109/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.514019672 seconds)
    (110/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.377343223 seconds)
    (111/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.457748962 seconds)
    (112/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.422838053 seconds)
    (113/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.383012609 seconds)
    (114/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.417526723 seconds)
    (115/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.466100061 seconds)
    (116/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.47357302 seconds)
    (117/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.494049687 seconds)
    (118/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.326284866 seconds)
    (119/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.488656876 seconds)
    (120/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.365015057 seconds)
    (121/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.564573741 seconds)
    (122/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.590948344 seconds)
    (123/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.341353226 seconds)
    (124/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.416966428 seconds)
    (125/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.414329233 seconds)
    (126/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.480134737 seconds)
    (127/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.436341772 seconds)
    (128/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.327289409 seconds)
    (129/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.411260237 seconds)
    (130/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.557135414 seconds)
    (131/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.462269436 seconds)
    (132/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.423782069 seconds)
    (133/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.32966281 seconds)
    (134/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.41087396 seconds)
    (135/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.503611683 seconds)
    (136/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.494515463 seconds)
    (137/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.385975181 seconds)
    (138/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.455754396 seconds)
    (139/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.494836738 seconds)
    (140/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.362940056 seconds)
    (141/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.355130929 seconds)
    (142/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.089236297 seconds)
    (143/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.560903123 seconds)
    (144/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.527884122 seconds)
    (145/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.387865886 seconds)
    (146/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.085882454 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.453158759 seconds)
    (148/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.427700935 seconds)
    (149/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.406801048 seconds)
    (150/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.327408666 seconds)
    (151/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.436935743 seconds)
    (152/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.454879626 seconds)
    (153/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.447195851 seconds)
    (154/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.567314812 seconds)
    (155/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.433729891 seconds)
    (156/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.384916516 seconds)
    (157/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.154428495 seconds)
    (158/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.506752125 seconds)
    (159/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.480191397 seconds)
    (160/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.467741726 seconds)
    (161/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.328490933 seconds)
    (162/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.623598989 seconds)
    (163/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.515592319 seconds)
    (164/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.353294262 seconds)
    (165/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.331974056 seconds)
    (166/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.354016705 seconds)
    (167/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.466604822 seconds)
    (168/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.32974797 seconds)
    (169/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.434590056 seconds)
    (170/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.333973137 seconds)
    (171/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.462056785 seconds)
    (172/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.349685296 seconds)
    (173/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.437076311 seconds)
    (174/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.458946458 seconds)
    (175/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.519499873 seconds)
    (176/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.556612468 seconds)
    (177/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.00858936 seconds)
    (178/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.491471854 seconds)
    (179/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.052857517 seconds)
    (180/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.437253761 seconds)
    (181/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.394934118 seconds)
    (182/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.459177021 seconds)
    (183/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.328778593 seconds)
    (184/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.11326662 seconds)
    (185/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.601881371 seconds)
    (186/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.355350829 seconds)
    (187/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.39544566 seconds)
    (188/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.147834269 seconds)
    (189/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.351156394 seconds)
    (190/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.192580999 seconds)
    (191/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.499275344 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.505090079 seconds)
  done (took 342.033843603 seconds)
done (took 343.26861793 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.372058069 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.435248765 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.357019775 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.357050352 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.357487694 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.357894273 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.382641052 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.357603187 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.371366641 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.371351837 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.357520067 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.370846669 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.370357986 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.368481973 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.39093371 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.357965405 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.35782068 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.366208651 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.372649753 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.373657016 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.359489482 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.358366491 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.38095153 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.359203451 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.368317439 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.365734357 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.366662111 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.365600318 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.371470993 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.373750072 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.354380137 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.369876333 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.374453614 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.369109852 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.359188021 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.369022566 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.360239968 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.436314808 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.378982135 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.371093613 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.366071489 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.37504538 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.36429346 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.36409858 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.37129243 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.382244471 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.368330627 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.375017211 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.356380895 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.358399833 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.379695042 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.372712575 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.36838516 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.355017814 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.367112917 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.381402044 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.370230024 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.377052369 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.368237651 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.363574602 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.395898341 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.378097206 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.373078147 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.370630893 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.367276195 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.373456474 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.371279713 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.376031765 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.369022642 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.3643784 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.362643829 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.368696174 seconds)
done (took 107.920065644 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.491316456 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.362557389 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.508002874 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.367905312 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.525377279 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.496063592 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.367722472 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.369105812 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.369079479 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.186152059 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.369597883 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.37013496 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.36140182 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.36981961 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.494482765 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.371173453 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.369240859 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.106159336 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.368379026 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.507903314 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.360271544 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.370752479 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.370293373 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.195876761 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.361948252 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.3564703 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.506936251 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.369886469 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.109512588 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.357716115 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.360576576 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.084631787 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.508670643 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.388839446 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.38043541 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.380869263 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.525537738 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.372996364 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.493807918 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.48880291 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.50992334 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.408920948 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.357353027 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.362052415 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.374340759 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.372299262 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.371386995 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.399657042 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.362788955 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.37174484 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.083148483 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.381648851 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.382143556 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.372095798 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.373054524 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.39135589 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.371777246 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.37104727 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.509069119 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.37242782 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.493993424 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.220880273 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.211207126 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.372135336 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.363356769 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.372867694 seconds)
  done (took 110.858846565 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.432861507 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.439749944 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.474708842 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.365204685 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.415964755 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.476508934 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.365355219 seconds)
  done (took 11.223353144 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.372075439 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.376028724 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.415682568 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.41569864 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.374028818 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.52274438 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.373331007 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.377590172 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.374653748 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.419699468 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.374973413 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.376302121 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.381564358 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.366547837 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.414871094 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.378095116 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.480186953 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.367245687 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.371665894 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.521290308 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.375923652 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.383199404 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.416712436 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.377837396 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.374545488 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.372946275 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.178567551 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.375257518 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.37444976 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.373988135 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.37449844 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.421820238 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.374497427 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.36640246 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.37598009 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.482368787 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.375495103 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.373087881 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.375384056 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.369091506 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.375518671 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.375255128 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.375344385 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.376448868 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.376388677 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.39077495 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.374425562 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.376688342 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.376629365 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.376327461 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.418019771 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.377643246 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.376477888 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.376441444 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.424107742 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.385487746 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.376195668 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.376807665 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.375188942 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.377103239 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.522416305 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.416360827 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.375794473 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.415209198 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.376310935 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.376102896 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.375842571 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.377044974 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.422455436 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.376125157 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.41657002 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.377661114 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.548663349 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.394036082 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.377590079 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.373004378 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.372119799 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.377505991 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.368925978 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.376203316 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.376973476 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.370890434 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.376311557 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.378733259 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.378439592 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.5310895 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.479282247 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.37756876 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.383048137 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.377618226 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.378457415 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.422833971 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.378918137 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.379007343 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.42274947 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.48489709 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.424246488 seconds)
  done (took 141.375999524 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.384132926 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.383222118 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.37292232 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.39749696 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.372422806 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.370512018 seconds)
  done (took 9.538283778 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.373785035 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.38142703 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.379116743 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.380103095 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.380364908 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.378562409 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.378581158 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.373121659 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.381699792 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.379008024 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.381195596 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.380525689 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.380622783 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.379102721 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.380091222 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.379246451 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.379309723 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.379804382 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.381061891 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.380279304 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.374109148 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.37968016 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.380965135 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.374363414 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.382730667 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.37931982 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.397719498 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.380947082 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.3809397 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.379526399 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.382874458 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.380478647 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.37351644 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.37863921 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.382375551 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.374859553 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.383867969 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.384149186 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.381652776 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.380291189 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.383747069 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.383104568 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.382047587 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.384513187 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.375562702 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.377917057 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.386830954 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.400536691 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.381744602 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.383972603 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.383793664 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.382370297 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.382299721 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.386045282 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.377536614 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.378651774 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.389223259 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.3823301 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.382864054 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.37696956 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.386480362 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.384610728 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.378092533 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.385510031 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.383846065 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.385212598 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.37762602 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.3860457 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.384211695 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.384508201 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.386863678 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.382494171 seconds)
  done (took 101.72829451 seconds)
done (took 375.973327898 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.681701168 seconds)
  done (took 3.943917287 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.397716154 seconds)
  done (took 3.658515362 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.530215509 seconds)
  done (took 22.795077575 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.414989747 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.482889117 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.38684728 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.376353009 seconds)
  done (took 10.923013716 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.732047843 seconds)
  done (took 3.993910489 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.379837168 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.375680682 seconds)
  done (took 6.018963478 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.579897458 seconds)
  done (took 3.842629009 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.578410304 seconds)
  done (took 3.841398611 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.393235612 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.393531272 seconds)
  done (took 6.05683218 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.351119541 seconds)
  done (took 3.613228629 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.31429105 seconds)
  done (took 20.577743223 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.386703681 seconds)
  done (took 3.652382161 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.378504585 seconds)
  done (took 3.640674677 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.915170796 seconds)
  done (took 6.178614625 seconds)
done (took 103.999323636 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.370833016 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.377703918 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.37697165 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.376845385 seconds)
  done (took 10.764808767 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.437665633 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.436132906 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.442252018 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.436953901 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.437416341 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.437034492 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.410789965 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.411733016 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.435795633 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.435064252 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.443281996 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.436667533 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.438871408 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.412515681 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.43734658 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.442923795 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.43844156 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.444616774 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.411755048 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.438606866 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.38724455 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.438806326 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.437014312 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.386275909 seconds)
  done (took 35.578826073 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.896356478 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.449721272 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.531589508 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.430141676 seconds)
  done (took 7.572459346 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.46767242 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.468670885 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.48588605 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.521984705 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.554467213 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.484775956 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.414116505 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.408404218 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.393959603 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.469483119 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.519372898 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.451756089 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.555152899 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.387927536 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.60648716 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.387857413 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.388428683 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.467218395 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.519471734 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.54848318 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.388580533 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.466701905 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.472779076 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.452466088 seconds)
  done (took 36.549010161 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.396004503 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.408339307 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.390518728 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.405579878 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.388905208 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.390819055 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.391231074 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.395633884 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.389257066 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.389730218 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.391398693 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.403565861 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.390618474 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.391190469 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.396991733 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.391473052 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.392482524 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.396675117 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.398971886 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.392155319 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.390703402 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.397711177 seconds)
  done (took 31.945998622 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.376351507 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.375760051 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.725434935 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.631326399 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.37689825 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.382283665 seconds)
  done (took 14.13566507 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.452383943 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.595145474 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.388051804 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.732284257 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.820575499 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.388520335 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.383260705 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.629035292 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.930441675 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.924112627 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.44658635 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.454705766 seconds)
  done (took 20.412152292 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.37695404 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.382344079 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.391625552 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.397624125 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.436451437 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.386668474 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.38934973 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.376973783 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.44321419 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.442348457 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.392535625 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.437526744 seconds)
  done (took 22.123138494 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474552538 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.387404813 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.387629854 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393970618 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39016792 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.229027608 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.461327649 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.092602739 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.391351379 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.662519728 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402343522 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.479960668 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.639459189 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387763829 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.393454133 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.359601162 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.620836539 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898336849 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393119585 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387380917 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42453398 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.389214905 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.391908032 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.605432063 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.231820209 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387941228 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.652027809 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.388313381 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.679449102 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.659639858 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.658819956 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395733124 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.664589442 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.026933466 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484176513 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.599387226 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396794159 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.3939088 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.367397488 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.394077245 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39654823 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.396231829 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.653395146 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396071471 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.388870592 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390506938 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.106953109 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.397265959 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.38859576 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.389604018 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.656973997 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.491348176 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.394651877 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.390072986 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.452838519 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392587941 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.394526011 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.510902083 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.953413064 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405953411 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39970335 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.396585632 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.392481292 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40420203 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.053627311 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.396817544 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.396273604 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.395861657 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391161585 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.396967496 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.421140428 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392084926 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.409795208 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392174953 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.181155445 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.392772853 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397508979 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963165549 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397302319 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.397850466 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.620780563 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391047948 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393044126 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.388914012 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.393832028 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.133104133 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404413307 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.364054394 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454382925 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.095499246 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.603491376 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.4121313 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423631616 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.615810275 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.365989969 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394060699 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.405555002 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399891249 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413475425 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.09982716 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391648831 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.399434203 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.650212939 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.602923666 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400420301 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.376032523 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.876339496 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392529271 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.42466564 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.406341649 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.610371977 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.033550581 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.662682718 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401282239 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429774571 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.393315189 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.191973379 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394323807 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.407542411 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.394857354 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.673853198 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.231797762 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400569668 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463313558 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400607782 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.394421363 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403957583 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402574465 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.394123771 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.586252668 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40357084 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.665640228 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.401094094 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396011154 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.395654901 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401248397 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.401456583 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.618738602 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39671188 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.67941587 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396676899 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395744844 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395655132 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.616762668 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.395353811 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.408376984 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.657102389 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404182634 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.407730804 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.668436158 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43205142 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.504572409 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425788419 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.40771045 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.656519009 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.401558554 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.402798651 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404327717 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.40484414 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398505881 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.405395592 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391232337 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.046370079 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373563674 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.39759507 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.398033468 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.41333607 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466876402 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.40507664 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.61047913 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.399416182 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396366941 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.426577192 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.396577345 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.626644349 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.665531914 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.407285136 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.481144415 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.877484771 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.039190806 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.410512416 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.397745227 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.399316836 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.397498168 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399219791 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399046115 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.398208696 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.612342708 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.668327079 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.39650035 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.048569159 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399884937 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.405322209 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.410500804 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.665847963 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.412932957 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399793133 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.402240924 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404836909 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.41048456 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.671709345 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.54005898 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.415136184 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.400927717 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.916947079 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.406640817 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.400735671 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.398934412 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431312601 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.406180856 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.246191058 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.660095759 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393761392 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.672817879 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.409035178 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.422361379 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.396590312 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415964064 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406720988 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.428242139 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413004643 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.61207315 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.409804252 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407028538 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960051505 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.203632325 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.986341056 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408102647 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.403004191 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.425007348 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.111297047 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400710418 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401525874 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.640474972 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.112539193 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40103171 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.881395412 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.401139914 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.165741326 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.674688374 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.638035312 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412965329 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.418636535 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.678579389 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.617963197 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432422323 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.402440282 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408000143 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.373872013 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.957916074 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402296875 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.488541947 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.113783758 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401095095 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.425092454 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.450361483 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.406566595 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.792664289 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.402832208 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402752129 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.405476337 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.408278341 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.249308299 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.402275978 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404126883 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.081120524 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.405012812 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.889735584 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401394039 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.616253324 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.670286773 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.65708937 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.422800653 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.409728644 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.662243872 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.670954164 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409939752 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.402878335 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.99570556 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.270324124 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.411382654 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405157357 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.206379604 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407844531 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.706401296 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.421913643 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.419401765 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41876091 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.405452463 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403727056 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.403575766 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.409976795 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378715773 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9175848 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.411264496 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415453149 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.421990635 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411736058 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.658979021 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.420166495 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.050659823 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.633550045 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.420228763 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441835186 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.41148635 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407059557 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.384728932 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.405301466 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.405817881 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.445609831 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.630207741 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.409007353 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.378511208 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.433578436 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.621339301 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.406170602 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.406404074 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.638215385 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.405998445 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.411625993 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.212292355 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438700122 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.408233967 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412999918 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.407498845 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449789427 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473662726 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.620737917 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.675543564 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.683486144 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.805685418 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407365525 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.413758732 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.422312025 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.502976754 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407919533 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.424664874 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.187927336 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.055930089 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.21048182 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.058271255 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.678510499 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.415673194 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414989224 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409567266 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.544573756 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.407339194 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.683588745 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409209955 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.402674831 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433789779 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408064742 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417316201 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.625245274 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.684932117 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.409465462 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41276449 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415774619 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.411503327 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.683862149 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.625508349 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928012282 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996185708 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415184875 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.410515621 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.126306622 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.684449156 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408537257 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.409673791 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41029605 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.419248105 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.41678986 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.415843103 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417624504 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.549215714 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.679058218 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.062565707 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.678645815 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.454456035 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.930392226 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411363676 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.687603401 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.179215765 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.624032117 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.061965089 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.171068971 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.674874564 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481450462 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.625827316 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.407078225 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.547090519 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.414736276 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.411369564 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.41289319 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411634031 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.411030965 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.680265116 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.06866066 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.675717066 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.417444623 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.414303308 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442872529 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.624720443 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.633541244 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.163244657 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.637666018 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.685781069 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.423855327 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.412552302 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.065285134 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.684710068 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419193005 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.417960282 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.638584319 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.412314324 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.439274122 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.102067408 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.411973032 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990140001 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.305382766 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43412857 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424504412 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.179910972 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.066506706 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.41403815 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935093996 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.419787704 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414514067 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.695612502 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.422332748 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.42762826 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.698920849 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.419685892 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.42634118 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.634338253 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.064554102 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.186154119 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.429667358 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.430556516 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.421106474 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414524218 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421740884 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417979724 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.422704876 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.812841871 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.414325778 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416152523 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.428433289 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.421620817 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415124243 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.421180446 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415014405 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.424333808 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.40619042 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.393186741 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.417482098 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.543153693 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.973774774 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422795566 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.090659648 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.762195547 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.670318268 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.428278319 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.39195292 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.420986936 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415897796 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416601248 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418282505 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.434176005 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995496968 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.435380494 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.699982647 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.428208067 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.626770115 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.629370281 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.42266195 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.639252085 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.431147978 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.441553474 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.390122661 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417342179 seconds)
  done (took 995.368538091 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.449071459 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.422695339 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.413621879 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.444828036 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.411254311 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.47865643 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.482586237 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.509710235 seconds)
  done (took 20.909329368 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.418707386 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.418294599 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.419242565 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.423891026 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.419622079 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.896152473 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.416656019 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.41943661 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.430956505 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.41787699 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.426792465 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.107481707 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.444404775 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.418587423 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.411340418 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.425261951 seconds)
  done (took 33.212513325 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.550978738 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.613430522 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.439907502 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.480904868 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.46125847 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.415446281 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.670632851 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.441266512 seconds)
  done (took 27.372854873 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.425652299 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.424228755 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.426110443 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.425384579 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.426602505 seconds)
  done (took 8.425658016 seconds)
done (took 1265.634488763 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.425670725 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.424489286 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.425806544 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.425040103 seconds)
  done (took 6.998689356 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.391546462 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.391866091 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.397301825 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.407816912 seconds)
  done (took 9.886766677 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.12696617 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.035556993 seconds)
  done (took 5.460636951 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.913378287 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.924148028 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.921611876 seconds)
  done (took 7.059221289 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.701331882 seconds)
  done (took 3.000619118 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.3552359 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.417159385 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.094272826 seconds)
  done (took 8.166076003 seconds)
done (took 41.870918365 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.41103972 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.674623287 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.569943771 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.415011411 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.575859173 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.568888458 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.149249757 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.416244852 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.411977919 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.434301312 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.4135517 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.630429292 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.131079709 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.659198115 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.138251828 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.7508614 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.572596568 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.415789123 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.413297787 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.413428826 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.152043966 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.420403568 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.426464606 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.421742382 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.572571082 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.558069814 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.414085731 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.752920364 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.417289614 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.417739508 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.557705484 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.414542021 seconds)
  done (took 83.992219579 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.42300576 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.422590832 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.424354479 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.414421589 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.430052674 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.422857271 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.415299201 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.414421172 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.41937281 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.418375833 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.414541859 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.430744621 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.41631073 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.414250822 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.415669438 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.416142447 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.41530732 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.414842976 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.431843709 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.414485648 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.41570992 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.42157298 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.415059001 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.421906516 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.415342208 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.4485164 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.414969603 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.422844983 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.416874641 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.415998541 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.41810721 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.450448081 seconds)
  done (took 78.768300619 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.416194604 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.432609426 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.416004284 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.415890921 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.416557189 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.418072144 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.419110093 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.416316136 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.434057919 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.41605489 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.417762126 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.417052955 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.418689304 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.416328219 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.419545786 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.418787832 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.417278937 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.416060165 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.429286864 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.417523454 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.419703014 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.418386782 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.44537375 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.416989836 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.434619118 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.436126118 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.417148475 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.426625226 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.417070462 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.417701911 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.423436577 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.41927 seconds)
  done (took 78.785665921 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.658548024 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.431568892 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.435882519 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.428685421 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.436094851 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.434070744 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.427723193 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.662345923 seconds)
  done (took 15.219754335 seconds)
done (took 258.064356963 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.42452653 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.937073988 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.456396996 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.425971348 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.445028075 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.453887908 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.645584649 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.449409207 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.649748058 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.443538761 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.441524825 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.434554944 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.234097806 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.575308908 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.293261851 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.408268197 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.309712194 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.420350091 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.999500831 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.710511941 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.455356768 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.431046158 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.280292262 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.322021708 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.401529535 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.506426484 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.528653379 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.658614914 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.590541667 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.509250934 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.956252415 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.433135186 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.448439149 seconds)
  done (took 65.98720709 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.42635254 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.435577524 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.434795143 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.434598858 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.434585713 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.433901694 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.426212069 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.434183012 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.43481814 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.435386412 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.434836071 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.434534828 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.434308891 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.435122446 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.436395812 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.41194287 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.426606557 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.435300829 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.427557678 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.412075211 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.435950549 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.435040044 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.435944216 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.435731731 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.437675834 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.43729378 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.436746916 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.435641776 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.437936708 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.43564273 seconds)
  done (took 44.28895702 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.435563671 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.013271088 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.157182 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.435104504 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.429198225 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.433050514 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.720400769 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.438382121 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.431984584 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.43325345 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.910837473 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.439736929 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.463838327 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.172792621 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.434932497 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.437473945 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.43799945 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.430522981 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.022101029 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.43929025 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.717903566 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.439821715 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.722725012 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.439854569 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.433073773 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.431230809 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.435153823 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.243110787 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.451770255 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.911902106 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.218211962 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.721926387 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.177206434 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.213400271 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.221351209 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.446821449 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.439801514 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.921273353 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.433775306 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.430131697 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.718451686 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.432934781 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.180456003 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.103429547 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.450269107 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.439542733 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.283472208 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.917856939 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.678160484 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.437539502 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.206497181 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.436164343 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.442794025 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.43465777 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.678272539 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.436148301 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.433467843 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.289463956 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.438888375 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.720664683 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.442517309 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.432779132 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.021771407 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.434319231 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.017690029 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.435673493 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.440988574 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.435010086 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.171947252 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.437489204 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.119363607 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.45295233 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.44116418 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.913876388 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.017840452 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.321374842 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.436840867 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.028986908 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.20505563 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.737588833 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.443197853 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.240039551 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.740435309 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.437590131 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.442782775 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.443340616 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.441638665 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.50778383 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.719760044 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.056510626 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.133638276 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.301879749 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.726142872 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.447925856 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.435261449 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.291919214 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.442329769 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.442119362 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.169614548 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.125581097 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.453646167 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.442958742 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.103635783 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.455705077 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.72602784 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.441897021 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.215164256 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.438672437 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.509225098 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.443455366 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.4420768 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.439487506 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.724830751 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.4395513 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.445056155 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.102288457 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.944018551 seconds)
  done (took 199.741657537 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.433373284 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.432022352 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.433674201 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.431544978 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.432019315 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.440328824 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.431185433 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.43084837 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.436216436 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.431720605 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.430861429 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.44103947 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.436455306 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.431270565 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.432096015 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.432173887 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.431420943 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.448258148 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.430634864 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.430864508 seconds)
  done (took 45.994306214 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.446086838 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.998461573 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.971013305 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.451790013 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.445680417 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.437164483 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.494715356 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.44708503 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.447000986 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.738681809 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.614321805 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.452729953 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.446196625 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.446522563 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.973528122 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.423097322 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.73941238 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.997535224 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.448308011 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.00017798 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.422975782 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.446626322 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.439212593 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.00105817 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.750861625 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.728664502 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.499047439 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.00105423 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.448501258 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.447973054 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.999734236 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.449423841 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.441528249 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.990697889 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.448350138 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.463715092 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.447040965 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.500283916 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.49939396 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.744072834 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.007523237 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.740458045 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.460049884 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.622313466 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.449640838 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.423463941 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.014308181 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.450072757 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.424121085 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.450134278 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.452286922 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.989800139 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.44259275 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.990716702 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.450138161 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.448256538 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.00361076 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.989497575 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.979772455 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.616137335 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.441222782 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.731478993 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.450697197 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.015873907 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.451254864 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.449688045 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.449393728 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.618413841 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.008665845 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.733555287 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.74461858 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.744512958 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.450374999 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.510725117 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.452964395 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.745442092 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.50950145 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.835495429 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.749987404 seconds)
  done (took 130.406860838 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.705423036 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.563736589 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.81532082 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.03878595 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.951538573 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.580114017 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.557408931 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.684199685 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.452754155 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.535297711 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.088699581 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.558214439 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.204024956 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.515447539 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.553104946 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.572775903 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.849182471 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.43491691 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.089453635 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.060089803 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.452233196 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.555490037 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.966438135 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.632505517 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.443279692 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.021332742 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.405034099 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.96463267 seconds)
  done (took 54.572891927 seconds)
done (took 542.297445906 seconds)
SAVING RESULT...
DONE!
