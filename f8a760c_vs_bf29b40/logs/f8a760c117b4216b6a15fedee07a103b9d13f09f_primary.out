cset: moving following pidspec: 24742
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.521429333 seconds)
loading group "string"... done (took 0.519502377 seconds)
loading group "linalg"... done (took 9.05884243 seconds)
loading group "parallel"... done (took 0.178906709 seconds)
loading group "find"... done (took 1.30537086 seconds)
loading group "tuple"... done (took 1.931041362 seconds)
loading group "dates"... done (took 1.375149107 seconds)
loading group "micro"... done (took 0.196508668 seconds)
loading group "io"... done (took 0.514694265 seconds)
loading group "scalar"... done (took 51.644037057 seconds)
loading group "sparse"... done (took 14.221620093 seconds)
loading group "broadcast"... done (took 1.341999128 seconds)
loading group "union"... done (took 10.344418104 seconds)
loading group "simd"... done (took 3.112266877 seconds)
loading group "random"... done (took 11.732651782 seconds)
loading group "problem"... done (took 2.228440303 seconds)
loading group "array"... done (took 24.658765532 seconds)
loading group "misc"... done (took 1.155465005 seconds)
loading group "sort"... done (took 3.833083804 seconds)
loading group "collection"... done (took 19.57129346 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.631253122 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.129403943 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.270988059 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.291768969 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.243824161 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.162719616 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.147192522 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.270664256 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.678250026 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.211792265 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.138601626 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.502526755 seconds)
done (took 6.503834103 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.257969976 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.184042182 seconds)
    (2/2) benchmarking "String"...
    done (took 0.170929886 seconds)
  done (took 1.1214003 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.078147327 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.15764399 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.108620452 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.095912968 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094271899 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.11087445 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094467225 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.110004051 seconds)
  done (took 1.542175351 seconds)
done (took 3.770473109 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.521112082 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.89002611 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.514984562 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.149772691 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.322378992 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.307507581 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.321592066 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.206932278 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.108911767 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.09373843 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.179538563 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.407440654 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.442669329 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.959077582 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.093772935 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.100172839 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.136046685 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.785651709 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.085069247 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.126070814 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.495263094 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.1969528 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.10027833 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.126163639 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.18680326 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136358806 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.163357146 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.104330313 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.670580417 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.134094056 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.190506319 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.099209774 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.162160319 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.198039476 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.211268445 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.094741061 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.696628564 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.201904852 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.092578309 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.099542035 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.677563764 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.121006703 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.189870094 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.10564926 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.093866468 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.184206297 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.096318919 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.08018873 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.118531208 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.086262843 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.167210659 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.439734218 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.107506094 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.176027455 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.094930022 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.689930458 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.102108578 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.277337065 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.128640967 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.096264535 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.091980516 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.089768163 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.161306967 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.096186204 seconds)
  done (took 20.394992385 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.151752248 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.168571674 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.079235739 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.158274734 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.125352086 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.082654349 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.103098726 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.081240597 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.12866424 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.227756073 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.140946221 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.156653625 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094561074 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.093462782 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.130920907 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.25152503 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.109071615 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.124107339 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.092422959 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.093017285 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.14270869 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.097777067 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108704244 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.096484295 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.172169084 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.204986899 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111676768 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124473657 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.092681946 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.099181006 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142553889 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.150090841 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.093258486 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.090755005 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.191480671 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.109339482 seconds)
  done (took 5.409996456 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.204286393 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.126738087 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.216525972 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.168633252 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.146961894 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.17192369 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.15371808 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.289062729 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.212096697 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.164415125 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.132386405 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.108791311 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098046561 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.083733163 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.195620278 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.080515308 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.495110491 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.186248568 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.133102481 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.159824355 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.105851515 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.084790762 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.369581697 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102329401 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.082424199 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103136777 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.069013253 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.20279073 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089703612 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.107955017 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.086098403 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.112199354 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11820538 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.207795453 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.117414223 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.123047489 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105264601 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.083924604 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.22130197 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.094521501 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.097667779 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.111370444 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134151645 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.118933721 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.100230528 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.09701379 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.226224474 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.084589878 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.124607894 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.050470174 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.200423741 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.127094922 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.082874928 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.2934603 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.119871 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.089207937 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.082896204 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.250528015 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.118150438 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.086470541 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.097798065 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.089477074 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080044295 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.440273237 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.110610047 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.710979569 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.086789384 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.160577378 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.088052945 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.107766512 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088172388 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086695658 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.120741188 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.081966637 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.081696694 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.098726133 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.081829007 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.085780106 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.110766505 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.087808005 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.100288762 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.082280685 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.148145596 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.116419072 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.10311921 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125829119 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.088020795 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.081339922 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128172365 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084018923 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.085398936 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.169493413 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.089292237 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.110136102 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.087859765 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.146001458 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.083164355 seconds)
    (98/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.102372653 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.08487545 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.209351146 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.086082311 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.110132561 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.104603751 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129679585 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.104499941 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082140443 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.105538977 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.080985297 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081405689 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.163147527 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.083095989 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.084481988 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.084520782 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.11214872 seconds)
  done (took 23.156198955 seconds)
done (took 49.731618336 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.461715981 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.090603207 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.087776595 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.108236411 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.089164538 seconds)
  done (took 1.683656061 seconds)
done (took 2.501938629 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.334356038 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.199417074 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.103336666 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.196260972 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088090691 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.200808144 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.1880234 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.096503293 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.215137701 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.086909336 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.196195477 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.0865023 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.105417307 seconds)
  done (took 2.944068691 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.105372499 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113088887 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.121813387 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.106413327 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088033369 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102791594 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.119083127 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.114079342 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102525792 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.115509036 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086238323 seconds)
  done (took 1.99500174 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.103154121 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.108480611 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.099243408 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.119557021 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086322651 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100252867 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.118645088 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.111781548 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100419877 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.113995293 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086865969 seconds)
  done (took 1.972975593 seconds)
done (took 7.73005445 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.098391014 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.742274551 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.173582358 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.215617219 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.357675836 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.242611801 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.572589958 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.159671601 seconds)
  done (took 14.544822762 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.180458954 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.112275212 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.093096292 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.097069987 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.096877016 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.118482238 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.093448226 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.095969369 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.111870608 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.095619224 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.097336096 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.111579594 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.098521182 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.092192402 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.092735821 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.114097671 seconds)
  done (took 2.586403772 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.144829571 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.126282724 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.119248335 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.101633089 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.113847585 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.102232181 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.10299974 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.116615088 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.097492555 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.09616994 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.119330905 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.100647965 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.098475419 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.110421167 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.100104739 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.116224633 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.111902534 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.099978234 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.114976424 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.117945211 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.103159306 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097385426 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.116045071 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.101773745 seconds)
  done (took 3.538671703 seconds)
done (took 21.495063646 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.154341932 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.103220187 seconds)
  done (took 1.086466738 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.150170355 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.166646422 seconds)
  done (took 1.147898454 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.11597635 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.091955932 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.141810193 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.106486228 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.091898014 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.109103981 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.120879385 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.109974206 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.094124212 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.092085009 seconds)
  done (took 1.910716778 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.097798151 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.096359831 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.126269108 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.144410947 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.117908964 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.096868937 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.095926616 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.094638684 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.117712343 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.093537558 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.098609558 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.12866781 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.097626913 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.130163845 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.099070399 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.098110893 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.119732474 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.09772626 seconds)
  done (took 2.788497341 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.093224297 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.094996339 seconds)
  done (took 1.026154956 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.096834354 seconds)
    (2/7) benchmarking "second"...
    done (took 0.091985274 seconds)
    (3/7) benchmarking "month"...
    done (took 0.094331403 seconds)
    (4/7) benchmarking "year"...
    done (took 0.113479889 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.091501979 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.092352477 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.10857232 seconds)
  done (took 1.527362304 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.506276769 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.272295091 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.376174524 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.110439205 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.150663247 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.357337218 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.150759644 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.105194874 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.105052952 seconds)
  done (took 3.007883999 seconds)
done (took 13.329326067 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.095820692 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.222631021 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.644951891 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.116784008 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.208526942 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.165654459 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.296895634 seconds)
done (took 2.596628579 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.355839201 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.152051837 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.086626354 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.093013892 seconds)
  done (took 1.524348817 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.083584307 seconds)
    (2/2) benchmarking "read"...
    done (took 0.100011163 seconds)
  done (took 1.026284223 seconds)
done (took 3.393559611 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.124724968 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088889045 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.10957958 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.091886964 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.089444834 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.091077012 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.10924115 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.090647727 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.089308716 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.109522641 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.091053001 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.09058381 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.089826497 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106589869 seconds)
    (15/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.091348526 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091995924 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088442802 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107429091 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.09104519 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089463884 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107004895 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.091979487 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.091314395 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.089482893 seconds)
  done (took 3.188320533 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.116338622 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.092402228 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.111448116 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.09619464 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.09435117 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.111873967 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.095963528 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.092449666 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.112893214 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.094419833 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094439868 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.111580846 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.094410116 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.096591348 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090747075 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.112308596 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.095444264 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091673302 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110746934 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.095478144 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.094638268 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109181082 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.095654213 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094635152 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.112399042 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095659079 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.091706302 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.110408784 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095775859 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.094864881 seconds)
  done (took 3.850996725 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.102188331 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.088965004 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.089136233 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.116600927 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.088574679 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.092177917 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.105951398 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.089702946 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.092418606 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.088296172 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.11057122 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.090981423 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.087836839 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.109887115 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.093635079 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.09325328 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.117989213 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.088403046 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.08864055 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.091676104 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.111902733 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.088400582 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.091066994 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.10916233 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.091508817 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.089079591 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.091088543 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.107955845 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.09379784 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.089542334 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.110700496 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.096341004 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.092143087 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.119261603 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.096011254 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.091501994 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.096293918 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.107186092 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.095114629 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.088980681 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.104998547 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.09211822 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.089675393 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.097779685 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.110668745 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.094117283 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.088288157 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.108833658 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.093831426 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.096214415 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.088510419 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.106272745 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.094255773 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.09248254 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.112130457 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.089402494 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.09294896 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.105286852 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095220158 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.09005741 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.088398462 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.106474352 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096788263 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.091627802 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.123640662 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.098459541 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.088396115 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.111141259 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.09315241 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.09725018 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.111305023 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.103049991 seconds)
  done (took 7.884926259 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.106327006 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100448248 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.091379899 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.111644214 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091878519 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.091841002 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.115249411 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092235427 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091480101 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.116051992 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093430513 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.092473745 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108706516 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093370356 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092937287 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.092800632 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.115691264 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09240518 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.090632717 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.109768051 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092538976 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.097924873 seconds)
  done (took 3.031363892 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.237721288 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098395265 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.142702873 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.122855288 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.111281849 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.122344219 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.097343145 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.097093131 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113257513 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102019562 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101890842 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113494848 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.11187077 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.117232203 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10284524 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.103137811 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112129855 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.105211866 seconds)
  done (took 2.96521197 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.10717326 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.094024325 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.132840426 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.095588619 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.09477123 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.093200844 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.11884208 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.11723771 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.110850781 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.096238891 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.100908809 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110890596 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.096365744 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095900915 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094353754 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.114084174 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.095027622 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093861872 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11923468 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099068989 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.099172881 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.118813101 seconds)
  done (took 3.152573201 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.109059605 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.093506904 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.129309105 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.098589463 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.093142646 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.110524955 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.09989898 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.094035812 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.117820885 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.094573984 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094277821 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.092483654 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.126722058 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.094763246 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.099571839 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111385394 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.094715446 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.093062004 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111840773 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.094380601 seconds)
  done (took 2.905264617 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.178902582 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127769118 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.111816054 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11837497 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127942714 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.110758837 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11850845 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.129002199 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110687098 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.139128334 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110005744 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109218461 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.137678167 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11430238 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126982208 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119948669 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.117703764 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.137030124 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110376444 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12614163 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123539257 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.110278629 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.136226414 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.109721722 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.109658548 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.13016223 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109852961 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.132587491 seconds)
  done (took 4.300226979 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094253283 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.092970271 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.09293711 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.111253914 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.093751776 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.092066914 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.091430923 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.110852466 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.093301746 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.091602994 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.110629877 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.094368084 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.092958697 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.092525963 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.110629153 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.093343725 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09194579 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.110824505 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093414283 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092033226 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.09110017 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111383442 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.092252003 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091930244 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109287163 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.095137893 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091252276 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.092097874 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110556137 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.093217118 seconds)
  done (took 3.780224818 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.104700936 seconds)
    (2/2) benchmarking "in"...
    done (took 0.102470601 seconds)
  done (took 1.066815605 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.101339533 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107192737 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.091803001 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.111951037 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.100045245 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.091995821 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.120101307 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100763256 seconds)
  done (took 1.68692797 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.148706297 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.169941534 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.098893245 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.10488922 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.170426344 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.160993769 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.137864516 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.098459426 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.111706639 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.087144343 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.164053324 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.085821765 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.094695384 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.110671609 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.094973054 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.099920004 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.110739448 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.105914568 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.099947882 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.112618095 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.09993996 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100238319 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.114058046 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.105821488 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.087556308 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.114724855 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.098999823 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.105930242 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108360123 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.098367494 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.092678048 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.110607401 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.09979048 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.099569013 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.093545783 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.171009488 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101231896 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110395266 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.095580907 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099436403 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.149633495 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094279404 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.094766141 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.11147747 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.098759903 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.098375576 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.117631247 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.09526754 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.086047514 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.108506932 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.095651617 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089654266 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.110763249 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09836344 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.09445983 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.119074334 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.097560434 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.091211718 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.106301492 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.089901598 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.092530101 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.089204627 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.115048748 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.098172872 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094493336 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.113407216 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093319521 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.093954897 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.114581832 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.094797726 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.093080451 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.128650782 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.096357369 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.098044582 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.117955935 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.095007013 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090468191 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.117901493 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093996863 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.094181352 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.115482635 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.125369098 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094712086 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106944702 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.090591523 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.100461253 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.115457733 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.097897608 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.087488838 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121465725 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.097672628 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.09453831 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.086074105 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.110857539 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.09005999 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.09703363 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.106519496 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.095626528 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.09277055 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.118391147 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10025345 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.093283801 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.114338911 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100679663 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.100040632 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.111858215 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.144381252 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108914089 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.091665267 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.096642032 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.097873516 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.108449261 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.095264446 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.092608112 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110183214 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.091527313 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.098913563 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.113448489 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.09732659 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.098961303 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.115990187 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.097629514 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.096664425 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.110918597 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.093194093 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.099148594 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.119030508 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.097250719 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.098388026 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.094088275 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.113582927 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.094661469 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.098558115 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.111373717 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101231204 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091615242 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.111688708 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.095390116 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.098952289 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.114333191 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.091566484 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.093288997 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.112532811 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.094961559 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.097218059 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.113624696 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.090286388 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.085762062 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.112508575 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.091625923 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.095622634 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102812591 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.110470007 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.097178725 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.090055317 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.121815817 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.092788307 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.098654813 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.117388987 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.100047532 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.09893066 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.106013365 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.092653036 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.096779861 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.114670499 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.092344166 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.094631644 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.093756597 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.121304879 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.088138294 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.097973616 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.105673934 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.092045917 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.099030143 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.114204912 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.098198923 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.090330233 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.154187969 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.108306659 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10126096 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.113342827 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.097006497 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.097989847 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.11236671 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.099563418 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10223003 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.118780383 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.096313032 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.092735382 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099230325 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.11045617 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.098126115 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093439002 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.116057257 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.087994584 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.097313218 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.106335986 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.100370419 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.0969368 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.117937985 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.10204115 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.09711526 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.112117108 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106501885 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.091301004 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.116892752 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.089046724 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.10075956 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.104185641 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.120821429 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100752419 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095895889 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112018744 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.096625671 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102165638 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.11582906 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.096255124 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.094776059 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.106605318 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.089791528 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.101234404 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.116251854 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.0926751 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.095015321 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.096199926 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.117113249 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.092851276 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.087270263 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.118694484 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100033342 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.090738413 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114419099 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.092079487 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.093132093 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.120758979 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.087997153 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.091910712 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.115788319 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.102015439 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.094216703 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.113085671 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.10028962 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.100343324 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.116280495 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.098943972 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092424975 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103461559 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.113762222 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.094141521 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.090626699 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.116085986 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.088599249 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.094849358 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.113588824 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.092777144 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.091384023 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117133061 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101541404 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.101589645 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113415359 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.10032108 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.101103425 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.118824588 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095242123 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.101013065 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.089523145 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.107254574 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.091675689 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.087606498 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.115717373 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.092962404 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.100515078 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.112142451 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09566652 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.099424036 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.116642679 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.094740025 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.100766538 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.125958751 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.089839141 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.088691554 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.111955485 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095830123 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.090987906 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.110693745 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.097754143 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.098036479 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.117263297 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.099699599 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.092375247 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.093314491 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.120618286 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.092141466 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.102448231 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.118742396 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.101456531 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.09032193 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.119843094 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.093300516 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09944485 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.107997251 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.104521387 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094292144 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113787063 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.094507802 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.093565877 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.110450789 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.090368298 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.09091201 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.119855841 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.094611403 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.099126306 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.112032712 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.094277883 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.092187441 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090390032 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.120829243 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.093566882 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.100636732 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.116088062 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.08987118 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.089178383 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.120284601 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096389628 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.101301049 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.109947247 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.100329077 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102823878 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.100703908 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.115868985 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.104023703 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103985745 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.119725312 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.102189692 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.087619058 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.112465479 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101385192 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.094682861 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.115962329 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.097867299 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.088115954 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.118858434 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.103394299 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.097178308 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.113813722 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.091053417 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.095434432 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.100903519 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.119021541 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.099719741 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.09739249 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115532284 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.092467467 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.097806502 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.119763091 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.097130064 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10135061 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.11306795 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.100369286 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.091322972 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.119467935 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.097419374 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.089715025 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.088076621 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.112493018 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102573911 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.089170317 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.118766076 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.099957091 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.091621132 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.112872054 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.101711185 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.091286546 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.117226604 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102843517 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.092792384 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.122382162 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.097764346 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.093419039 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.099869663 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.119885535 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.089717263 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.093998156 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.114339309 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102880385 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.093298433 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.119126757 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096640886 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101004174 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.116424642 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.102407741 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.100656826 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.100475956 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.109337529 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.102379792 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09893199 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.118239299 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.093055164 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.094639423 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.111087395 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.094867568 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.101158098 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.112265996 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105300858 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.10230347 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.112550632 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.095128855 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.102050206 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112993046 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103865819 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.092671346 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.116562262 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.090980532 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.098331447 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.094461153 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.124327046 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.093134551 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.089625033 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.122385648 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.101320358 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099695357 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.118553531 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.103586281 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.090311646 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.10811212 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.0999248 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.093007068 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.124896384 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.102409279 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.093863997 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112967196 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.100234313 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.097957063 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101657162 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.111011296 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.092888843 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.09621049 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.117026062 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.094621749 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.090337762 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.120192601 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.095958255 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097436083 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.113861381 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.091721329 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.094627326 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.12073375 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.094995849 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.090647016 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.111930197 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105986695 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.095224649 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.092317902 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.110249462 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.102481541 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.097336596 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.121925864 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.093312468 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.095561199 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.114137385 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.098518236 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.103278236 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.114152673 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097158274 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.093591261 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.120829551 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102632643 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.088231243 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.112731269 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107787117 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101665533 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.119239613 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.098726356 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.095573844 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.12151564 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104984847 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.099198313 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.089347444 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.111190392 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.096193231 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.089968643 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.118262917 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10298695 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.095016965 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.114638801 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102537168 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101242524 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.117969587 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.100452426 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.090441956 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102376286 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.113399612 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.101144032 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.090247493 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.110225293 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.100008574 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103000215 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.115475724 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.098571426 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.099154359 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.117379111 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.092526468 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.093694709 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.119104319 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103142716 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.102143418 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096668126 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.115885054 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.099842121 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105903025 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.117816052 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.096966936 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.104634611 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.122664674 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097982486 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.095573148 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.120711048 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.103581394 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.099069282 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.123581881 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.095135034 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.095456926 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.123248582 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.105150757 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.106365834 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.115667479 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.091079116 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.101965428 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.113115984 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.093035882 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.100980158 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102961872 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.123651268 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.0968715 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.092701324 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.127108921 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103586643 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096206179 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.114129338 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.095115316 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.099561968 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.114725912 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100543554 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.092790356 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.124624725 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.105560384 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102163853 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.12599593 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.092056962 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.102846844 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.119150627 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.106495225 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099057835 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.090206345 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.111984715 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.100565113 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.103365028 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.122733833 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.101542741 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.101587484 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.119810275 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.099762278 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09753264 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.113444423 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.107281581 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.103589266 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.097902156 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.119107499 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.09723169 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.09728078 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.118739296 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.104115932 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.104369345 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.119764469 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108403157 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.10270574 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.11563235 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.095978768 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.09733982 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.118669822 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.100171389 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102197096 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.09283007 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.111939354 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.104018483 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.10332235 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.117859188 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10592474 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10434641 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.116166207 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.100911383 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104710064 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.122483313 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099241446 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.098516271 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.120157968 seconds)
  done (took 62.699336613 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.15100238 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10474783 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.119407919 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100622082 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117834055 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120525416 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101409462 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098705949 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.120743486 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109990565 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.099545488 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119739851 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116242745 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.138944892 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119861238 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109612646 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119178655 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102101722 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097974127 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120431993 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.11703193 seconds)
  done (took 3.316955559 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.119876586 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.113987786 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.130244504 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.114609993 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106051124 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.132031409 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.111027408 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.130722327 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.114494317 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107615026 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.134666601 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112192385 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.12831992 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.108909819 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106942601 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.129331949 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.114676115 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105711221 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.134397434 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.110725654 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.127323928 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.112572583 seconds)
  done (took 3.522689274 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.110575124 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102676063 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.101485145 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.118958554 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.10333606 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.099134911 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.127310058 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.10203666 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.109127928 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.116997671 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.094461091 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.098007993 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.121965226 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.100016104 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.093738748 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.099966566 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.129521664 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.103665744 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.105599903 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.11957715 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.11137606 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.098755937 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.12061932 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.093510459 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.109843105 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.124806463 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.101871565 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.102642854 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.091737954 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.124270401 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.100894308 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.097202491 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.119613828 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.093580417 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.092413861 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.123696808 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.103541487 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.099432985 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.118869491 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.100346331 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.101074981 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.103829885 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.122328862 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.100861634 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.09989425 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.117426301 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.103936636 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.098517792 seconds)
  done (took 6.051908853 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.132453786 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.167872386 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.106355673 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.140179585 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.137815031 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.109318133 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.103490643 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142873043 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.101303714 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.124944248 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.117060312 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.114898809 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.127743507 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.108345383 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.126288329 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.105958065 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.106265056 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10396754 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.129978365 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103480041 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.127879317 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.108035831 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.113699396 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.135477793 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.10842314 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103145518 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.124156779 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108194413 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.113085801 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.131237695 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.108327294 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.127618752 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.351329547 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.107426076 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.125473457 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.107981194 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.11566181 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.126412376 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.105946678 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.102832029 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.126800733 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.10800959 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.105628051 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.137379221 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.106243048 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.106106202 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.126506172 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.103170203 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.112285716 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.127481822 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.111708432 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.137321266 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.1077081 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.104395761 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.127209583 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.115247808 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.104898269 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.123348888 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.105724777 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.111734096 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.123227388 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108514249 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.133119779 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.104954366 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.109931288 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.135016751 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.108108244 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107019388 seconds)
  done (took 9.258329322 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.138708085 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.108357675 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.136743589 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.117425125 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107710857 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.130246639 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107743743 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.105997477 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.129950784 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113208011 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.127489159 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.208823003 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.12599126 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113844624 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.10658578 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.128940403 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.108184422 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.106247612 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.127787157 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107569456 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.127227143 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.117725492 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106919942 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.134784088 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12049125 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.103141107 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.128224042 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.109520381 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.133599952 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.108412611 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.119449325 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.12801172 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.109422103 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.114470919 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.140043359 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.106877619 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.121519782 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110164545 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.107787364 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.128785335 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.10606431 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.115327949 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.129202055 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.107358277 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107349781 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.128921191 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.116592939 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.140781306 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.1150666 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.112391114 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.128855398 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.117664532 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.108451983 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.130590433 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.118449133 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.144233194 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11899743 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.13632617 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111245863 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.11701447 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.138802205 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.124006493 seconds)
  done (took 8.436025443 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102925555 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101465305 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.100209371 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.122581646 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.10321866 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.100204457 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.099639599 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.12361713 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.102857232 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.10093233 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.121951614 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10220292 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101491562 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099739895 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.122494561 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101475857 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099220241 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.121160813 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102774503 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.10142943 seconds)
  done (took 3.062568207 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.113192006 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.119274638 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.123449272 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111023869 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.104521707 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.128550981 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.102955155 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103828173 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102768582 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.125965263 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.112449601 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.131435122 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104817324 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10891846 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.131145139 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111564361 seconds)
  done (took 2.768263095 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.124068458 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.1201792 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.195887373 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.106065648 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.12587331 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.112882777 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.103641262 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.126661227 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.104505715 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.109747885 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.108093868 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.12940207 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.103664907 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.104016369 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.126028226 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.108171189 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102184351 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.128593073 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.10555604 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.19346758 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.109738076 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.105070734 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.126588976 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.108999464 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105045938 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.128448773 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.111828375 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.104348638 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.125726421 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.106320163 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.105275015 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.130839798 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.105301948 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.108351917 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.104583336 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.127497406 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.105247373 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.105898405 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.128224064 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.105429386 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.10545689 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.12640735 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.106209264 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.107424684 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.121940117 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.1064186 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.10330651 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.130951553 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.107949552 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.107143725 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.103710525 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.13343702 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.110199056 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.112658815 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.13359521 seconds)
  done (took 7.349254561 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.115968295 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.104921439 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.137423354 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103486897 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.105500868 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.106285489 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.126586018 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.106982291 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105120424 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.123978128 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105801267 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.105061337 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.125368463 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.106115501 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.105250524 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.125601124 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.103901389 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105043678 seconds)
  done (took 2.955519969 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.110714218 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10371042 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.108157111 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.126660486 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.103344108 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103102735 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.124318619 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104288113 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103694437 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.124939703 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105312801 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.104694834 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102909596 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.126909015 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104505923 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102566083 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.124719648 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104128354 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.104209967 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.123476236 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.107549398 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104125386 seconds)
  done (took 3.369030079 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.115562996 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.187246079 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.110606783 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.197920116 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.101089361 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.099687957 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.131400987 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.101756849 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.116384017 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.12125009 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.100821075 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.099221444 seconds)
  done (took 2.423538362 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13439057 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14335866 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.12616509 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106310529 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112116756 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130332648 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110041793 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109371157 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139569889 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120712224 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129891599 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118338455 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116411323 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139355762 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113476163 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132790532 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111707104 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10919686 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125756278 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125962721 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108875538 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13804505 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109746205 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130078591 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11261838 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118581794 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138235485 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122923239 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108390015 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138593219 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113674094 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130882475 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118260923 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120901643 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12698861 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117457795 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129494565 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124926903 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112243022 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138740555 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105888891 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11254487 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139751042 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114872053 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137739632 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109120245 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113174442 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131953772 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11026067 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.151394717 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113951397 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1171539 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135719196 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117813044 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137305248 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131853551 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.14128837 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118326438 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114700745 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.142885627 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115999172 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135070352 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118424436 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141989232 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115261684 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116666636 seconds)
  done (took 9.10051949 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.147387102 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106307311 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13061727 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12230409 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138033927 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111038279 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109522526 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13159633 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112521723 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106686255 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.176690652 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110147079 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141432029 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120537723 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109261585 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130303866 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110424074 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117022325 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128885451 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132883827 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131129778 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120363099 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117501807 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140395428 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121844289 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134555341 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110840332 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109585518 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132041269 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110596713 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116174389 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131458431 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117686371 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.126563728 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120210728 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110227915 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13131814 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115359915 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109396618 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137299632 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119339968 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.146611543 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110478132 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109210297 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144010019 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10980465 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110666101 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130127515 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109990453 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105910402 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143399033 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121959461 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.144206406 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118704545 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131437032 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110459535 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110654591 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131465878 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1122371 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113446332 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141444178 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111131838 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152513831 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111306309 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108851156 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140519581 seconds)
  done (took 9.088489027 seconds)
done (took 172.058187608 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.154980665 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.193879097 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.149306583 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.182298023 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.096512117 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.132099954 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.151393218 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.152483113 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.094810584 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.118981389 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.096088457 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.099363893 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.186700303 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.096126627 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.095625924 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.122564171 seconds)
  done (took 3.065922611 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.196665969 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.313535454 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.11208062 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.121963581 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.105228807 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.103010752 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.122395674 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.103760738 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.100496082 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.129145008 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.104671315 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.098357828 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.129571481 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.100225202 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.100513436 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.125478959 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.109938592 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.102282883 seconds)
  done (took 3.231571462 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.123843976 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.145160797 seconds)
  done (took 1.225372535 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.135752158 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.200779232 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.279460651 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.174049979 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.12523494 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.141012334 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.154567182 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.135660692 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.184148969 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.13669911 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.116313463 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.101930197 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.149722737 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.107962894 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.137898359 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.103707007 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.129790647 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.138583243 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.11747162 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.103720795 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.143896604 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.105829755 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.106641426 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.136925153 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.172757993 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.136023893 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.104264893 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.103275152 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.126127042 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.116378428 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.106779445 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.139062208 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.114929836 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.177322791 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.10734987 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.174440902 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.130375888 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.103303787 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115737829 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.122955327 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.107362288 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.104808565 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.13875331 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.103262774 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.10403653 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.13179248 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.105550292 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.104340616 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.132400902 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.111062701 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.129720903 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.110134694 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.172564167 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.111773756 seconds)
  done (took 8.040301429 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.864459697 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.144258482 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.102415548 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.013924398 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.151773621 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117242553 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.862111377 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.147882551 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.258218066 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.878277882 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.118549085 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.136253917 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.243570473 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.237433763 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.0536019 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.33530393 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.715783355 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.117903917 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.130329046 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.167605264 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.111537176 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.14986445 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.121840108 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.422230225 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.102562292 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.123018851 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.11126523 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.115433721 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.180831069 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.101983568 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.127463143 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.196246839 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.245556464 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.209614808 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.124145748 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.101282838 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100256697 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.185378132 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.273037969 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.221153715 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.187313837 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098241896 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.099802151 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.132600759 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121090499 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.120268398 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162439907 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.191649067 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.192887301 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.105310456 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.137032412 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.111920193 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.130176001 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.159981451 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.121171567 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.336934458 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.332888177 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.100369417 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132127953 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.118203924 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268045513 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.122638031 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.237050175 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.129814107 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.217282934 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.122370085 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.809257533 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.163872843 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.122225367 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.109228942 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.107701564 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12961471 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.110388719 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.184415455 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.37529401 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.136132028 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.10569239 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121660282 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.225013583 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.12546472 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.102143757 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.184913701 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.103082535 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.130984931 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.117210948 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.114187311 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.191401961 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.251866773 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.112872682 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.134096266 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.108085291 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.134802021 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.109138068 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.234823582 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.232408037 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.178051265 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.21450159 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.133705997 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.184152883 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.162935346 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.131841722 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.186769126 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.111080692 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.116242303 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132650352 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.228482263 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.135065083 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.126086113 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.106378487 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.131114393 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.142222479 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104010105 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.133726791 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.186466858 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.438521895 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.185652165 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.098497015 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.129658437 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.111713676 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.184825309 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109511882 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265485323 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.133324629 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.16280871 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.132319155 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.099238475 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.130227435 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.165213053 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.134198061 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.111006562 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130349989 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.115459994 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.255688927 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.225274461 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115566111 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.244722606 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.192836368 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.109506627 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.192885311 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109347725 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.189963956 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.131776598 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.111398225 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103283544 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.802143792 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.137413532 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.111309916 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.106695166 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.209058023 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.102299637 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126322358 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.103748956 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.098691036 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.802030005 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.125829302 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.101869129 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.10280032 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.131062317 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.111370806 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108697897 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.130393187 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.181311386 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.245573074 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.115564137 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.130822713 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103657562 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.18151739 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.104280508 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.102675722 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.123328693 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.104440388 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.111372347 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.128252798 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105278479 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.194216614 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.157114042 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.255491945 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.529333311 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.103324614 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.101085187 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.241062637 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.12436417 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.311392063 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110479593 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.235312707 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.18954458 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.121635176 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.331594056 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.189219076 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.187471526 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.103527559 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.191474436 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.121137107 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.111987897 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.182163441 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.104199218 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.108590784 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.179724791 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.138246323 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.116755014 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.033698039 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101614149 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.252032192 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.120342297 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.167005905 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.12485363 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110746537 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.303123132 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.123575947 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.122413513 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.18291918 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.107731962 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.102529961 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.603119188 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.12498712 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114603489 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110733029 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.25884465 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.166620164 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.13369886 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.112693424 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.138255597 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.16163183 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.23385221 seconds)
  done (took 45.937926495 seconds)
done (took 62.449768811 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.298514891 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.260391341 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.307222856 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.212959161 seconds)
  done (took 2.128814154 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.269882916 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.163347209 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.241062048 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.100827832 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.250902375 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.100099827 seconds)
  done (took 2.107263752 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.492480177 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.377716801 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.312465625 seconds)
  done (took 2.170018836 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.260061792 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.250644093 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.356185055 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.415194558 seconds)
  done (took 2.382270268 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.3089169 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.1332147 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.128880403 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.217339044 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.259269165 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.233642912 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.15250414 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.199694865 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.156684401 seconds)
  done (took 2.822789599 seconds)
done (took 12.591743368 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.380582439 seconds)
    (2/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.309973963 seconds)
    (3/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.349904132 seconds)
    (4/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.183806025 seconds)
    (5/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.325571474 seconds)
    (6/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.346172346 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.145162654 seconds)
    (8/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.363527583 seconds)
    (9/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.2313686 seconds)
    (10/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.18863441 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.114302749 seconds)
    (12/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.361357404 seconds)
    (13/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.230124742 seconds)
    (14/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.137779288 seconds)
    (15/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.254051239 seconds)
    (16/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.243981738 seconds)
    (17/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.113546469 seconds)
    (18/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.218137997 seconds)
    (19/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.11343233 seconds)
    (20/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.134094437 seconds)
    (21/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.13846524 seconds)
    (22/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.200372309 seconds)
    (23/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.173609427 seconds)
    (24/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.223821499 seconds)
    (25/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.114237686 seconds)
    (26/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.244500015 seconds)
    (27/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.110645009 seconds)
    (28/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.131100058 seconds)
    (29/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.218059474 seconds)
    (30/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.131784924 seconds)
    (31/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.159936159 seconds)
    (32/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.084866068 seconds)
    (33/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.324272301 seconds)
    (34/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.164515802 seconds)
    (35/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.192201895 seconds)
    (36/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.203259955 seconds)
    (37/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.185515894 seconds)
    (38/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.335525714 seconds)
    (39/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.194546259 seconds)
    (40/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.213789623 seconds)
    (41/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.130475663 seconds)
    (42/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.294128984 seconds)
    (43/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.088390773 seconds)
    (44/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.241357936 seconds)
    (45/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.1138373 seconds)
    (46/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.187921299 seconds)
    (47/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.107977184 seconds)
    (48/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.084995735 seconds)
    (49/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.154777303 seconds)
    (50/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.178228704 seconds)
    (51/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.08428851 seconds)
    (52/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.083769809 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.136581834 seconds)
    (54/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.221269732 seconds)
    (55/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.106844598 seconds)
    (56/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.107586486 seconds)
    (57/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.085126162 seconds)
    (58/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.237036103 seconds)
    (59/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.131422062 seconds)
    (60/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.198762291 seconds)
    (61/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.087640955 seconds)
    (62/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.129992065 seconds)
    (63/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.083348299 seconds)
    (64/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.108067151 seconds)
    (65/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.212461755 seconds)
    (66/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.131681369 seconds)
    (67/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.190246075 seconds)
    (68/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.105847666 seconds)
    (69/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.085474142 seconds)
    (70/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.107913645 seconds)
    (71/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.234134907 seconds)
    (72/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.218874989 seconds)
    (73/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.107347207 seconds)
    (74/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.131028282 seconds)
    (75/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.08315428 seconds)
    (76/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.083954208 seconds)
    (77/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.172135833 seconds)
    (78/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.155978784 seconds)
    (79/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.088814506 seconds)
    (80/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.151588003 seconds)
    (81/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.106586473 seconds)
    (82/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.192591173 seconds)
    (83/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.195145784 seconds)
    (84/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.18479672 seconds)
    (85/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.092378525 seconds)
    (86/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.180288933 seconds)
    (87/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.106851258 seconds)
    (88/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.130115193 seconds)
    (89/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.137386838 seconds)
    (90/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.137004163 seconds)
    (91/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.10869 seconds)
    (92/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.12769323 seconds)
    (93/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.139209403 seconds)
    (94/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.169085665 seconds)
    (95/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.08362973 seconds)
    (96/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.107771847 seconds)
    (97/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.084469329 seconds)
    (98/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.085125726 seconds)
    (99/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.083886967 seconds)
    (100/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.083503056 seconds)
    (101/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.126265242 seconds)
    (102/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.10294108 seconds)
    (103/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.11211241 seconds)
    (104/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.087978844 seconds)
    (105/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.143085735 seconds)
    (106/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.115701577 seconds)
    (107/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.238817591 seconds)
    (108/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.10935044 seconds)
    (109/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.129263756 seconds)
    (110/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.170423666 seconds)
    (111/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.108787522 seconds)
    (112/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.19533904 seconds)
    (113/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.1085056 seconds)
    (114/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.085654096 seconds)
    (115/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.107130863 seconds)
    (116/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.084086391 seconds)
    (117/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.138494127 seconds)
    (118/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.113874185 seconds)
    (119/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.08320057 seconds)
    (120/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.145067576 seconds)
    (121/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.140638633 seconds)
    (122/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.084554508 seconds)
    (123/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.110871644 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.132881292 seconds)
    (125/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.102070424 seconds)
    (126/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.118837831 seconds)
    (127/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.107563194 seconds)
    (128/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.089253432 seconds)
    (129/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.084836907 seconds)
    (130/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.084784702 seconds)
    (131/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.083848054 seconds)
    (132/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.105810173 seconds)
    (133/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.084764983 seconds)
    (134/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.107685121 seconds)
    (135/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.084171508 seconds)
    (136/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.130326143 seconds)
    (137/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.103366704 seconds)
    (138/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.198198168 seconds)
    (139/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.108240684 seconds)
    (140/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.085636283 seconds)
    (141/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.140398728 seconds)
    (142/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.114501053 seconds)
    (143/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.153563154 seconds)
    (144/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.129756393 seconds)
    (145/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.084405998 seconds)
    (146/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.107820972 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.109482114 seconds)
    (148/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.083561072 seconds)
    (149/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.101544436 seconds)
    (150/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.139348967 seconds)
    (151/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.083467173 seconds)
    (152/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.083697794 seconds)
    (153/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.086401111 seconds)
    (154/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.125733874 seconds)
    (155/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.113613499 seconds)
    (156/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.083455983 seconds)
    (157/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.082630254 seconds)
    (158/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.1314933 seconds)
    (159/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.114574736 seconds)
    (160/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.083393481 seconds)
    (161/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.088446477 seconds)
    (162/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.107081069 seconds)
    (163/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.109271789 seconds)
    (164/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.103565872 seconds)
    (165/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.220524051 seconds)
    (166/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.113535764 seconds)
    (167/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.08530488 seconds)
    (168/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.111869582 seconds)
    (169/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.109448622 seconds)
    (170/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.085062578 seconds)
    (171/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.11374209 seconds)
    (172/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.155217967 seconds)
    (173/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.105165902 seconds)
    (174/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.107599722 seconds)
    (175/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.083490845 seconds)
    (176/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.129630231 seconds)
    (177/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.15454369 seconds)
    (178/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.106818809 seconds)
    (179/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.106864626 seconds)
    (180/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.085519487 seconds)
    (181/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.109015791 seconds)
    (182/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.083622676 seconds)
    (183/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.130206122 seconds)
    (184/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.084061899 seconds)
    (185/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.128567969 seconds)
    (186/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.112936556 seconds)
    (187/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.106575003 seconds)
    (188/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.107894427 seconds)
    (189/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.145032561 seconds)
    (190/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.138499171 seconds)
    (191/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.09003892 seconds)
    (192/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.084791612 seconds)
  done (took 28.319048532 seconds)
done (took 29.309352177 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.221092047 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.129846185 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.113145152 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.111543166 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.210065138 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.11886331 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.149744098 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.11555228 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.121481305 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.137892499 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.103465105 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.122994673 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.133840373 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.185860379 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.137854131 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.106443315 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.104204114 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.119754819 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.149436712 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.126056167 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.211941995 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.106482511 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.119814868 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.128686036 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.184537595 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.130379574 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.109406738 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.109558473 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.146197811 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.11330696 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.109805032 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.127927599 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.125092546 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.12260923 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.126806128 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.113871901 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102269972 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.089318781 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.138376966 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.115047616 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.12125751 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.139010377 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.112943609 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.103951749 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.139029096 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.114364175 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103454432 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.138567988 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.103627315 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.111154818 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.129596768 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.125597072 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.1118421 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.125678822 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.103921466 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.104611055 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.142150269 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.10568636 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.123711236 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.103096752 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.13034033 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104183277 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.115411426 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.127204729 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.114500628 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.103375929 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.136426252 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.117771596 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.113005773 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.129053744 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.105667669 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.111628886 seconds)
done (took 10.053543519 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.110203087 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.14977443 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.206383356 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.218656287 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.131817816 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.142783047 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.120705829 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.12784384 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.140321329 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.124582395 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.141500304 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.161052145 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.188880046 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.145542853 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.11850243 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.115832638 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.141629393 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.113480192 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.217268821 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.128494898 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.155330559 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.121797005 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.133493009 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.1458198 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.108712742 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.138366688 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.136562737 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.117823863 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.107215931 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.141626888 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.129201915 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.106924306 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.134256682 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.127676317 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.148456374 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120281715 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.119285602 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.138530626 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.110207641 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.108303768 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.140177363 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.126079507 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.107627439 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.143257973 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.117734958 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.123061271 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.141054507 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.122892972 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.108599884 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.139504704 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.111403174 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.1363092 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.144907667 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.126066561 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.119420145 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.145062649 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.124538446 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.121266109 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.1353971 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.122160332 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.108216397 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.131560976 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.111113121 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.129876489 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.136197383 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.122073446 seconds)
  done (took 9.817742211 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.129348652 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.13976901 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.141767153 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.120217267 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112306629 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.125831306 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.101811715 seconds)
  done (took 1.916861421 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.105193676 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.219759954 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.191370207 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.21392404 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.213502407 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.201505086 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.153255981 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.104304407 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.13804551 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.138343984 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.192681605 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.247709574 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.138040739 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.120842679 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.217658327 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.10348201 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.219640537 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.104779061 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118305404 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.216103314 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120445462 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.160294076 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.117409406 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.103109285 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.214899521 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.104275494 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.26869546 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.146146964 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113971258 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.11784841 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11796402 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.207664845 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.215512332 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.116903499 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.111165784 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.214708149 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.213233027 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.117170316 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.228655617 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.108011517 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.216332894 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.117693378 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.143998585 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.121300095 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119062567 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.201433234 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.121951089 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.142323644 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.120258486 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.221624227 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.117153902 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.215917761 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.117549432 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117871879 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.137875374 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121123929 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.126597024 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.141798624 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.201014827 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.145281566 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.19007843 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.21370965 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.215552097 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.190656213 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.153602846 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.195915487 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.211128322 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.117018559 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.137032683 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.12119964 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.216223767 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.118433501 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.115181013 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.204713687 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.122004063 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.219992014 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.216433839 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116640728 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.114900196 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.132623829 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.119024902 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.104585306 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.206051774 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117926703 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.140342807 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.124317159 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117254367 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.143674301 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.111035386 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.125336075 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.143726529 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.115771336 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.123331368 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.145667862 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.121892516 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.220394974 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.114703396 seconds)
  done (took 16.109609167 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.110677232 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.105925388 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.110460907 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.13136085 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.105599365 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.105242857 seconds)
  done (took 1.729473737 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.146018772 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.120418365 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.152946738 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120828402 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.171055969 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.225009988 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.227338261 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.112705817 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.161242191 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.130627461 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.224587013 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.200851188 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.227015683 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120932586 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.228591463 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.14569898 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.206584035 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.142027092 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.130732753 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.118117632 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.144011718 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.124241708 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.116993777 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.217028095 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.120628698 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.146097888 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.114702079 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.128677785 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.154078109 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.115179985 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.123651249 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.146758386 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.112546022 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.11306986 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.231169037 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.136092766 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11798334 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.123448175 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.145944495 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.122141717 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.230115482 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.118910463 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.125526011 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.147822243 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.115264624 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.111009601 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.149100049 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.114494789 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.231589208 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.124069967 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.14822642 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.124313645 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120530736 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.147082122 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.113800311 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114142424 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.148260887 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.206447724 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.15026593 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.112484715 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119847774 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.147071951 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.11515855 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.149154994 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.12298359 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.123550251 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.136302802 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.125246832 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119082592 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.145231084 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.1261741 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.120765449 seconds)
  done (took 11.535875664 seconds)
done (took 42.144360067 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.542614286 seconds)
  done (took 2.597901201 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.911011796 seconds)
  done (took 1.971509122 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.637463486 seconds)
  done (took 18.730408543 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.523989897 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.60465514 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.029980872 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.156880493 seconds)
  done (took 3.375545805 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.010560268 seconds)
  done (took 2.084345577 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.303313632 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.271601348 seconds)
  done (took 1.638409947 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.743186645 seconds)
  done (took 1.817603189 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.533866017 seconds)
  done (took 2.601597888 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.355033562 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.181161315 seconds)
  done (took 1.620684775 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.630792594 seconds)
  done (took 1.714458084 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.970885023 seconds)
  done (took 21.057495828 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.244017703 seconds)
  done (took 1.327321984 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.287893652 seconds)
  done (took 1.375095575 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.498047807 seconds)
  done (took 4.582529248 seconds)
done (took 67.561086693 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.117416704 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.119530459 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.118192646 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.143448104 seconds)
  done (took 1.570206717 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.126591608 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121266468 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.146935604 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121487029 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126219842 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.12010266 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.143978413 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.121895704 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.118422102 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.147940255 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121945579 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119036904 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.148353947 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.121242242 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.117164501 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.148778784 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.125984359 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.12007916 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.144193701 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.120431598 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.120338807 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.148035083 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124238157 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.1224009 seconds)
  done (took 4.176680215 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.1170415 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.109576405 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.110584479 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.133089312 seconds)
  done (took 1.55449596 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.128243924 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.133605344 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.154994394 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.128824723 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.132654813 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.156060985 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.119449179 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.116273986 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.142934193 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.128210368 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.135884915 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.15921028 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.132651162 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.120447508 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.155990265 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.114627814 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.120792467 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.156324024 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.12674769 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.151385893 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.121616772 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.126535756 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.149335674 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.131568668 seconds)
  done (took 4.324463593 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.193889424 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.131293783 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.169645548 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.163720872 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.171300655 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.118127281 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.141522884 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.15211114 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.124792165 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.121857812 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.148166134 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.165767289 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.14987674 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.121419526 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.121592192 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.150018569 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.1324997 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.12503187 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.185902368 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.122046938 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.15181222 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.132400159 seconds)
  done (took 4.284758916 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.122694315 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.109268414 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.129224718 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.111411817 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.122138457 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.135810402 seconds)
  done (took 1.823791039 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.111219544 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.103713418 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.10398711 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.128630299 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.109818783 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.104631647 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.127666888 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.105342112 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.104302862 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.104194099 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.130048737 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.104745677 seconds)
  done (took 2.424818432 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.336738486 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.110831906 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.135675833 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.113444541 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.115234864 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.107210534 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.147285995 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.109071841 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.275192829 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.104880796 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.144632066 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.202433517 seconds)
  done (took 2.995027636 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210855293 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144847829 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.301546161 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.368677611 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168723552 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.189874065 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.27152238 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193689626 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.208416513 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1392552 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247047204 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156317682 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178994241 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176334349 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165950724 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.157039343 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197250093 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192072386 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176662599 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227098376 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158857555 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193872589 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18233553 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17855557 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136547954 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191262555 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.122645248 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128260962 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196439354 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190501336 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17347817 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173829472 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14523298 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221236135 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261377352 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172952536 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.315190153 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135792406 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.196258577 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.18665775 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.259054167 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164522791 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189875425 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183146513 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130460364 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206464882 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154322771 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.203662612 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.132051051 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168390865 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182312181 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20396112 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.205556797 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139035567 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.31666415 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165456199 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.170705204 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173092836 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210618562 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216944428 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167485017 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.148973133 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184117946 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20971657 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206191164 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.143712103 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.191079282 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126724317 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192261214 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.196316768 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210056847 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15804135 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.227264165 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159414697 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158733385 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.201764344 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17932726 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204669952 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159673512 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.147431038 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152092309 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160948964 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128395008 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.201112198 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148842336 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200906943 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160394385 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.339256022 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188008413 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18394924 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18564358 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162061573 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185939093 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148845482 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.105334623 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173834336 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.165005306 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185520349 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133742481 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182611162 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139136849 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.154240904 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154868059 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.122174077 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186514328 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.12871219 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193421875 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160463732 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.159512379 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166973124 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176289627 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.155015328 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196948631 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185096615 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158973427 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133523501 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218975854 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159311687 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.160049295 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178363405 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.212748585 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.143240134 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165208006 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165453851 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216563592 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142107053 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217999238 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162232867 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137537452 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.140150003 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188506499 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159477417 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.180669018 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127922434 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.179495009 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198361611 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.155276423 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137163856 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196555777 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134108539 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151398849 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14000723 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135063717 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.168587441 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.145869406 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.161145691 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156136431 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183474015 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156992159 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181763916 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135876248 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207310692 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133373986 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.186498128 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148493129 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.119626604 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.20186494 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212969595 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130616297 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230981091 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.164649915 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220140431 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187640286 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132171445 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.206673389 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129569167 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.121055378 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191053014 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15659893 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190124395 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.207306577 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190014532 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.195325594 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.177100481 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149773727 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194764794 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.177933497 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180994333 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.144802232 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185571052 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167053339 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.146459768 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.126002946 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.127366549 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16427244 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132204439 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135832096 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204558378 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192087259 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.211203995 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16043075 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139809518 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.210551925 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.126580232 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188492115 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.192037029 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142312734 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.208211453 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183480319 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194333629 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142572269 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188535353 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.120673841 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127965311 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.161508597 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165499157 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161890919 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137210872 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168590571 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186344356 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200552919 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148162481 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22661691 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193630016 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.222020193 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.124708852 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.167401221 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200902951 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157695478 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.210616595 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138511237 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.18604375 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182340939 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167242729 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190659069 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185350511 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162250652 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218353398 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.181289048 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13190393 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148100072 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188901767 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139258909 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.193328402 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145209567 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156768188 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155033861 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.164207946 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128995812 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212131892 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144271533 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199914098 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.162618072 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19808558 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124712097 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169238783 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162290852 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173004421 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.110298638 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169741261 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212547223 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171948104 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158794257 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203154578 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13108204 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.341609056 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190931548 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207269973 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136806562 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169927971 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163760693 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.19301791 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164413572 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.210127728 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140954598 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207252212 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160477103 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.173372194 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132032996 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177228712 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151870657 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.168912948 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.134132233 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.184131944 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.143824029 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213750981 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139214497 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187453007 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161457904 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.174019083 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.147698157 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141373945 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225543817 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182176678 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176944931 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.182288537 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.169464993 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221682269 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122623372 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126986045 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.16179709 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18000215 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158932419 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163196814 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.206493518 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220865305 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190247997 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163902543 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16404586 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.129859053 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158291913 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17772267 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218520817 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138295837 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.16279777 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194625816 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.156664608 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133641843 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18745775 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.291916425 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175396605 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176182563 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.141730211 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.273371725 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159670144 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13535004 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188360668 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17223161 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.157506804 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.185050383 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163965858 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170349145 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164224455 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164276788 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.21289136 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192059903 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197709973 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171806684 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.174670189 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160434369 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191456854 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206501198 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144779052 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.145986102 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192882036 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209694204 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.184719816 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.159099771 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161950877 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184844867 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161209606 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199948928 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138344429 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220585908 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129105668 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191136306 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140730376 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123666029 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187738774 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.204539931 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133613147 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208845003 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161129093 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160891588 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130008184 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147408633 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185515726 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13909645 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.1584359 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183553371 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.158134008 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164679437 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209193441 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13128377 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184681084 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148115274 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130458103 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170770141 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141670052 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158415746 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.171214204 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211066698 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.133864038 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206768752 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166682876 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193652451 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156793023 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17226345 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.673065039 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.127999852 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211009786 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146974458 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219761853 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180228955 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163951517 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188067843 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150810448 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1953655 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15058046 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.26791251 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165368028 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.188119659 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134497208 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167823497 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142309318 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.132876585 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180859123 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159220832 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169973381 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.137596454 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.185982823 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143781648 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.144899485 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1687172 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184936772 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177567523 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212789149 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.184482904 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164520114 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164714275 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203183168 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133056805 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.193850989 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172899575 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171040123 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150938335 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.15913525 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.139825944 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181288027 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.153493048 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159850448 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189127238 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160422668 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188971665 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.136601696 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189915069 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143357991 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188761138 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131349984 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.156581759 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18906806 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135587943 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.154564881 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161041471 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185973866 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.158819194 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126781418 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.199301009 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187271246 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.150137582 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135464375 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300295105 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161218624 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219083172 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.141946582 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162417025 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145650864 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182213599 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.159760487 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187183272 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.132342619 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130581299 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.15806609 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.168511152 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.180445765 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162832107 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20506834 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163231731 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222823813 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.135290208 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.320703021 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141222064 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187730713 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.122332131 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.128851965 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170625586 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135008261 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166740709 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189725641 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21119316 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.155822513 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.175217879 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136317723 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.153887161 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133138142 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166812855 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180253162 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161298385 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174585743 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.107168842 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170883356 seconds)
  done (took 84.969729183 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.16824256 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.152837591 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.168953684 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.227365233 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.197427284 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.299414866 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.236096911 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.263986777 seconds)
  done (took 2.882662809 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.122478368 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.159846185 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.144665666 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.146660264 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.121911374 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.451521576 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.159082717 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.121766139 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.167944746 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.160662635 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.144421893 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.632305554 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.116542964 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.145681632 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.127464799 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.120409326 seconds)
  done (took 4.212410783 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.351413325 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.577059366 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.994537111 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.279841813 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.236072661 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.183723816 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.774466631 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.680369411 seconds)
  done (took 13.257109849 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.149792833 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.139637317 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.322123997 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.265830657 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.152786837 seconds)
  done (took 2.212375386 seconds)
done (took 131.762352106 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.127815631 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.125521471 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.124179068 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.156849185 seconds)
  done (took 1.704791022 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.187900557 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.094771098 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.096446009 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.120675872 seconds)
  done (took 1.682083946 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.455143873 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.094503834 seconds)
  done (took 1.756940073 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.15663423 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.146530957 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.169450353 seconds)
  done (took 1.666439997 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.145341721 seconds)
  done (took 1.326880303 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.129879428 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.121390467 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.241183395 seconds)
  done (took 1.6795104 seconds)
done (took 11.003647371 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.122469975 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.416627425 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.433525373 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137885529 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.714426429 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.429285126 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.055713615 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.176683586 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.176256599 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.139844509 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135464391 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.692279895 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.034527677 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.360179177 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.997358023 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.384523215 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.696654674 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.113453624 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.147211297 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.114767862 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.03510466 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.138848523 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114089348 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.113504915 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.719177479 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.425244582 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.110704195 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.400122269 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.110787075 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.114484369 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.429101295 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.113306773 seconds)
  done (took 17.478496787 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.122023972 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.17621128 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.14578771 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.114981172 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114622963 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.139825471 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124207853 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.12527348 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.208400796 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.111841313 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.164137984 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.112095142 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.117547251 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.140808677 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.139492961 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.110470973 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.143891346 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.116526637 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119644133 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.141913137 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.135467568 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.110204971 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.143099141 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.115471195 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.111512517 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.161656181 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.112167666 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.124047246 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.139751591 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.116779233 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.116716148 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.140463315 seconds)
  done (took 5.411070371 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.161833031 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.184642054 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.149791905 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.151574507 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.188162899 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.114933148 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.226098753 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.151739655 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.205070883 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.113673331 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.13509677 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.139296597 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.153196881 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.111811435 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.166966179 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.112125748 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.115269734 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.143219512 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120812289 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.114932919 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.163644415 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.111565934 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.113856727 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.143287412 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.113175324 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.162504909 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.114771955 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.125098591 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.138280162 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.1182835 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.117476432 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.139515745 seconds)
  done (took 5.710994587 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.129393296 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.128211132 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.135983171 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.165526817 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.123667032 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.12550369 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.155231823 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.123574681 seconds)
  done (took 2.276418193 seconds)
done (took 32.060798832 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.140015842 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.131936089 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.130807433 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.153562904 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.196785007 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.150490999 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.131054546 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.117973353 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.15501394 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.134736739 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.11173125 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.119029571 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.164528461 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.122267579 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.229616878 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.12761806 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.233674014 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.199554449 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.149410977 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.128466745 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.121418534 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.234564419 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.124916351 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.147865377 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.206780658 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.116151886 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.219712462 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.120820653 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.152812504 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.114250298 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.229465706 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.123867063 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.119566289 seconds)
  done (took 6.244465203 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.216335626 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.122256273 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.149981247 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.120164132 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.122052344 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.148942551 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.219037214 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.149649295 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.12281015 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.120317455 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.120119343 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.232340476 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.126613406 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.146052375 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.124360124 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.114794097 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.25114128 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.121448426 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.111691072 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.125842272 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.117546299 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.120480646 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.262573243 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.116513804 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.120233622 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.152968708 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.125171187 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.124813768 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.152405629 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.124201437 seconds)
  done (took 5.590116527 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.129697438 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134551788 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.1659695 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.187106797 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.147445658 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.163316713 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.143288951 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.134469903 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.174442226 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.115109272 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.128913329 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.181001147 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.131282654 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.124236354 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.146699433 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.135365462 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136980831 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.143869277 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.12363485 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.132048409 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.164927405 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.133939246 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.141070552 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.152343407 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.113355093 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.120939232 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.152619423 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.131249296 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.121245603 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.15817717 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.117404833 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.118105535 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.145934257 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.15061643 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.114940059 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.157127912 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.140622167 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.125564865 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.158514377 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.145960824 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.118154506 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.147273127 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.141798366 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.171593973 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.145084645 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.127776051 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.125296286 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.15900848 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.113164416 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.131850264 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.186390154 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.114003106 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.135970894 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.14525114 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.113278327 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.122330942 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.143621901 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.118751145 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.129087925 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.146513095 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.140945338 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.121337211 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.15372787 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.117745657 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.125275376 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.113673245 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.142976657 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.120296263 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.141936263 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.152718308 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.154082759 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.113426905 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.156504079 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.127234882 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.124747416 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.154300964 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.115055073 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.124627936 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.152368311 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.122140775 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.127558478 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.144123449 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.120208035 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.131444631 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.162977535 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.131749042 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.127807905 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.154571926 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.120271395 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.116867304 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131282972 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.144738268 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.121435012 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.126762066 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.144524792 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.118629009 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.127813832 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.154481118 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.114862655 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.140371347 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.147016519 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.115759239 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.140536618 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.148654 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.123819491 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.124153168 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.18588641 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.115761936 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127708674 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.1561216 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.116849874 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.122556267 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.117605964 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.143291305 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.134039283 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.130016324 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.151815448 seconds)
  done (took 17.231943258 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.331318118 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.318842272 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.184999867 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.317580752 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.157376005 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.213464951 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.313593439 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.315359069 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.114405499 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.184857583 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.197227567 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.25421978 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.146433256 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.143760842 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.317758026 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.369586184 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.175600497 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.152826327 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.183609484 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.128813718 seconds)
  done (took 5.73531836 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.137052867 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.150622613 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.168065606 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.144976595 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.124676702 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.158783806 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.115728927 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.137746045 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.156594693 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.12642244 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.117466114 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.161334382 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126925049 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.131706639 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.159988024 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.154013203 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.122628185 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.148687274 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.13849311 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.119380019 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.135856609 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142745831 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.124704922 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.168274227 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.134643902 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.126550644 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.143857542 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.120717077 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.121230247 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.153898062 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.121111284 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.134214241 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.151389143 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.110226171 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.129505844 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.158522523 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.123766698 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.11754742 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.119247416 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.149604322 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.13015426 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.12802601 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.153919404 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.10448652 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.1355137 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.115726575 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.158807626 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.129750306 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.110961924 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.1624345 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.129332077 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.128951191 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.148837974 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.139432915 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.123344415 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.131581151 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.15677016 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.129228347 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.148069522 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.115857415 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.114258616 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.118929107 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.154766324 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.132469198 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.127660477 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.165741645 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.1325645 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.114677217 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.150105786 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.120677763 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.119505096 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.159916319 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.136902064 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.122254605 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.152169862 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.12932773 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.123433449 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.098121136 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.155773787 seconds)
  done (took 11.931201527 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.142925545 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.124135324 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.134774347 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.181366664 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.128942327 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.120749713 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.157484294 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.136156081 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.1290921 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.164225548 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.129748621 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.128416118 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.16754471 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.125867489 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.123689779 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.161339674 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.128817327 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.153801429 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.167721211 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.143559178 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.158545479 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.123086432 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.128425247 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.126999216 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.175674791 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.127592268 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.171946343 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.132085847 seconds)
  done (took 5.220610488 seconds)
done (took 53.150105218 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.351259757 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.545543756 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.320180946 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.316586319 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.31778597 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.332351335 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.320623618 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.322362572 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.774546197 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.293817185 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.322319325 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.319377978 seconds)
done (took 29.759115264 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.414828417 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.814426853 seconds)
    (2/2) benchmarking "String"...
    done (took 1.601313067 seconds)
  done (took 4.62882994 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.31131623 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.309921624 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.531388641 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.310837899 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.311011421 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.328036135 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.322162094 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.31137343 seconds)
  done (took 16.636266085 seconds)
done (took 27.20161917 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.367009172 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.50314787 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.555924958 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.310980514 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.311484544 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.315066497 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.30975183 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.332315994 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.321600791 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.310315808 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.697220462 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.576053252 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.326876118 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.694399116 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.313219652 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.332622604 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.320598712 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.541827646 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.311612443 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.354940799 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.291660122 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.313154713 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.320466665 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.315683101 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.31483512 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.315726676 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.329112257 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.310373555 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.506176391 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.312302991 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.340648721 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.311156832 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.323977874 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.311520041 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.311403124 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.323899244 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.5014482 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.318811244 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.297632061 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.313387326 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.519146572 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.329816937 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.312006502 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.326709786 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.311785568 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.359303125 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.300544169 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.417803383 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.33218054 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.326885626 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.387315132 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.68114351 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.320225053 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.318291651 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.315572637 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.543949182 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.317049566 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.357241258 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.336974399 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.313909789 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.322857621 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.309215763 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.342959134 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.318530493 seconds)
  done (took 150.726194274 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.311112162 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.316425901 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.313978558 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.375887539 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.315643137 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.315196585 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.310030527 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.311412849 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.31025964 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.321323876 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.315007885 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.311776756 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.330074533 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.257061581 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.320866667 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.331903664 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.315999364 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.311195616 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.334658798 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.311447622 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.31334728 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.314772454 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.325686083 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.310841596 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.348421409 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.376721197 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.322260315 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.330045405 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.324481559 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.308816598 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.345639324 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.363379551 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.876002122 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.182646071 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.324470996 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.317070712 seconds)
  done (took 84.238952662 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.31151013 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.312318984 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.310503681 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.340718699 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.309462491 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.826952309 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.831449858 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.843038691 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.695960768 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.492829593 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.545173713 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.31441456 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.40162486 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.324121105 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.31042801 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.312236728 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.326331537 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.339026355 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.310885813 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.309739207 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.821426155 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.328105056 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.454027475 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.476634297 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.325140887 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.338826271 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.704277186 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.31062937 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.339182166 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.633089007 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.354630354 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.31128377 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.63868569 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.203755896 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.421548046 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.311495821 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.340258067 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.310982668 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.582513134 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.311405932 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.313213189 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.313697582 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.936530868 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.314793054 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.820262209 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.317776009 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.196776254 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.312070305 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.309854094 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.488032003 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.875833382 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.315596068 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.308424888 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.313855672 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.309997731 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.308957817 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.339530657 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.435118427 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.405102413 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.311210781 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.314357013 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.339220978 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.310762135 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.313083506 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.311871516 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.324438923 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.37126371 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.431646624 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.814114847 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.316709854 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.4052372 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.426368699 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.311086315 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.310758592 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.312541209 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.311840323 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.419154918 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.312652689 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.680729672 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.313286649 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.477404681 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.328490111 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.440340448 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.40966998 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.312753525 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.623572108 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.317273238 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.312089227 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.981850507 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.4060893 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.312209552 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.312686571 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.310108894 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.679120552 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.816647673 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.489889859 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.317840064 seconds)
    (98/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.311746184 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.313956478 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.513241284 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.318768711 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.6934094 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.806826624 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.944835682 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.319920893 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.421882393 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.47848232 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.329670735 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.312780603 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.441855452 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.319887717 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.374117492 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.313749212 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.713854375 seconds)
  done (took 375.177051924 seconds)
done (took 611.352927112 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.200823869 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.147169001 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.289132 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.16157998 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.13535277 seconds)
  done (took 12.148495975 seconds)
done (took 13.362395926 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.490229666 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.490432734 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.369002474 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.49351638 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.34405988 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.506879432 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.481954637 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.333490474 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.42279907 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.387565726 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.419105494 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.368029971 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.346224312 seconds)
  done (took 19.668357608 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.593478721 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.324383478 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.384500735 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.5604521 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.360619389 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.593862304 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.611749765 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.32539923 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.470528874 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.336973099 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.337237246 seconds)
  done (took 19.114930382 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.593326112 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.324766343 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.377472116 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.587838836 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.357993052 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.583546438 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.614378365 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.326597004 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.468524797 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.336884939 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.337423479 seconds)
  done (took 19.124588474 seconds)
done (took 59.122311371 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.354572247 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.411796649 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.346546934 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.334999695 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.332733158 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.335371219 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.336042956 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.331693548 seconds)
  done (took 12.001339742 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.332210143 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.332577587 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.330480325 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.332242205 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.332787373 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.331675083 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.332055399 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.330253061 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.332891076 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.33161137 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.331540287 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.333006178 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.332555228 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.332524359 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.331029792 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.332190304 seconds)
  done (took 22.528727454 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.33424164 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.332711319 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.333688878 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.331764455 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.332908607 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.332937065 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.334442284 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.333863041 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.33405817 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.33268496 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.334628544 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.332848932 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.335315188 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.333509528 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.332314061 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.334425113 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.332947058 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.333283127 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.338578993 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.333120087 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.335017466 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.33315115 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.335172424 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.334791458 seconds)
  done (took 33.23158673 seconds)
done (took 68.977764198 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.319338924 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.327581637 seconds)
  done (took 5.865622789 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.393287446 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.399001027 seconds)
  done (took 4.010575203 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.335905703 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.333679031 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.335494439 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.336791304 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.335001136 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.333643141 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.334889028 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.333993618 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.333340593 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.334553353 seconds)
  done (took 14.566616774 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.335655608 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.337414105 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.333971519 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.335137402 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.336298326 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.335339837 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.336450052 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.335098645 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.334704638 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.334290815 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.337275056 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.337132369 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.33577482 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.336327019 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.336023934 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.334253675 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.336307971 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.336575514 seconds)
  done (took 25.263914026 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.349085313 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.356772054 seconds)
  done (took 3.927168879 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.476634257 seconds)
    (2/7) benchmarking "second"...
    done (took 1.37783358 seconds)
    (3/7) benchmarking "month"...
    done (took 1.451972013 seconds)
    (4/7) benchmarking "year"...
    done (took 1.443302688 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.378299173 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.357234272 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.379351568 seconds)
  done (took 11.085639378 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.337880555 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.535559352 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.658157943 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.859018879 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.336861141 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.339057411 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.171492426 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.341468804 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.344414887 seconds)
  done (took 15.145044514 seconds)
done (took 81.082076174 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.322430514 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.376379778 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.366844936 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.348196817 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.677114318 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.361047672 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.328733801 seconds)
done (took 17.002488052 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.314678057 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.311472376 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.319016332 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.330321672 seconds)
  done (took 10.498855164 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.329923287 seconds)
    (2/2) benchmarking "read"...
    done (took 1.617176389 seconds)
  done (took 5.169488219 seconds)
done (took 16.889644778 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.338323851 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.337365346 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.337052139 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.33735803 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.339536596 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.338247119 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.338652269 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.338731991 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.339989926 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.338083485 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.338252915 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.340195664 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.337229295 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.34068819 seconds)
    (15/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.337186736 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.333083218 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.334472194 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.336146808 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.335951857 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.335077921 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.333557554 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.337548442 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.332127472 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.33313218 seconds)
  done (took 33.310953837 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.332778225 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.331796863 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.332253208 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.333427954 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.333950396 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.330862239 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.332066514 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.330476082 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.332388767 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.333124907 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.330892922 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.332577196 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.329665201 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.328089902 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.329975481 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.330306608 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.33186625 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.33119577 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.331280208 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.326413592 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.326882367 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.32705445 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.32787118 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.327976003 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.327360286 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.327985676 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.32715378 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.323025242 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.322607274 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.322842589 seconds)
  done (took 41.103642262 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.327432621 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.330006148 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.326126601 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.324192323 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.31950755 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.319356672 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.320985499 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.320934692 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.320210069 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.320257801 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.320022127 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.317976399 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.316017849 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.316945192 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.317441543 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.317042115 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.316823113 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.317721989 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.317872574 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.313750962 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.313975921 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.314673793 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.315330355 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.315225123 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.312187961 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.315699395 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.310641053 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.310685591 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.310501933 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.309995566 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.310128922 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.311184766 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.310433432 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.310465272 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.308488578 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.305975015 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.310538982 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.31002804 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.308561406 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.307962053 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.305836331 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.306292801 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.302866111 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.303512353 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.302523717 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.303832837 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.304287806 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.304334205 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.304177837 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.299857901 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.302063129 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.302421779 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.302333895 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.299377537 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.300574027 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.300483819 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.300823864 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.295537505 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.298196045 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.297472413 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.296279419 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.297816378 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.299049669 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.29786981 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.29705969 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.294295194 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.295064219 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.294703408 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.29505461 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.296658683 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.295491082 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.295489001 seconds)
  done (took 95.428521698 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.293349138 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.292307288 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.293181384 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.292574342 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.293874718 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.293619514 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.294594844 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.290516165 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.288922404 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.292236218 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.292706758 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.292320385 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.292227018 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.291599779 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.293419061 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.288886888 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.28838316 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.289242358 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.289919083 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.290375241 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.289027879 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.288938365 seconds)
  done (took 29.600957841 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.288401627 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.291004795 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.288111003 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.288566974 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.290814621 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.289001075 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.287847557 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.290041418 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.285895976 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.284789176 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.286018201 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.284311506 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.288370631 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.284955126 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.288617031 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.284396117 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.285159502 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.286288767 seconds)
  done (took 24.358140915 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.287031464 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.283839439 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.284582563 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.286262377 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.282866818 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.282562312 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.283018462 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.283583318 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.28335693 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.282324054 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.283274283 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.283325336 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.2830471 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.280950681 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.281077968 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.282399836 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.281375568 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.280557296 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.282513422 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.283954546 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.281110174 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.280666648 seconds)
  done (took 29.401920466 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.280993577 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.281128573 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.280567016 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.280034045 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.280445533 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.279483921 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.279392715 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.280346985 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.280070306 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.280485774 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.279480824 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.280281211 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.283166614 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.278064799 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.277568517 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.277575441 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.277190074 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.278718383 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.279354754 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.280765612 seconds)
  done (took 26.769762262 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.278662328 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.276370939 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.276367731 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.27673102 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.276950155 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.276310518 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.277706418 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.275067833 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.2765074 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.274990151 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.276415808 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.276232365 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.275756703 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.275024771 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.279908245 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.274922909 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.274626282 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.273746284 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.274713855 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.274573211 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.276202812 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.274375756 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.274942519 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.27201736 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.273154622 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.273801629 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.272880516 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.272061357 seconds)
  done (took 36.883577171 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.273315314 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.272218827 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.272715605 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.273551122 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.273525427 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.272556312 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.272843737 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.272811554 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.272886078 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.27309392 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.27244125 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.271524863 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.272612645 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.27102398 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.270629894 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.271200095 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.272561559 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.27304703 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.270820854 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.271309836 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.271449834 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.272020257 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.272764512 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.271381504 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.270926163 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.27132352 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.271543831 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.271711227 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.269986596 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.268994227 seconds)
  done (took 39.328362174 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.291949584 seconds)
    (2/2) benchmarking "in"...
    done (took 1.291229469 seconds)
  done (took 3.74885921 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.269072817 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.270807488 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.270349148 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.270532213 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.270290265 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.269659609 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.270496623 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.270097634 seconds)
  done (took 11.32744542 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.26142955 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.271248991 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.271848488 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.270261955 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.27116526 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.262346931 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.270794024 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.27493963 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.263085218 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.264661576 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.26671961 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.267193733 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.265189824 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.26538963 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.264638168 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.266726477 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.27206878 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.27304935 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.272115584 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.271561638 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.270956783 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.265228139 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.269011409 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.27576094 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.265515998 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.273286719 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.269821843 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.275017801 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.265046044 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.268500254 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.266136532 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.27350492 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.273725087 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.272753157 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.274164295 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.271725859 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.271785313 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.269064163 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.271021265 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.274195028 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.272796667 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.273993948 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.265781829 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.266756846 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.267411419 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.275816525 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.27152427 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.271174304 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.263323267 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.266801984 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.277081072 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.263730315 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.272173883 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.268272348 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.267603645 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.272079701 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.277315878 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.267507731 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.268341114 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.272819158 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.278431605 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.276437275 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.267422181 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.274652149 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.272361516 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.278414075 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.273523616 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.275431183 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.27237362 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.271660444 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.270448638 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.277556898 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.276301382 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.273454861 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.271026188 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.271551938 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.264859894 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.272994346 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.27136398 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.271898874 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.274928111 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.271864042 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.27345551 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.278573251 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.264701754 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.274634854 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.273141655 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.273225255 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.266223835 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.272926743 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.277003862 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.272775084 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.265123658 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.265451266 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.26709841 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.273763945 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.264952611 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.265578401 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.274661107 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.275214336 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.274892209 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.266958582 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.271784919 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.274636603 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.273245793 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.273845683 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.276903473 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.266067445 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.272712283 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.275387217 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.275237364 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.267220178 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.271581365 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.27455726 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.26848889 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.270169309 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.274950776 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.268682958 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.275095613 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.274262571 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.273104314 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.282123812 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.275282114 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.273655588 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.269666504 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.281991727 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.274681647 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.269478164 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.276745495 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.274510864 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.274386928 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.267950495 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.275811365 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.266470041 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.275597639 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.267885139 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.275705358 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.274481633 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.276554903 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.26809896 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.269950136 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.267592004 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.269617393 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.271301597 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.276421418 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.270637758 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.277192763 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.271612684 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.271260139 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.271592215 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.277851122 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.276468389 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.270357726 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.278244947 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.270488346 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.277314854 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.271026853 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.276735634 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.277789325 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.277407667 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.276802551 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.267746207 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.272335491 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.278361281 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.273651693 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.272271358 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.279128583 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.275613936 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.276885161 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.269001897 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.277437069 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.268646404 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.27248692 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.283559867 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.277515072 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.276911432 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.271803776 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.278219392 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.278911665 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.277249743 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.272390071 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.273344901 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.278109536 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.278270796 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.280451146 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.279503149 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.279847891 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.271481803 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.270137806 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.278609189 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.272977917 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.284746188 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.281522721 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.281259688 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.273627232 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.280338545 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.272241364 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.281858784 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.275087118 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.280808943 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.280336587 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.279362029 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.271912037 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.279016741 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.273024089 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.278431199 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.270909769 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.27914933 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.280340062 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.279282017 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.278949592 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.273353414 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.272918806 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.278604689 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.278797231 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.277619633 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.271576593 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.282645299 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.267669521 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.26837697 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.278856839 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.275220749 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.27517553 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.2776316 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.271278433 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.273790002 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.268507452 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.267215008 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.275873558 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.269131295 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.2701172 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.274326294 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.271452808 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.268438917 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.273553679 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.270662976 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.266290925 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.271703727 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.276681433 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.272774544 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.268919771 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.278956988 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.275426151 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.2735283 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.272963861 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.265447263 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.275445714 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.273478356 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.277189681 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.266516483 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.274063269 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.267757323 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.276361836 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.268427558 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.267397645 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.269659497 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.270544614 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.279390104 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.278553151 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.269470052 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.27761167 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.274552088 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.273782701 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.270732849 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.278790969 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.274383268 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.268561793 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.269873618 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.26978113 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.278377662 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.268120817 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.275217855 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.267954377 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.278975484 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.284901385 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.27449827 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.272788246 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.278119717 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.274000444 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.273444239 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.27074338 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.27049711 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.270107805 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.269223014 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.268903815 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.275820507 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.269344918 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.276138445 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.270327474 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.272342455 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.277725561 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.2756414 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.269364958 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.276309309 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.276622342 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.275633931 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.267864909 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.276868036 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.269847637 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.272350827 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.271623507 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.270331167 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.277713099 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.274904641 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.27137594 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.26992739 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.271143075 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.269219313 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.273318722 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.279950718 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.272350075 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.281886485 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.271807868 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.274250379 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.272843969 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.277571138 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.280756223 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.272559357 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.282690301 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.278181155 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.268333559 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.27021088 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.279425858 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.276265038 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.28167802 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.271387693 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.28029076 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.277669653 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.278440761 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.278984771 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.278921144 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.279730687 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.279965656 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.279605676 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.275641469 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.27387521 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.273873434 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.281947207 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.279577453 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.280397536 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.269771235 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.274826361 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.281606555 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.273399963 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.272883333 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.272229297 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.280211601 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.281726863 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.279051005 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.281042393 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.280393378 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.279288844 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.277386847 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.282413354 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.279573179 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.278869874 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.28341126 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.28047743 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.283783806 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.273181307 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.283922085 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.280978862 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.273769164 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.271878445 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.274286012 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.2816383 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.274068675 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.283120926 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.280606167 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.274672357 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.275288156 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.283932979 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.273775756 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.280858929 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.295050369 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.27451663 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.283586322 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.280465478 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.2751308 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.284932983 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.281253475 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.272769975 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.275657108 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.280535036 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.285603017 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.273250915 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.282384491 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.274331729 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.282990486 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.282732222 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.281588382 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.28228809 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.2814864 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.275995192 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.282365402 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.278631181 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.284011559 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.275326578 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.276355163 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.276282445 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.283928049 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.284759433 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.277057807 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.284146095 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.282432426 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.276647617 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.276893949 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.285008716 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.27637863 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.284787687 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.276328766 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.28024008 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.278696893 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.280098379 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.278602447 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.285212874 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.276725856 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.277241629 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.285724812 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.285222294 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.285310245 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.277532392 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.286028369 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.277791439 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.277229279 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.285069798 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.27805598 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.28501094 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.278645406 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.281119345 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.278978048 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.285175006 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.285178421 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.286417398 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.27489373 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.278551647 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.285047895 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.283017111 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.284103307 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.28381443 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.286672402 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.277895757 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.280213781 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.28123377 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.277520535 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.28022247 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.286052347 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.279732899 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.278046337 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.279228909 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.287894115 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.286236445 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.281942752 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.278908296 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.289278015 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.285630234 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.28820866 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.280266878 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.280358933 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.279315166 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.287942876 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.287469116 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.279139336 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.28747622 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.284089113 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.287806488 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.283416266 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.280631358 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.28224501 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.289879202 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.28812798 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.280901425 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.288964139 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.279805911 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.288883509 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.287495469 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.286908122 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.278470935 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.280490045 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.282640374 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.283194286 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.288805428 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.28370771 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.282861632 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.280799934 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.290450123 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.287958557 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.287508276 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.287254471 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.280481634 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.288473488 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.281045026 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.283700544 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.283006469 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.281717351 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.291686149 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.289806021 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.2849369 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.286700792 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.291934345 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.288885818 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.280424411 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.282475088 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.2844574 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.290919311 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.290575854 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.2818166 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.283450898 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.289134514 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.290318813 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.29050666 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.284610201 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.295770096 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.294049757 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.282502776 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.28284701 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.286140269 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.292943145 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.290456645 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.289708288 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.284494269 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.286858375 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.295233131 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.290094195 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.290960271 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.287544616 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.284089728 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.293644365 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.285214569 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.286417578 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.286934411 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.292867073 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.292042694 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.286814983 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.295382702 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.295616137 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.292048254 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.304219192 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.289180075 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.286859176 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.292798842 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.28305014 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.291049117 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.285679562 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.292741696 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.291398722 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.29255669 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.292228922 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.284364893 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.287562478 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.287952467 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.296336379 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.291160674 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.283754652 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.285461024 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.292210871 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.292254784 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.293153464 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.292488778 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.293044562 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.292280267 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.284726969 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.296834224 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.296569525 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.29490049 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.293800276 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.294517799 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.289532297 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.289291699 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.292731275 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.296684166 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.292563619 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.292033897 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.288111957 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.295314317 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.29531552 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.2855308 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.286450401 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.286198566 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.294801437 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.299219402 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.304022884 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.292675359 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.288515035 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.29479434 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.295758887 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.28847196 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.296137223 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.296218136 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.288334468 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.29006538 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.297133007 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.296372189 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.295014885 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.288175318 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.296807696 seconds)
  done (took 763.049065677 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.295151717 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.294118179 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.294516584 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.293735063 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.293832621 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.294460006 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.293899823 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.294270332 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.294683078 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.294621222 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.294288717 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.295382119 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.294172026 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.295094975 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.294773353 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.296275327 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.294280109 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.295227165 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.295911236 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.29596718 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.29634184 seconds)
  done (took 28.376903029 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.297658875 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.296268244 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.294686197 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.295506433 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.295585352 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.296303648 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.295091034 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.296565096 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.295547552 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.296288071 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.296109391 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.2961184 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.29668552 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.297925403 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.29704214 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.295436936 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.298155569 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.29574343 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.297635494 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.296775344 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.296638114 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.29727528 seconds)
  done (took 29.707194949 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.297713473 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.29619586 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.289797596 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.298565772 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.297485474 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.297914482 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.297819531 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.298005752 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.297288045 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.289964419 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.28917839 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.291413667 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.294909213 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.302704713 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.291275967 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.29880379 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.298437145 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.297994581 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.296296802 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.297659004 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.296938189 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.30168603 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.299096963 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.290589951 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.299544168 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.299390647 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.299675321 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.300126105 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.292461977 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.302278208 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.298317413 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.290872595 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.294893785 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.292308105 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.292591189 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.302264487 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.300174436 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.299172798 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.299156073 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.300460762 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.313736453 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.300588652 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.299731756 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.303677547 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.300017979 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.295497934 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.304759292 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.300345494 seconds)
  done (took 63.478901454 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.301733306 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.301100145 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.300590165 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.300082498 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.299673127 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.300884149 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.299882655 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.300491309 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.300520384 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.30029405 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.30111523 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.300695566 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.301136133 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.30062163 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.300451646 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.301428642 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.301393775 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.301137197 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.30220251 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.300507933 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.300634925 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.300486304 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.300367587 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.30220395 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.301608999 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.301133417 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.301032198 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.301153452 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.301886243 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.302300937 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.302258085 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.3034886 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.300179266 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.302276165 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.301696832 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.3013713 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.3028707 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.303735273 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.301947874 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.301620214 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.303738205 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.302975517 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.301354043 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.303530029 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.302808427 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.302150232 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.302596465 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.302497203 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.303935268 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.304097811 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.30333898 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.3044093 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.303085651 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.304799481 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.303205554 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.304631146 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.303546787 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.303385365 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.30428137 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.303254305 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.303553339 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.303403146 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.303020279 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.303523029 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.304553383 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.304852157 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.30436161 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.303606981 seconds)
  done (took 89.742137148 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.305558259 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.304379042 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.305056122 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.304646184 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.305509979 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.303395777 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.305435266 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.303590042 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.305304758 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.305681511 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.305435484 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.306088277 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.304021652 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.304956883 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.305522667 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.304513292 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.305803087 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.306388851 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.30589213 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.304450679 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.305055976 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.305996757 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.304987604 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.306072867 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.306351788 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.305812052 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.305973404 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.3045099 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.305462688 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.305446685 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.305359551 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.306771802 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.307164837 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.30610596 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.307220383 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.307319595 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.306831121 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.3075561 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.307491276 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.306894017 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.307969333 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.306205117 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.307714011 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.306487027 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.307144857 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.307268272 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.308692321 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.306558915 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.306974897 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.306845923 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.306658186 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.308253289 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.309331895 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.307782413 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.307083794 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.30907054 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.307698726 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.307045109 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.308065877 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.307687228 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.308941266 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.306969647 seconds)
  done (took 82.189949702 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.307077279 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.308053756 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.308012061 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.307412068 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.308805357 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.308492989 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.308163571 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.308740188 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.308495917 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.309884732 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.31009936 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.309063528 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.310581663 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.308926055 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.307580107 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.308228461 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.309866864 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.310856532 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.309218569 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.310246011 seconds)
  done (took 27.374979662 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.309734564 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.308488237 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.310201233 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.309415428 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.308377078 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.309703855 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.311706664 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.308502568 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.309951685 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.309706407 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.31083473 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.310931156 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.311779885 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.310799792 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.309593936 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.309390128 seconds)
  done (took 22.156708746 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.3110743 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.309808003 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.311869894 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.310714272 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.310226872 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.309584221 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.309420914 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.310116906 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.310244826 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.311257301 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.310748799 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.309377106 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.310286066 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.309853975 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.310370249 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.312015791 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.311935337 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.312973951 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.312389262 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.312338835 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.310871414 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.311048105 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.312013112 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.311465619 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.312445115 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.314152506 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.310178734 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.310244516 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.311978657 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.311247002 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.312792125 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.313180932 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.311906413 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.313060188 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.312263007 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.311977962 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.312030529 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.312037804 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.314128833 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.312627429 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.313240378 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.312565246 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.312288614 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.31331567 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.313864854 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.314220884 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.313701389 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.314200899 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.311827598 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.313082314 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.313542455 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.313246712 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.314413934 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.31322087 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.312990856 seconds)
  done (took 73.358972828 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.314518184 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.312778507 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.313457503 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.313727196 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.314101394 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.313925545 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.313596261 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.315743057 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.312778383 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.31380337 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.315260319 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.316756307 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.313067064 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.313857781 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.314335867 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.31416759 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.314717097 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.315203434 seconds)
  done (took 24.858949764 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.316307815 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.315030682 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.314960323 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.314124134 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.315176778 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.315311624 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.316057667 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.3145981 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.314655699 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.315365016 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.313445319 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.315962633 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.315949975 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.317014946 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.314594199 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.315129148 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.314614477 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.314834176 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.31708429 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.315890613 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.316489865 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.316020455 seconds)
  done (took 30.141842555 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.308711504 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.306297431 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.306902818 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.323512862 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.319375303 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.307038033 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.309080652 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.308403897 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.32807006 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.348766565 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.342372185 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.319161896 seconds)
  done (took 17.031476996 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318580265 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317957514 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.316825733 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316631915 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317182598 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317224714 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317854261 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317138953 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31716865 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.3182521 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318792071 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318704482 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317272187 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317014354 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320785925 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317731402 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317160918 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318382093 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316708369 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31763244 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31713898 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318620776 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319271728 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316579678 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31891799 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.3186128 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317974533 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317317552 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318120178 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31772379 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317870239 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318380006 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31890704 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319703455 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320301648 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320840008 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319915405 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317802787 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318732229 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318949967 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.318732847 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321119052 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319449122 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.321363267 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318618218 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318911651 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319349656 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319192282 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320760755 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321608176 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319730207 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319588026 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319372931 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319441584 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320293123 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.32073955 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320796633 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.322332488 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.32124224 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318435434 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320222785 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321739683 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.3215915 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322242591 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321683272 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320527798 seconds)
  done (took 88.2631003 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322077278 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.319793891 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321834439 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.323221613 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320932264 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.321160408 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.321410196 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320057862 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.322669972 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321873004 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.32198351 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.321505614 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321607853 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.321756554 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320341669 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.321091918 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.322270715 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.321934641 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.322092995 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32282941 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321101989 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321353609 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.32340214 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32179651 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.324389497 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323374583 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.322498915 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322796729 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322285001 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322449484 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.323662639 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322557459 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.323463081 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.323200917 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.324227864 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.323891875 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.324537567 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.323152805 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.323216723 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323234043 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32467589 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323385973 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.32331493 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.323636957 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.323828294 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.324639776 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.323821255 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.321374732 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323576471 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.325210211 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.324803952 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32362622 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.323630239 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.323718357 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.32412116 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.324452932 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.326604575 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.324627092 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.324705771 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.325431995 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.3234835 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.324567294 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.325674953 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.324735873 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.324362201 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.326072165 seconds)
  done (took 88.53625609 seconds)
done (took 1800.751913052 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.482377079 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.438577886 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.314843234 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.330847521 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.315744368 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.316046979 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.329981045 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.316505275 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.31574984 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.316481213 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.317174693 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.508734317 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.349613491 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.316295601 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.317046484 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.414501865 seconds)
  done (took 26.91213846 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.341403342 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.325278767 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.429597587 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.325061875 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.346215509 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.502611225 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.380110146 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.323772143 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.484934475 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.337461098 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.316734799 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.341983089 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.321271842 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.312501995 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.340143909 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.503106432 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.561482602 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.320623108 seconds)
  done (took 29.028247037 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.749301157 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.341578493 seconds)
  done (took 5.306664456 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.341388129 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.323396459 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.32470791 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.320324112 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.313997279 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.315111467 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.322495476 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.321093403 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.31429476 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.461315354 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.329311878 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.333817699 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.321822837 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.323153531 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.330765944 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.366151669 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.471488185 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.332167946 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.331089072 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.327810357 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.3220701 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.412113054 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.365946943 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.334532838 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.444871437 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.321937919 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.329085433 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.328915723 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.497997826 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.332769142 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.323374038 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.323756897 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.324030886 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.317560073 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.771663448 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.316753123 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.331653029 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.349858181 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.332294972 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.480687165 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.326402968 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.330484849 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.330056905 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.755314757 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.449140522 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.439825016 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.324918634 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.326138537 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.326150494 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.389451571 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.327656689 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.326502294 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.37900303 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.14792607 seconds)
  done (took 84.78438999 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.375756559 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.318315977 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.4864391 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.337610311 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.323328935 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.318759838 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.319309419 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.593236076 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.374341166 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.331809361 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.599604511 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.831201473 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.326571287 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.353015694 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.930066876 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.387563833 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.320930364 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.317462312 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.321406773 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.326249827 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.838494417 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.322516438 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.319668465 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.365659331 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.357166977 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.790176356 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.320567064 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.320287596 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.337426619 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.320399339 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.798293963 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.324810234 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.396789307 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.321147608 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.588658634 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.683451019 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.652056223 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.327691863 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.362685034 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.327024006 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.329274892 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.780536737 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.661843431 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.321046508 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.321165858 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.781383131 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.321797554 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.329805291 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.322118997 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.545952492 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.324019527 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.322684543 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.324521756 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.322407336 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.326847449 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.368668156 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.353407961 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.816871577 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.321921497 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.322800338 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.345715314 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.323315399 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.329124284 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.326241308 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.32875937 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.673584799 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.528645855 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.324093616 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.671889694 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.782474019 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.323448895 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.883871035 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.32300033 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.345658232 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.529208073 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.323794819 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.34072385 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.828865974 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.346210563 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.32318093 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.652265002 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.329335005 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.606827349 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.339032075 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.32503548 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.862009726 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.33064542 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.356976923 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.324459562 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.324021626 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.324226531 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.327451426 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.597842361 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.351973194 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.324290958 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.324925092 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.349177387 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.324367236 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.340488298 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.328698959 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.866003826 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.33134662 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.323970217 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.329016796 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.324450613 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.330306651 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.326087236 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.32697636 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.566636711 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.325021852 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.331511671 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.328697032 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.325317229 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.333874159 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.378913775 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.328588844 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.619480252 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.327147927 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.325887116 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.331753782 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.334582125 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.341878455 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.326261794 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.332769858 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.213132391 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.558914674 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.343978075 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.327224568 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.327005471 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.326986025 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.341850161 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.327141028 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.364718575 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.330256569 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.074664708 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.348921381 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.351181649 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.327436857 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.332716501 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.327754193 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.330439144 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.328549917 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.624959704 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.597949329 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.506065434 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.329601806 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.326890065 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.087428263 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.360131327 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.466589568 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.346734327 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.328352566 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.546960051 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.525210937 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.33017977 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.327098296 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.331531815 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.557334161 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.335215279 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.640326117 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.832676715 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.328987377 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.335408243 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.076963759 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.025556863 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.330034774 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.332073719 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.610377118 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.343603549 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.328942726 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.32744831 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.330947616 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.329754976 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.331277068 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.33344907 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.329272259 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.328643316 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.607302731 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.503953104 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.345593029 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.332613119 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.794461878 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.345044134 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.330331288 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.334676995 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.331576597 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.329264106 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.334620112 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.33351667 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.358969312 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.330788129 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.339457646 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.82490219 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.330559981 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.330630298 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.483657509 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.008155957 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.331149042 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.329739924 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.331535408 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.963155288 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.857498267 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.398427668 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.62746428 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.335464952 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.369193553 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.330911269 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.375829995 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.824770799 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.334702969 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.331347932 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.98586506 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.331278701 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.740264691 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.331528333 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.331189521 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.877553134 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.332844865 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.333027831 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.330979759 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.33285217 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.614870914 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.332965853 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.335425296 seconds)
  done (took 494.764283336 seconds)
done (took 642.006496817 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.332926996 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.332855731 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.319929278 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.336099949 seconds)
  done (took 10.552666993 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.348972565 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.338086646 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.346676469 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.337490939 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.348620356 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.338276514 seconds)
  done (took 9.288508298 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.332453887 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.332647824 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.337896966 seconds)
  done (took 8.233367197 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.550583814 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.354617717 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.694130882 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.339225508 seconds)
  done (took 9.169290905 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.347434423 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.347647257 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.3486 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.349959714 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.351686174 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.351645142 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.348263394 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.350051408 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.350770829 seconds)
  done (took 13.376001842 seconds)
done (took 51.850064883 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.281638565 seconds)
    (2/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.147000553 seconds)
    (3/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.000056076 seconds)
    (4/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.492644524 seconds)
    (5/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.607487659 seconds)
    (6/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.326198672 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.40405619 seconds)
    (8/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.317269324 seconds)
    (9/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.445158353 seconds)
    (10/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.446688329 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.369979198 seconds)
    (12/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.180012798 seconds)
    (13/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.325655633 seconds)
    (14/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.383028546 seconds)
    (15/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.042413615 seconds)
    (16/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.039760289 seconds)
    (17/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.373000003 seconds)
    (18/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.221902005 seconds)
    (19/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.449081865 seconds)
    (20/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.442553476 seconds)
    (21/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.365991426 seconds)
    (22/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.415456701 seconds)
    (23/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.405557708 seconds)
    (24/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.326704603 seconds)
    (25/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.517880318 seconds)
    (26/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.481613354 seconds)
    (27/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.370964013 seconds)
    (28/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.410002711 seconds)
    (29/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.045142675 seconds)
    (30/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.421888386 seconds)
    (31/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.553968387 seconds)
    (32/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.319507011 seconds)
    (33/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.323408444 seconds)
    (34/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.566084121 seconds)
    (35/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.32383754 seconds)
    (36/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.330918569 seconds)
    (37/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.673395347 seconds)
    (38/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.519428512 seconds)
    (39/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.4530648 seconds)
    (40/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.318243923 seconds)
    (41/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.429056676 seconds)
    (42/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.369566117 seconds)
    (43/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.59793872 seconds)
    (44/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.335770531 seconds)
    (45/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.402442717 seconds)
    (46/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.319522732 seconds)
    (47/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.322964443 seconds)
    (48/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.189164152 seconds)
    (49/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.463109582 seconds)
    (50/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.588223585 seconds)
    (51/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.003642626 seconds)
    (52/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.557157545 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.496717365 seconds)
    (54/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.415215247 seconds)
    (55/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.400340925 seconds)
    (56/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.344745099 seconds)
    (57/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.039748483 seconds)
    (58/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.125440073 seconds)
    (59/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.448287729 seconds)
    (60/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.105851978 seconds)
    (61/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.515236289 seconds)
    (62/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.491399433 seconds)
    (63/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.423072776 seconds)
    (64/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.421978874 seconds)
    (65/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.32146737 seconds)
    (66/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.416144357 seconds)
    (67/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.321134079 seconds)
    (68/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.468791981 seconds)
    (69/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.324341172 seconds)
    (70/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.455438338 seconds)
    (71/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.521206334 seconds)
    (72/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.329929879 seconds)
    (73/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.45310479 seconds)
    (74/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.490977152 seconds)
    (75/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.448913808 seconds)
    (76/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.325540869 seconds)
    (77/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.435519628 seconds)
    (78/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.584445769 seconds)
    (79/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.557157595 seconds)
    (80/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.565522478 seconds)
    (81/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.489108771 seconds)
    (82/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.484874686 seconds)
    (83/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.325513033 seconds)
    (84/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.467266581 seconds)
    (85/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.347525314 seconds)
    (86/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.32152053 seconds)
    (87/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.443490422 seconds)
    (88/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.431519474 seconds)
    (89/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.338352198 seconds)
    (90/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.376241277 seconds)
    (91/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.449263004 seconds)
    (92/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.436776694 seconds)
    (93/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.403844734 seconds)
    (94/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.37058036 seconds)
    (95/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.32534514 seconds)
    (96/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.519778233 seconds)
    (97/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.327342174 seconds)
    (98/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.322025644 seconds)
    (99/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.331847467 seconds)
    (100/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.322750546 seconds)
    (101/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.450782173 seconds)
    (102/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.461009571 seconds)
    (103/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.376526027 seconds)
    (104/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.462290262 seconds)
    (105/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.467525813 seconds)
    (106/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.412410169 seconds)
    (107/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.086783969 seconds)
    (108/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.354811294 seconds)
    (109/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.415742875 seconds)
    (110/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.372199247 seconds)
    (111/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.349783619 seconds)
    (112/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.107875928 seconds)
    (113/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.328202025 seconds)
    (114/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.326156509 seconds)
    (115/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.49151785 seconds)
    (116/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.324199248 seconds)
    (117/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.380850684 seconds)
    (118/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.389972688 seconds)
    (119/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.426710216 seconds)
    (120/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.34946601 seconds)
    (121/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.365524061 seconds)
    (122/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.323611167 seconds)
    (123/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.381691844 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.498080831 seconds)
    (125/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.464703298 seconds)
    (126/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.358251023 seconds)
    (127/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.610830104 seconds)
    (128/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.467768247 seconds)
    (129/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.327619494 seconds)
    (130/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.473257382 seconds)
    (131/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.325152075 seconds)
    (132/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.494147451 seconds)
    (133/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.325616234 seconds)
    (134/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.459576454 seconds)
    (135/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.441045082 seconds)
    (136/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.440951061 seconds)
    (137/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.414010896 seconds)
    (138/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.150573092 seconds)
    (139/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.329560921 seconds)
    (140/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.32643558 seconds)
    (141/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.509331629 seconds)
    (142/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.514668571 seconds)
    (143/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.474002666 seconds)
    (144/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.433812983 seconds)
    (145/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.134001532 seconds)
    (146/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.199412891 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.570190735 seconds)
    (148/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.528695241 seconds)
    (149/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.522599105 seconds)
    (150/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.409805588 seconds)
    (151/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.329095087 seconds)
    (152/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.476428755 seconds)
    (153/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.328286469 seconds)
    (154/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.47990652 seconds)
    (155/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.380865501 seconds)
    (156/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.484508788 seconds)
    (157/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.383195115 seconds)
    (158/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.462608789 seconds)
    (159/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.381471673 seconds)
    (160/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.488414656 seconds)
    (161/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.091847572 seconds)
    (162/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.328185959 seconds)
    (163/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.575674451 seconds)
    (164/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.413002702 seconds)
    (165/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.150908014 seconds)
    (166/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.389787957 seconds)
    (167/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.326681498 seconds)
    (168/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.385601233 seconds)
    (169/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.196947865 seconds)
    (170/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.447799268 seconds)
    (171/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.379479566 seconds)
    (172/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.464232601 seconds)
    (173/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.432276272 seconds)
    (174/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.443940745 seconds)
    (175/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.155188647 seconds)
    (176/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.358047521 seconds)
    (177/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.518003143 seconds)
    (178/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.508420508 seconds)
    (179/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.229574099 seconds)
    (180/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.349048578 seconds)
    (181/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.370719295 seconds)
    (182/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.496815515 seconds)
    (183/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.369220744 seconds)
    (184/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.390735964 seconds)
    (185/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.56538682 seconds)
    (186/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.378883479 seconds)
    (187/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.414162098 seconds)
    (188/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.376909722 seconds)
    (189/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.450330501 seconds)
    (190/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.419622929 seconds)
    (191/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.561807961 seconds)
    (192/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.51778742 seconds)
  done (took 341.604835246 seconds)
done (took 342.836496725 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.369996291 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.432224155 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.353449764 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.352764142 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.354922278 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.346106547 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.376643207 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.353848862 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.368276021 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.367497339 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.345344968 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.363496398 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.366815561 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.364930662 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.388379914 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.355834715 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.353960409 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.364255078 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.369090378 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.370797832 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.357692771 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.355286892 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.37928186 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.354173347 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.36261705 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.364548923 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.361155565 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.355439613 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.363340224 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.368744174 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.357093428 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.361933745 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.372238751 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.367846565 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.358025177 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.364276936 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.356866297 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.434149175 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.376894946 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.368383895 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.363755287 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.372269931 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.361546589 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.360805094 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.368572581 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.379403301 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.36308104 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.370502617 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.359052999 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.358075987 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.372629527 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.368950935 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.364300523 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.358392707 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.350350384 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.372817922 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.367076252 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.373119146 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.364584466 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.357804884 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.391474395 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.372843579 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.369324253 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.364900021 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.364165118 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.370032623 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.367406601 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.372665393 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.364937377 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.358059266 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.359709672 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.366283553 seconds)
done (took 107.632112616 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.482073102 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.356248932 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.494831257 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.365009757 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.516933837 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.488646029 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.365416571 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.365200964 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.366940132 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.155904392 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.364603711 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.367378119 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.358664769 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.36480624 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.48495166 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.367113576 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.366145993 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.081676361 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.36772751 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.497408062 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.354902455 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.367950641 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.366073948 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.172334853 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.357399306 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.355144931 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.49728839 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.366948472 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.083678888 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.352343396 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.355573395 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.058242471 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.499157441 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.386326715 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.376428009 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.376530343 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.520269551 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.369147963 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.480306051 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.481238646 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.497847432 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.406130713 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.354865612 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.358602786 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.369309472 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.369212648 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.367652114 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.396935022 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.359996661 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.370244636 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.057493066 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.377441124 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.367407188 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.368804466 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.370190466 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.397292726 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.369648764 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.369976161 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.502390449 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.36938255 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.486488685 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.191533636 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.19095708 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.369967049 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.358191075 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.369944222 seconds)
  done (took 110.371607478 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.429130666 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.435536135 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.470745503 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.361586385 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.413499882 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.469675553 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.362530616 seconds)
  done (took 11.192349653 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.368576719 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.369854914 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.411359655 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.411184543 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.370758297 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.517855276 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.368830988 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.373673329 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.37168645 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.413091134 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.369234922 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.37095768 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.379921552 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.36228863 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.409379274 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.373872815 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.476917441 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.363177032 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.369063249 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.516897458 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.371689885 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.381745917 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.413540643 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.374193673 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.371576972 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.369011285 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.129699178 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.371044201 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.371615832 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.369337783 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.370294318 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.416055675 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.370738608 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.362175852 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.373010941 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.478930489 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.371772468 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.371628097 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.371312683 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.364991122 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.372630098 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.371103023 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.370997641 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.371530232 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.372233743 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.387856775 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.373864437 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.371159827 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.373295438 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.372355704 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.415128549 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.372829711 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.372345848 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.373116984 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.418848072 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.380992215 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.372194436 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.372634347 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.371865544 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.371344228 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.519706588 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.412191286 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.373011392 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.411595535 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.372595839 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.372838007 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.373488081 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.374682168 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.418539862 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.373849294 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.412862332 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.373512662 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.544663076 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.389671053 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.374721933 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.368298172 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.368406726 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.373158214 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.363948062 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.373748242 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.374497534 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.36694024 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.372707223 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.374512122 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.374785429 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.526339566 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.474606679 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.374133217 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.378852329 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.373452204 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.374038774 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.41993165 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.374352831 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.373554698 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.419417628 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.481001278 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.420738361 seconds)
  done (took 140.954223231 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.378807184 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.379475852 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.370358561 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.392944735 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.368536021 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.368054757 seconds)
  done (took 9.513235211 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.36879413 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.378147446 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.375267756 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.375564726 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.376499599 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.375387804 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.375354566 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.369113159 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.376865018 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.375322801 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.375984398 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.378486705 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.379873271 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.376122642 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.376617757 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.376833138 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.376746254 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.376472967 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.377707602 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.377577016 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.368372101 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.377757188 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.378134217 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.368475354 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.380774909 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.37755974 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.391936886 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.378840963 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.375870519 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.374616587 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.379654131 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.376503535 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.370222779 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.374296229 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.380365751 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.370764524 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.381092714 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.380844909 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.376952032 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.378384273 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.380683501 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.37779973 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.379082938 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.379212586 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.370831348 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.373659654 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.382747724 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.395372966 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.378441707 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.381527921 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.380205681 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.378888368 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.378365951 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.382723465 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.372591926 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.374364407 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.384132975 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.378735435 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.378840526 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.373022928 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.383108921 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.381115603 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.373569224 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.384022096 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.378814428 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.381628955 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.37156762 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.381398114 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.379742574 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.379969806 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.382920233 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.380589774 seconds)
  done (took 101.458278404 seconds)
done (took 374.735698056 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.632116745 seconds)
  done (took 3.892096128 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.371054383 seconds)
  done (took 3.631167408 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.66190531 seconds)
  done (took 22.924108479 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.4146943 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.482552616 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.383997329 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.370137855 seconds)
  done (took 10.910378195 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.679804487 seconds)
  done (took 3.939406769 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.381167406 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.375455965 seconds)
  done (took 6.016919028 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.572471652 seconds)
  done (took 3.832032654 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.557622319 seconds)
  done (took 3.819424596 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.40190054 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.385701117 seconds)
  done (took 6.054774497 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.34979473 seconds)
  done (took 3.609739839 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.376134129 seconds)
  done (took 20.636996647 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.382812862 seconds)
  done (took 3.645007647 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.453970463 seconds)
  done (took 3.714474478 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.954079528 seconds)
  done (took 6.215235615 seconds)
done (took 104.101997717 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.367584149 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.369940818 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.370009515 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.366518858 seconds)
  done (took 10.73594426 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.433746492 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.433041792 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.439070624 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.432878379 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.432829222 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.433647538 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.409222892 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.408492661 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.432167816 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.433267096 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.439709211 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.432262364 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.435254426 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.423174732 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.433931891 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.439930561 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.434897287 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.440942364 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.40833467 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.43517816 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.38300722 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.436111603 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.433728087 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.382867289 seconds)
  done (took 35.50880047 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.891549602 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.443790951 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.5289379 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.427994297 seconds)
  done (took 7.555204594 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.461684407 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.464945278 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.482031321 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.51641706 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.551998087 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.480387213 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.408733606 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.406158902 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.392412522 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.465344006 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.51633 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.449160643 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.551147498 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.382824552 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.677843436 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.382906274 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.384634492 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.463957587 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.515029869 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.535989165 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.384734099 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.461770055 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.473177787 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.44986735 seconds)
  done (took 36.52212372 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.391696147 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.40424801 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.384929067 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.40046291 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.387343662 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.387234162 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.388687945 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.393305219 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.387468456 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.385462888 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.386848657 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.400095612 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.386343264 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.386264345 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.392075222 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.388620576 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.389606898 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.394297197 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.396119509 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.387453235 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.386550149 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.392700701 seconds)
  done (took 31.861429213 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.372738697 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.371630825 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.722728315 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.627526533 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.37540491 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.371661861 seconds)
  done (took 14.106743289 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.447211019 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.591935213 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.382566308 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.727795326 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.818789578 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.383724891 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.379100775 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.624342273 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.926896856 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.921621153 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.440278989 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.449785746 seconds)
  done (took 20.360233794 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.37407655 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.378327234 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.37818484 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.393991494 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.433211428 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.387795921 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.386296116 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.372768558 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.439115573 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.437715005 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.388610997 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.434735913 seconds)
  done (took 22.071875235 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472812141 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.383764445 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.381865374 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.460428161 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381534174 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.227062666 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.459146815 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.085003794 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.386768252 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.66005594 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38322652 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478603118 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.63757291 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390886456 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.389475358 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.357939213 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.6180254 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898099299 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389865824 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384300441 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421744362 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.393158257 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.390762636 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.602241418 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.232136254 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383706909 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.647029712 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.383352928 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.676355043 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.656607295 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.656539015 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391625319 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.660206086 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.029644084 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481443275 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.596065751 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383695972 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.390127005 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.373362348 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.389811592 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404120067 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.386046846 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.653895027 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389643048 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.386320021 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386929044 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.098799017 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.391088646 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.386249664 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.386663331 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.654894301 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487439482 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.391394533 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.386731153 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.464380684 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385239434 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.391922284 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.508141942 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947918321 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38530051 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410887913 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.394336645 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.389262129 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403844243 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055827374 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.399023717 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.393117331 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.392709198 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388183194 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.395221965 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.415876944 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386584543 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.40972434 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387774873 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.249374476 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.392622829 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388314257 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96304652 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397287241 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.392547838 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.618712573 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388386921 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38756141 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.386839372 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.388796875 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.135573351 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39757937 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.363051965 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449378437 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.091112623 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.599286736 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413400718 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418758976 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.610707411 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.361930156 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389309773 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.40269292 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392895088 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409523187 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.094626203 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389180476 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.395594501 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.644436928 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.599359314 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394232524 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.370625612 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.873753375 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395204202 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.41512222 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.388784993 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.60789383 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.041197255 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.667012067 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395664202 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429002344 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.391228438 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.201279859 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399060562 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.400821814 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.390190759 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.664785849 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.23513404 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394705855 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458203465 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393990723 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.39058955 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404363521 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3978716 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.392262702 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.586280616 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.406714297 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.665022368 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.396756221 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391206928 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.39128112 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397139679 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.394546647 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.612072885 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396003289 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.672483299 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391405319 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393141097 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392953981 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.61472334 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.39415432 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.398768977 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.653285783 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395065416 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.397032394 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.665642758 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428648412 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.500512708 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421623517 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.40704231 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.651622024 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.397984093 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.398754908 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405882488 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.399707942 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400981329 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.401679398 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405369338 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.047902656 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374461618 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.396413701 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.396875671 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.410256265 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462688611 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.401596932 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.607252672 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.401801057 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391583165 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.404822171 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.395982736 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.623031034 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.661867809 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.398568129 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.475402538 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.872210504 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.043456647 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.413665661 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.394667788 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.39361001 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.394649009 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39411897 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394717646 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.394785845 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.609172337 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.669499868 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.40129373 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.049527165 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401425659 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.401412946 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.405995493 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.663132586 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.406732303 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394725545 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.399536003 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398647559 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40199553 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.667813235 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.536096482 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.412696457 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.395679573 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.914458255 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.40284364 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.395702511 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.395705112 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427008592 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.405188022 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.241360921 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.656556015 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404161506 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.670007241 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.40751762 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.418953006 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.397103114 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396887019 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399745656 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.423264999 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403965138 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.610970698 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.409985688 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403819497 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955781074 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.20471069 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.988666831 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412727761 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.410203076 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.40257669 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.108122743 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397701266 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398266199 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.636536125 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.106660469 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39669271 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.877052223 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.398089339 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.156728837 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.67360209 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.633689266 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408176371 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.400168907 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.689298024 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.614394195 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430866935 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.40075985 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402775534 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.373840773 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.955316794 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397705764 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.479772143 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.106817399 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398531257 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.399233158 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.449899031 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.397313215 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.792594284 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.399078526 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399045247 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.408246219 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.405079871 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.247853875 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.400148411 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400643427 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.069517112 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.411036971 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.885567891 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399918371 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.613600798 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.668412635 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.656900163 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.403654592 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.414629995 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.657622901 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.670392671 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406099408 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.405589391 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.997830928 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.272390856 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.407794617 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400033211 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.208587269 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415394686 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.702224467 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.406010299 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.406189717 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426865456 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.40277061 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40118831 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.400676626 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.409772218 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374178236 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91607858 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.40231946 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424370176 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.410685503 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407337062 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.655809072 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.417461007 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.053048896 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.633559104 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.420992967 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437650595 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.408202809 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403678815 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.378159346 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.401245691 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.401230751 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.451635226 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.623352902 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.406877481 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.380256473 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.435738314 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.61306094 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.401465001 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.404735437 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.629619359 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.400838918 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.403922046 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.213972563 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434994787 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.402948023 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40387792 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.407765345 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.445403115 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471044995 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.617666914 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.673902519 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.679630678 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.799512857 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405268048 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404888726 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.416521974 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.49929223 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403037033 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.423217423 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.183894831 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.058816933 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.21491478 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.059623057 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.681458024 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.409250362 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410156085 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404147311 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.541824474 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40401543 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.679956191 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405775693 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.399360457 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.45001494 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40706766 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407989804 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.619900244 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.680871029 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405420223 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405057252 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427139182 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.406972499 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.680436573 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.621212226 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920976135 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988841047 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411348802 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.412511123 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.119202056 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.68151681 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404478822 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.406806661 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407768715 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.410547017 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.405943523 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.417642157 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41641181 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.541557421 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.67773246 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05709507 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.6762569 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.449867564 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.926367114 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406738404 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.664695854 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.173978283 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.620676125 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.062535793 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.177257029 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.675560188 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478803801 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.621469246 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.406805813 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.54224964 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.410748775 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.413659083 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.409165364 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408973615 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.408105672 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.679879712 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.072323982 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.679150191 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.413888222 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.414338785 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.44343656 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.623119631 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.630665953 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.173742802 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.632197698 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.684001511 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.421239175 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.410533509 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.06968731 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.688270206 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41522196 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.415228769 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.636006303 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.410040497 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.436837768 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.927068974 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.4071282 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985846394 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.302264395 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431575724 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421035099 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.183142324 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.073545703 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.415168882 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932037688 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.416268837 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41198018 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.691023175 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.417029824 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.420660577 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.69347704 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.415290557 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.422029667 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.631068519 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.065562734 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.1876977 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.417811727 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.426362142 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.416970995 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410328552 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.434764153 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409288421 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.419793962 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.812555861 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.41024339 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411340132 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.423417855 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.421377875 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424125387 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.415904612 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412414913 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.418621014 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.388493698 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.396416386 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.421518494 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.538787684 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.970191035 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419435565 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.088765437 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.763022502 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.665887923 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.412910848 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.392492433 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.418020191 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414481264 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414351035 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412463214 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.407384761 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.013860971 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.41781381 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.691464343 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.424675041 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.624646866 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.62475085 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.420259166 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.630064191 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425125098 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.442502753 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.387003326 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413156503 seconds)
  done (took 993.865400005 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.439106795 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.412666861 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.413987983 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.460985457 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.411253442 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.473898746 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.477852294 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.504915505 seconds)
  done (took 20.888682574 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.419388886 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.41433837 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.417052792 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.414101529 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.405610573 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.891601032 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.411969859 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.416692306 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.427955353 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.422400047 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.421120457 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.102860553 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.435835396 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.407748634 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.396671128 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.421904613 seconds)
  done (took 33.123568064 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.545002369 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.615691443 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.468070983 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.484089687 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.410052818 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.41765654 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.673829736 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.42465593 seconds)
  done (took 27.335185164 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.421763163 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.421336444 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.420003187 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.420971904 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.420901266 seconds)
  done (took 8.40259186 seconds)
done (took 1263.600497604 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.422663951 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.42187005 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.422280815 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.422742551 seconds)
  done (took 6.986046822 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.391597067 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.391785816 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.39578615 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.406907266 seconds)
  done (took 9.883350975 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.132279944 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.030144961 seconds)
  done (took 5.459133485 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.908803303 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.911843255 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.905203481 seconds)
  done (took 7.0242116 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.700295612 seconds)
  done (took 2.998301546 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.328856186 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.413315847 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.08966838 seconds)
  done (took 8.12773766 seconds)
done (took 41.774576596 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.408697619 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.655016611 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.564088763 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.409616345 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.570192252 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.564543255 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.21508653 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.411047612 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.415825637 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.413019048 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.408315504 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.570199159 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.133013774 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.654924841 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.133599581 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.65737084 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.571368051 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.417775393 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.415186412 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.410090553 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.21816086 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.422597374 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.409300706 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.421749953 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.571359756 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.553526461 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.414433825 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.655109472 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.409518134 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.435295919 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.555346256 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.412660222 seconds)
  done (took 83.775341152 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.411074003 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.411052519 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.444558266 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.410816541 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.429289833 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.442796377 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.412811249 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.414766777 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.415914761 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.411108706 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.411829977 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.426453661 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.411220872 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.412479602 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.411652316 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.412015652 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.411424859 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.411118755 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.412604485 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.411955924 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.413554176 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.413071892 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.417192752 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.416160737 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.413333904 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.428704814 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.440647407 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.415309393 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.412677525 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.411788712 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.432605421 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.426753452 seconds)
  done (took 78.677853426 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.419070276 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.417450857 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.416882462 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.418420706 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.413569052 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.417345223 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.419133223 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.415778358 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.419186592 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.417246941 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.413518288 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.412294874 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.432477779 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.412223677 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.413401792 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.412473712 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.41472107 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.428905579 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.417780546 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.41905136 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.414030598 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.413904928 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.428153385 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.413305869 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.418940529 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.415797679 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.424643459 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.418028605 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.41614751 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.414413502 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.435855596 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.426527644 seconds)
  done (took 78.69111586 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.656842694 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.42849865 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.432238729 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.424664168 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.432824417 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.427041761 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.422965499 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.701944631 seconds)
  done (took 15.230291038 seconds)
done (took 257.672051855 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.4387326 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.931843187 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.454053548 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.428606921 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.439400132 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.449023912 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.64572373 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.448288722 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.646894866 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.452345842 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.437482068 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.424205695 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.235755181 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.577593398 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.264374437 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.383235884 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.310008635 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.421752384 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.002790189 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.710114315 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.448013684 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.417162076 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.265488022 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.324837082 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.410540235 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.501683006 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.52122917 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.66091266 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.58717302 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.50135086 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.938035828 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.426888849 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.43796644 seconds)
  done (took 65.846850559 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.423650543 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.431113429 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.433745368 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.43107432 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.431732626 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.431851842 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.423014389 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.430871059 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.430612054 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.430886392 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.43122538 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.432954928 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.43050265 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.431249749 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.431018005 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.410211647 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.422832204 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.432045406 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.422878455 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.410741483 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.433212022 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.43322581 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.432661818 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.433238834 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.430623588 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.432581584 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.431517177 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.43353098 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.432319928 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.433155875 seconds)
  done (took 44.18465304 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.433335031 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.00508098 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.154845168 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.431445629 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.424798565 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.430499742 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.716298703 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.43583429 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.427863826 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.429025133 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.910490911 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.436066387 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.457572195 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.16847716 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.428671324 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.435649053 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.433494138 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.426177638 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.035790728 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.439769549 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.715699589 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.437179111 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.717429413 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.436060967 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.429267198 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.427534933 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.431037119 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.247488558 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.447356987 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.909673777 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.224463477 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.717378849 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.169377305 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.226219449 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.227426447 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.441329001 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.43587263 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.92709709 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.433840622 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.428518155 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.715506021 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.428936655 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.175415162 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.12500252 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.450664982 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.435547069 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.261910045 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.941103716 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.678700761 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.434400367 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.238440643 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.435792348 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.438711258 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.430049014 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.674185496 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.432111874 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.429134122 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.276541369 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.450475027 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.717752316 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.438189191 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.429316327 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.027490719 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.435348155 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.022784423 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.431200625 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.438595283 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.430954004 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.201550963 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.439013329 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.127085984 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.451191762 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.437513356 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.911748942 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.018831346 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.331784131 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.432232474 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.026682599 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.208152758 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.736422008 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.439869846 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.237047162 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.739153479 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.438411605 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.439612938 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.439494999 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.437966803 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.501692127 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.717296501 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.054423495 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.13313425 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.288038504 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.738212787 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.443657964 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.431484774 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.278078583 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.456842687 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.439329852 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.201025967 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.122901768 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.450808244 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.438205903 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.103703189 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.453544971 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.722192603 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.442216959 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.228492736 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.435270342 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.503588199 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.440988905 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.437552347 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.435391415 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.72378827 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.442283213 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.440368634 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.101572606 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.944977681 seconds)
  done (took 199.670575417 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.427515593 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.426945894 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.428139807 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.427370093 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.425043911 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.437300879 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.428185233 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.428855477 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.432326216 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.428409657 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.428296429 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.433779735 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.433614188 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.427887483 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.428503548 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.427825749 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.428252463 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.446159869 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.429146841 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.428429633 seconds)
  done (took 45.914485965 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.442235156 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.000479691 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.976189415 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.442496114 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.442829665 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.434657439 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.489643765 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.443918495 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.441396651 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.740161134 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.612876872 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.446567925 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.444580321 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.444015009 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.969917306 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.425941024 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.737000554 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.000688015 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.443423649 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.997025433 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.42138019 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.443878535 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.434295868 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.997382984 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.750837146 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.727209624 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.49779624 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.000108554 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.44468948 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.44390289 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.998596475 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.443794243 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.437125322 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.991188392 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.443995335 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.458618785 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.445384825 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.494439336 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.497106409 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.7388139 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.006195572 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.736000355 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.459988423 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.603893115 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.447228741 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.421437638 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.012820047 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.446938409 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.422651594 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.447630978 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.448925705 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.985537952 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.44277512 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.986501083 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.450857668 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.447871716 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.002333026 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.987449039 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.980388446 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.617993563 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.437537246 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.728041103 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.451825876 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.020951206 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.452513787 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.448700697 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.44705399 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.614264186 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.006194237 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.732706459 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.7502585 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.751165271 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.454201722 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.507288228 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.450695485 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.745835078 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.510661472 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.836744043 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.750757266 seconds)
  done (took 130.255191908 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.708279845 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.557380416 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.811850177 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.037125704 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.961660253 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.583293876 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.554469691 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.6862962 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.448551436 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.556138272 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.101795376 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.54761502 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.17288671 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.527015659 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.550531796 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.566180459 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.851057667 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.438368047 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.103844018 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.061583751 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.446300249 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.555854359 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.948690079 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.628976562 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.449767776 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.001333419 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.404615272 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.965982585 seconds)
  done (took 54.546171384 seconds)
done (took 541.720576671 seconds)
SAVING RESULT...
DONE!
