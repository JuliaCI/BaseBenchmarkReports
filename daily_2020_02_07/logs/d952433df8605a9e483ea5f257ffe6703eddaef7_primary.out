cset: moving following pidspec: 6243
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.448002649 seconds)
loading group "string"... done (took 0.619388386 seconds)
loading group "linalg"... done (took 8.040345858 seconds)
loading group "parallel"... done (took 0.17183255 seconds)
loading group "find"... done (took 1.207036563 seconds)
loading group "tuple"... done (took 1.962370387 seconds)
loading group "dates"... done (took 1.333563086 seconds)
loading group "micro"... done (took 0.250338667 seconds)
loading group "io"... done (took 0.979651759 seconds)
loading group "scalar"... done (took 40.843689465 seconds)
loading group "sparse"... done (took 12.431979408 seconds)
loading group "broadcast"... done (took 0.99354501 seconds)
loading group "union"... done (took 12.939281288 seconds)
loading group "simd"... done (took 4.731717545 seconds)
loading group "random"... done (took 9.554168692 seconds)
loading group "problem"... done (took 1.888784246 seconds)
loading group "array"... done (took 21.936595839 seconds)
loading group "misc"... done (took 1.710613905 seconds)
loading group "sort"... done (took 3.49784112 seconds)
loading group "collection"... done (took 17.896985208 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.53042514 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.130698397 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.132702077 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.124894701 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.15196459 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.119816925 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.133013912 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.090880049 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.897882189 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.154452869 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.122807364 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.443449137 seconds)
done (took 5.385359701 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.177939878 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087446615 seconds)
    (2/2) benchmarking "String"...
    done (took 0.087466085 seconds)
  done (took 1.344658992 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.069056998 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.130562093 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.071314762 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.071643006 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.071114669 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.070506672 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.070675533 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.070834195 seconds)
  done (took 1.727705194 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.077158058 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.073920924 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.069442194 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.072623157 seconds)
  done (took 1.464696894 seconds)
done (took 5.964330534 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.812624822 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.217521401 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.19411199 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.431536841 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.1344281 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.168324473 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.666730554 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.321710209 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.197310257 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.085624283 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.115195624 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.35639596 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.113473052 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.648486889 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078545694 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.095844204 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.139933478 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.416394445 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.071134337 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085698499 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.092422967 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.133202544 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.090869651 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078076463 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.150522984 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071979107 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.141342786 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083873601 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.070294978 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.226425139 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.176358261 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.653738944 seconds)
  done (took 10.530666182 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.104925681 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.105638032 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.072281152 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.130825634 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.10890804 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.076157201 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.081333372 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.07205109 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.095777084 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.135611754 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.097042702 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.108232438 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.069995493 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.07299867 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.089340457 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.209999563 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.087610387 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.087104281 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.074971034 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.083534437 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.112723619 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.082472864 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.084907179 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.084861186 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.133026362 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.184495399 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.100473115 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.101364642 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070680517 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.087457733 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.119191825 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.134139442 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.072350603 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.07163949 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.132790691 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.099538636 seconds)
  done (took 4.843170878 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.054732021 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.150173629 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.094331415 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.14056578 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.069037606 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.114052256 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.07021655 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.08541062 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.217603846 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.349659186 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.642588567 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.118037273 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115035391 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.111502859 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071210046 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.068665635 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.074495082 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.071666424 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.588703853 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.102374954 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.11348007 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086329695 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.074790667 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.073384496 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.360574839 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072366052 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.06812044 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072700766 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.061175499 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.13071891 seconds)
    (30/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.068224385 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072247869 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.985104328 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.16791583 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070667087 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103853902 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.295757016 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09533647 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.149822721 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073715524 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.069461695 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.161988831 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.075743019 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.070208082 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.08812111 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107418314 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.12316181 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.072246418 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071093118 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.170265586 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068637633 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.083503323 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.130855803 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.155738484 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.080469421 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.069028138 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.264328326 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.092895607 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074286105 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.068653343 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.206458552 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.133022967 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.071763965 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.070096231 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072708767 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.072979868 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.36524587 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.070316878 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.228917074 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071673876 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.080124632 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073821017 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073413807 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077484312 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07652596 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.092053243 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.069778706 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.079333775 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.069730383 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.069526302 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.070492658 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087231819 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.406861323 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.070680973 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.072320455 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.068421999 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.093509304 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100531439 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.172794547 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.070587534 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103218302 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072367791 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.070892101 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.113523455 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070844199 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.087794783 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.073511298 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.116555022 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.07119311 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.111406555 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.074601418 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.104123068 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.073740559 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102669925 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.085118287 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071464241 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.449211096 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.069731545 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.068819778 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.072607441 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.069914447 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.071796841 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.07052876 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.067967282 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.083182833 seconds)
  done (took 22.667999989 seconds)
done (took 40.265753216 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.269966901 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.077445952 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.077476586 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077632768 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.07768696 seconds)
  done (took 1.845883503 seconds)
done (took 3.09146076 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.128107336 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104860541 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068112899 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.10224203 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067953652 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.106692802 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.105699409 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081177234 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105326864 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.068251971 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102060885 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.067905164 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068076436 seconds)
  done (took 2.442218766 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088368011 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.089388177 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.075170601 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08779107 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067351829 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087615789 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086007005 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.09401218 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.085633557 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076771142 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067716945 seconds)
  done (took 2.145567081 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087396621 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088329976 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.074488182 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087041665 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067318357 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086941391 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086571629 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090514777 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.087276311 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.078229671 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067532095 seconds)
  done (took 2.137273472 seconds)
done (took 7.957166863 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.082303057 seconds)
  done (took 1.310578156 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.606780406 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.131894385 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.085703506 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.117014474 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.197776998 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.12405718 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.277883029 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.091276927 seconds)
  done (took 9.04756461 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.093715633 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.074044578 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.086267645 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.075094393 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.073281389 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.072564735 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.072376915 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.075583608 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.075104305 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.076026119 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.076012638 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.0769176 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.075421456 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.073687641 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.072566595 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.073022194 seconds)
  done (took 2.521921121 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.096997599 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.095866321 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.077136408 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.078269864 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.076290793 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.075321732 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.07799312 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.077624955 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.074590885 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.076316359 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.078203896 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.07737727 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.075493723 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.068477431 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.078028929 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.079020989 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.074362572 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.077429696 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.078099685 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.079469756 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.078621606 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.067929925 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.075029261 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.077688506 seconds)
  done (took 3.211549187 seconds)
done (took 17.32723256 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.110449254 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.07164512 seconds)
  done (took 1.418680085 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.085108054 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.086499849 seconds)
  done (took 1.414248867 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.086815183 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.069315262 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.094183318 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.081777134 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.069917672 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.069215159 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.0920525 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.06937262 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.069233651 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.069472301 seconds)
  done (took 2.014833165 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.071975064 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.08149457 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.074026998 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.085131258 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.076953185 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.067790581 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075747312 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.07114805 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.081395015 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.066504289 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.076261813 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.087057561 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.074845955 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.088657924 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.075680427 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.071935526 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.075269093 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.07119469 seconds)
  done (took 2.618919156 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.068936071 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.070231318 seconds)
  done (took 1.388544722 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.070777977 seconds)
    (2/7) benchmarking "second"...
    done (took 0.067073275 seconds)
    (3/7) benchmarking "month"...
    done (took 0.070891653 seconds)
    (4/7) benchmarking "year"...
    done (took 0.070415987 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.066928334 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.065933188 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.066894759 seconds)
  done (took 1.724029645 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.391801393 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.119272859 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.3261082 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.075084634 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.086532991 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.268956024 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.070169395 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.074855619 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.074988173 seconds)
  done (took 2.778808936 seconds)
done (took 14.606892571 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.084948925 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.09080285 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.100318858 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.395356525 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.095414958 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.070318161 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.117141629 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.195173841 seconds)
done (took 2.407442437 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.218104121 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.722390964 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.44546761 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.218249493 seconds)
  done (took 2.639595885 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.356594642 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.092961912 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.062393428 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.070418219 seconds)
  done (took 1.842875255 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.0714744 seconds)
    (2/2) benchmarking "read"...
    done (took 0.073370906 seconds)
  done (took 1.403469623 seconds)
done (took 7.358696168 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070102757 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.069490306 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.068309625 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.070119691 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.090610057 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.066916197 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.066895263 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.069810454 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.069828709 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.069776993 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.06981372 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069219654 seconds)
    (13/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.067079636 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067020272 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06694421 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.069557137 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070272482 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066757176 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.067757695 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067243594 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067199911 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070595479 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066827542 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.06698233 seconds)
  done (took 2.960896305 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.088011376 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.069674469 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.074975989 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.075109318 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072640967 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.074859924 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.07465193 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.070213588 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.074538906 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.07183673 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072757354 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.073280983 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.071673692 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072879741 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071590731 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.073182873 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.074913675 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069297311 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071763157 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.072821443 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.187670362 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069590469 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072455859 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075056272 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.073148377 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072175178 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.071691188 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.069440629 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074982853 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.072773477 seconds)
  done (took 3.577684181 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.073091196 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.066746481 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.067014979 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.074279358 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.068181673 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.068346018 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.066958916 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.067341786 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.068337736 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.067524435 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.068358096 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.066747822 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.066881261 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.067969602 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.067738629 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.070784282 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.082894582 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.067263787 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.068313973 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.067663472 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.070021221 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.06743422 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.067799262 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.066990157 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.067265224 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.066771393 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.067388435 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.067341783 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.06760291 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.067143015 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.070787467 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.070611937 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.066594132 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.074438647 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.070573035 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.067277745 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.071395413 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.067040581 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.067859321 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.06626489 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.066400103 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.066795312 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.067022485 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.074453632 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.066848649 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.068092265 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.067396559 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.068792093 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.067232625 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.069285987 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.06688151 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.066887021 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.069264727 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.068110004 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.071997707 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.067005608 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.068360741 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.066872974 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.067766167 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.067327986 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.067198423 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.066909439 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.06971985 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.068343152 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.082852098 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.074427959 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.066813566 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.06915338 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.068089356 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.070082126 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.068786879 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.081834657 seconds)
  done (took 6.237725319 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.093990534 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.091220163 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068799056 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069413441 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065115045 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067702015 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072969118 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067765967 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068910405 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086070255 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067669115 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069398868 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068787105 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071434668 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067700491 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068717069 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075775195 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065421395 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.067521268 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07157496 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067788762 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073087182 seconds)
  done (took 2.866638699 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.159978482 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074006912 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.110306715 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.079890659 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073556926 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.078614486 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.073421043 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073791752 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07326503 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070878207 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071001648 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073666048 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074151755 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070993435 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070774182 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070887588 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073127233 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071144192 seconds)
  done (took 2.717035869 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.080661133 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.069214199 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.090535721 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069534769 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.070175828 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.071618205 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073681597 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077922325 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.072072823 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069521214 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.077416638 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071968082 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.071900651 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069225566 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072347442 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069500511 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.072555023 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069666554 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077511107 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074300424 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073703897 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077647189 seconds)
  done (took 2.897974802 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083592127 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071552535 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.085586395 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.072184636 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065355915 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067792409 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.073659606 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.069301576 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.074330151 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.071888764 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069262026 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.067706366 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072732662 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069344408 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072482446 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069327668 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071699313 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070149477 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071690215 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065064434 seconds)
  done (took 2.711565902 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090147644 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071620406 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071418403 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079716472 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071381371 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071349465 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078608732 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071347488 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071463782 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.092864488 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071703726 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072296602 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079857937 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076407006 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071237506 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07919859 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079002601 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078673798 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071602535 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071492619 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.092315167 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071244407 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078732141 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071932109 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071938663 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071844321 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072165263 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07639559 seconds)
  done (took 3.406315993 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069628041 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069941665 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.0674207 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.067334023 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.067123219 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.067065309 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.067031382 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.067146335 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.070391739 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066777246 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.070107933 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.070121839 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069949079 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.069485931 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070116089 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.069803601 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070178574 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.067338706 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067067284 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067510817 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.069574728 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069947858 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.069742105 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067858708 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067323546 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.0696075 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066788201 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06717751 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070075395 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067511486 seconds)
  done (took 3.33906766 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.079075251 seconds)
    (2/2) benchmarking "in"...
    done (took 0.07675845 seconds)
  done (took 1.438549866 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066439617 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084376763 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.067831099 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074090635 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073180201 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.071596853 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077043994 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073003171 seconds)
  done (took 1.867477454 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085814085 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.082044511 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.071223611 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.083856523 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.080726269 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.087881386 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.141634191 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.071091838 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.076064846 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.068466898 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.086647816 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.069037902 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.07668359 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070372288 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.07622556 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.077092007 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.067537313 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.076197878 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.072268588 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.068338228 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071270573 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078966212 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073378615 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.066181054 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.07163054 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.095208396 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.081604323 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069899726 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073577885 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.077800044 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.076474521 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.064027078 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.070440274 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.070818449 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.067460812 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.079988205 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084890384 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073098821 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.079200417 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071512011 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.079927107 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.065069004 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074445829 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.077255552 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080734676 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.070544168 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.070356275 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.064792778 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.067808052 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.072949896 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.064879387 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070454314 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.064505741 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077369766 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.073886661 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080994474 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.069029746 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.07226432 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.073287738 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.073657109 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.07709776 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.07225188 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073430972 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.070058887 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.080878696 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.075465923 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078968317 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.065153389 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.064241381 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.068350972 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.079957663 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094497592 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.076756274 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.071306306 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071234561 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.06812415 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074155862 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070941909 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076625008 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.076792232 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.070231345 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075821828 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078252691 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070351686 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.0727878 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.077902101 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.068682075 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.072634613 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.068238635 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.087136261 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.06962871 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.068352359 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.068402248 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.080907969 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.07390115 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.070164939 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.068391117 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077934533 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.063952264 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.071196733 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071332661 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070697346 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.080484952 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.0749538 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074697407 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.078765393 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.076989419 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069856024 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.072208693 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.066052275 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070703532 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.068452643 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.07727346 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.064019509 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.197375687 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.07250478 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.072543601 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.080613298 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.0693067 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.070933333 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.078856825 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.076393831 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.070422255 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.066897962 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.074292432 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.071417049 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074251383 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.079640036 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.070046841 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.066368882 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.065050171 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.073628433 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.070287213 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.074281379 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.075216619 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073616199 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.065271737 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.068424371 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.076100863 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.080206008 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.071183877 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.071709077 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.07623606 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.071771814 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.069974485 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076816349 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.073073206 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.069340605 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.077027201 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.070988235 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.065212522 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072967845 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.072938884 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.068996671 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.074413526 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073719434 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.073210628 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.07137092 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068962519 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.077431105 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07146116 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.069743182 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070594987 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.069301859 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.080201582 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.072024846 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.065545807 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.068003428 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.078943204 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06847916 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.070057278 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.069947416 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.072525075 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.071800154 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.068431273 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.070442351 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.07294858 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079774734 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.074163804 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070863159 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.075770418 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.081842515 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.070116027 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.073103843 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.070114868 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.0721578 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.070458155 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.0800414 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.076296456 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074638775 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.073194827 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.067984191 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075809719 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07886333 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.069802948 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.068515924 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.069287029 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.074579326 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.076807542 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.074907907 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.070830523 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069324336 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071459568 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073485107 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.073601272 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.070127252 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.069908439 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.076940962 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.06838741 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.07768677 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071246855 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.08120899 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074268714 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.065441453 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073115475 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068527618 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.076317249 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.065049505 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.068574232 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.069192871 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.070870139 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.06996382 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.072310262 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.064156886 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076696896 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077156542 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.070572179 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.069391858 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.069193068 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075929626 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.070673672 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073001371 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.073362115 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.203474682 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.08176403 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.07049258 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.074610034 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.0823186 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.070905678 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.064397218 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.077550578 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.069207432 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.070568525 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.070643034 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.068397274 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073723216 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.080439064 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.077996105 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.064447373 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.073240816 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.069242773 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.070303987 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.06646801 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.075981651 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.074116791 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.071492782 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078463065 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072079586 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.070361697 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07469341 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.071230832 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.072481149 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.071975013 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073415737 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.071332628 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.072380997 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.070222744 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.073659649 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.07011137 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.067713415 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.072178781 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.070625243 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.070924722 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075601621 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.070431884 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070622361 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.072813099 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.070978586 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071422526 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.070662026 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.069811907 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073687308 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072048139 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.070666503 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.073363127 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.065520615 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07842568 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.069858716 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078793011 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.071130208 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.067511475 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.076827545 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.072782929 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.075678514 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.071106678 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.071988305 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.071770944 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.069983822 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.072987149 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077404493 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.068386411 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.081586921 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077792484 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071545877 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.074120725 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.071084663 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.072411799 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.069757496 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.072040917 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.071787288 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.070899989 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.070184592 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.075186592 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.073539725 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.0709477 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072699147 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.071293444 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.0715173 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.071782715 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.06457618 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.069580856 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.069973175 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.07276817 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079851051 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.071395584 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.070412471 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.070717321 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071437471 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.070154103 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.06709726 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.078518305 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.08010429 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.071352382 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077744494 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.069797549 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.071938687 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08151191 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.064076168 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.06848341 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.067942253 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.068532638 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.0780712 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.070577564 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.080178539 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.070334355 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.069676473 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.066902746 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.070558837 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.069067657 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.064318886 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.067199513 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073397588 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.068773422 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068751663 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.20005763 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.0739615 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072834503 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.081052198 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.07116011 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.071753932 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.071527746 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.067785081 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.070668545 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.070114975 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.074071572 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.072362947 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.068236568 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.068759762 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.070293761 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.071516755 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.072233084 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.071099442 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.072941141 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076882828 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070649784 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.074145792 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07301529 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.065248998 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.07352191 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.070835917 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.070416093 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.069939616 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.074231673 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074186761 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070980715 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.08057614 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.07033503 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071668109 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070513827 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.068147916 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.07037393 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.070693514 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.071668045 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.07018501 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.072007073 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079492005 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.068534901 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.073778984 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071254031 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.071011911 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.077550682 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.07227122 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.074234883 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07722568 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.07097576 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.072141781 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.078814608 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.074379816 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074318404 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071448761 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.071756046 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076871637 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.069535862 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.077270683 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.070943335 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.071496825 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.072770981 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.068008651 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070143571 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.070111056 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070297971 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.077964323 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.071627833 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.069761659 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.069701017 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.068303545 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.071006701 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073071387 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.079052643 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.073246571 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074052958 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.065074982 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.067273801 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071125862 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067904001 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.071837459 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072717385 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076351086 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.072520225 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.07080897 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.069667861 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.079509047 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076065038 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.074005974 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.068510706 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.075159403 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.071162183 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.072445103 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.072014891 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.071568834 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071966299 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.074895074 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.0723811 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.070632729 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077896882 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.074026956 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071677672 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.072007947 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.071331644 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.07095446 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.0652223 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.070407628 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.07217022 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075250817 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.072490702 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070293627 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081032182 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.068593166 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.071468421 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07248839 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069383118 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.074749227 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.064674804 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.071476048 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070681282 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070271709 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.194609811 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.070761339 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.069425155 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.073401153 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.07029173 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.065692473 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081762971 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.079955437 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.074362564 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070273014 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069636 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.06571878 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.065121648 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.069855157 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07182283 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.072809 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.081267451 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.069622722 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.070867286 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.066127705 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071311231 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073243258 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.073274142 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.067681295 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064815768 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.069838202 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.073302358 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.076289481 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069080126 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.070283892 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073782263 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.072380454 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.067757722 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07379042 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.067630128 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.074399627 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08328799 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.070694466 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071150997 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.077854143 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078027895 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.06985019 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.065521791 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.070392938 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.074432577 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.071707304 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.071457076 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.071846751 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085453126 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074344551 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.069649436 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.069006925 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.074060216 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.069899648 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.078386319 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071774537 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.070667269 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.074811103 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.072303623 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.078794485 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073260038 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078082041 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.073819817 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.073723773 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.069434585 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.07085121 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.068527707 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.069774298 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.071089426 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.070822516 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.075513465 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.078579214 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.069419836 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081905756 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.079360701 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.07295468 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.066912015 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.069530287 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.070026037 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.065596625 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.071772025 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.06870297 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.06865114 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.068870915 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.069857703 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.07182535 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075989883 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.071884566 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.070609979 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.070352852 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.064623175 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.073259902 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.07381657 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071441381 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.066859622 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.070605756 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.071141006 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.074420773 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073852113 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.068323904 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.072399241 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.072666538 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07138142 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.064986361 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.076809912 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06961878 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.072233578 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.069567758 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070461509 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.070727585 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073967093 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074890046 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.071470611 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.072879002 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.073664864 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.071971257 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.067284445 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.066889074 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.075257788 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.067305878 seconds)
  done (took 45.066094321 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.107263062 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067179076 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065762841 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.065445709 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07668108 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066784303 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066296914 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066751785 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06750259 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068481848 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.065391342 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065898378 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073967817 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081046104 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077206093 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069724252 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065818885 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066359439 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065708492 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066626294 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073704182 seconds)
  done (took 2.868823784 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.078069829 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.08106245 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079875007 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086187673 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074461681 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.073997044 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.078553306 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074101545 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082055714 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075992333 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082046904 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07395955 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.076142765 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.075841929 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076668883 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074665621 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084227907 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074318495 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.073971984 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078800788 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074151344 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.078494025 seconds)
  done (took 3.056731482 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.071236894 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.070085045 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.072187721 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.06499042 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.069754938 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.065414459 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.072623452 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.06799218 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.073078767 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.068749843 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.069487614 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.068609616 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.071617387 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.065163989 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.070133597 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.067210038 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.111769768 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.073423839 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.06989738 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.070218285 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.065160213 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.072281283 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064850442 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.065462668 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.068561779 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.073282898 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.06996513 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.068172644 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.069797643 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.068767582 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.070235516 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.067173689 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.071477013 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.070174717 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.069334057 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.068912384 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.069327426 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.069618517 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.065517992 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.068128338 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070571877 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.06561003 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.070216673 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070906791 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.068317404 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.067360715 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.071368853 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.069420023 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.064247978 seconds)
  done (took 4.78002124 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.083869546 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.1139165 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.07091243 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092982208 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.083113052 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075954722 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.073534562 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.094257552 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.067021746 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.067523873 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.084605625 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.081955764 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069594121 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.073557163 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.073076787 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068842179 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070254205 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068238309 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.072725616 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06890568 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.072704684 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.075661627 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.083516533 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.081593992 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072794445 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068176328 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068131286 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.073408631 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.081226785 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073345391 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.074116019 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074962519 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.083940154 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.07114617 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068142074 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.071141896 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.084711335 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.069209749 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.072167507 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.066924127 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.07151417 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.074032353 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.076071618 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.085290016 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069501657 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.074326495 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068970941 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.066614022 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.08098572 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.071550861 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.076012707 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.082467208 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072653385 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.069007791 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073580302 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.083566651 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.068917641 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.067336935 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.071876715 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.080740024 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066663467 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073277986 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.082008851 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.071464024 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.075695212 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.083161782 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.073959727 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.07245567 seconds)
  done (took 6.622671512 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.080842482 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.100665201 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087721453 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087090974 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078940392 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.07945334 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.079406308 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.078776468 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079941127 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.083428903 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079727327 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.120105818 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.074348283 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.081533332 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079521577 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.07908533 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.079706944 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079530953 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.079075741 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078841963 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.079126748 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.086610776 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.079672986 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.086857994 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.091656894 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.074402103 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.078656408 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079522995 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086810877 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079528667 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.083034896 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.079005417 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079395377 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.087139246 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.082667049 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.078677102 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069395212 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078931158 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.079415969 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.07954195 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.075373313 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086737343 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.078886323 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.074805707 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.0794689 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079120471 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.086880346 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.083932038 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.081726866 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.084035791 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.079228631 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08645686 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07864421 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079846346 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.086613454 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.089484089 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08756869 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.086761603 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078953862 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.086514301 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.086793154 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.089182865 seconds)
  done (took 6.488121991 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086966409 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.078085065 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.085477265 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.065409447 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067967915 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.075390503 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067615804 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.067873601 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.078021131 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.077456732 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080151707 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075549464 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078201446 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080218161 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07485013 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078074005 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075133714 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.075579883 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07791034 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.075161046 seconds)
  done (took 2.895053886 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.078845377 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.086863522 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.070266899 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074438865 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.073032357 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074691217 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.072478058 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072892014 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070264236 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072436231 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.079479739 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079184613 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070246016 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074716586 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.079046769 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075344202 seconds)
  done (took 2.572555883 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.088240848 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.076909165 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.083743452 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.070199439 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.070133482 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.066038966 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.069116914 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064717788 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.065653398 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.082074237 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.06957784 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.080759904 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.069157319 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.068660077 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065850823 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.074816465 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.066731644 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.067197299 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.068970075 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.081913179 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.073199714 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.068444397 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.073353896 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.069335923 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.072189756 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.07383744 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.068391752 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.069904117 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.0667607 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.070015005 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.072792858 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.072647233 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.066471689 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067492927 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.068595921 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.067272271 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.069892301 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.069494548 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.07512442 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.069966088 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.068077422 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.071392733 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.069379188 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.0701461 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.066042409 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.070436101 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.06559041 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.071815978 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.067135841 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.072769653 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.069669763 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.072050431 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.07016123 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.076381608 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.072224207 seconds)
  done (took 5.277583767 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083257849 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073303349 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065455308 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067481824 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.072479814 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.071174671 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.073036023 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07058638 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070715586 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.067630105 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071036313 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.072874232 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070587955 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073439491 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07108484 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073399529 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065101211 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070548117 seconds)
  done (took 2.663367716 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.076069688 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.070530797 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.077122918 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069781864 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.069348378 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071844638 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066110738 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.068541661 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068696543 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069842156 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069533501 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.071861586 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070339512 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.07146871 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.069271904 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069273363 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.071571296 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069259007 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069814671 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065622858 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071608593 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067747687 seconds)
  done (took 2.919542234 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.098309718 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.086448216 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.145035757 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.082676172 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.089236118 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.075067556 seconds)
  done (took 1.951935906 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095340568 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104474551 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069842981 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073241717 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080463584 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073346269 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073317376 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073508341 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08186331 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07941051 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073770495 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082448552 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081754518 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081418737 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079748741 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07950759 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074524925 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073955697 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070009363 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087255464 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073764622 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081961434 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073591713 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07315413 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073561206 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081208544 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081738585 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079405021 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073213931 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082238376 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079173839 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073623624 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082222224 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079580388 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072916074 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081893169 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074184917 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087356164 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079401288 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081135809 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.072870827 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07938474 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082918778 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078411157 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082340626 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073819764 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077992101 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073825671 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073756769 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08957931 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079811921 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081561205 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080011601 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082731796 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08221269 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089529234 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080128036 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081452352 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079889556 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07980545 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082162388 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079514495 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081096681 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079145852 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079421065 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081322726 seconds)
  done (took 6.614842356 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108655004 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070842823 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074411843 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080615672 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08108367 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073814828 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074375111 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073910167 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073999973 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071349012 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112301358 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074010788 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081013144 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081138608 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07403113 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073797444 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0740185 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081230527 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070360116 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089084097 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074045477 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081260536 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081282633 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080993713 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079796469 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08004588 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073649828 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074042 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073378577 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073457569 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078211241 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074247722 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081299878 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070342028 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080871487 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074267737 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073727548 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078314123 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073718215 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080075085 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081211435 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087518079 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073594613 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073453977 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079456094 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074341495 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073733996 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071292669 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073833417 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071022953 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080181041 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079085437 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079620949 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081132445 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073712236 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07363346 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073732354 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074310885 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074255896 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079795044 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081373279 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074560922 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090279301 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073952161 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074376442 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081426436 seconds)
  done (took 6.525822445 seconds)
done (took 135.579999287 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.192793887 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.173053266 seconds)
  done (took 1.734816036 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.073329768 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.103527222 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.080747861 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.132422065 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.070780568 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.104368071 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.103243395 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.082013479 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.069825067 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.07057573 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.070188771 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.072554741 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.135262505 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.069773505 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.070217321 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.072357106 seconds)
  done (took 2.763060048 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.103940135 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.169609646 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108754542 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06890868 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104159166 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.076754884 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.068564702 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079605533 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.074606638 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068966579 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077251908 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.074524326 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.068790134 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.074459729 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.074545539 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.076421861 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.0684073 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.076437328 seconds)
  done (took 2.898630082 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103455577 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.094677127 seconds)
  done (took 1.589654549 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.165184127 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.137133997 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.207652523 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.361764532 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.165379443 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.152298438 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.147273869 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.147416287 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.117202359 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.142851248 seconds)
  done (took 3.132187021 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.104893224 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.159914246 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.279853493 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.123059262 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.076949625 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.097855124 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.12744064 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.082311593 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084188009 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.08437232 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.083922922 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080966516 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.104372301 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077282211 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.078104649 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.079959634 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.108307439 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.077159052 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.07882953 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.079150461 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.105614561 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.070185507 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076675831 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.077167676 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.081260839 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.081305558 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.069765407 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.070995363 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.080002317 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.079283922 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.080200271 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.096581608 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.081663059 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.110703353 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.075139147 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.11146361 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.080914643 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.077958728 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.078713594 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.07748444 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.081737153 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.081629726 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.076700236 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080683109 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.069975406 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.080982821 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.07014758 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.070589038 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.081481842 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.072156273 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.081385921 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.080485202 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.110643633 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.071795441 seconds)
  done (took 6.255374904 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109840217 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.112747423 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074644924 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.11945324 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109415439 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076428192 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.109495085 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.102609053 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.111172071 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074710227 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.07215872 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074723906 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.086131428 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.086785658 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.122384484 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.113708484 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.077594665 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.075172997 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.11321785 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.111864354 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072745899 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103400444 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097759705 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109886629 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.071762182 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074180794 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.073419484 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074632515 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.080515257 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.082680365 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07345429 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.084544575 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.088231003 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081940324 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071628326 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072646957 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072616148 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.084091276 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083009787 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.083215291 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.081934762 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072141851 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072080122 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.073529039 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.074405383 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071853915 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.082905007 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.085177007 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.082704769 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073633835 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074124418 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.074053351 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073281825 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.084122074 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.081617565 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.084647715 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.083675583 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073209422 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072375236 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.076493269 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.084143568 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083371235 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083019139 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073909231 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.083717977 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072617518 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08391267 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.088450069 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072621837 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073759689 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.07338518 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073841823 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.07396304 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.081653776 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.081950302 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07443905 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.074183352 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07206293 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083395325 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082699701 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072185843 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.081023405 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071531571 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072180662 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073536052 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073894572 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.081598574 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.083157987 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073802113 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072581556 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073390609 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072241967 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.07081772 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.081026031 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.083671257 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.082380065 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.081872231 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072332454 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.082458993 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.081229274 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073702503 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.081721942 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071495388 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.203475026 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074116063 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.084772072 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.083022135 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083827082 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074192748 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.072709778 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.082517513 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085590275 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.073119352 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.082697888 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.085254717 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.083995751 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.072907901 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.085627807 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073002262 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.084292049 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073747716 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.0843291 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072489109 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.085192757 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07256752 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.072345675 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072995242 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.083627992 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.075277696 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073434362 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.075146485 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074041336 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.083774305 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.087627318 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074877901 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082716609 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.082351603 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074055413 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.082982426 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073640119 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.082959659 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07350967 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074145754 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071444642 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085995373 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073858235 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.073058199 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.074240166 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.084590662 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072588882 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083101527 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.081165304 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072379514 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08554871 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.084558801 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.082268305 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.083952041 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073996426 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.072019877 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072483481 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073742684 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.081542937 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.083710203 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.0740186 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.073047751 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.082714833 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.084523561 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.07091176 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.08236432 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.082442692 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.082930827 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072624948 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073684699 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084230939 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.08434207 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.082726566 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.082537045 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.082270853 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.073383438 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.08139331 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082355733 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072064354 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087850836 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072577964 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.086833849 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.082655316 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080950883 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.082976337 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.08432733 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.084013571 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.084580136 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.087160045 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072225364 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.072111736 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.083122292 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071912866 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073008657 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.082013271 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.073524741 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.0737137 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.085942295 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.0716707 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.082807849 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.071420662 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.081668598 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070240634 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072809016 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.217492323 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.074073458 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074292627 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.083598358 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073691221 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.082145849 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084629516 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.08329925 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.074031509 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075020193 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.084663113 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.083359902 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.07327121 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073479391 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074480527 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.082423136 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.081737618 seconds)
  done (took 19.659772263 seconds)
done (took 39.424481067 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.215576394 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.158508858 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.179907644 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.123362806 seconds)
  done (took 2.169462701 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.121434107 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.105972134 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.097178978 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.069177071 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.103807996 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.069108322 seconds)
  done (took 1.99321326 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.318179715 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.216197023 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.194044404 seconds)
  done (took 2.150800725 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.215120351 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.199571885 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.456462235 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.280572878 seconds)
  done (took 2.689000274 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.150143202 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.092982884 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.071038241 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.088385513 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.138432584 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.165497901 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.104311904 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.130989871 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.083067093 seconds)
  done (took 2.505045197 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.153540379 seconds)
done (took 13.083778478 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.108772174 seconds)
    (2/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.207650248 seconds)
    (3/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.12843309 seconds)
    (4/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.093925339 seconds)
    (5/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.264378151 seconds)
    (6/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.073774361 seconds)
    (7/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.188048688 seconds)
    (8/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.078313794 seconds)
    (9/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.216776322 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.087602968 seconds)
    (11/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.239290626 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.123398164 seconds)
    (13/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.205595567 seconds)
    (14/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.117524573 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.082953308 seconds)
    (16/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.188946918 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.078843437 seconds)
    (18/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.161077035 seconds)
    (19/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.119263069 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.157341124 seconds)
    (21/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.078586415 seconds)
    (22/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.19601157 seconds)
    (23/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.20045959 seconds)
    (24/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.081773319 seconds)
    (25/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.145402674 seconds)
    (26/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.195354505 seconds)
    (27/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.168240374 seconds)
    (28/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.214772759 seconds)
    (29/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.083810525 seconds)
    (30/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.074599448 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.121038125 seconds)
    (32/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.054376614 seconds)
    (33/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.066957775 seconds)
    (34/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.078492824 seconds)
    (35/309) benchmarking ("sort", Int8, false)...
    done (took 0.150269466 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.094092477 seconds)
    (37/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.081375024 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.07589627 seconds)
    (39/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.104884387 seconds)
    (40/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.087584109 seconds)
    (41/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.21919161 seconds)
    (42/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.069402214 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.151195328 seconds)
    (44/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.081317272 seconds)
    (45/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.075673405 seconds)
    (46/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.076412404 seconds)
    (47/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.076471355 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.077782284 seconds)
    (49/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.212815155 seconds)
    (50/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.090979967 seconds)
    (51/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.193050796 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.069152111 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.121274445 seconds)
    (54/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.162152657 seconds)
    (55/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.076401164 seconds)
    (56/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.071625753 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.115303542 seconds)
    (58/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.161843881 seconds)
    (59/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.180088272 seconds)
    (60/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.080338221 seconds)
    (61/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.377883644 seconds)
    (62/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.085632158 seconds)
    (63/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.213202472 seconds)
    (64/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.077682845 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.13584364 seconds)
    (66/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.055472083 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.069545936 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.116547979 seconds)
    (69/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.224235511 seconds)
    (70/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.105210015 seconds)
    (71/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.181518773 seconds)
    (72/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.21243496 seconds)
    (73/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.168466126 seconds)
    (74/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.160882726 seconds)
    (75/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.125156029 seconds)
    (76/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.055911696 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.094117269 seconds)
    (78/309) benchmarking ("sort", Int64, false)...
    done (took 0.070255885 seconds)
    (79/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.170280704 seconds)
    (80/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.05376364 seconds)
    (81/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.192352835 seconds)
    (82/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.203726464 seconds)
    (83/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.163300775 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.08182235 seconds)
    (85/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.096001585 seconds)
    (86/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.192099835 seconds)
    (87/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.083264889 seconds)
    (88/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.099115854 seconds)
    (89/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.162638416 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.119550129 seconds)
    (91/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.078411712 seconds)
    (92/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.057166793 seconds)
    (93/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.116005198 seconds)
    (94/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.079059455 seconds)
    (95/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.05465579 seconds)
    (96/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.123735313 seconds)
    (97/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.077386842 seconds)
    (98/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.081601785 seconds)
    (99/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.162414425 seconds)
    (100/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.055027194 seconds)
    (101/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.15236492 seconds)
    (102/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.115792808 seconds)
    (103/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.054520394 seconds)
    (104/309) benchmarking ("sort", BigInt, false)...
    done (took 0.200962887 seconds)
    (105/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.11232075 seconds)
    (106/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.086031891 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.093068864 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.097599956 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.15497849 seconds)
    (110/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.054614122 seconds)
    (111/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.096212035 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.090555726 seconds)
    (113/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.056346152 seconds)
    (114/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.188034924 seconds)
    (115/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.054979943 seconds)
    (116/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.153496141 seconds)
    (117/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071583686 seconds)
    (118/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.077116634 seconds)
    (119/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.096288909 seconds)
    (120/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.065803247 seconds)
    (121/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.066949054 seconds)
    (122/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.070224918 seconds)
    (123/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.160709077 seconds)
    (124/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.161015988 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.070584601 seconds)
    (126/309) benchmarking ("sort", Bool, false)...
    done (took 0.144329066 seconds)
    (127/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.077612026 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.069045263 seconds)
    (129/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.105493703 seconds)
    (130/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.076142174 seconds)
    (131/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.077938689 seconds)
    (132/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.076575513 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.094070987 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.076008008 seconds)
    (135/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.069758145 seconds)
    (136/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.076748629 seconds)
    (137/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.066855574 seconds)
    (138/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.05371523 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.114347143 seconds)
    (140/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.053658714 seconds)
    (141/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.07571983 seconds)
    (142/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.05490973 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.068853436 seconds)
    (144/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.054559118 seconds)
    (145/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.069293389 seconds)
    (146/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.070423383 seconds)
    (147/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.108256402 seconds)
    (148/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.068908824 seconds)
    (149/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.069460507 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.06874348 seconds)
    (151/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.077255138 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.068831668 seconds)
    (153/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.180059303 seconds)
    (154/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.19362427 seconds)
    (155/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.083198251 seconds)
    (156/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.080581649 seconds)
    (157/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.076739661 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.097334001 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.09518091 seconds)
    (160/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.077854743 seconds)
    (161/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.066728103 seconds)
    (162/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.071928767 seconds)
    (163/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.054288295 seconds)
    (164/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.05523974 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.069930987 seconds)
    (166/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.055571682 seconds)
    (167/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.190101258 seconds)
    (168/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.15247122 seconds)
    (169/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.054706036 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.120451406 seconds)
    (171/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.077262745 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.094815209 seconds)
    (173/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.080338786 seconds)
    (174/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.084313823 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.14678297 seconds)
    (176/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.079486214 seconds)
    (177/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.077250669 seconds)
    (178/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.171017543 seconds)
    (179/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.066662975 seconds)
    (180/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.070361907 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.081229528 seconds)
    (182/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.080483151 seconds)
    (183/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.069997604 seconds)
    (184/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.071405634 seconds)
    (185/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.071221603 seconds)
    (186/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.076741326 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.09645789 seconds)
    (188/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.113703453 seconds)
    (189/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.078448683 seconds)
    (190/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.054114468 seconds)
    (191/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.072717563 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.262158832 seconds)
    (193/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.057008564 seconds)
    (194/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.074188198 seconds)
    (195/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.085361696 seconds)
    (196/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.054914265 seconds)
    (197/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.068685137 seconds)
    (198/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.07270603 seconds)
    (199/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.071702497 seconds)
    (200/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.077771219 seconds)
    (201/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.070709176 seconds)
    (202/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.080098017 seconds)
    (203/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.075904635 seconds)
    (204/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.075577615 seconds)
    (205/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.088349861 seconds)
    (206/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.18468006 seconds)
    (207/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.070098299 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.09198674 seconds)
    (209/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.079037144 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.090098396 seconds)
    (211/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.07672998 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.135632536 seconds)
    (213/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.10696708 seconds)
    (214/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.055454035 seconds)
    (215/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.20399902 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.082977411 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.094635176 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.094511004 seconds)
    (219/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.076422124 seconds)
    (220/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.056684029 seconds)
    (221/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.076870433 seconds)
    (222/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.053970086 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.094135947 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.093735544 seconds)
    (225/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.068179145 seconds)
    (226/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.05526657 seconds)
    (227/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.077903223 seconds)
    (228/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.054946296 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.137530776 seconds)
    (230/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.162073495 seconds)
    (231/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.069073467 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.146478794 seconds)
    (233/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.077003618 seconds)
    (234/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.067573897 seconds)
    (235/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.067213515 seconds)
    (236/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.056737852 seconds)
    (237/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.055004719 seconds)
    (238/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.090490117 seconds)
    (239/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.071399664 seconds)
    (240/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.085742487 seconds)
    (241/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.081868433 seconds)
    (242/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.054911044 seconds)
    (243/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.054215288 seconds)
    (244/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.068481333 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.127996594 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.069489039 seconds)
    (247/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.07683624 seconds)
    (248/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.069422354 seconds)
    (249/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.056528891 seconds)
    (250/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.078045939 seconds)
    (251/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.076689908 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.098556586 seconds)
    (253/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.071124657 seconds)
    (254/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.076958989 seconds)
    (255/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077349518 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.069647566 seconds)
    (257/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.072593577 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.102140805 seconds)
    (259/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.055888505 seconds)
    (260/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.094518071 seconds)
    (261/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.078286406 seconds)
    (262/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.054433189 seconds)
    (263/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.054512241 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.092140817 seconds)
    (265/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.078286838 seconds)
    (266/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.067823489 seconds)
    (267/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.068889404 seconds)
    (268/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.153249892 seconds)
    (269/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.055525388 seconds)
    (270/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.091836021 seconds)
    (271/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.054617912 seconds)
    (272/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.057582032 seconds)
    (273/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.069940326 seconds)
    (274/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.070842087 seconds)
    (275/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.054801257 seconds)
    (276/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.067003924 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.069193159 seconds)
    (278/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.055629809 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.077399237 seconds)
    (280/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.073706616 seconds)
    (281/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.067881865 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.091370251 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.067894314 seconds)
    (284/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.074981353 seconds)
    (285/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.05389425 seconds)
    (286/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.07702995 seconds)
    (287/309) benchmarking ("sort", Float64, false)...
    done (took 0.136977598 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.069108041 seconds)
    (289/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.05791207 seconds)
    (290/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.07575602 seconds)
    (291/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.054287097 seconds)
    (292/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.054074019 seconds)
    (293/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.145304442 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.095352547 seconds)
    (295/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.054748166 seconds)
    (296/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.054674253 seconds)
    (297/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.069755291 seconds)
    (298/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.070108277 seconds)
    (299/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.056227299 seconds)
    (300/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075658629 seconds)
    (301/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.054425443 seconds)
    (302/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.055140528 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.07573784 seconds)
    (304/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.054910663 seconds)
    (305/309) benchmarking ("sort", Float32, false)...
    done (took 0.138879011 seconds)
    (306/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.191686407 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.06971142 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.099150971 seconds)
    (309/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.055618032 seconds)
  done (took 32.535454977 seconds)
done (took 33.97040306 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.087181974 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096641251 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.078470332 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.098480467 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.08434332 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.079878664 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076767869 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.08310394 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.083969231 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.085493959 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.082621166 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.058564777 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.078464774 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078645295 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.079100711 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095296634 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.083720809 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.077512944 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.077232368 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068886761 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.077084718 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.069123157 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.071009645 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.058238295 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.082386701 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075899654 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.076249282 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.078070285 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.069954237 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.069736787 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.072914841 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.077718782 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.069110749 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.082035192 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.07616999 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.07750036 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.079245084 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.080723586 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.071260882 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.069155528 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.078959502 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.069207995 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.076731698 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.077944971 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.076109924 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.075037363 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.077225909 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.081185721 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094886799 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071053829 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.079600252 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.079901046 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079197579 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.077045971 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.074201858 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.077446938 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074317235 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094756318 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.077405948 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.0719942 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.078191615 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.078551986 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.075096518 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.076965952 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.077258097 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.07947822 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.07959494 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.075293986 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.079230265 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.076643834 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.06934879 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076840554 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.073699889 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.069632779 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.080364786 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.081861588 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067793896 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.075204279 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076785757 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.075243946 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068416459 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071171199 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.07365059 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.076151955 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07113013 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057205893 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.073241216 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.076561425 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.068648976 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07740802 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.076317919 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.076492737 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.07140366 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.080065058 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068478477 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074312955 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.069188218 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.069302247 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.071331884 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.074240531 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068835906 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072053309 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.078843946 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.070611553 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.076208028 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.082464838 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.069457864 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.077015011 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.068249454 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.068052637 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.082747979 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.078314053 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.068653491 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071270842 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.068233559 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.076630216 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.06795734 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.068852546 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.068760425 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.06905598 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.074932412 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068870072 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070535569 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.075764788 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.081863214 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.068230901 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.07197811 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069894923 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.067976892 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074040089 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.203082415 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.069929383 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.072469892 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.06635094 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071461278 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.069709067 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.077288418 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072376021 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.077686295 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.071203121 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.078157379 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.075050919 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.075744239 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.07510187 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.068430575 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.062860666 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071573205 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071425649 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.071014402 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.069288553 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.070551339 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.068842091 seconds)
done (took 13.087903655 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070400615 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.144979925 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.100374047 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.099996028 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.089663115 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.070083677 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.079529769 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.103674426 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.07168802 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.105426444 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.093208711 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.089985376 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.119270902 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.068460258 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.0702841 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.073579272 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.071828887 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.085311652 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.104386379 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.090708792 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.119790534 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.069249694 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.096595885 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.093530385 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.091781383 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.099024835 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070589203 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.073932188 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.07342558 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.105946516 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.092608761 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.073336915 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.070437005 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.10354212 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.097881528 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.087434574 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.070302974 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.08772554 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.070856838 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.069774429 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.07099048 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.104381394 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.084157139 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.084712919 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.073918551 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.080408849 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.071084567 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.087941106 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.093802071 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.082990289 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.090172583 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.105811752 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.072505707 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.088342489 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.06801835 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.090435846 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.081346572 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.072923199 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069776312 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.078358403 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.069573278 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.073825106 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.084413717 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.084250572 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.074053028 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.088897813 seconds)
  done (took 7.143959233 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.087426521 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.097223866 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.087588072 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.088178703 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.069460238 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069738782 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.069906344 seconds)
  done (took 2.098722424 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.070894306 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.092432272 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.093470584 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.094217124 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.08518073 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.09211684 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080444179 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.070868018 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.092494668 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.071466492 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.092549438 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.104960576 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.073899733 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.077794977 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.094812597 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.070177715 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.095737915 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.07003881 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.07331774 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.09457348 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072872426 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.100858022 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.0737979 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.070741694 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.085082607 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.070538332 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119001174 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075581681 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072061406 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.073526677 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068127803 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.112672766 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.084364032 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078183149 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070879682 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085212393 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.085982076 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068698342 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.087394204 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.079248575 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.085283348 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.071002354 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.071608044 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068702321 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.074906738 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.080918756 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.071365963 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.070994328 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.073951073 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.091624329 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.071246839 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.084263304 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.073516535 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.076372031 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.072057179 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077713322 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081339669 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.071979978 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090581075 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071953968 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087829869 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087554665 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.084635374 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086831543 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072503845 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.084422005 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.084393511 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.073041558 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072344025 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.07401099 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086714396 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068926447 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.07211265 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.081776946 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072554145 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094483752 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.094449335 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072071702 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.084365755 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.0715423 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070706143 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.071480759 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.094177546 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075871597 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070904219 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.076021975 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073768186 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.069291056 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.069408008 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.074501511 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068697758 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072165771 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.073600277 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.073925815 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073699635 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.087671316 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.073322541 seconds)
  done (took 9.25235376 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.073061934 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.071456363 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.073033291 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.072273627 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.071386304 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.071444221 seconds)
  done (took 1.98417746 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.098004003 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.07315815 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.085236611 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.075261424 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.11079046 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.091244098 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.091538316 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.082219133 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.089068233 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.082398562 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.090599135 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.091672188 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.096231091 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.076102238 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.091749479 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.075615248 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.091735313 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07891877 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.082067488 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076749979 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.090511958 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.076336594 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076933538 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.085868746 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.079858401 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.07573465 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.082182879 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.082578945 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.08245388 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.082204731 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.076121163 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.079782399 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.074422172 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.081467071 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.09159348 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074856969 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07576895 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.08081591 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.075748888 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.080069909 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.092527223 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076550706 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.077899189 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.081188027 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.081806623 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074485481 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.081449127 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.08366093 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.090982095 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.081039968 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.08081822 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.075020271 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.079659566 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.081202279 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074530417 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.081953463 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.080955453 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.091474905 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.075959872 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075443429 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.072773339 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.081119065 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.08160001 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.080799844 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.084974079 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.080885687 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.07467103 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076718978 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076550275 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.075968872 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.08066181 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.072978491 seconds)
  done (took 7.424035933 seconds)
done (took 29.420306468 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.538264902 seconds)
  done (took 2.055196469 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.63391439 seconds)
  done (took 2.175288942 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.555602888 seconds)
  done (took 8.096577488 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.403051387 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.511479661 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.755424076 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.139295585 seconds)
  done (took 3.38987762 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.731685013 seconds)
  done (took 2.280953482 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.234601669 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.220437814 seconds)
  done (took 2.015903115 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.385903048 seconds)
  done (took 1.923642723 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.15779849 seconds)
  done (took 2.698230235 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.266351874 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184013602 seconds)
  done (took 1.998101776 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.493949225 seconds)
  done (took 2.034783912 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.900915564 seconds)
  done (took 6.4445283 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.221913642 seconds)
  done (took 1.816734265 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.245578296 seconds)
  done (took 1.793031921 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.767432469 seconds)
  done (took 3.315813609 seconds)
done (took 43.585582573 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.089206807 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.090668203 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.09001481 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.085883143 seconds)
  done (took 1.891365344 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.081277975 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.078032588 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.080833511 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.078134303 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.081367071 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.078047701 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.078708112 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.080388981 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.076870642 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.077494732 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.077049539 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.077029593 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.079341286 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.079202617 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.075814315 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.079720076 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.080934189 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.07729968 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.080086106 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.077052728 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.075259578 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.079050097 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.079741513 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.076831672 seconds)
  done (took 3.435254374 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.083428484 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.077419371 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.080595586 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.077345564 seconds)
  done (took 1.877830108 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.08246031 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.09763652 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.09460836 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.082793577 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.097325911 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.091585971 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.073235513 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.073326943 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.07491106 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.082045176 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.072377291 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.100855751 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.093772191 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.082986843 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.085172051 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.070410289 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.072622111 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.092513423 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.082927136 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.08323144 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.07577288 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.082793518 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.072640194 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.093210894 seconds)
  done (took 3.565926464 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.090681961 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.109647651 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.085675942 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.093884187 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.096496414 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.07037819 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.092605912 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.095901673 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.132155818 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.069539337 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.075119422 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.070466555 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.077700456 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.070426709 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.085530407 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.11311152 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.116808892 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.073282128 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.102137981 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.06964669 seconds)
  done (took 3.353472399 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.077316761 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.07392916 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.07265836 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.07011005 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.082369416 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.077352038 seconds)
  done (took 2.01992269 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.073418742 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.071936775 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.071561036 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.071691341 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.076554841 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.071475663 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.071172511 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.072461624 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.0723729 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.071473092 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.071162916 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.070204461 seconds)
  done (took 2.425289655 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.208589829 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.073815805 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.073323397 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.070463806 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.074846248 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.070383692 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.085910558 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.072745199 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.097530517 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.070718296 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.071646843 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.073112746 seconds)
  done (took 2.603925912 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216268452 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080545616 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246112737 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157580171 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117303542 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120731094 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118117792 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11929373 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.148772968 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105356593 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172683891 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173495385 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112525697 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142755148 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094269492 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.104179015 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159947839 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169796321 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111317288 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176756764 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151394614 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131861045 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153262834 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107348647 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11080875 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127683777 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.076557656 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085021011 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177424878 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139512533 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149663014 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116640986 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097229425 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182609188 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178060447 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146232846 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153795758 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089340455 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.10664172 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.137715809 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204442778 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093687453 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171001876 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.258403201 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08553242 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139842141 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124500064 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.124164524 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.109506534 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094781416 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152167075 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191014377 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.141795554 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093130986 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130420364 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118573337 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.119054989 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11878989 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189085765 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167967101 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133284538 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.076229352 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115357449 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158458423 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137976149 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.114012646 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.131633704 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097077668 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140956867 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160128771 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128432415 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150655989 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.123201793 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093821427 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123614533 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146074959 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132575569 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16743421 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129790239 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.078314435 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128331045 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106102277 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085596172 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.154773422 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080315593 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180306881 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103586651 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.110442286 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131189987 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113406903 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113474717 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165263781 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14922594 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.252816462 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.070834401 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111658642 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.127061983 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152531244 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092733991 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113459364 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122668629 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.082004456 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14208595 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.080698233 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127777481 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.079621259 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129906263 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134971154 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.081993675 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127259412 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109739842 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.104882119 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13846194 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164817997 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093953118 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086292909 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173972156 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127120316 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.108646959 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149205512 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161509097 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.103961243 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106502506 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156140018 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184668669 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09418046 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1674014 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111322148 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088234371 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.09266261 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12864799 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117011472 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.129985348 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086564796 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.122922349 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173493025 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.079581793 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100454565 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139773601 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083438999 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085107742 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10993846 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109656762 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.10061757 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.104559188 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.107084143 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141129452 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128347 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110559284 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127733876 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249450581 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178927614 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093698496 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.107300791 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110059404 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.074529045 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.140099481 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162550717 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084371561 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170281079 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.127838997 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121911599 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123178896 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088828562 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14544203 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084042726 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.074935101 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150811848 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115403218 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115573417 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.156048002 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122248259 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.13093422 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.126642049 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138964552 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136620741 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.135575538 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11096237 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.092220529 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116394692 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13226619 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.078664078 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.095193939 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.084745755 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110303425 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10088041 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088109787 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147193023 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129039777 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115214944 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116323391 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101940785 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152162849 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.081130404 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134018784 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.124006749 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100653012 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.156575925 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156583888 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136309897 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103969739 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142941139 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.074678762 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078613765 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.092358923 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.27237028 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089121397 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088388982 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122087119 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153081809 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1345608 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142103579 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129818119 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126167684 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161708163 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.074572148 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.125276996 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152725732 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126922134 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.108898153 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095958493 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.104784782 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148223845 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112721211 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189928842 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117651048 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127481689 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158536899 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.106035673 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084262715 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107860001 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14055952 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108987218 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148219826 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104176512 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093427838 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113965133 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.079655733 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104115131 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131962879 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123628745 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139608925 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.119878262 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1379765 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082685407 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120820929 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126880162 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126527768 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.068368044 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124362001 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164702932 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09907379 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121943095 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156681444 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083325076 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.140239763 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179394307 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.295149549 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091429751 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113773243 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125374016 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132924436 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125976592 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146025126 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113329782 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142254529 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115794207 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.090236871 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093053317 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103676617 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110230427 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.09982769 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.110562375 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.119564516 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.101178004 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137671808 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10845746 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115613385 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122377776 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.104973012 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.096286768 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102775795 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181888039 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124341396 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177163343 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.104223694 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.14818831 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168426177 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07930681 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083533788 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.082598267 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144600708 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089122017 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135434389 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.113205266 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122907426 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128596808 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147516462 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100480672 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.073388198 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115810099 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138340044 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130660215 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103342496 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.107959659 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167034446 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.104420265 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083465916 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118219014 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121210456 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10756533 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174978207 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.065283983 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109612007 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.225754444 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086685799 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134569741 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160996168 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.085178774 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.108616138 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123685013 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117884205 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133811955 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105983277 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114502929 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132839507 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156986331 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133585998 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.095103981 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117010233 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132535817 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16009608 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110526205 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.102227805 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179679474 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15759471 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.164537264 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.092992827 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117820573 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11746279 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111971935 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142302126 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088463266 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168152085 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08653045 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142278518 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108336338 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093569007 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134178007 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.114300626 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093214348 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153043759 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122636413 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087818601 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081893776 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123144266 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127518241 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110801337 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.079794145 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142917509 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.077760778 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136515732 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164852066 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085215893 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109738676 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100588193 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083377439 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.257162376 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108933376 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092451469 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.103039324 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177631833 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.091344731 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154635238 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139090088 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117664384 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140075261 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108544877 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.645781324 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.083174569 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158538299 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122242683 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180269443 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107362482 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120792605 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113580269 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127749771 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150733331 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108445425 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.192753556 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138258491 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.12072102 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085639865 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107373515 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109166552 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.092450281 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11265633 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11772726 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120720591 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.097405134 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.121479306 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128727575 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.086836445 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100848599 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160892162 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122097805 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14944189 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146396304 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090475813 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122242456 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141706076 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084706198 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.124641291 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157010442 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109984575 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104931177 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.08530226 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.104688183 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.311299574 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.078880006 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165994565 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126011169 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11495648 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118297977 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.116954037 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137212279 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113109768 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128231801 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097268265 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.114938502 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119146346 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086969536 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.082630506 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112728004 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116650331 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.102462034 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102416951 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.10299692 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157213606 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.076622732 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103943043 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120399496 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148732365 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181444028 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.093264649 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088539164 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123864335 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119173354 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.117871912 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125934536 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.083362831 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086764178 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.084376505 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.082844844 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.113292711 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118240985 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120915532 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115679127 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169068789 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.088268043 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.242803495 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100497739 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110004769 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.074372281 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.08298273 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100946618 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103301364 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11248024 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115586775 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165609799 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.100093889 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.093596316 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094728634 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.077951116 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0873011 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131742254 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113153846 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270540568 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108216604 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.067865674 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113867904 seconds)
  done (took 61.600489135 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.114812213 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.087807061 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.101424879 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.148294017 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.127953944 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.206620202 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.158044277 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.194740596 seconds)
  done (took 2.800731308 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.073405416 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.101452282 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.108841887 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.088669652 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.07127488 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.073792061 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.239081596 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.086950183 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.070784141 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.101792608 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.083399759 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.074220621 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.445594838 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.070408169 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.072706412 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.066217261 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.071655788 seconds)
  done (took 3.556308308 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.413742071 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.622089884 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.365857022 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.080857701 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.942700305 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.097119576 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.151432315 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.14123576 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.08261044 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.54395402 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.415499041 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.133565845 seconds)
  done (took 18.660591262 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.087531604 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.080036687 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.094687155 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.095196129 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.08300568 seconds)
  done (took 2.107435497 seconds)
done (took 111.501523181 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.087752435 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.622481763 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.057508742 seconds)
  done (took 2.376759155 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.090376933 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.090710852 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.090694629 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.088442206 seconds)
  done (took 2.037606463 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.080618425 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.081122555 seconds)
  done (took 1.832000355 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.243439482 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.17382419 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.102399459 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.089810826 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.08446711 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.08498959 seconds)
  done (took 1.933916028 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.078178809 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.080514441 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.077956291 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.08115321 seconds)
  done (took 1.986971739 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.083300739 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.056212715 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.058021078 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.061534847 seconds)
  done (took 1.928574931 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.093881892 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.08362401 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.08341105 seconds)
  done (took 1.931355931 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.108727953 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.090779263 seconds)
  done (took 1.871815372 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.088542172 seconds)
  done (took 1.760553176 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.102247643 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.107566179 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.137358491 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.116183952 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.147733436 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.114483285 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.089370473 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.090520665 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.081156299 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.09123093 seconds)
  done (took 2.748739589 seconds)
done (took 22.679269292 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.085087948 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.375374098 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.365199619 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.095214865 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.674854112 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.360324193 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.002725231 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097979638 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120734562 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072526443 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090397496 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.653319984 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.993038211 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.333520181 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.980848234 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.334901784 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.654219849 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072964231 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071993168 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071967178 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.987902522 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072040333 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071855588 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073026365 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.652109 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.377886306 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072853196 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.334875715 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072285053 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074209516 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.359877646 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073119354 seconds)
  done (took 16.386079676 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.076839017 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126678038 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077593437 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08984175 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.07517589 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.0746574 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.076029752 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.073246582 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.144238063 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07271817 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089919683 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.072359008 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.076102723 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.073210767 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092331943 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072197108 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073377986 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07282947 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072591445 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072720717 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.09235817 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072022114 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07236227 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07306581 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072166142 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085388444 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073306436 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073376983 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07303479 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075046648 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075459797 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073485904 seconds)
  done (took 4.254335184 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.123664326 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.13108646 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078080747 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.109111514 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.117290729 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.074724899 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.149641981 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098877426 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.133055667 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072973593 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090219007 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.072373348 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.107907895 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.07409296 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093511968 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.073003298 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073728426 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072936569 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072678632 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072790903 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.092566914 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072805877 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072975735 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074080884 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.073111096 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.086861497 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073024134 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073054979 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074001972 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075306375 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076709917 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073976823 seconds)
  done (took 4.501125834 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.078301138 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.081159314 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.088177225 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.088990868 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.074455823 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.077100171 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.077256871 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.074548155 seconds)
  done (took 2.331123718 seconds)
done (took 29.151595181 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.084973595 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.07405987 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.077494264 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.087274109 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.078607585 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.08259239 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.071498963 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.08026762 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.077769809 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.077891603 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.080444292 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.071546246 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.0758212 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.070862457 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.078530645 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.072011273 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.084512573 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.076917373 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.084206516 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.084814254 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.074559073 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.0777013 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.080210492 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.084987874 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.084302153 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.084048133 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.082874517 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.077895808 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.073366534 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.075504476 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.082246478 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.090085762 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.074079015 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.08413505 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.071941613 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.072577831 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.075970938 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.072708959 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.08382381 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.082015485 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.073842603 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.081020578 seconds)
  done (took 4.977732533 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.094197534 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.097841972 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.090182513 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.065756823 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.07093957 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.07057456 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.094373917 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.063603212 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.063498215 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.093570216 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.059850596 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.063684444 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.067496184 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.057635072 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.064774524 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.060940752 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.066423089 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.059648315 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.06451555 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.064115063 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.094585772 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.057575501 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.082961418 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.067734294 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.06047582 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.066325109 seconds)
  done (took 3.560099575 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.080985165 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.090572767 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.096093714 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.137510886 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.111393698 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.08444979 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.083759003 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.100747028 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.095492748 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.071340754 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.075534129 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.098156216 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.094867344 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.078639987 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.071931174 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.091821285 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.089002826 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.074355648 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.078147285 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.100099621 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.092309999 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.090818582 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.101290176 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.088543641 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.072062605 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07427718 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.075597642 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.086204739 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.075034883 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.081733035 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.075033602 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.075680246 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.073983296 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.084658168 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.074987188 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.073968004 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.100652332 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082405886 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.084512571 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.07267088 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.080623089 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.072878925 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.098034294 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.133324198 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.071169557 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.078371675 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075416694 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.082556541 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.071555458 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092912465 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083888197 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.07168357 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.076071628 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.07132282 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.071391602 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.076207026 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.073526166 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.074251068 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.081510671 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.077866903 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.097441751 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.077230883 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08841227 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.071526409 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.0807359 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.071084055 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.073171068 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.071275592 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.101558756 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.073605804 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.117452029 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.072996235 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.072771261 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.081877618 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.080294073 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.078596034 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.071864305 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08891205 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.082552091 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.077159588 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.080540164 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.076448889 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.075757047 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.096501189 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.074477427 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.073726979 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.073337037 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.078428754 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.075194447 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.073540532 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085797595 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.071315285 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.075182267 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.089369808 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.071675712 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.073393414 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.07848526 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.077250619 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.071728197 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08359195 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.076528017 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.072875811 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.082693159 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.072058962 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.075389772 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.085586337 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.07874526 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.071615672 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.076468891 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.077765112 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.073272648 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.073792898 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.074543222 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.074094636 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.08117126 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.079256529 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.076859886 seconds)
  done (took 11.244255408 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.175684333 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.164980497 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.074705727 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.155434822 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.081735253 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.084148452 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.158062089 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.100722164 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.072346865 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.073696296 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.073256348 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.116413329 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.111631902 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.121894295 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.083621532 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.072834849 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.089534463 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.120847159 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.160305718 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.154202368 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.090048136 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.081622174 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.074328924 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.073613982 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.075016307 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.08325098 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.09055773 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.084178465 seconds)
  done (took 4.631353342 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.08703155 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.111454077 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.08037847 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.096733101 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.09630642 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.072426558 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.074918334 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.074450452 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.086938723 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.083518405 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.072299229 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.078016348 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.080092745 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.076226164 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.073290583 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.07932373 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079657181 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.07428839 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.075888489 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.077997729 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.083677107 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.097560119 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.076642061 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.071763676 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.077682769 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.072006361 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.067637772 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.089591042 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.07282929 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.101212164 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.07018756 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.078061345 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.087542772 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.073721976 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.072216004 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.07290327 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.072173926 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.072364955 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.074673254 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.070527007 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.070946495 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.061664187 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.071467918 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.084142758 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.079349601 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.060655446 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.077489773 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.077817277 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.078076687 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.069970481 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.075731976 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.075226456 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.07610795 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.080257232 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.076906068 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.077504019 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.073821305 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.079086591 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.081890323 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.072171604 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.069508595 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.070596949 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.077054663 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.069287109 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.081672919 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.076958957 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.070712973 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.071978817 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.074503751 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.080126172 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.072254901 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.077603724 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.070263319 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.074813854 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.077351842 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.075088442 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.074224089 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.070822024 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.072586442 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.072712123 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.059366884 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.072582141 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.057486391 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.076441531 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.07051073 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.071049334 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.072159235 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.077511771 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.084500164 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.074125447 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.078329507 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.073875369 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.071520912 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.075436887 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.064573103 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.075786209 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.085271261 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.087342386 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.073189917 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.070061813 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.086516303 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.077435083 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.071357794 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.059990295 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.076786861 seconds)
  done (took 9.729149994 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.097468053 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.07480485 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.089003198 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.096627926 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.092190463 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.080025536 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.083152351 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.074233288 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.088949191 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.078810149 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.082518594 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.072503375 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.08312127 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.082335868 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.0749436 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.08352533 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.077631879 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.090374601 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.088235275 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.072926792 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.082252651 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.085611754 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.096166448 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.087732874 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.086244685 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.087200552 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.096178133 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.082728972 seconds)
  done (took 4.102707234 seconds)
done (took 39.931918787 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.768963792 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.942747896 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.768755915 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.116205392 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.845367849 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.992318996 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.869841522 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.760927707 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.922030742 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.802985306 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.019887264 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.971289067 seconds)
done (took 65.482399444 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.819793416 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.901502492 seconds)
    (2/2) benchmarking "String"...
    done (took 2.007757398 seconds)
  done (took 5.606122183 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.053793247 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.397587859 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.010828663 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.76151498 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.763002059 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.075332021 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.56749488 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.271798713 seconds)
  done (took 30.546456672 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.962334432 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.980842931 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.473492547 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.507180898 seconds)
  done (took 15.674202173 seconds)
done (took 63.598160638 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.748339455 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.781741208 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.786508274 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.740902795 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.816735684 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.767999829 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.106191683 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.837082757 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.757184076 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.73957991 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.76058305 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.234893205 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.770402819 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.098011668 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.752253298 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.760166658 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.795753827 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.236827219 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.913024418 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.77081211 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.759501242 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.816963147 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.7556879 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.76603777 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.811998665 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.746993171 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.161529259 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.757883033 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.598322105 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.751597467 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.802794787 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.341461624 seconds)
  done (took 203.938563611 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.743915334 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.635201082 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.746409142 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.788855713 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.113910449 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.928368814 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.852507866 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.160627231 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.74887553 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.769503852 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.93496693 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.744525264 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.97249668 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.719538103 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.774348501 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.745253049 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.911883702 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.953071499 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.781198777 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.898901869 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.752061653 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.756767066 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.727952208 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.902482283 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.760271639 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.822661764 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.761677383 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.767689575 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.935103863 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.872320408 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.739022795 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.745663714 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.947848687 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.61179095 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.76259617 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.762978467 seconds)
  done (took 168.237091247 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.907436493 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.739126397 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.738707135 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.739399322 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.744909521 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.739016884 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.861788975 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.874055442 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.35997584 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.169083404 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.790910155 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.739077249 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.537762302 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.738906472 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.80571054 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.739317237 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.750176851 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.738851144 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.752534753 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.766946609 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.741627264 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.738352665 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.866829171 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.751502616 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.803284465 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.74512913 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.738627257 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.743407041 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.109444785 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.739151502 seconds)
    (30/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.737238898 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.744963484 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.97954047 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.738541032 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.736743455 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.583399867 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.27176228 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.818192506 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.739432538 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.742688209 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.737520721 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.954832584 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.740325518 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.738267706 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.739998234 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.870241469 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.738648104 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.860013791 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.73997755 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.219496685 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.738809431 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.736904411 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.32871648 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.324010532 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.736666114 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.736475786 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.739980119 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.736263445 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.735920136 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.742241377 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.374035996 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.809542147 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.738685411 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.738828494 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.741809493 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.736042914 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.786204785 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.738422665 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.185961653 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.799130655 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.853027673 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.859029004 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.737554055 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.801833238 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.829004749 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.736724452 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.736065257 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.736443616 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.736636398 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.816804527 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.736608271 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.864340298 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.744362002 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.737064574 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.787743296 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.806097538 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.736795601 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.593643499 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.738591288 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.735731838 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.007334537 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.801589887 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.736567954 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.736593095 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.736736369 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.865714778 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.863784107 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.466957178 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.741049112 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.425869762 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.736621215 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.876837435 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.739564636 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.876638356 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.737753442 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.817950315 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.743187989 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.739115855 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.737192463 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.769249079 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.738553882 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.795543247 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.73840106 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.736616981 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.109947926 seconds)
  done (took 397.232256619 seconds)
done (took 773.067418452 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.394112321 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.361067332 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.45452571 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.376427959 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.358453522 seconds)
  done (took 13.621731707 seconds)
done (took 15.297500191 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.824388475 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.83121623 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.759979331 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.828657888 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.757742605 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.827138007 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.809774463 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.761667219 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.796686658 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.760293665 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.796138118 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.762199708 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.750607964 seconds)
  done (took 24.944488328 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.966512925 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.97772022 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.81031694 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.964786486 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.787562666 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.970512722 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.905276277 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.889088528 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.89060574 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.757589757 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.751798929 seconds)
  done (took 22.351638844 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.98064497 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.977328654 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.817378051 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.96688136 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.791503765 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.970415379 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.904898774 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.893332438 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.893907164 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.756605762 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.752088836 seconds)
  done (took 22.38515618 seconds)
done (took 71.357182218 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.74767482 seconds)
  done (took 3.425765457 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.77973694 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.94198795 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.753404038 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.751803559 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.748002069 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.749981026 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.753689513 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.748512863 seconds)
  done (took 15.907803246 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.743974035 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.745666192 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.748239862 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.747272702 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.744795977 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.745851595 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.744734529 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.748249941 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.749332068 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.747894663 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.749333521 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.748194076 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.747667144 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.745141487 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.74620898 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.746457527 seconds)
  done (took 29.629250237 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.747422346 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.745923605 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.746139432 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.748092028 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.745261642 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.745730663 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.746263118 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.745710931 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.747187808 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.746056524 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.747468598 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.746721519 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.746669202 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.746332323 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.747589043 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.748799304 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.745713377 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.747140337 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.750907475 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.746811521 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.748910305 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.745939454 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.74692318 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.747494457 seconds)
  done (took 43.610286454 seconds)
done (took 94.250340635 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.79160601 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.740325535 seconds)
  done (took 10.213619331 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.757010973 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.755384434 seconds)
  done (took 5.265494316 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.756313856 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.755439551 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.75658529 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.755364355 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.755438318 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.754937871 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.755938913 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.755639006 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.757119766 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.755226811 seconds)
  done (took 19.244153476 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.754936705 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.755734314 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.753086206 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.755891777 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.756829691 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.752963363 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.756367206 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.755638209 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.7562376 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.753789492 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.756680338 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.752707538 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.756917201 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.754350867 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.756793275 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.754874149 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.753941019 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.754230903 seconds)
  done (took 33.279289214 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.756954699 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.757654097 seconds)
  done (took 5.202168465 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.754339196 seconds)
    (2/7) benchmarking "second"...
    done (took 1.753764522 seconds)
    (3/7) benchmarking "month"...
    done (took 1.754730629 seconds)
    (4/7) benchmarking "year"...
    done (took 1.75599112 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.754076712 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.75420509 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.75465432 seconds)
  done (took 13.969461871 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.757986392 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.912063926 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.998601218 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.405615915 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.758836796 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.760684318 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.704298421 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.760442523 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.761852521 seconds)
  done (took 19.508949378 seconds)
done (took 108.363891714 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.592669215 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.754022252 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.98877683 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.815691065 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.803696503 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.095083268 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.781058606 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.060988493 seconds)
done (took 42.579437896 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.756073399 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 4.058771183 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 4.039230925 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.780342276 seconds)
  done (took 16.567750031 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.73839465 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.2947431 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.797939683 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.348346867 seconds)
  done (took 19.902336775 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.123923886 seconds)
    (2/2) benchmarking "read"...
    done (took 2.106595227 seconds)
  done (took 5.924322249 seconds)
done (took 50.839901837 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.758290432 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.758053674 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.75540552 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.75873102 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.759795561 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.755284638 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.755725438 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.758584687 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.75866033 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.759268317 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.759145498 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.759613756 seconds)
    (13/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.756521636 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.755650452 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.75613635 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.758318774 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.75979474 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.756935824 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.756975514 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.756980926 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.756566902 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.76055684 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.756123752 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.757342901 seconds)
  done (took 43.875264001 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.76051784 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.758310218 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.761867595 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.760471366 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.758600362 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.760296774 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.761723575 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.758025315 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.760141496 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.760550962 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.757627947 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.757372405 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.760845053 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.758852855 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.760271887 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.757894573 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.761182358 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.758760225 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.760352965 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.758757695 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.761160964 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.759473885 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.758740201 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.76131842 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.758217912 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.759500477 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.761558023 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.758262138 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.760936061 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.759346831 seconds)
  done (took 54.482506758 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.766012173 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.768340786 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.76049656 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.761862601 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.761401778 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.76329231 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.76151946 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.762368048 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.76198535 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.762789185 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.762299367 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.762669325 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.760988356 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.761167574 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.762409611 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.760940986 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.761849931 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.761993757 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.762905222 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.762953663 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.763164234 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.763107638 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.763333917 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.76327008 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.763216146 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.762978921 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.762612206 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.763181137 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.764470847 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.763279418 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.762936631 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.762949645 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.762872103 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.763245797 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.76408017 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.763405142 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.768359893 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.770905662 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.765078679 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.764171296 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.763005992 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.764481582 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.763872191 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.764243756 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.764326309 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.764886265 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.764481919 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.764399082 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.764448139 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.765118919 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.763724885 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.763922592 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.765028784 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.764505457 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.764969726 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.764251012 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.765225139 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.764817799 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.765566204 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.764082268 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.764542284 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.765315695 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.765176403 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.764666987 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.764739653 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.76426454 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.764766755 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.765352007 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.765442284 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.76495994 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.76448852 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.764961078 seconds)
  done (took 128.693588491 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.764721711 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.763441824 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.763074326 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.762213534 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.762822206 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.765215102 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.764185002 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.764261744 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.76282985 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.765532437 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.765497827 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.763566886 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.762443653 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.765120162 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.765401612 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.763065677 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.76608776 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.762806384 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.765676852 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.766634735 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.76596958 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.763606195 seconds)
  done (took 40.510283945 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.765923592 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.765792343 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.763345576 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.766244107 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.763517636 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.766168336 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.767138076 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.767034414 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.767144301 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.763730618 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.76333022 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.767985643 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.764023047 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.763867908 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.764588454 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.763518763 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.767200937 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.765028142 seconds)
  done (took 33.472952217 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.764549054 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.765529847 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.767005202 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.764288701 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.766144434 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.767894644 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.765166499 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.767326061 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.768717003 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.766465906 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.767061649 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.767657382 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.767997651 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.764627021 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.768139572 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.766468452 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.766990179 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.764593478 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.767598749 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.764827404 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.764709561 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.768662405 seconds)
  done (took 40.560303126 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.767997619 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.768001317 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.765710755 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.766176071 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.765517701 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.76862224 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.768533375 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.766419961 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.768199104 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.76994164 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.766771712 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.768664016 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.767024008 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.766946763 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.766902577 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.767196331 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.768838449 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.768004142 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.768318934 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.766773261 seconds)
  done (took 37.049807272 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.769655327 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.770146257 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.770954672 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.770834436 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.770437209 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.771040193 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.770390843 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.771021117 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.770286858 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.770273615 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.770541807 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.770313632 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.771316662 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.77015789 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.770558341 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.770225083 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.771274799 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.771276543 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.772104531 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.772019404 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.770894769 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.770963614 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.772030356 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.771932139 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.770244771 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.772023444 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.771675989 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.771965203 seconds)
  done (took 51.289521606 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.770817014 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.770539135 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.767968979 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.768684938 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.769201372 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.767783749 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.767670967 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.768860151 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.771121366 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.768480024 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.771318727 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.771782285 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.770627713 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.770580535 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.771856975 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.771096453 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.771324422 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.770456135 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.768844997 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.769470329 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.772109211 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.772966806 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.771351982 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.768388943 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.769316339 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.771597461 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.769197689 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.770323262 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.772263787 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.769463214 seconds)
  done (took 54.808415656 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.790725052 seconds)
    (2/2) benchmarking "in"...
    done (took 1.790897182 seconds)
  done (took 5.283932907 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.76941838 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.77294684 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.772171004 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.77001155 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.770343142 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.772396477 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.77280756 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.770677459 seconds)
  done (took 15.874513914 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.772047416 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.773614049 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.773532067 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.773150817 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.773800642 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.773096642 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.778455177 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.773220382 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.774409235 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.773689571 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.779988287 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.78064042 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.776660591 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.77291924 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.773630481 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.775733454 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.77312049 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.77428684 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.774515845 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.773756162 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.775126813 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.77504328 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.77561391 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.771634649 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.774698928 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.785304555 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.77857179 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.774072611 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.774190189 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.777845434 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.774899641 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.772810956 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.78071358 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.775880366 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.775115598 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.776917466 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.783695379 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.774698976 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.77989372 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.776056709 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.774852151 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.772270337 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.776165374 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.776218305 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.776374661 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.775406756 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.775604643 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.772671087 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.774580264 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.778352728 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.778780159 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.774825705 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.773502788 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.778819263 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.777211963 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.781506916 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.775673309 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.779705943 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.783707531 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.784682439 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.78737834 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.782400817 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.778342388 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.777815647 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.785292605 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.79832995 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.781570378 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.772597369 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.774234071 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.775621332 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.781955595 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.788745136 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.784947837 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.776306924 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.777062655 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.776204464 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.777486858 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.776410677 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.783055234 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.779131252 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.778645143 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.777144575 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.787136234 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.798355855 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.776738006 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.778724288 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.778047258 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.777608312 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.77853569 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.787249529 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.778768394 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.77865276 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.777400856 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.777972575 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.779289455 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.778927229 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.777447337 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.778014474 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.776127728 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.778246477 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.778519551 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.780828847 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.787259016 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.779540107 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.778659838 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.783458965 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.777787031 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.777694015 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.784866212 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.778350593 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.779266586 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.778771716 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.783950912 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.77621082 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.781058448 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.787067892 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.780000348 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.780880912 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.779319716 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.778649211 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.787840259 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.803994954 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.779746569 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.778912777 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.783791318 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.789473961 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.779306466 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.782030647 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.778986177 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.776438485 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.77720059 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.781811794 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.779995247 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.781216631 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.779386996 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.78153091 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.776222382 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.779212335 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.780605253 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.781516724 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.781049994 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.781876597 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.782325008 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.783312896 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.781312313 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.781740379 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.785577406 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.780389016 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.78187397 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.782889318 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.779324413 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.781545357 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.781541872 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.781734006 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.780776829 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.781384879 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.780403805 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.781395018 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.782324646 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.781349123 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.781947387 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.782905879 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.785225858 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.782139465 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.784846032 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.780710146 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.779543759 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.780576699 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.781086412 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.781894542 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.781155955 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.781085776 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.785057741 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.789085153 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.782448749 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.782169275 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.783905797 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.78235068 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.78330755 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.783462295 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.785648004 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.789888678 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.78267855 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.788044278 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.782830271 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.782434249 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.782624368 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.782045944 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.781349521 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.782419331 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.784953429 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.788318403 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.795090695 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.790629113 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.783390232 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.786197243 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.783457189 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.7874316 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.787444338 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.784357478 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.783467201 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.783731704 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.783099072 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.785054483 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.784591875 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.783468524 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.782757516 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.782803757 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.7829745 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.784326531 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.783911953 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.78428186 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.784469417 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.781063652 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.784847608 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.784486422 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.782895296 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.781159766 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.783442789 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.783995668 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.784125927 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.78531297 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.789816563 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.780944962 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.784151572 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.784639398 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.783635175 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.783175794 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.783788178 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.786479894 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.784702604 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.790947921 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.784315208 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.785030302 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.790671869 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.784561179 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.784463774 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.788359023 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.784126983 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.78172878 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.787809432 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.791901964 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.784097692 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.785870306 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.785139493 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.785305725 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.785244356 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.791274447 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.782464505 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.784063435 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.78647269 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.786530218 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.782513564 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.787710461 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.786777051 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.786213985 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.788414368 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.786880384 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.785611454 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.788812841 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.786188807 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.787224722 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.785676733 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.788988863 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.793229901 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.789863981 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.786462363 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.788393542 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.787105828 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.79017763 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.787254837 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.78737078 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.787426401 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.799699108 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.795664502 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.792426117 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.788745121 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.786893978 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.791305515 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.787750404 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.790989708 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.787066918 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.787561281 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.787123828 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.787128609 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.784983346 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.787819817 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.788278653 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.788553685 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.788449894 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.790672909 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.787904579 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.786537953 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.788580593 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.788983427 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.787786789 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.786798674 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.788268516 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.789667338 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.790326903 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.787534564 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.787934134 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.794915735 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.788613084 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.788995772 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.786708569 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.787804676 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.788309035 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.789692367 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.789135925 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.790157407 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.796136849 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.791446201 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.798402034 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.78977209 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.797512993 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.789320331 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.792716518 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.79654621 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.787500886 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.788989673 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.790219243 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.790270595 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.79565768 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.789798161 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.791029415 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.794788406 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.790182277 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.79030763 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.78921035 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.790716757 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.789943583 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.790451111 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.797674074 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.791136778 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.793237284 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.79183491 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.787637035 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.789774423 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.790054093 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.78950625 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.793226682 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.790821654 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.791535818 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.789304278 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.789186686 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.790108722 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.791333661 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.790088275 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.787121935 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.791129269 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.796066685 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.790517918 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.796898545 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.791402188 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.797979796 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.791707856 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.798195662 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.791804056 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.790963511 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.791618831 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.79062189 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.792651206 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.790985862 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.792049739 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.791093572 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.792087087 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.794465859 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.792215904 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.794881981 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.792117057 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.79245388 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.790925847 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.801441014 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.813692792 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.793135962 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.796422972 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.788640347 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.79423755 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.796273541 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.793498385 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.791223373 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.794188171 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.80202963 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.798701036 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.791360971 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.794378306 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.792902681 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.794201694 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.79144612 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.792228831 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.793720195 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.793241827 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.793302447 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.792615145 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.795741128 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.792701478 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.793830698 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.793284931 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.793505531 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.802619168 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.793570133 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.794573065 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.794266018 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.792751534 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.793561283 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.793386321 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.793301837 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.793172802 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.794044472 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.795807741 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.800061661 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.799789782 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.796172748 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.793604393 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.795609861 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.793942263 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.795004941 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.794451536 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.795173374 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.79571667 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.796821793 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.794847249 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.795084113 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.792869 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.79403473 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.794862649 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.794612602 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.796715911 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.80131873 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.795279518 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.791940611 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.795862758 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.795200331 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.793961714 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.794796342 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.802776583 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.798659136 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.804958523 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.803941431 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.799596319 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.794830468 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.79857701 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.803137136 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.793972018 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.79660584 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.795991657 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.796721043 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.795721045 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.799393956 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.795771433 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.801967536 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.796065781 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.795618125 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.803262352 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.797317656 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.795628057 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.798354027 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.799553548 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.796372382 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.794080216 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.795622462 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.794875448 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.801833957 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.797063044 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.796873391 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.798296296 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.795147136 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.797703939 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.801542739 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.797942474 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.79871736 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.793231932 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.79701519 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.797249367 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.79727752 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.794993014 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.798386312 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.79675199 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.800630446 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.805002398 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.79562553 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.80111593 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.797147739 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.800108904 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.797757905 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.797660752 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.795686821 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.795573364 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.79790916 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.798016821 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.797982046 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.800566574 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.798125058 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.799120597 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.798783816 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.799883541 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.801221742 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.808623363 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.8062852 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.795220811 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.797915384 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.799421439 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.801731846 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.800277358 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.798602342 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.798564932 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.799512222 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.798071578 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.800452359 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.799068978 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.801949393 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.812980735 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.799072279 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.79817803 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.799081733 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.802271236 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.799150564 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.796517857 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.798829915 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.802724802 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.801818972 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.808107563 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.800425705 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.805413652 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.800187343 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.799929968 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.80333823 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.802778597 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.806550121 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.803023418 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.800314505 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.800341493 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.803976091 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.815116064 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.799799152 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.808975081 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.828254582 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.801854524 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.802433504 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.802288322 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.799078418 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.800497645 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.802983232 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.801620577 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.801381777 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.80119844 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.800475832 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.800644495 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.807302935 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.802235274 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.80135511 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.800952616 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.801707163 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.803978963 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.798037189 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.801969307 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.800783566 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.800499608 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.801535617 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.803119951 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.801954997 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.813864597 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.811722905 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.802305558 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.803603293 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.798457151 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.805460783 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.805280447 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.810804494 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.809340163 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.803101239 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.802655174 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.802736668 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.802049668 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.798500168 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.80200925 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.802091342 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.80134135 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.799472315 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.814521398 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.810666864 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.806796018 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.80254108 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.802863854 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.801944386 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.802736352 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.804065004 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.803376787 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.804504098 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.803574056 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.808044084 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.802493585 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.803752454 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.806221292 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.810559686 seconds)
  done (took 1068.478856919 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.80161841 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.801106053 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.80022114 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.801373411 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.800766582 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.800312701 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.8009962 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.801811332 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.800129559 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.801650661 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.801439946 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.801091204 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.801455152 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.80120095 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.801556697 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.800710593 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.801765807 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.801614293 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.801731817 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.801922326 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.801470928 seconds)
  done (took 39.560169705 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.804569135 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.803558372 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.802455623 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.804994025 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.800511916 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.80537594 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.802055713 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.803651512 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.804311196 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.8022235 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.804451995 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.804341479 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.801577758 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.802518096 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.801255166 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.804121398 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.804480752 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.801563927 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.804946269 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.803086681 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.804831189 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.803242861 seconds)
  done (took 41.409304869 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.806406086 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.807912242 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.805420332 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.803340041 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.80493819 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.802949788 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.80655543 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.805635537 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.805956038 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.805931407 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.805683325 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.807345912 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.81406781 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.810001808 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.808729903 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.807250475 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.949463219 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.80720651 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.806885259 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.807114813 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.803631008 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.811345551 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.803717652 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.803950163 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.805077236 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.806806249 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.807170208 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.806354795 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.80704155 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.807529034 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.811160951 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.807818272 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.807132615 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.807879257 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.806150959 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.808129262 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.810622168 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.808422827 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.803787059 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.807123158 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.816783887 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.825542848 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.808477118 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.813195219 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.807323422 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.808637986 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.811717497 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.816080399 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.803918992 seconds)
  done (took 90.468399273 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.807150558 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.809199444 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.804939334 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.806971455 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.807634589 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.808025268 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.808197449 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.807477122 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.805589874 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.805637418 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.807745661 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.805970567 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.8062944 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.807274925 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.807972867 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.805629164 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.805632732 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.805690105 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.806384987 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.80563424 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.806736058 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.809541477 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.809862911 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.807056055 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.80860337 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.805763739 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.807504196 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.809085461 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.807376223 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.807370829 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.808833066 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.809752154 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.810184323 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.80669624 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.807742791 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.808917883 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.809474729 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.806745121 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.809592738 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.806990193 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.809836299 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.809814874 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.809951948 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.810488875 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.807256903 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.808310837 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.807185423 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.807183146 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.807328185 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.810295393 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.81010777 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.808117742 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.80998066 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.807685943 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.810152348 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.81085118 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.808484955 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.807159136 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.810181473 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.808776475 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.807012366 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.809607306 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.808664416 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.8118469 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.810247097 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.808346463 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.808831338 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.811509953 seconds)
  done (took 124.69424897 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.811660938 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.812713964 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.813196396 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.813170548 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.812063832 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.812054817 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.81302887 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.813221157 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.812672506 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.813766224 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.813104434 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.811699874 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.812067731 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.811721444 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.813337223 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.814007128 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.812411607 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.811970433 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.811702906 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.813214074 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.813449845 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.81384998 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.813380347 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.81247309 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.813606505 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.813614257 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.814593946 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.813727602 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.813147106 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.813012246 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.813365719 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.813269395 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.813796793 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.814363166 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.812994819 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.814578294 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.813050718 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.81450339 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.813702012 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.813969727 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.814124507 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.813868829 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.814426388 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.815108701 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.813930344 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.814204292 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.814791495 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.814520053 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.814365763 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.814694446 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.81456468 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.814460526 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.814939356 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.815252237 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.815380992 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.814226822 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.814645553 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.81548145 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.815807248 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.815773734 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.814898987 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.813739867 seconds)
  done (took 114.191378829 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.814456336 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.815075081 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.811557099 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.811398055 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.81414491 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.81212735 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.814631369 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.814155534 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.815145057 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.814586426 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.814690096 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.811522137 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.813146519 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.814397596 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.812611956 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.81421854 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.812785584 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.81268187 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.816237564 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.812935375 seconds)
  done (took 38.016631828 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.813136987 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.815826468 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.812887043 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.812855329 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.81448079 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.813289 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.816028738 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.815072054 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.813897909 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.815875589 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.815446342 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.815468465 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.812402217 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.813898608 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.815931836 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.812827021 seconds)
  done (took 30.77522309 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.813378752 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.815770006 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.818069562 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.816883178 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.812769082 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.814337906 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.816634492 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.814744669 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.81608504 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.816897975 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.817079307 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.817350751 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.817311947 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.817674774 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.814189622 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.817012119 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.814296772 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.813479453 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.817003655 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.819919324 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.81428579 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.814410732 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.817195153 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.817401427 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.815020423 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.816557144 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.815130544 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.81438309 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.814608962 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.817635496 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.814804301 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.814998405 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.815098844 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.81520091 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.819596327 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.816082232 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.817749851 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.818691074 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.819059577 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.817092065 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.818771761 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.816367895 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.818589721 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.81798923 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.815604482 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.818478471 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.816432855 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.816453597 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.815392495 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.816844623 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.817487748 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.820233809 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.819557503 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.819191944 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.818318793 seconds)
  done (took 101.658660624 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.818504042 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.81780732 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.816562014 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.818631048 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.819102829 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.816279137 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.819002013 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.816105181 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.816764709 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.819384833 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.817293868 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.821282483 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.816557334 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.818968723 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.818301632 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.819881954 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.817579705 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.817904747 seconds)
  done (took 34.474951649 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.817163564 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.817667142 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.820255038 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.81708786 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.81671521 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.820812904 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.817116333 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.819192225 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.819440266 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.817737433 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.818028822 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.821363498 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.820445292 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.821840323 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.818403044 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.816855479 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.822112967 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.820447167 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.81738622 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.817473772 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.820419792 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.820969221 seconds)
  done (took 41.768972645 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.82039185 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.819788825 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.835679542 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.841393027 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.842864778 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.855585918 seconds)
  done (took 12.76595715 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.818871292 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.820393828 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.819981361 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.821540684 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.8219763 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.819009752 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.819203421 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.818961911 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.820946251 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.818736459 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.818662318 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.822300608 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.822030355 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.818762798 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.82166718 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.821640348 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.819948337 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.819294505 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.819906242 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.822716606 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.81985768 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.823101461 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.819852196 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.820034977 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.819758182 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.819742256 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.823173351 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.820215141 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.819991077 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.823572667 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.82325194 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.82125967 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.823734827 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.820730134 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.822821678 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.824485575 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.820776856 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.823290865 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.823634039 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.821278281 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.822309116 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.823079649 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.823745228 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.820738778 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.824098223 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.820424374 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.821031207 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.820793146 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.82162951 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.82395346 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.823702278 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.821977978 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.824570853 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.824063554 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.823539821 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.824099386 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.821836112 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.821588036 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.824830189 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.82224579 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.822258308 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.825183159 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.822513019 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.821285789 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.825206577 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.821661283 seconds)
  done (took 121.986765436 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.821708907 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.822088715 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.821791802 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.822554039 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.822404224 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.822978815 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.823036936 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.822021749 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.822778275 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.822586387 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.825631804 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.822627853 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.823218546 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.822555439 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.82287005 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.82290053 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.823189152 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824050559 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.823875366 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.82668817 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.82330432 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.823382677 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.823712178 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.8242912 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.823986108 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.826225016 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.823177299 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.823340254 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.823646883 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.822686308 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.823865946 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.823025083 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824066847 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.824303496 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.824269054 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.824720109 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.824281843 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.823850317 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.824435313 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.826588396 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.823936997 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.826594966 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.82395074 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.823317447 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.824885493 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.823714598 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.824765745 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.823525215 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.824136397 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.823501249 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.824388451 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.825254603 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.824303206 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.824588423 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.824988429 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.824191033 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825099295 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825031941 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.82451573 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.828734176 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.825158114 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.825465268 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827821072 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.825024652 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.824620341 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.826363861 seconds)
  done (took 122.147145225 seconds)
done (took 2489.986092576 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.864557982 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.876423036 seconds)
  done (took 15.498391337 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.990647871 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.943551027 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.827541793 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.847161887 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.827504704 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.846459146 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.825076579 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.827194115 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.827781379 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.82823254 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.826105395 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.014732841 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.836487244 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.827659035 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.827514523 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.920268573 seconds)
  done (took 51.605550753 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.831565969 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.830902605 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.842180495 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.832660055 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.830371886 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.844214795 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.865660355 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.833729672 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.864294012 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.844993469 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.899918856 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.842688683 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.830723303 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.88118229 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.845285792 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.846909461 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.92510909 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.907162534 seconds)
  done (took 35.15815791 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.908341653 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.835466693 seconds)
  done (took 10.5089211 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.843881519 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.879223532 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.89576502 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.842794518 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.842585477 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.839319095 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.834050889 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.834167208 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.837397477 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.870887742 seconds)
  done (took 70.281675394 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.835817326 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.832270375 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.832000702 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.831459827 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.824724699 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.828640872 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.83065879 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.827056723 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.4946216 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.869015444 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.837243194 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.836489265 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.830843887 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.832913769 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.829091397 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.855518546 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.925161887 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.829761206 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.830222668 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.838362756 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.83224808 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.887146164 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.846688039 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.834021756 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.861112147 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.493299879 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.841849632 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.838144812 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.923481862 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.828547432 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.831151185 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.832903605 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.834612517 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.22086295 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.102628299 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.831480442 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.846068575 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.839529253 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.830602248 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.929358981 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.832216181 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.839682513 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.437876659 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.084695394 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.943357001 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.875911474 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.141317223 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.849484043 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.834886719 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.862033768 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.836221415 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.834117503 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.846624803 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.312634303 seconds)
  done (took 130.034757537 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.827204137 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.18094279 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.000104742 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.828866399 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.119462219 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.039421238 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.82961226 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.878870908 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.829430137 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.060304254 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.08620614 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.94040615 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.829366136 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.829102658 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.828094747 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.827495701 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.990065369 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.90356715 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.832227291 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.8275789 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.862071063 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.074796468 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.95740822 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.830582602 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.86156014 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.045169613 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.955457435 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.938800765 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.621193904 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.828727683 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.896250511 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.830306701 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.828947338 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.828527839 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.990028067 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.928032412 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.919479878 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.831438431 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.828954179 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.82757964 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.503175127 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.035069898 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.92932202 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.974160469 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.029847894 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.041104455 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.616348698 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.829213316 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.57448661 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.998577997 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.06403977 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.063876515 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.956534648 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.833101633 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.158491144 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.830108291 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.829869154 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.085099009 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.976811982 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.93528828 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.831840624 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.829660959 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.829178673 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.079184019 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.833183066 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.930058671 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.833149262 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.829965345 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.93260135 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.935939301 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.973256468 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.04765749 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.866660639 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.770382191 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.372725704 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.08391361 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.900961245 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.086793019 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.833746519 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.830690008 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.913692769 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.679714427 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.088850519 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.084330362 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.088491994 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.870637803 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.559553367 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.830151371 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.061737278 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.058235882 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.086760651 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.04063453 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.076642036 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.170479236 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.831924074 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.832357832 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.057935493 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.972345243 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.834686112 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.18021588 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.069819356 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.401054914 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.855642674 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.146527185 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.968071005 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.835326751 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.477566572 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.8331745 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.059608218 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.878034991 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.833680932 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.834153375 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.055965279 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.81026361 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.833373023 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.486132816 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.899982394 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.836375038 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.071450209 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.836973665 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.098355993 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.83726838 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.074848079 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.440911375 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.869475098 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.012512916 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.041303421 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.836480974 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.085712403 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.082924027 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.954233651 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.05981395 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.454457504 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.832256655 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.125880978 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.836679025 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.833906571 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.00950712 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.834616784 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.983991411 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.836144759 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.123662991 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.863079146 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.077652299 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.837893394 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.09311386 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.872192131 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.889219552 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.839641156 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.96491833 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.838269294 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.763871276 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.998242725 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.83893482 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.836181854 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.388295096 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.837705315 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.995054908 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.071069026 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.861025426 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.912470956 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.509428557 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.835085925 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.927200152 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.863295227 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.226424018 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.836076116 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.091562093 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.838041868 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.835662246 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.835453009 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.081057639 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.023457142 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.837859577 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.836731584 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.735865487 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.83626599 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.835488223 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.02238383 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.182626944 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.836677929 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.046749059 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.840355024 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.969046966 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.838409086 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.921684623 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.176083841 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.835555585 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.835724798 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.835558674 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.836586301 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.837468396 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.049873037 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.867735032 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.375323632 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.979859199 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.109691266 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.153225826 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.089996475 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.885515182 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.837944781 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.105288183 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.840989234 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.904612885 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.841968842 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.863348517 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.074327048 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.843036456 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.107185625 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.119690671 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.88084694 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.889140452 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.840980289 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.837591069 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.837686633 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.98824203 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.929224053 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.842144394 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.838538176 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.957132928 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.965375455 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.053060431 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.840867767 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.882559864 seconds)
  done (took 894.863444761 seconds)
done (took 1209.707256046 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.83897667 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.842566912 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.826867158 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.843401683 seconds)
  done (took 29.125789413 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.849280345 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.846131764 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.848004787 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.846603434 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.848660335 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.846604381 seconds)
  done (took 12.860238252 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.861109873 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.84342982 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.84288389 seconds)
  done (took 21.323111065 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.915007817 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.230824709 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.954641931 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.269359344 seconds)
  done (took 10.145799606 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.849473507 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.848625876 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.848466531 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.849832052 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.852226522 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.852544417 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.850258251 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.849744197 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.851896961 seconds)
  done (took 18.430939432 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.291853891 seconds)
done (took 97.949693969 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.187306281 seconds)
    (2/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.8447421 seconds)
    (3/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.842762093 seconds)
    (4/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.064788798 seconds)
    (5/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.415456984 seconds)
    (6/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.910187238 seconds)
    (7/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.826890184 seconds)
    (8/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 3.085056516 seconds)
    (9/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.141036046 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.973878628 seconds)
    (11/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.272578668 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.895530751 seconds)
    (13/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.036805393 seconds)
    (14/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.87196826 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.883544017 seconds)
    (16/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.070482193 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.873159759 seconds)
    (18/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.934076449 seconds)
    (19/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.062805813 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.97300138 seconds)
    (21/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.867788599 seconds)
    (22/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 3.060573365 seconds)
    (23/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.195630224 seconds)
    (24/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.934020908 seconds)
    (25/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.843848277 seconds)
    (26/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.93840194 seconds)
    (27/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.040678526 seconds)
    (28/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.143373107 seconds)
    (29/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.847784197 seconds)
    (30/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.933259533 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.916884796 seconds)
    (32/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.180299319 seconds)
    (33/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.024017918 seconds)
    (34/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.874729828 seconds)
    (35/309) benchmarking ("sort", Int8, false)...
    done (took 4.79494773 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.138806094 seconds)
    (37/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.845798281 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.392920428 seconds)
    (39/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.36937039 seconds)
    (40/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.944800863 seconds)
    (41/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.752474589 seconds)
    (42/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.113556948 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.863891815 seconds)
    (44/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.845526527 seconds)
    (45/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.607201545 seconds)
    (46/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.952178162 seconds)
    (47/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.077085445 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.01721508 seconds)
    (49/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.283889369 seconds)
    (50/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.235574632 seconds)
    (51/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.162870335 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.15585064 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.92329775 seconds)
    (54/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.928399418 seconds)
    (55/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.094900409 seconds)
    (56/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.907591175 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.782398746 seconds)
    (58/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.923390961 seconds)
    (59/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.323129223 seconds)
    (60/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.007152586 seconds)
    (61/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.876171818 seconds)
    (62/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.363135935 seconds)
    (63/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.83908438 seconds)
    (64/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.66316508 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.874333272 seconds)
    (66/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.264587463 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.100493397 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.907689741 seconds)
    (69/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.849060639 seconds)
    (70/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.918409249 seconds)
    (71/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.764650518 seconds)
    (72/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.835521424 seconds)
    (73/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.069712784 seconds)
    (74/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.837424809 seconds)
    (75/309) benchmarking ("sort", BigFloat, false)...
    done (took 7.47398812 seconds)
    (76/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.832203399 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.30465949 seconds)
    (78/309) benchmarking ("sort", Int64, false)...
    done (took 5.546946598 seconds)
    (79/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.35807157 seconds)
    (80/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.15661704 seconds)
    (81/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.853598813 seconds)
    (82/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.75764008 seconds)
    (83/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.952441786 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.09076696 seconds)
    (85/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.937287083 seconds)
    (86/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.011434173 seconds)
    (87/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.940605377 seconds)
    (88/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.024778061 seconds)
    (89/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.151092448 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.929344893 seconds)
    (91/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.846998294 seconds)
    (92/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 8.52320852 seconds)
    (93/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.396405676 seconds)
    (94/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.957948178 seconds)
    (95/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.946353944 seconds)
    (96/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.385156656 seconds)
    (97/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.877988842 seconds)
    (98/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.85086807 seconds)
    (99/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.930933273 seconds)
    (100/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.009641965 seconds)
    (101/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.135727353 seconds)
    (102/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.976816767 seconds)
    (103/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.040731438 seconds)
    (104/309) benchmarking ("sort", BigInt, false)...
    done (took 6.859229123 seconds)
    (105/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.838627613 seconds)
    (106/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.55473553 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.991314214 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.505472187 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.858550321 seconds)
    (110/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.95677239 seconds)
    (111/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.781321277 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.05685651 seconds)
    (113/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.109170409 seconds)
    (114/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.147285781 seconds)
    (115/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.92417293 seconds)
    (116/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.853900718 seconds)
    (117/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.938441095 seconds)
    (118/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.878108258 seconds)
    (119/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.93025334 seconds)
    (120/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.98837258 seconds)
    (121/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.047884779 seconds)
    (122/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.859646467 seconds)
    (123/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.040372873 seconds)
    (124/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.952946734 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.24404534 seconds)
    (126/309) benchmarking ("sort", Bool, false)...
    done (took 2.080179171 seconds)
    (127/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.876933911 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.139827066 seconds)
    (129/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.949150894 seconds)
    (130/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.106986806 seconds)
    (131/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.933562538 seconds)
    (132/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.877486403 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.795432125 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.079417886 seconds)
    (135/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.857651042 seconds)
    (136/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.16903557 seconds)
    (137/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.032479342 seconds)
    (138/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.145715915 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.844046007 seconds)
    (140/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 3.803442973 seconds)
    (141/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.950898899 seconds)
    (142/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.836091718 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 3.392092585 seconds)
    (144/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.178150107 seconds)
    (145/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.855448547 seconds)
    (146/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 3.454628899 seconds)
    (147/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.990489031 seconds)
    (148/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.086217121 seconds)
    (149/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.857892215 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.194037337 seconds)
    (151/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.882825888 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.152682215 seconds)
    (153/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.856799814 seconds)
    (154/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.856574506 seconds)
    (155/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.556053501 seconds)
    (156/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.87828656 seconds)
    (157/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.953619079 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.531967082 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.231564173 seconds)
    (160/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.88120529 seconds)
    (161/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.458369978 seconds)
    (162/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.997103328 seconds)
    (163/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.19965433 seconds)
    (164/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.841102966 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.568549488 seconds)
    (166/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.153623369 seconds)
    (167/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.217388444 seconds)
    (168/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.131557096 seconds)
    (169/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.972557197 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.946046683 seconds)
    (171/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.85355118 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.338942116 seconds)
    (173/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.963484473 seconds)
    (174/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.0164463 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.85341526 seconds)
    (176/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.99256223 seconds)
    (177/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.879558477 seconds)
    (178/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.343451663 seconds)
    (179/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.096195808 seconds)
    (180/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.947673229 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.13072899 seconds)
    (182/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.87338177 seconds)
    (183/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.85638616 seconds)
    (184/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 7.220435024 seconds)
    (185/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.405907589 seconds)
    (186/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.976796149 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.672829789 seconds)
    (188/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.786105532 seconds)
    (189/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.895089631 seconds)
    (190/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.994843871 seconds)
    (191/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.92628732 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.974269757 seconds)
    (193/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.328098401 seconds)
    (194/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.925688218 seconds)
    (195/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.557985101 seconds)
    (196/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.162386374 seconds)
    (197/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.927560964 seconds)
    (198/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.993989716 seconds)
    (199/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.880066887 seconds)
    (200/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.950237008 seconds)
    (201/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.908656297 seconds)
    (202/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 7.71649 seconds)
    (203/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.339351302 seconds)
    (204/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.885438175 seconds)
    (205/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.719328533 seconds)
    (206/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.861238881 seconds)
    (207/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.006111341 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.03278751 seconds)
    (209/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.67476975 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.081641102 seconds)
    (211/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.989565799 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.94804037 seconds)
    (213/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.930303762 seconds)
    (214/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.207928656 seconds)
    (215/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.845770742 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.364220451 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.677827714 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.559201309 seconds)
    (219/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.898171736 seconds)
    (220/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.841886763 seconds)
    (221/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 2.187293796 seconds)
    (222/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.994923389 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.878139026 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.84016759 seconds)
    (225/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.915662175 seconds)
    (226/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.193826799 seconds)
    (227/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.884566021 seconds)
    (228/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.842632593 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.064428149 seconds)
    (230/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.037938192 seconds)
    (231/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.008339062 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.732370669 seconds)
    (233/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.125495424 seconds)
    (234/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.099987234 seconds)
    (235/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.932332104 seconds)
    (236/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.84743604 seconds)
    (237/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.943325174 seconds)
    (238/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.880086452 seconds)
    (239/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.967464966 seconds)
    (240/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.723950929 seconds)
    (241/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.876286669 seconds)
    (242/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.50633677 seconds)
    (243/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.167986457 seconds)
    (244/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.951162005 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.846379775 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.283754015 seconds)
    (247/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.259087083 seconds)
    (248/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.955878031 seconds)
    (249/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.848903238 seconds)
    (250/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.957972083 seconds)
    (251/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.885283315 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.977738954 seconds)
    (253/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.909652799 seconds)
    (254/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.88597602 seconds)
    (255/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.876903442 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.184214442 seconds)
    (257/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.928363773 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.846852741 seconds)
    (259/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.388862835 seconds)
    (260/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.870916289 seconds)
    (261/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.308583382 seconds)
    (262/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.020003428 seconds)
    (263/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.108713098 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.813944369 seconds)
    (265/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.876692775 seconds)
    (266/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.988181397 seconds)
    (267/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.181875618 seconds)
    (268/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.86229832 seconds)
    (269/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.359305982 seconds)
    (270/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.881964403 seconds)
    (271/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.205461429 seconds)
    (272/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.848172193 seconds)
    (273/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 7.141205161 seconds)
    (274/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.97257821 seconds)
    (275/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.37177472 seconds)
    (276/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.057064641 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.204168734 seconds)
    (278/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.282859488 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.968588877 seconds)
    (280/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.942909043 seconds)
    (281/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.952474057 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.817464338 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.042590221 seconds)
    (284/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.292966753 seconds)
    (285/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.960606661 seconds)
    (286/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.563800334 seconds)
    (287/309) benchmarking ("sort", Float64, false)...
    done (took 5.613515616 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.555881767 seconds)
    (289/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.227625185 seconds)
    (290/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.991848455 seconds)
    (291/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.997935494 seconds)
    (292/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.969818318 seconds)
    (293/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.862406429 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.513119224 seconds)
    (295/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.0616843 seconds)
    (296/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.924013133 seconds)
    (297/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.259180435 seconds)
    (298/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.863176599 seconds)
    (299/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.430953359 seconds)
    (300/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.890607165 seconds)
    (301/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.101720835 seconds)
    (302/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.126383775 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.879761739 seconds)
    (304/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.175681602 seconds)
    (305/309) benchmarking ("sort", Float32, false)...
    done (took 5.574112569 seconds)
    (306/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.862420114 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.237687794 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.897269168 seconds)
    (309/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.862654147 seconds)
  done (took 1004.284115132 seconds)
done (took 1006.115946426 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.893859088 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.888658849 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.871759622 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.892869504 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.983478764 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.900080047 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.882032842 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.873766152 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.919684817 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.922013465 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.87051328 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.897953953 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.873800314 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.872010584 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.872896729 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.88542088 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.190115625 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.90368068 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.889146138 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.881711983 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.889045049 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.87144322 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.921582808 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.899045267 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.876162835 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.87502561 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.87617296 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.891955224 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.986282017 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.875884336 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.876113531 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.883185573 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.190800608 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.904741622 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.867728813 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.892929369 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.885438618 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.881479497 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.876759705 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.905131244 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.284667012 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.915637803 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.876971172 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.873955063 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.874549465 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.879210558 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.875450451 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.880374212 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.886743639 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.888161815 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.281582901 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.932410502 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.878047865 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.875090502 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.885037897 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.876208514 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.878355137 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.890012643 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.894537412 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.890987313 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.182450679 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.909237317 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.876046738 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.890506419 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.882676342 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.319418784 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.912279478 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.877816655 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.286412128 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.921065961 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.320230031 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.926203942 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.876173092 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.889478432 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.907067721 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.194132165 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.900671317 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.873847493 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.882642731 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.874077591 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.885488795 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.88868684 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.881567632 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.876404304 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.888970016 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.903092452 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.8875392 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.876582367 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.884573907 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.895291481 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.884710074 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.888162625 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.879877031 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.872434733 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.885181512 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.879991811 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.879570514 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.878197064 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.882547377 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.886795357 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.28485034 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.936155499 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.87331519 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.873141131 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.877116727 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.892659262 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.286166246 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.920148387 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.898828694 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.924623265 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.879406735 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.185316152 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.912250252 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.89392204 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.887850099 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.879950093 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.872425512 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.185260416 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.315871377 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.934226473 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.880267401 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.876172861 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.893795778 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.879993851 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.874683747 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.196419592 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.91098696 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.892195664 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.999246438 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.888711148 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.909813364 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.877298686 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.882802418 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.906698275 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.894703045 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.910358461 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.882211839 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.894522853 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.894420166 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.875288447 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.888763198 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.888057817 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.880118502 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.88544476 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.873413028 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.907904907 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.892507067 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.891618156 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.90018092 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.999786126 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.875894201 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.189021722 seconds)
done (took 295.007594931 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.947958863 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.869871947 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.973158988 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.875599465 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.957019519 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.960694496 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.872075039 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.872294235 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.872209083 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.245831024 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.873417791 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.874311724 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.876724436 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.872999925 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.957870952 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.875453117 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.873169936 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.209943658 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.876528244 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.946153994 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.869050324 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.873205871 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.875517866 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.249016846 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.876195505 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.871619356 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.947170212 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.875870978 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.213202782 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.87167131 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.878119957 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.21515656 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.966486679 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.894667219 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.887303465 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.883895509 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.959301039 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.88162666 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.957554234 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.958242842 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.973819798 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.917565378 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.875296246 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.870056475 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.879722194 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.879534839 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.875292251 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.904210754 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.875914591 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.875757048 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.211626369 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.888690519 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.875689925 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.875482735 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.874515731 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.909242427 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.875676495 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.879815267 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.96958793 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.879575727 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.940862573 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.250065576 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.28153697 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.878586381 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.871433448 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.875823878 seconds)
  done (took 184.758857508 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.946589599 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.952156647 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.948573415 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.884285948 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.929031923 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.946876933 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.885171219 seconds)
  done (took 15.297009682 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.884946047 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.879651287 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.932015299 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.930186198 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.878883022 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.02627737 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.879358131 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.890898794 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.876794947 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.932570513 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.881299616 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.879108037 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.886929468 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.872041871 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.92988255 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.891250826 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.997321542 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.880635659 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.880670403 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.033632768 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.886121666 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.877144007 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.933505234 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.892425373 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.880984254 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.887646633 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.472765698 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.880791291 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.877981336 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.880480843 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.877502289 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.920551905 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.880750526 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.875526776 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.877856887 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.998846361 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.880878808 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.877629657 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.886783971 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.873794128 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.880553121 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.882202566 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.88002681 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.878345019 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.882649629 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.904706375 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.881213897 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.881023068 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.880694385 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.884949768 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.932649539 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.883022913 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.878681463 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.879440637 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.938133378 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.887836392 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.882647478 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.87890854 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.881503625 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.879449284 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.036081672 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.932199345 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.88150909 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.932310229 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.882051868 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.884592225 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.881752427 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.883011509 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.979536716 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.882502377 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.935336692 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.879595584 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.042151503 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.906040358 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.884482116 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.887758994 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.88493488 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.88359781 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.876635714 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.889125176 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.881385724 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.88426138 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.889364494 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.883729558 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.881415986 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.995803891 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.991055028 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.879996533 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.898217819 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.891004249 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.881150229 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.937334695 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.884234923 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.880992216 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.945402921 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.002010026 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.939956296 seconds)
  done (took 207.024570899 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.890873064 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.895671987 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.886145832 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.901610963 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.885254339 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.88456021 seconds)
  done (took 13.154317981 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.888103714 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.887441939 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.885575612 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.885291749 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.889652369 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.886746917 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.885304568 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.887527679 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.889831943 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.885971368 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.890266071 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.887355729 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.887455255 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.885608443 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.887252983 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.888508086 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.887229047 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.881866908 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.884650599 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.884765523 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.037389787 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.885065876 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.885990054 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.887143107 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.889914758 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.888681542 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.894387232 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.886430959 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.885257041 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.892789194 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.892521542 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.886396017 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.886223861 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.89188543 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.890648506 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.886654798 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.893946102 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.888077748 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.884170528 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.887020927 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.888897499 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.891188447 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.88654698 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.888206461 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.888824823 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.892496596 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.894919553 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.895590023 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.887306086 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.888512135 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.888474725 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.890796512 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.888050411 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.888288834 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.891460635 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.893452211 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.892402243 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.8891145 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.888251325 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.88836719 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.888947571 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.888177078 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.894571734 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.892647557 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.894258744 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.888930823 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.88925934 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.893899475 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.887726201 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.888274782 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.888853004 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.885077856 seconds)
  done (took 138.954969431 seconds)
done (took 561.009696687 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.02529586 seconds)
  done (took 8.842395953 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.039323667 seconds)
  done (took 8.897852628 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.442752235 seconds)
  done (took 10.261971511 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.902398114 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.903024712 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.890753178 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.89117978 seconds)
  done (took 29.425478921 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.028517947 seconds)
  done (took 8.842825866 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.905450583 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.881571998 seconds)
  done (took 15.636846676 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.954927007 seconds)
  done (took 8.769524572 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.114635737 seconds)
  done (took 8.954984073 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.898424856 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.911326377 seconds)
  done (took 15.637226387 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.86570272 seconds)
  done (took 8.680204851 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.506599855 seconds)
  done (took 11.416077071 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.907168683 seconds)
  done (took 8.826479113 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.916135924 seconds)
  done (took 8.730996497 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.98842913 seconds)
  done (took 8.802753856 seconds)
done (took 163.538100707 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.884955194 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.883483639 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.88455008 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.884945003 seconds)
  done (took 29.353057716 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.922094732 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.920722137 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.922904125 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.932857945 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.925161864 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.921616517 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.913880776 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.914014891 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.932867549 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.924719211 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.924292855 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.925354866 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.92170903 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.914856574 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.92487523 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.92397026 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.933846537 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.923296647 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.914808389 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.926058605 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.890201783 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.933914301 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.926565015 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.890471653 seconds)
  done (took 47.919979918 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.088569489 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.96099038 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.043538338 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.941639969 seconds)
  done (took 9.850069314 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.941401156 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.942764167 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.95443759 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.993593293 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.016775094 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.952810476 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.917251806 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.911806514 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.897479333 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.942785828 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.01805987 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.93871816 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.032668952 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.890674878 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.076160012 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.890791109 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.890133408 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.942077124 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.993620231 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.01009038 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.890599774 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.942603705 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.946009684 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.938369819 seconds)
  done (took 48.688736997 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.888538647 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.897868605 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.894780882 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.889831088 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.890117307 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.891031694 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.89625755 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.89113674 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.912025866 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.891413435 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.889347248 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.890188153 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.889151196 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.890813545 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.890013907 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.902752703 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.903380486 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.890502061 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.894699999 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.896475616 seconds)
  done (took 39.697451068 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.884290173 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.739965408 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.238131469 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.140352812 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.885760518 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.888008506 seconds)
  done (took 31.594758809 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.90615233 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.898377427 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.891914335 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.951438212 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.033254288 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.90058315 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.892658913 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.906587308 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.941121793 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.959247405 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.914650403 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.92381591 seconds)
  done (took 24.938449914 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.890397517 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.888391286 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.888100394 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.90431858 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.903911864 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.900513658 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.899640032 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.885674713 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.90706041 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.913180762 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.901517993 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.90528425 seconds)
  done (took 44.611102064 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976553096 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.777357262 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.944413352 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.609113523 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.424703141 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.098966055 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.408394296 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.231519246 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.892958783 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.161532318 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.846224841 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.133914832 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.142226622 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.887477536 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.980304027 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.330777594 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.187752988 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.121056295 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.916257375 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.599269956 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.009010998 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.471106957 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.648479709 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.014061596 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.099854576 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.023100235 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.15000577 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.851424134 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.024069786 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.925837718 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898399976 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.889005533 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.162861585 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.269065813 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00434853 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899357792 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.542462101 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.607279896 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.881757915 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.589659924 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.700377708 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.023505947 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897962559 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.890205455 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.82404482 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.469754307 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.241175155 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.896464215 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.592600787 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.890500608 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.90012017 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981091214 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.893552061 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.706121015 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.843947886 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.17146397 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.887525223 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898049691 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.461418058 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.936411933 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.578318327 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.832311757 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.98312525 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.62324907 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.35562577 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.040532285 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.894610294 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.894371779 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.825794378 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.531351467 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.013092873 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.036890484 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.912064309 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.540256823 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.194232374 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.906706563 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.97326627 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.185532855 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.751142028 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.831289274 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.119866926 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.842455778 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.826179426 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.748314422 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.82759048 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.158393629 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93234937 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.524686497 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941225054 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.230641479 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.904677765 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913985427 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899931651 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.116424116 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.775205987 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.893782197 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.607557159 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.177783908 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91506839 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.229753893 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.829378377 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.897091581 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.148419474 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.105094356 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.205215224 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.33350928 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.054178881 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.895524296 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.981787672 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.885249737 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.906131867 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.166481792 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.953621172 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.939967574 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.023501801 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.849872453 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.20777104 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.924725892 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.068335688 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.871151124 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.157759695 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.206671586 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.151059254 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97884213 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.898110818 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.894857297 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.570019853 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.518095712 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.120904903 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.89603435 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.453321695 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.906096319 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.896033111 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.830087573 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.527317647 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.815021604 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.002092782 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.119861599 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.904510115 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.170553284 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.830419709 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.041553712 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.011500793 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.119011912 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.542303587 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.972988499 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.155928567 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.462365027 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.203365343 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.908018607 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914901979 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988528071 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917310082 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.405683875 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.152151919 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.899443026 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.900451746 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.608075927 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.959531956 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.898320662 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.900969685 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.723113116 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.175692583 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.923174953 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.906019114 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.786415052 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.910745796 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964412733 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.902228604 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.907292209 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.402312765 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.649470532 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.911306546 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.559233077 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.122653458 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.9075361 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.613645737 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.088014867 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.980271744 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.172507159 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.959700166 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.833869573 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.600482152 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.60122223 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.899766555 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.834247218 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.897149164 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907380176 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.909831643 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.095711189 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.174618941 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.944393479 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.604951341 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.012370102 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.909499042 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.900624428 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.896877009 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.389250694 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.948445643 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.454538489 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.022090315 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035514457 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.911717241 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.833780526 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.902847954 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.903187272 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.899453625 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.865761642 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.952690979 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.544418687 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361984399 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.162950954 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.545838772 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.914689318 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.639985674 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.028064227 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.921513059 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.607959529 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.932434666 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.000163999 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.977703253 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.908407139 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.615443919 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.671016713 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.467277135 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.208751402 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.205278763 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.331626205 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.342022823 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.230968261 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.232692944 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.130382445 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.42673239 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.953252714 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.236926484 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.838540274 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.974742658 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.539539193 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.246327183 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.9065661 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.116168164 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.270368057 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.671875158 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.064842729 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.110405609 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934778648 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.761972838 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.937395134 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.138989694 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.052076598 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.609908295 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.133891716 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.240307958 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.631405234 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.009683137 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.901438351 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.60813002 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.987335842 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.612843127 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.266265518 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.495922022 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.877250015 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399837861 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.913413745 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.352450589 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.270215281 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.296567247 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.992525719 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.838527376 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.913505109 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.912156057 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.902133158 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.882076646 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.750366131 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.154673413 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.913358746 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.138843016 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.239106433 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.167124317 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.808535349 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.908632135 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.902809914 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.204930357 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.635501509 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.150091823 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.30400023 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.490155628 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.914288939 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.838403969 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.836024336 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.605609482 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.901296197 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.875812639 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.124866825 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.013039441 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.855737156 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.341785644 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.221672315 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.15539025 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.913833892 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.175878315 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.17887851 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.635386986 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92916376 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.000636514 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.621073737 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.607674269 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.127808426 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.1417872 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.734025831 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.137096741 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.958697227 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.873295551 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.904003523 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.120689819 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.128329961 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.874162718 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.163020459 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.631606463 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.916446091 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.281760712 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964564335 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.934747524 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.122277226 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.998477037 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915558759 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98717457 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.915728821 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.917724349 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.917712602 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954779633 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.953745153 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.043750292 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.920738436 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997652132 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.989810086 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.490421001 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.916916826 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.183844977 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.264724376 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.234782539 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.966626384 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.907058685 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.912421749 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.842493415 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.046298048 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.352700527 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.181895682 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.037821327 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.048767352 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933380372 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.645252896 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.247457086 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.230345636 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.182952479 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.803937232 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.907195375 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.01873914 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.13384117 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.918689679 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.119111987 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.138859494 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.23526368 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.38455183 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.097684665 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.360474168 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.182534927 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.278774219 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.909100122 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.50051217 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.91613509 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.682301055 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.951722384 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.863066146 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.199350388 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.920792685 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.298993342 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.934133345 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.108954577 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.424794917 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.655047076 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.273697304 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.899117987 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.971352165 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.185872359 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.297928479 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.224100393 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9771101 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.92057176 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.627512019 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047923896 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.778052822 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.144570943 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.910591834 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.122189184 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.622728776 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.919828768 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.189951715 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.220235431 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.907322351 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.805027402 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.943863322 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.921154634 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.135452894 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.1893518 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.172969079 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.921475834 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.912493296 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.726832772 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.189736763 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.970699602 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.847201593 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.914753576 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.012413483 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.159710052 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.932475963 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.427916265 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.613526593 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.217265406 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.834440459 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933179157 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.366573748 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.362398721 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.242163822 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.434988379 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.145339198 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.475840542 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.812430706 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.295993233 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.916838261 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.357908758 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.297825531 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.916625557 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.4641029 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.032099359 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.184862062 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.235508744 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.923401689 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.630646823 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.958446228 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.135593332 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.504759582 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.857069914 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.918464463 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.973921453 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.914342279 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.044260926 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.925050395 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.837277922 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.82898199 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.758075888 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.406479434 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.919005389 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.901513978 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.702886483 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.519903405 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.029230203 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.069049719 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.921934231 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.627129629 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.206712023 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.169187117 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.462624101 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.992657124 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.918286224 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.914364335 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.84178282 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.113067991 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.112417572 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.219040506 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.32566967 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.033677475 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.917969021 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.130738313 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.127080699 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.931024462 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.076664161 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.348238889 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.033797735 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.835768944 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.628745632 seconds)
  done (took 1701.869596375 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.913750415 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.958479356 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.925521072 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.936313379 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.944911435 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.011081992 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.95731922 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.991193824 seconds)
  done (took 57.485337088 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.914055871 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.128028667 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.922240817 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.912983764 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.939515356 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.912455809 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.120856635 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.924263832 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.933790885 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.922719839 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.912183136 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.916524604 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.258061943 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.93700438 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.910986791 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.93120879 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.95431082 seconds)
  done (took 75.305852963 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.912924135 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.105877552 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.956629532 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.936805611 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.785611962 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.925242746 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.869227909 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.941855713 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.913457119 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.084315628 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.250240304 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.916877832 seconds)
  done (took 90.442899492 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.927535673 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.917765174 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.918439137 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.91905907 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.919307883 seconds)
  done (took 11.452707433 seconds)
done (took 2215.038903861 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.16328817 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.145608733 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.149144568 seconds)
  done (took 6.137993639 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.060705194 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.10705008 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.227977276 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.233604592 seconds)
  done (took 10.47538287 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.200251929 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.28151449 seconds)
  done (took 6.324500175 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.243275976 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.93217508 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.292799064 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.909083631 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.912953931 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.91095932 seconds)
  done (took 22.580665063 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.915690772 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.91837125 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.91515416 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.918052164 seconds)
  done (took 9.510324445 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.894543874 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.628653173 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.897336886 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.908954219 seconds)
  done (took 21.173038048 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.663063916 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.313725757 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.658591389 seconds)
  done (took 9.478871551 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.609941127 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.481110933 seconds)
  done (took 9.934775385 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.183806736 seconds)
  done (took 4.033537425 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.950461388 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.192298861 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.464167365 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.490323953 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.579735221 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.160796654 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.274386554 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.161284731 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.373695312 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.408947613 seconds)
  done (took 25.905999629 seconds)
done (took 141.029218557 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.557190796 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.952048386 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.117871683 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.287511479 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.153966488 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.118804729 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.134439803 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.290209291 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.819761148 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.812705761 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.30831256 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.154342726 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.087170464 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.936331683 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.088455953 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.933060799 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.144927588 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.37404601 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.999286723 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.202720108 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.14583718 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.925513366 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.119631386 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.940041058 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.15061129 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.069462494 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.467455362 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.937093969 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.133155439 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.480646041 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.179783986 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.341079339 seconds)
  done (took 170.215726743 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.912947009 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.915433162 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.914007141 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.911732803 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.22293702 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.910330794 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.909065774 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.907450347 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.980939304 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.962394855 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.906851414 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.207775342 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.905196483 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.901627682 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.901713557 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.899732615 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.109383896 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.900310662 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.897120097 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.894057874 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.892803624 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.02246133 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.892008924 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.032642842 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.057984161 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.891800497 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.890101202 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.888584833 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.886193827 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.88496764 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.886054191 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.882602544 seconds)
  done (took 208.028179246 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.882237571 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.882443004 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.880366456 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.878395009 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.878404168 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.878582394 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.875700779 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.877341633 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.356273922 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.35060911 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.878387503 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.87877648 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.8793519 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.876894052 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.880220155 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.877845985 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.877228824 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.877010953 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.877413019 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.87809634 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.878634898 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.554492705 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.87812843 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.561336114 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.879609614 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.879831078 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.878928601 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.878198019 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.878677315 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.882704987 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.879839259 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.878075243 seconds)
  done (took 220.245677033 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.069924459 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.883344345 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.884770639 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.884317779 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.884152594 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.884327942 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.892555707 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.067134829 seconds)
  done (took 19.2614417 seconds)
done (took 619.608065421 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.454171356 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.304028467 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.067138004 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.911353295 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.155682448 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.944826747 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.906764102 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.977059418 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.640291443 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.979409488 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.600124913 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.930389146 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.692370722 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.936415888 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.02939697 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.966843006 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.49715771 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.591354848 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.085032806 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.979471115 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.083987015 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.877375534 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.992418283 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.676315314 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.715260001 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.927691485 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.082512714 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.501915126 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.918883453 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.06963813 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.685300627 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.318019594 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.921334092 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.90413732 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.962389419 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.939175356 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.255040167 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.919995667 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.027656807 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.673391534 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.976935206 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.526401155 seconds)
  done (took 104.416125909 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.875858692 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.873301991 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.872241991 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.873926937 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.874196961 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.873450982 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.873244896 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.873792217 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.873931331 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.874156744 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.873940459 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.875186508 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.87372006 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.875742531 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.872608644 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.873283128 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.873517037 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.876082199 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.873488991 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.874218007 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.87473911 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.873316698 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.888232134 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.874511935 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.876005534 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.875253723 seconds)
  done (took 50.566461543 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.888205816 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.039828598 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.127085016 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.909400276 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.888889664 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.892523569 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.90759552 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.893836968 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.89081034 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.889464368 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.998794136 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.895454491 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.907926618 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.125111541 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.907365563 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.889482615 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.890404133 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.889663152 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.046891645 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.908266943 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.909688963 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.894684504 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.910667452 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.903937179 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.890456085 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.89017891 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.893597072 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.390558989 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.899582826 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.998015221 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.948333618 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.914695766 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.308886207 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.138695157 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.949205677 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.901235796 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.891718139 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.001616747 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.896180482 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.890557717 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.909062455 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.896006848 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.124808563 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.383509982 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.906770306 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.891570192 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.399276386 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.012533394 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.932498971 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.902776091 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.129929646 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.909611994 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.892771073 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.890488915 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.927159488 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.897132115 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.890136826 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.239041972 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.904041478 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.909742769 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.896112709 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.89179347 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.051278998 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.900677645 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.042279078 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.902408906 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.898499335 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.891931095 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.127116469 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.910176003 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.378946511 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.907186779 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.891756633 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.999483174 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.0470625 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.427413395 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.906084342 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.055855459 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.326018081 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.91824285 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.900097861 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.380401906 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.922568889 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.900879964 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.894655286 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.893850133 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.893072159 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.93775308 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.909333903 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.317148485 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.390812895 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.262257813 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.920325443 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.908537239 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.894911517 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.241749788 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.902206912 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.893562874 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.122456803 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.396426332 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.909681626 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.900197852 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.373179637 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.910993047 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.91221445 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.902137531 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.133519977 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.91187521 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.939383975 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.894655356 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.900691826 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.89628919 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.91338989 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.90095152 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.894442105 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.363151076 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.023833101 seconds)
  done (took 234.909637676 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.888820888 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.892242616 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.887689516 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.892286964 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.887420598 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.893729557 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.888003291 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.88929174 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.893909558 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.88830789 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.88853116 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.887840263 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.89098606 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.897675418 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.017260661 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.895026693 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.497263259 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.890233868 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.88850659 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.888691997 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.639277471 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.894609568 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.889164701 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.889155619 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.889352926 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.890930253 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.890271376 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.009440817 seconds)
  done (took 168.359163345 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.89726702 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.0131158 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.914964781 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.924904016 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.905147346 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.894014261 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.919117579 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.912262303 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.901232066 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.894590426 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.894450268 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.956895067 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.907698634 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.997951545 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.927981975 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.926851097 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.002636985 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.904629873 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.893507709 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.89546264 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.925754017 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.890373898 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.957229907 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.025754281 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.915801714 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.015388509 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.901339313 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.898467926 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.895922434 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.016757978 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.913060841 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.958493364 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.926111954 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.914560691 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.020619934 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.016443923 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.006215812 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.926776333 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.901158074 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.896188663 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.894302192 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.883956556 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.016202104 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.91637269 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.898910076 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.007129041 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.91649479 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.900313947 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.907322171 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.89648107 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.911684663 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.916178177 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.964892564 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.03135174 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.932050155 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.922435263 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.923043468 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.173666961 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.905636894 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.999992164 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.891811058 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.020156794 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.920803572 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.886452671 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.898190468 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.90245234 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.927123545 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.930667628 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.005450777 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.907160612 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.999632395 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.93387041 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.905877756 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.896814582 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.900479108 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.018402753 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.01929873 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.93436161 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.937548835 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.930943423 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.893979948 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.898550642 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.887094324 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.916337131 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.902010917 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.015362089 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.017666771 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.906929299 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.901831197 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.900637673 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.902047953 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.926184518 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.02736519 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.936245962 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.995885399 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.968768179 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.975769945 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.914037898 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.913221107 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.904162787 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.963638501 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.914844476 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.910944332 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.219820416 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.969736093 seconds)
  done (took 205.601422765 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.365314195 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.952385021 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.958227563 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.217000331 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.334433044 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.806216457 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.946533539 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.950098431 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.973612772 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.136649925 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.022424104 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.969365963 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.936066001 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.922002167 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.947385911 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.972807948 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.958787769 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.270902824 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.068693563 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.043024969 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.931188893 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.212805565 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.270886169 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.361463264 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.983731757 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.294831457 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.631001696 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.09134742 seconds)
  done (took 62.362543921 seconds)
done (took 828.023655559 seconds)
SAVING RESULT...
DONE!
