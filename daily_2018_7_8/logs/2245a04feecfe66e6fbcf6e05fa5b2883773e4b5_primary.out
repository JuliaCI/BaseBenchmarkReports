cset: moving following pidspec: 11687
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.494304293 seconds)
loading group "string"... done (took 0.504994043 seconds)
loading group "linalg"... done (took 8.482857234 seconds)
loading group "parallel"... done (took 0.171781549 seconds)
loading group "find"... done (took 1.354346198 seconds)
loading group "tuple"... done (took 2.007276297 seconds)
loading group "dates"... done (took 1.335667323 seconds)
loading group "micro"... done (took 0.203310535 seconds)
loading group "io"... done (took 0.586773839 seconds)
loading group "scalar"... done (took 41.388932477 seconds)
loading group "sparse"... done (took 12.734418241 seconds)
loading group "broadcast"... done (took 1.036154135 seconds)
loading group "union"... done (took 14.171088213 seconds)
loading group "simd"... done (took 4.863951196 seconds)
loading group "random"... done (took 9.77241828 seconds)
loading group "problem"... done (took 2.202293987 seconds)
loading group "array"... done (took 24.041961183 seconds)
loading group "misc"... done (took 1.131657492 seconds)
loading group "sort"... done (took 3.559447151 seconds)
loading group "collection"... done (took 20.864056476 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.600073702 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.119949473 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.142587197 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.170608766 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.203123175 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.134846336 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.152929716 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.548415604 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.035747442 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.201188633 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.139573895 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.538761177 seconds)
done (took 5.735402443 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.22246239 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.070799418 seconds)
    (2/2) benchmarking "String"...
    done (took 0.123754416 seconds)
  done (took 0.873888621 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.072442402 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.169684587 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.090252391 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.107325899 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.106910227 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.090214113 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.106804865 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.10659354 seconds)
  done (took 1.458081906 seconds)
done (took 3.316374609 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.801944468 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.821277718 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.48882831 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.121971218 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.151208774 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.132091436 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.305693437 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.155041863 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.107676285 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.111814729 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.166885477 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.346132216 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.469421451 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.925295645 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.103072304 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.121813432 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.077147163 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.690643098 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.079825928 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.127866655 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.505890051 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.107617844 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.114028693 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.121281366 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.203899376 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.126111389 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.173019361 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.09151342 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.681188941 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.099980519 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.185352733 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.096068357 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.154731312 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.231141232 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.075369777 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.104494192 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.665280077 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.187153496 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.108305528 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.092048272 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.666179783 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.077600205 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.183505945 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.103637472 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.10593865 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.181926124 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.098675753 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.093077312 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.097666868 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.083915663 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.157308891 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.450657695 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.102968051 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.138590237 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.095810242 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.688441065 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.093657972 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.151353185 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.122942546 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.104840886 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.093801891 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.088767117 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.169266136 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.09671386 seconds)
  done (took 19.397256891 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.111178538 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.134819342 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.090278244 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137005814 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.137064211 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.095673985 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.080830251 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.091316211 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.104489049 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.179099699 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.132326222 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.137961293 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.071485396 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.092923872 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.096300194 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.241901588 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.115311337 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.098459485 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.094979689 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.085135223 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.13615029 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.107482126 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.088528936 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.105893146 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167501422 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.202267348 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.118782692 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.119364378 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.076992965 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.111723901 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.137831431 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142248429 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.090433254 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.074509216 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.175426072 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.11760832 seconds)
  done (took 5.000465234 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.193573 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093484869 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.201874754 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.174305168 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.144347391 seconds)
    (6/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.155088833 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114201644 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.241490146 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.133431697 seconds)
    (10/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.181712518 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.159327156 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.123051607 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.090324378 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089853942 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.076398774 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.073138812 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.709935801 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.172820839 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.144651439 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.119142147 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098595904 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.077928823 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.368158114 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.095700739 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.076877976 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097582853 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.068002232 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.168783263 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09860258 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.18539652 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.115600179 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102638035 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111870489 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.21034036 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.123560173 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.116755247 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09895236 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.076838527 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.22472144 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086721878 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.094188973 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.073869845 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.117314982 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.12850784 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.110090325 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.095424351 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.10577597 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.221761834 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.095436909 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.096173627 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.036077417 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.19309697 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.092527062 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.093129138 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.324374859 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.092641558 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100807749 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.094001593 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.27721575 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.113354339 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.094959277 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.074058535 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098235681 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.073714608 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.40035067 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.085217248 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.91760109 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.094566837 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.151745799 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.094999584 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100693795 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081793683 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096949619 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.098473242 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.092260431 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074792144 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.07540096 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.091912085 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.079097772 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.095273872 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.109673358 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.080178856 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.091945909 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.142140727 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.110846498 seconds)
    (86/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.076309312 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.113142851 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.120801176 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.079988667 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.074311923 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.126220307 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.092798336 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.077853467 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.138096284 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100045658 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.093487871 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.09730169 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.138768883 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.092210481 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.168160268 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.092693535 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.10241752 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.095938854 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124335535 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.113691265 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074884713 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.09628639 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.073067626 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.092810916 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.142873328 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.091380834 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.075563789 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.096367159 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.089236077 seconds)
  done (took 22.84706319 seconds)
done (took 47.922763571 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.408128722 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.105595603 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.106395438 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.108755169 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.105054258 seconds)
  done (took 1.587691757 seconds)
done (took 2.319036467 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.314914768 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.191888431 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097013434 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.186604483 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.082535518 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.191035736 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.158999023 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.095557029 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.202202005 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.078159617 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.180935703 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.079045554 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.100060526 seconds)
  done (took 2.716523583 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088767225 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112796207 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.076579021 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.103597859 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.072253386 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086291687 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.102537345 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107313908 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.103517001 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080689932 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088486724 seconds)
  done (took 1.749185448 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087318586 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.110968702 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.076901615 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.085959072 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088518041 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086740817 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.104387473 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.097091573 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.104661085 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081320304 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.089293979 seconds)
  done (took 1.741695359 seconds)
done (took 6.929559803 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.028691641 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.790867673 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.118672163 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.168127608 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.327590398 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.207423699 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.554851356 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.111259961 seconds)
  done (took 12.21134921 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.10688434 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.09356301 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.09221564 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.093102914 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.077516557 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.093626782 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.075390875 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.09254259 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.078127069 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.094253987 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.077345153 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.093869973 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.074946484 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.09467604 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.075447961 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.078711873 seconds)
  done (took 2.185500909 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.111508611 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.109725859 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.09882239 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.08423786 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.097508946 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.079601594 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.100014172 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.097614504 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.079583653 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.095654869 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.085687478 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.100442053 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.083235328 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.093939118 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.082429322 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.101857371 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.094961514 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.082106675 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.098970669 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.08220819 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.102383612 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.079783968 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.09890094 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.100440437 seconds)
  done (took 3.07689865 seconds)
done (took 18.203687331 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.158964968 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079848435 seconds)
  done (took 0.971636742 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.095169234 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.11367648 seconds)
  done (took 0.949066448 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.10202086 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.093697662 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.131323595 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.111078746 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.077453543 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.076714677 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.125036737 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.09442916 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.076715661 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.09486312 seconds)
  done (took 1.723356543 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.080836242 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.097436361 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.085285212 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.11505976 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.088343736 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095597819 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.081491646 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.097646848 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.099333938 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.075593942 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.101684498 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.095837255 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.099814133 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.113843934 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.081375915 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.099926949 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.086521015 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.097581188 seconds)
  done (took 2.432437687 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.076744456 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.078871482 seconds)
  done (took 0.900187259 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.07916068 seconds)
    (2/7) benchmarking "second"...
    done (took 0.09260889 seconds)
    (3/7) benchmarking "month"...
    done (took 0.079208071 seconds)
    (4/7) benchmarking "year"...
    done (took 0.096316675 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.075250363 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.091679919 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.076027124 seconds)
  done (took 1.335259401 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.467632549 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.245047317 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.303833008 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.110115712 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.126947656 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.483350104 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.128240082 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.089449179 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.108820628 seconds)
  done (took 2.848893964 seconds)
done (took 11.897513634 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.086747201 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.128037658 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.488639804 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.11179456 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.074175899 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.155964719 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.251345305 seconds)
done (took 2.041923125 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.336230096 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.11812753 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.085108078 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.075383952 seconds)
  done (took 1.355132505 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.075043725 seconds)
    (2/2) benchmarking "read"...
    done (took 0.081358603 seconds)
  done (took 0.90489805 seconds)
done (took 3.00744718 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074791232 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.074495931 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.089557844 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.124586361 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.074035168 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.07187043 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.091133309 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.071341332 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.093822899 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.074199742 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.073974842 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.091484982 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074240853 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088447653 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072254961 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.091538687 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074263245 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.072181372 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088924449 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072458028 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.089322258 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074480612 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.071475986 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.088883402 seconds)
  done (took 2.745125114 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099542274 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.093587959 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.080005294 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.098216863 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.078962319 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.098075596 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.079855538 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.092092294 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.096840621 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.077179956 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095710812 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.078038667 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.093904994 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.078938968 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094217481 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.078598548 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.098002035 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075335962 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094383978 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.08027449 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.096956665 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076058274 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.095170496 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080920493 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.095508073 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096400222 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.077940813 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.075614581 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.097979333 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.095899993 seconds)
  done (took 3.400574678 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.082574239 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.072734148 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.090355349 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.083292298 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.089142089 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.075882233 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.089848421 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.076471427 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.095545879 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.071856524 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.077050536 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.089201375 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.075621076 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.094531529 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.077100874 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.09617549 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.089345221 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.092640638 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.075551384 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.093871294 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.077963338 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.075214738 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.092101176 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.071547236 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.089773584 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.071873416 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.090348 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.072112197 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.073893396 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.089764536 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.078424497 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.097220295 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.073102589 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.102411692 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.079224995 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.08938107 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.080756374 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.072602876 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.095042678 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.071677689 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.089900264 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.072182561 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.093481745 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.083811959 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.092968175 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.074055626 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.075776438 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.094779938 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.076585236 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.096729399 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.07303113 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.092749108 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.078892751 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.094718181 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.078487112 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.071868925 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.091169775 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.073281143 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095030047 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.072895994 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.089649868 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.072148568 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.078362108 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.090930733 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.095522497 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.100754936 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.075816713 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.095276517 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.076304942 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.097961078 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.077967005 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.108530219 seconds)
  done (took 6.816439558 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.077071581 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.101119802 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.074832044 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.07426802 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08798628 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.072540031 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.096555455 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073022509 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091911186 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.09064704 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09066509 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074117818 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091623433 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076984541 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090794903 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.075774641 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.100233842 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071315807 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.090855833 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07656929 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091346515 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.079441348 seconds)
  done (took 2.60646204 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.212825374 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099026252 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.136975379 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090396923 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.110038708 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.108571397 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.080235049 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.098873317 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080274545 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099894377 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100272395 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080527123 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109533012 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100214802 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083355509 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.101994417 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080078009 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.100780195 seconds)
  done (took 2.633956742 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.087458949 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.093414233 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.099101053 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.0931155 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.076086137 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.09647551 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082071621 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108390114 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.078507916 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.093475998 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.089554469 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095192647 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.077929128 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093297893 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078110056 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.093330788 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.077778172 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09303491 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085387244 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09893329 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.099900119 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.085724009 seconds)
  done (took 2.736204342 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092209476 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095301028 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.099496095 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.096959995 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.074746445 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.096226228 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.083748752 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.093288364 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.085384773 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.094614909 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076707717 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.09428358 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.083005619 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09340887 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.083471432 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094064177 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07857023 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.093433253 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.078173137 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.092294885 seconds)
  done (took 2.543370641 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116265968 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109278647 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091482495 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119595027 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.108613381 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090812645 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11924292 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.090260248 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107698993 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.120735423 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.090028089 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108332631 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101486076 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114569352 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.108099033 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101807867 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.118246429 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.119818468 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.090435331 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108282278 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.120439146 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090624661 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.118970385 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090347014 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.108389694 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.091213607 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.1078279 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097825409 seconds)
  done (took 3.723314625 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075483083 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075560088 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.091503369 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.074022479 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.091172579 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.073089479 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.073268575 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.090927845 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.07519681 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090934106 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.075372127 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.09268513 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075191967 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.075530527 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.093614562 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.075717248 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093834421 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.073887705 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072753801 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091075099 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.076561268 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093441666 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.07556674 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090526778 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073447818 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.075958557 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090939513 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073804276 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.093344998 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073908847 seconds)
  done (took 3.215248066 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.083265728 seconds)
    (2/2) benchmarking "in"...
    done (took 0.099496138 seconds)
  done (took 0.951384824 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.074470694 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109431622 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.072892402 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.079818267 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.100022231 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.076325981 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.103887112 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099521592 seconds)
  done (took 1.482681003 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.099947396 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.113429916 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082188938 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.10580347 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.094720311 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.112149716 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.159326789 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.083665616 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.102095432 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.077562261 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.113935568 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.076517389 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.104317821 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081391397 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.103219774 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089999284 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.095091535 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.086603545 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.10153438 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.078890508 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100848081 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092994314 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104498935 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.084237436 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.097068198 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.088098547 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.108287686 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.105975621 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.081967103 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.107237841 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.083569844 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.08841017 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081454128 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.100531296 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.077388639 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.112091512 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094052896 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.100435094 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.085829271 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100711724 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08612628 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.09306133 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086589823 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.102637405 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08881233 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.100700288 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.083532073 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.093346381 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.07743002 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.098338223 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.07640484 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.09865345 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.071535254 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104051888 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.086280017 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11344289 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.079607531 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.099676734 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.081717591 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.098446473 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.085626198 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.098407436 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087006897 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.097629297 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08642051 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.103843746 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084710818 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.093136979 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.070600104 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.096296578 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.086011357 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.118581859 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.087795926 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.100484297 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083896033 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.095816742 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.082242866 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101344544 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.084400884 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.10607787 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.098963855 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084093703 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.105597595 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.080216064 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.098578611 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.083166528 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.078764391 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.097787171 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.078088 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114406714 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.098214426 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.078543618 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.07783244 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.105874948 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.081056062 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.099240833 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.078709852 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103974185 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.071617537 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.10127543 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.08276024 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101838546 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.088870423 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100511578 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.083327318 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.103099184 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.105593741 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081912799 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.080437506 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.092081403 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083247937 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.097977765 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.085374361 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.089744908 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08275846 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.100056054 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.082898345 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.105348476 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.079653345 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.099684718 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08842984 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.106607099 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.079614118 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.091410844 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.081968239 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.099241441 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086414951 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.107063539 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.080038714 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.094367623 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.075670476 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.103749752 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.081859748 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.102444259 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.082574931 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.100829247 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.072428527 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.097024281 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.081976877 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.106376664 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.080516986 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.102417541 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.087138896 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.102230201 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.080249132 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.105112498 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.080054654 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.095925527 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.086282664 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.09922412 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.076023438 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105253316 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.081286348 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.098366023 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.082249684 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10516538 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.082059948 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.101737555 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.080134931 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.100717643 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084135973 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.096722829 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08278475 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.098485725 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.08949379 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.099613809 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.076888494 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.092843917 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.083235934 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.097326531 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.081725101 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.09628465 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.082086677 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.101903171 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.078928417 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.080871125 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.099743575 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112023128 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099215241 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101608112 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.084965817 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.107008992 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.08172217 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.102308458 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.082160511 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101680817 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.083568018 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.10508474 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.085004045 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100999207 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.082212244 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.091839857 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.085040405 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106308149 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.077722381 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.079173272 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.095940531 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.082039368 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.106610413 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.081943287 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.101314741 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.079585019 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102077027 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087891795 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.101112063 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.082105165 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.095953253 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.082243164 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.104554063 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.08371777 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102058408 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.088756106 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.102066613 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.075844276 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105735194 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.079894345 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.104621576 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.077061748 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.096844733 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.079293069 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.104690229 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.081843511 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.099261976 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.071718689 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105715158 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088296708 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.100443722 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.078441837 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.100339174 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091638285 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.098786373 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085535731 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.100029195 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.085182244 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114624256 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.078325216 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.100862244 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.089263391 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.101207134 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.072109694 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.103939705 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.080412582 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.095237656 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.080964617 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.098441496 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.083831541 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102558945 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.083873634 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.089657882 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.08278329 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.080639694 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.097358658 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.076697917 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.105504886 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.082070519 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.099456535 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109424222 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08455148 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.10188686 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.08431205 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.099941152 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.084308 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.101967751 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.083242809 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.101868625 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.081116274 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.078241513 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.100855496 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.078426661 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.097625687 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.081961825 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.101540494 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.08336554 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103898679 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.081979235 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10535366 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.082051077 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.102223563 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.118446286 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.080373418 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.097146788 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.084016536 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103623645 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.082520277 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.100214185 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.076692222 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106761989 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.082248787 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107371807 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.082221284 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.093571271 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.084149814 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.100465294 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.083895305 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.102180436 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.084103008 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.08089202 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.100841532 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.082154658 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110292008 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.097897765 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.09011639 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.102897497 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084647338 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.100981016 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.083158076 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.099037175 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.078522185 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.100487451 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.084249433 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.101613896 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.081722036 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.103092025 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.083600747 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.099532052 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.0812138 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.084019784 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.084340571 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.10388781 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.073064599 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.078525602 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.097176897 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.083758077 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.104720938 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.08396179 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.099729444 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.081189527 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103724032 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.081650592 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.093674365 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.087067277 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103755825 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.084551391 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110816316 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.078887886 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.101683382 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093154101 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.092307992 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.081199177 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.098106508 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.080725122 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107222022 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.084819505 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.108232747 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.083915055 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.097808384 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.075470023 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.103622444 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.081774217 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.072354242 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.097609004 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086580693 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.10014443 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081477139 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.102282131 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.08620639 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103132746 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086450129 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.101038973 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.082457802 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.102223659 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.075645209 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.097703239 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.079645208 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.10114678 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.085202054 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.097144833 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.075938201 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.100977998 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.082610329 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.101557867 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.082592589 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.081859286 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107830135 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081956047 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.102795962 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108281154 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.073406875 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.08387636 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.103090942 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.082920819 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.098087013 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.084596035 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103648177 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08572679 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.106268687 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.083359258 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104545362 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08322711 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.099012434 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.083773575 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.10219429 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.084171428 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.097912712 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.085869375 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108640555 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.080270377 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.102113025 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084820754 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.098964943 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.085093798 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.103071907 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.083934361 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106101981 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.083647646 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.102091347 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.087763172 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.101588524 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085189334 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104167322 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.082667697 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.106938827 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.079939868 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.109226662 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.085121522 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.103982917 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.082236845 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.098465897 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083003733 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.101625752 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08208947 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.107491487 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.085718533 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.097574501 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.079398 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.079459408 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.103188744 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107454743 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090080273 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.101428739 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08472009 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.095457914 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.076618731 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085501679 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.099279973 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.082647408 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.104192698 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.08759053 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.103002214 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.08047705 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.10083786 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.088505399 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107020472 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.084928715 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.09937099 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.084963597 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.104637962 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.083403773 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.101166593 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.081642253 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104504768 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.085178314 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.100990055 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.079885203 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110925343 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.107547213 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085497824 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.101146371 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.08590909 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.101902505 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.077702245 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.085015923 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.102922469 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.08565933 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.103002946 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082851444 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113182478 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.097483809 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.082451807 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108223678 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082852674 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.107657357 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.078541576 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.103231503 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085220775 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103410786 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.078136268 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.078984118 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.099274919 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.084505849 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.098173688 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.078042106 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11274695 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.089334061 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.104248227 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081898597 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101430815 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.078731484 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.097470695 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.079964097 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104870872 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.083985761 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.111223342 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.079415875 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.099038644 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.078638607 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102902224 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08588848 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.10569749 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.077529348 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.09737406 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.080710958 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.083332705 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.110456262 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101073442 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.08465382 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084591609 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.10283419 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.080212773 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109199194 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.075699992 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.103802571 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11391902 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.085374956 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105071772 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.086777581 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.10940333 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.085823848 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.096826415 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.08551224 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.102702141 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.085719614 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.104407567 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.08642243 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118775942 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085017089 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.099350452 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.084947909 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.103310942 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.080227967 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.110310972 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085763125 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.104382948 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.086618222 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.101316834 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086294718 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.109493456 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086552157 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.10327125 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.084390137 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.102335254 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083806494 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.101167558 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.082717287 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.10605835 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.08531435 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103002861 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.088239759 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.09971001 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095139468 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.11012634 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.086700527 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.095679537 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.079884433 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.099286344 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.078456089 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.104674468 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.078798561 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.082264873 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.10139003 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.082535122 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.105387954 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.085917994 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.103712259 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.085979424 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.10282412 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.07458397 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.106182755 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.08432597 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106547419 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.076186879 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.103673973 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.085906051 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.107990701 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090303335 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.100684366 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.083856537 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.102361461 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086991709 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.09759313 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.087375949 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102203658 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.082737706 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.099382246 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084592504 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.104530521 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.085969368 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085696219 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087089622 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.102932987 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.088688327 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106428954 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.077211688 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.076685921 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.106725973 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.080270984 seconds)
  done (took 55.96451803 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.143269452 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.0852667 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074515007 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094152921 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120617038 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079788549 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094639892 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.080580505 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.098263472 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.089145999 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.094364913 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075987521 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115331112 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.122215647 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119235768 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.089474079 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.094466936 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.079235301 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.093953489 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080376862 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114760479 seconds)
  done (took 2.857548899 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.100028189 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.112375184 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.110997214 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.097176451 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106200091 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.11301579 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.091935134 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113593083 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.116073156 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087359049 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.115981197 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112489557 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.08809743 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.106588201 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106481201 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090564361 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.115997713 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105052631 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.094262201 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.109714179 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.109221552 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.09199548 seconds)
  done (took 3.111613542 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.088189379 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.082545229 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.107745241 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.077739367 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.102764195 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.077421815 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.107852537 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.080288808 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.10856087 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.084623904 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.099834145 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.083677329 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.108215708 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.077909884 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.101338062 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.080230078 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.108789044 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.083939968 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.085404989 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.09786634 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.123336005 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.078213315 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.098174535 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.081733972 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.112424496 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.085848833 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.10330739 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.083629377 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.080619908 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.104207955 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.080419882 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.104164294 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.086610068 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.100204673 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.081583532 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.103580031 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.084039753 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.097373962 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.080294177 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.105433223 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.079496766 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.103002269 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.090250665 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.099656347 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.080377459 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084569232 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.105160685 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.077949881 seconds)
  done (took 5.261731526 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.11431993 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.150073357 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.082545899 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.141619604 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.118100808 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.093281779 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.105159228 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.141367963 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.077712737 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.102456341 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.120039784 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.096601501 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104879088 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.08929065 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.107749748 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.102324484 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085881243 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.098260854 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.089828636 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102415968 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.088655953 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.105952057 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.116401322 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.094516487 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108946052 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101470454 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.079995015 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108778283 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.095816226 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.109351189 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.108931792 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.092462842 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.11770547 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.081698418 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102190249 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.105422948 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.100669541 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.103698088 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.086618729 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.097489045 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.085844593 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.110236378 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.105740925 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.100804002 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104288636 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.084427399 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104800128 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.076332074 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.114676855 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.105850032 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.092992881 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.116961382 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108293662 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.08404327 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108973243 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.118024872 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.083657966 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.101119712 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.088199129 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.11343355 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.077516082 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108637297 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.115620292 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.08601142 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.1121289 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.117716765 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.085924856 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107732847 seconds)
  done (took 7.914481221 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.111368207 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.109581938 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100459494 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120728432 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109418663 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.088926747 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109198056 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.109011703 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.08952683 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116479628 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.089312591 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.156137002 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.106256939 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.094691164 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110689576 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108818561 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.090649706 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.108842919 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.089030876 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109343804 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.088386108 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.121418515 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.108733449 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.119711837 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.101155837 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.10699815 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.089491678 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.110787543 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120417912 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.089265311 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122143694 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.108902057 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.089488501 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.121520972 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.121991505 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.089401323 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104954904 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.089164043 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.110021922 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.110044721 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.087072818 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.12039261 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.089615398 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.107848203 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.109177969 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.090448937 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.121514842 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.121749423 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.095464882 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.117401578 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.109616744 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.100603701 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110272973 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.108979628 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.101275092 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.128903178 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121105738 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120202938 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.090409362 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.120858909 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.121368589 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.12967098 seconds)
  done (took 7.503098628 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081174079 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.081027488 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.09937797 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.079050418 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.101077456 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.079401352 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.08026502 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.102334933 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080653061 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.101115257 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080957175 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098149713 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079124084 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080836731 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.098913377 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079155143 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101348949 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.080020085 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08008235 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099802455 seconds)
  done (took 2.593457811 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.089680652 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.121009338 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.082166784 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.109434001 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.084945571 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.109194848 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.08330514 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103742723 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081997543 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104906654 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094265088 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.114792807 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101454473 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.088438445 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.113857538 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108049574 seconds)
  done (took 2.424454625 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.101761095 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.12231874 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.125849057 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.086752849 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.099583934 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.088855798 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.104519266 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.077708271 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.077034499 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.111253918 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.087363482 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.108054962 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.083467721 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.100689625 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.082316215 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.107486218 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.077213224 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.105899268 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.084809796 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.126258064 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.106963049 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.085436436 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.105373927 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.083659389 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104280482 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.08729349 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.108279623 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.079127764 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.099771449 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.085691048 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.104536908 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.089141711 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.098475654 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.087079301 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.099909976 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.079805627 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104126752 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086174169 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.107515013 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.085438394 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.099520906 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.084666699 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.104473947 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.087988342 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.076943414 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.107009757 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.077931046 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.108513245 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.083014751 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.104780424 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.084840328 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.110598616 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.087539659 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.114307392 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.111437216 seconds)
  done (took 6.122638011 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09670117 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.105967182 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.087215786 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.099878246 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.085045856 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.110042509 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.086620594 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.103828453 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085005729 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.099361572 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.084753614 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.105910776 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085163271 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.106294272 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.084397169 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106584699 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077412734 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.082769709 seconds)
  done (took 2.528316046 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.087055187 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081248062 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.110405986 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080769701 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.103077748 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.083800371 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098845654 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.080331549 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099923398 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.082131434 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102122208 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.084533534 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099516572 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.084634087 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.080662437 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10296289 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.083156881 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100953611 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.082193942 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097571596 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084167915 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.099733286 seconds)
  done (took 2.849488532 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.099422843 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.133293622 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.096443333 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.143103466 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.107318447 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.085565205 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.116207716 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.086484766 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.124650568 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.085574314 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.105956996 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.085773578 seconds)
  done (took 2.107876652 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10606461 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138815688 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.082558747 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105248722 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095428863 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10825134 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108068847 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087680487 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121535904 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120315383 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087790639 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121228004 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119959216 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118828619 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095594251 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116008473 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087081449 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107682143 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083204187 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129803189 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108200385 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121610122 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087483951 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10793392 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087911566 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118965064 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119954674 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121805393 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087503336 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120673572 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115671313 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087980411 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120579786 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121249344 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085790183 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122068039 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087415528 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129957725 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116693119 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118297553 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.085869218 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116852206 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120827474 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094556143 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120778595 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108094508 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094261145 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107989312 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087234265 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135928822 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118514258 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118844402 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11589042 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100962112 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120869277 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136692881 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120847596 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118602296 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096354565 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121003753 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119598962 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095763927 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119736298 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120172981 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115972928 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098365959 seconds)
  done (took 8.084208879 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120946331 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105398448 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08784138 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121455728 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119798643 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107709968 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08836012 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108040992 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088292206 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104172361 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.154188976 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087894467 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11971669 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118418239 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087796592 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108014359 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087135563 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119746585 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104663637 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136219196 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087772951 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119780313 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119727091 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119193246 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101283192 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117220785 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107388539 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087764673 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108469757 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087226431 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115878524 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108108822 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098796452 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104775296 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118916951 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088104193 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108245238 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095249626 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109232045 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116358553 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099185621 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131085507 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107735021 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088234678 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121547045 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10810328 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087528568 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105722564 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087736519 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10581723 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120548125 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100056057 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121088325 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11971837 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107493081 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088535393 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108944762 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088649188 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108309368 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095670108 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121065702 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108725866 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136023012 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087774356 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108715875 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119828334 seconds)
  done (took 7.92918947 seconds)
done (took 150.85604663 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.100744704 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.138261751 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096805472 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.166541201 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.082735412 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.13844859 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.116012325 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.118172139 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.083564579 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.103432225 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.0844392 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.106170238 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.14875838 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.082338094 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.103973517 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.085664878 seconds)
  done (took 2.600606834 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.177775347 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.280889792 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.103297845 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.109717788 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.089213653 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.107628921 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.087135406 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.11073945 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.084798422 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.117496088 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.084308532 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.106836652 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.095357605 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.10748123 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.083341048 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.106206184 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.116096339 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.086312756 seconds)
  done (took 2.906801412 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113893968 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.14886714 seconds)
  done (took 1.116616996 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118847753 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.180025775 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.298618445 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.135962767 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.133517947 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.126359414 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.398115617 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.103038884 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.188987403 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.126406443 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.128699603 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.110715662 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.112426339 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.115659539 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.092342433 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.111481257 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.136094111 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.091094463 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.111372209 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.091621163 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.133440877 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.090339928 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.115538221 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.090342854 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.176728961 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.124777221 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.112514795 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.090506218 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.112208851 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.090515264 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.11513579 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.124070172 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.123941015 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.164402633 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.093626686 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.18347105 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.095818545 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.109176916 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.089882724 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.109861812 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.113954291 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.093318506 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.124666424 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.089746512 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.111977472 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.09582871 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.112235356 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.109633281 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.098420651 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.119467454 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.1169366 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.095592266 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.15813327 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.120370987 seconds)
  done (took 7.666740796 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.772623946 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.151356623 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.087964773 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.89500717 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.140533794 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101773757 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.769165681 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.13151776 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.239635219 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.769109231 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.127057051 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.123872176 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.207164033 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.275753494 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.142112698 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.313302948 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.681103436 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.104001338 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.140329808 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.153007334 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.094872334 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139384053 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.130014852 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.454538714 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.087052321 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.1112258 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.116249 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.101208906 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.161088302 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.112579629 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.091869505 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.20757184 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.267073502 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.209167386 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.089589089 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.108946459 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.088496348 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.169927264 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267577543 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.219549985 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.177401043 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.084563142 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.109778734 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.100851452 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131826995 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.106532847 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.167148819 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.176015933 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.175658241 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115611589 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.12306506 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097797564 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.123143444 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.164450405 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.107310404 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.315065101 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.343813327 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111047906 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096598483 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.130749995 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266785005 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.087973777 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.227090151 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.137058663 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214374135 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.088680565 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.785377687 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.17061828 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.086428248 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.120871488 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.117845892 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094652222 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.1228436 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.173035808 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.427765146 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125534044 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.093086973 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110001861 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.228622104 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.087091441 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110871571 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.166102102 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.112347599 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.097525997 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.128567765 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124531169 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.175524516 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.251040082 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.126089419 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118476982 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.095449119 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.12336279 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.089512314 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.218758726 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.220927182 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.182590747 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.217868137 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123762635 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.169163005 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.168240867 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123826538 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.174398572 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.11782315 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.107517727 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124814711 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.216322157 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.146344625 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.090300005 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115376497 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.095761066 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.148690724 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.113705351 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.097045235 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.192672646 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.483424373 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.168722206 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.107461925 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.093424698 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119031113 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.167099919 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117282811 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.242320966 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120641247 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.171191686 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117955833 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.086189839 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12007111 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.168744575 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125997108 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.097017334 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124572545 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119069951 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.253919185 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.222604964 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.1052873 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242738429 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.182359506 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.098395609 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.200369525 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.097073926 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.194798238 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.099592877 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123337778 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.089485523 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.77983678 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.12390032 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.095895415 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117674554 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.195485576 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.087399593 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.113640659 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.087835824 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.1079871 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.775526558 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.114836982 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.08652842 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.112297958 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098851012 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119635324 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.116565664 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094850316 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.16447821 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.236825557 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.124939707 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116655493 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.089309183 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.163180582 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.112791984 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.089145036 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.110964939 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.089849982 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120959725 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094450722 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.113148917 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.178687449 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.16124647 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.22445987 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.568181879 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.089618489 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.087861282 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.235047389 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111460284 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.306781327 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09823543 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.228138119 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.17073177 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.109621962 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.339402312 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.172899894 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.195514179 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.092388451 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.174189005 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.109980367 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117249712 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.164908697 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.0892705 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118666341 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.162356049 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.128317304 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.103283864 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.154409005 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111101046 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.232854536 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.085356193 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.196345903 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.091528617 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.12393722 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.311729864 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089418268 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.131485449 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.165122144 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115458634 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.090231261 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.052029616 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.090413268 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.12194492 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099788119 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.226001176 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.168249684 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120279672 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.118692318 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.102097945 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.187459862 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.21809611 seconds)
  done (took 44.489696078 seconds)
done (took 59.628426809 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.303009557 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.263009563 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.295612397 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.196589843 seconds)
  done (took 2.00950656 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.175351252 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.151520285 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.12353943 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107981239 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.152327564 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085725046 seconds)
  done (took 1.67667978 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.472676653 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.370509337 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.340603828 seconds)
  done (took 2.065834783 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.252667259 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.279684893 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.318830118 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.423496903 seconds)
  done (took 2.259451973 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.206030462 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.125817919 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.099867945 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.137829791 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.171698627 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.17559714 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.143333902 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.154188841 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.12932222 seconds)
  done (took 2.268492834 seconds)
done (took 11.162626138 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.311618083 seconds)
    (2/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.266204426 seconds)
    (3/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.275768437 seconds)
    (4/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.163913723 seconds)
    (5/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.093509435 seconds)
    (6/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.137114968 seconds)
    (7/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.248983124 seconds)
    (8/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.130221879 seconds)
    (9/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.08961376 seconds)
    (10/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.168314796 seconds)
    (11/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.114552897 seconds)
    (12/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.185120734 seconds)
    (13/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.210339375 seconds)
    (14/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.128413122 seconds)
    (15/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.102027279 seconds)
    (16/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.213418153 seconds)
    (17/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.094689109 seconds)
    (18/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.143556624 seconds)
    (19/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.140495299 seconds)
    (20/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.209242157 seconds)
    (21/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.105837763 seconds)
    (22/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.199980513 seconds)
    (23/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.123143386 seconds)
    (24/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.093553641 seconds)
    (25/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.148169735 seconds)
    (26/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.22029662 seconds)
    (27/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.125653468 seconds)
    (28/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.225491449 seconds)
    (29/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.220717307 seconds)
    (30/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.092440073 seconds)
    (31/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.11402811 seconds)
    (32/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.230371506 seconds)
    (33/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.155676288 seconds)
    (34/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.116736135 seconds)
    (35/286) benchmarking ("sort", Int64, true)...
    done (took 0.218361183 seconds)
    (36/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.073583513 seconds)
    (37/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.122920467 seconds)
    (38/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.162802422 seconds)
    (39/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.185589611 seconds)
    (40/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.075063627 seconds)
    (41/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.123993254 seconds)
    (42/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.082839938 seconds)
    (43/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.125513641 seconds)
    (44/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.171018192 seconds)
    (45/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.184665392 seconds)
    (46/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.117905582 seconds)
    (47/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.093569002 seconds)
    (48/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.122341538 seconds)
    (49/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.171884838 seconds)
    (50/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.088253922 seconds)
    (51/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.102560714 seconds)
    (52/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.117530978 seconds)
    (53/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.127093423 seconds)
    (54/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.114068293 seconds)
    (55/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.117807507 seconds)
    (56/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.193612277 seconds)
    (57/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.126820933 seconds)
    (58/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.113677301 seconds)
    (59/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.181714854 seconds)
    (60/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.125135096 seconds)
    (61/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.143555972 seconds)
    (62/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.101079855 seconds)
    (63/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.211703162 seconds)
    (64/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.101652208 seconds)
    (65/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.151351807 seconds)
    (66/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.125638058 seconds)
    (67/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.082796522 seconds)
    (68/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.183380876 seconds)
    (69/286) benchmarking ("sort", BigInt, true)...
    done (took 0.246177985 seconds)
    (70/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.21399734 seconds)
    (71/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.117674137 seconds)
    (72/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.094704123 seconds)
    (73/286) benchmarking ("sort", Int64, false)...
    done (took 0.108949036 seconds)
    (74/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.091770555 seconds)
    (75/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.117810255 seconds)
    (76/286) benchmarking ("sort", Int8, false)...
    done (took 0.206977028 seconds)
    (77/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.198286386 seconds)
    (78/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.099297221 seconds)
    (79/286) benchmarking ("sort", Int8, true)...
    done (took 0.217281686 seconds)
    (80/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.14236512 seconds)
    (81/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.183478475 seconds)
    (82/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.091990101 seconds)
    (83/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.119062919 seconds)
    (84/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.149786204 seconds)
    (85/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.093451132 seconds)
    (86/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.125679009 seconds)
    (87/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.125686276 seconds)
    (88/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.13838162 seconds)
    (89/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.086522663 seconds)
    (90/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.126267024 seconds)
    (91/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.118757287 seconds)
    (92/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.103001011 seconds)
    (93/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.124270319 seconds)
    (94/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.076083279 seconds)
    (95/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.178942285 seconds)
    (96/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.167419343 seconds)
    (97/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.093001813 seconds)
    (98/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.196994784 seconds)
    (99/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.123721776 seconds)
    (100/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.096048179 seconds)
    (101/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.197680134 seconds)
    (102/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.122778598 seconds)
    (103/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.157418798 seconds)
    (104/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.191721935 seconds)
    (105/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.123395766 seconds)
    (106/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.164110285 seconds)
    (107/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.245465065 seconds)
    (108/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.078438361 seconds)
    (109/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.116027798 seconds)
    (110/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.094509317 seconds)
    (111/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.155484136 seconds)
    (112/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.112615079 seconds)
    (113/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.122261006 seconds)
    (114/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.182321543 seconds)
    (115/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.134847077 seconds)
    (116/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.121252192 seconds)
    (117/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.091257661 seconds)
    (118/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.117536099 seconds)
    (119/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.092852205 seconds)
    (120/286) benchmarking ("sort", Bool, false)...
    done (took 0.183954069 seconds)
    (121/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.12272881 seconds)
    (122/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.122361745 seconds)
    (123/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.09548067 seconds)
    (124/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.091294226 seconds)
    (125/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.123061342 seconds)
    (126/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.205646773 seconds)
    (127/286) benchmarking ("sort", Float32, true)...
    done (took 0.226731201 seconds)
    (128/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.074815507 seconds)
    (129/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.123426266 seconds)
    (130/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.196740634 seconds)
    (131/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.076099833 seconds)
    (132/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.119587863 seconds)
    (133/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.080164536 seconds)
    (134/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.190945911 seconds)
    (135/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.086787736 seconds)
    (136/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.1189417 seconds)
    (137/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.093716142 seconds)
    (138/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.185779093 seconds)
    (139/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.101647267 seconds)
    (140/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.097631094 seconds)
    (141/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.122444533 seconds)
    (142/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.098857218 seconds)
    (143/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.118122623 seconds)
    (144/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.091863082 seconds)
    (145/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.146370181 seconds)
    (146/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.093261302 seconds)
    (147/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.102130009 seconds)
    (148/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.086422924 seconds)
    (149/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.115268118 seconds)
    (150/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.114240259 seconds)
    (151/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.109273247 seconds)
    (152/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.078241317 seconds)
    (153/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.106203124 seconds)
    (154/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.090561556 seconds)
    (155/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.21596178 seconds)
    (156/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.137520286 seconds)
    (157/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.098187751 seconds)
    (158/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.157826688 seconds)
    (159/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.099544909 seconds)
    (160/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.124536724 seconds)
    (161/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.076950848 seconds)
    (162/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.182104602 seconds)
    (163/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.176942875 seconds)
    (164/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.115579078 seconds)
    (165/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.093953495 seconds)
    (166/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.165221504 seconds)
    (167/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.07621196 seconds)
    (168/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.116912203 seconds)
    (169/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.101331391 seconds)
    (170/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.099284733 seconds)
    (171/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.093112918 seconds)
    (172/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.118128957 seconds)
    (173/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.109587427 seconds)
    (174/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.117183348 seconds)
    (175/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.094600976 seconds)
    (176/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.099993379 seconds)
    (177/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.076742664 seconds)
    (178/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.124183137 seconds)
    (179/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.115825958 seconds)
    (180/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.176318256 seconds)
    (181/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.102529988 seconds)
    (182/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.141325123 seconds)
    (183/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.185230614 seconds)
    (184/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.160197591 seconds)
    (185/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.09267179 seconds)
    (186/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.108214207 seconds)
    (187/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.078072537 seconds)
    (188/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.126059385 seconds)
    (189/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.092547566 seconds)
    (190/286) benchmarking ("sort", Bool, true)...
    done (took 0.218744504 seconds)
    (191/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.115149429 seconds)
    (192/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.076901967 seconds)
    (193/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.117780075 seconds)
    (194/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.086971155 seconds)
    (195/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.120475625 seconds)
    (196/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.078950168 seconds)
    (197/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.242682898 seconds)
    (198/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.109682451 seconds)
    (199/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.088310793 seconds)
    (200/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.133820695 seconds)
    (201/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.102770739 seconds)
    (202/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.123872328 seconds)
    (203/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.079083772 seconds)
    (204/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.118381478 seconds)
    (205/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.102367715 seconds)
    (206/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.110764161 seconds)
    (207/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.132703339 seconds)
    (208/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.164160101 seconds)
    (209/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.09858829 seconds)
    (210/286) benchmarking ("sort", Float64, false)...
    done (took 0.148790792 seconds)
    (211/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.09999291 seconds)
    (212/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.076461882 seconds)
    (213/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.187830101 seconds)
    (214/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.090359918 seconds)
    (215/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.182881628 seconds)
    (216/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.157454891 seconds)
    (217/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.09315359 seconds)
    (218/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.114852196 seconds)
    (219/286) benchmarking ("sort", Float32, false)...
    done (took 0.17467601 seconds)
    (220/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.077119389 seconds)
    (221/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.079353066 seconds)
    (222/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.106900465 seconds)
    (223/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.07635617 seconds)
    (224/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.110928804 seconds)
    (225/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.076562112 seconds)
    (226/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.09990626 seconds)
    (227/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.082330064 seconds)
    (228/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.135742542 seconds)
    (229/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.092259529 seconds)
    (230/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.075490626 seconds)
    (231/286) benchmarking ("sort", Float64, true)...
    done (took 0.251337886 seconds)
    (232/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.078470607 seconds)
    (233/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.082505399 seconds)
    (234/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.11262887 seconds)
    (235/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.091764745 seconds)
    (236/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.102706635 seconds)
    (237/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.075315919 seconds)
    (238/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.115585219 seconds)
    (239/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.094360041 seconds)
    (240/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.113676925 seconds)
    (241/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.079760833 seconds)
    (242/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.119224434 seconds)
    (243/286) benchmarking ("sort", BigInt, false)...
    done (took 0.229145196 seconds)
    (244/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.12721946 seconds)
    (245/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.115330046 seconds)
    (246/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.090269193 seconds)
    (247/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.126900164 seconds)
    (248/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.074969208 seconds)
    (249/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.106190497 seconds)
    (250/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.092996799 seconds)
    (251/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.102436371 seconds)
    (252/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.088681178 seconds)
    (253/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.137992306 seconds)
    (254/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.136932926 seconds)
    (255/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.075684709 seconds)
    (256/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.096232406 seconds)
    (257/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.104388915 seconds)
    (258/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.088724954 seconds)
    (259/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.099505882 seconds)
    (260/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.088877641 seconds)
    (261/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.099213849 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.089538731 seconds)
    (263/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.09832651 seconds)
    (264/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.10267203 seconds)
    (265/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.125700603 seconds)
    (266/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.076978545 seconds)
    (267/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.114374434 seconds)
    (268/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.091106935 seconds)
    (269/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.076710999 seconds)
    (270/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.117442573 seconds)
    (271/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.091600845 seconds)
    (272/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.100893648 seconds)
    (273/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.077160799 seconds)
    (274/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.100474291 seconds)
    (275/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.106951669 seconds)
    (276/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.117450406 seconds)
    (277/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.091057937 seconds)
    (278/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.1063536 seconds)
    (279/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.094938495 seconds)
    (280/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.120374471 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.090507002 seconds)
    (282/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.120002872 seconds)
    (283/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.094058626 seconds)
    (284/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.107314982 seconds)
    (285/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.189443108 seconds)
    (286/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.102501433 seconds)
  done (took 37.610858092 seconds)
done (took 38.496388486 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.100628054 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.151809673 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.098317169 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.139691814 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.100372484 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.129129827 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.121147514 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.099106292 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.124126092 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.102383563 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.125110048 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.083177126 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.121836907 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.099261023 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.123639172 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.140754997 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.102562721 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.121043771 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.091295112 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.114318 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.090729256 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.114500942 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.092841341 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.105556232 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.099454953 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.121530252 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.094682957 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.122243927 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.091503463 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.111759263 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.089846501 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.093853311 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.113219568 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123926346 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093283134 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.090387615 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.124189688 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.097432731 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.118402867 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.091818627 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.120286877 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.091177772 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.120085824 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.09595109 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.116006335 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.090042401 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.114222465 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.124674863 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117852276 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11600438 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.096271833 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.122384145 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.099742075 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.118912898 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.089913791 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.115303447 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092854258 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.141579283 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.090854915 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115905043 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.114321707 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.118882041 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.090663383 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.113612997 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.091574129 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.121247229 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.097622094 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.113123149 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.0977519 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.117586604 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086091921 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.114894793 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.089498957 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.088172564 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.122192296 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.098255262 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.109414186 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.0918538 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.118130674 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.093193312 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.114586609 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089976834 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.117410667 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.09284516 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113082579 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.083684535 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.113219652 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.094287224 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.114528695 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.091723667 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.118384778 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094576605 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.117302765 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.097554715 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.114853138 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.091988085 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.115739636 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.09201563 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.118472285 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090122735 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.111168256 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090389263 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.11998536 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088874163 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.092662948 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.124616922 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.088810821 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.118421034 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.09005109 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.115952402 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.127145667 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.099003956 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.115972128 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09225071 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.088153384 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.120103788 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.089415292 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.113733417 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.089493732 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.116548584 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.092922052 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.116788079 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089983475 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.118430016 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.099778576 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.113567795 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.090603528 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114680035 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.091499613 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.11888737 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.092906517 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.114235089 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.090992342 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.110766385 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090383545 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.113606768 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.09518995 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113434257 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.091458277 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.115977089 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.091933804 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.11678693 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.09295199 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.116470716 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.089827205 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.109068373 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092565982 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089385674 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.117324186 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.092023943 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.116106335 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087223675 seconds)
done (took 17.046845492 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.097760057 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184297385 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.147428043 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.1492205 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.123063044 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.131870852 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.125404734 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.145705248 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.099571441 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143150946 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.145503482 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.112536777 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.150132444 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.122391101 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.107895225 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.12301957 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.09687772 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.131734356 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.154338815 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.116618958 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.148657126 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.123565852 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.143731829 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.116892172 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121595577 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.141160629 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.100714469 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.121647499 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.102270025 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.138472373 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.113422607 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.125348653 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.123177352 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.110038834 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.129832626 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.096265938 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.132499976 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.093646268 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.123375223 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.121767861 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.110531791 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.133222637 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.094824062 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.130716138 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.122498969 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.101743084 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.121147368 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.096470527 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.123385922 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.093201064 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.12654058 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.143704282 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.09641847 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.124631788 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.123860154 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.098758681 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.124623057 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.101489979 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.124654202 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.101223555 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.12236047 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.12577855 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.102984142 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.138838056 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.122205541 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.100283035 seconds)
  done (took 8.976505929 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.111603502 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.149998807 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.129762796 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.10526718 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.125164276 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.087958982 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112142144 seconds)
  done (took 1.773924294 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.089136389 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.142597599 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.120008691 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.144881021 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.137724954 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.123907829 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129967302 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.089580542 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.137849042 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.098755507 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.142741121 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.16712899 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090320584 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.126507535 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.147417241 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089282904 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.147963243 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.08941941 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.121394882 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.12028903 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119944411 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135831363 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.102170867 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.114946703 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.109633858 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.116184525 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.179337278 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.101628365 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.1131204 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.096146388 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11964654 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.182554326 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.111207831 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.124774604 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088459401 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.144686804 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.137253187 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.094117175 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.140410505 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.093660937 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.135921831 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.096246915 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.122130069 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.094903894 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.121651996 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.103698549 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.12660797 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.12349398 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.095168968 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.142342924 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.100516464 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.136347848 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.091222649 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.119461036 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.100287431 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120477719 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.103601267 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.119981908 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.141529339 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.096980749 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.139677875 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.114743381 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.135528252 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.139834423 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.106648756 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.135816783 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.110159259 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.120008747 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096285614 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.122024346 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.139708758 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.094285075 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.125097003 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.104692018 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.123593134 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.116166735 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.141145903 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094721985 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.127665021 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.094356272 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.118290407 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.090502077 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.129994298 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094036587 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.117473331 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.106674849 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.126266531 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.120146504 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.093821998 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.136431134 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.094483672 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.126205531 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.100706243 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.119063868 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129631611 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.117513084 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.12575837 seconds)
  done (took 12.454372648 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.094209274 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.092001667 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.120696575 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.092947029 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.117346629 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.092697727 seconds)
  done (took 1.571510171 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.12114251 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119509079 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.106405845 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.1227398 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.157526009 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.113769719 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.138825867 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.100239126 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.135314067 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.130553084 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.114473866 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.140475361 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.121000221 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.123341364 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.138776865 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.098262515 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.140099339 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.094809913 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.130798872 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095027636 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.132629834 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.098272272 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.119696938 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.112004823 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.125333869 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.099119678 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.12245829 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.131318101 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.105963177 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.126078867 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.098597842 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.125171217 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.099380427 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.126757069 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.139775311 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.098417908 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.118990661 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.100763879 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.123827549 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.098982913 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.140950761 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.095552444 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.12975703 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.100762042 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.12682192 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.12322812 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.101075196 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.122589943 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.115536381 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.125637698 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.100768009 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.123736188 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.099640412 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.126745273 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.098308783 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.126342098 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.101175041 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.139488058 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.122972219 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.098131959 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.1201944 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.099755499 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.126697251 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.098924798 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.123977296 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.100763921 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.124039514 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.094997052 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120190875 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.097911423 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.126517403 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.095163032 seconds)
  done (took 9.361547592 seconds)
done (took 35.080999992 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.676261022 seconds)
  done (took 1.634853575 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.827238982 seconds)
  done (took 1.788871304 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.830181389 seconds)
  done (took 18.816553893 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.500489785 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.59277752 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.983423419 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.164240621 seconds)
  done (took 3.199156389 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.952270525 seconds)
  done (took 1.932434016 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.294704622 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.260794113 seconds)
  done (took 1.521521652 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.791011725 seconds)
  done (took 1.759839816 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.530765152 seconds)
  done (took 2.500613584 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.353577113 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.201299692 seconds)
  done (took 1.534069421 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.566623563 seconds)
  done (took 1.541535219 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.758775272 seconds)
  done (took 15.7370008 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.240735686 seconds)
  done (took 1.229884386 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.300557085 seconds)
  done (took 1.279721027 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.67535886 seconds)
  done (took 4.652485064 seconds)
done (took 60.100111337 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.101034586 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.129079356 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.105238014 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.100580739 seconds)
  done (took 1.408058219 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.105647344 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.124497464 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.102468849 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.123931986 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.1068161 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.124895834 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.096901475 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.130262841 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.098366756 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.125963945 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.099255571 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.125193573 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.126040079 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.097309912 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.122146211 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.100609907 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.12840232 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.099744634 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124836136 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.099512148 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.123757612 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.100170048 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.128407103 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.098763657 seconds)
  done (took 3.699262781 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.101092409 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.094668879 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.12263558 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.094837954 seconds)
  done (took 1.401073872 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.105085625 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.137440391 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.111815519 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.130722592 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.112057597 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.137336247 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.120964259 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.094798714 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.096643894 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.131295421 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.095963213 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.140747736 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.137143608 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.089693907 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.132016937 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.091207691 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.117261183 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.1108989 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.130040891 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.105673069 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.120084687 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.104539656 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.126914088 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.109665664 seconds)
  done (took 3.778403755 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.178703478 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.134015105 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.144548796 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.101645138 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.172208127 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.14623941 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.093876276 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.147290642 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.094441992 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.142889651 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.125040458 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.147072829 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.136465344 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.123378519 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.095206234 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.126929691 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.111158259 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.140888202 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.122599906 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.107296999 seconds)
  done (took 3.581526361 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.100611612 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.120101776 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090628565 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.093899092 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.126432507 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.097246129 seconds)
  done (took 1.61974133 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.090684037 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.089783693 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.115695163 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.088369691 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.119944268 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.090056451 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.08855383 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115484928 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089332698 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115619213 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.088949828 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114046632 seconds)
  done (took 2.198336257 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.41634129 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.092722703 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.12818355 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.093834526 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.1347197 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.118913929 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.107428105 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.119245533 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.170609764 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.100496955 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.133930124 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.166106645 seconds)
  done (took 2.768821001 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211197311 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099467928 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267076611 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.421490114 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159371503 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168899239 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.329508107 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165698363 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.186806906 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139862078 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197938362 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159672803 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157573233 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183109865 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14311573 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.179103275 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179604477 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203440514 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152613902 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209159721 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168030062 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171069381 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182928418 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155795268 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113742986 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161074346 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.122074417 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104351407 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175110459 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173210039 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203096762 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151840195 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115579147 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230984642 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215819338 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182078939 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.384224927 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134896336 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.192891204 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.184895662 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22939692 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142945465 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196917873 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158003736 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133565182 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184318172 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161423235 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.183890089 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.135667733 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116974538 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211604011 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179581719 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.183727858 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11322048 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.375605771 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150345723 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.150298783 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190501295 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189664351 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193714694 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171544624 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.125610504 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.223240695 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182079416 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181526269 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.147136347 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.170282474 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127590026 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179792108 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.196822933 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179940947 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170827385 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.215457426 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108997883 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168773297 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171060999 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157182456 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181354823 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164935334 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.124470251 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127109228 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140357724 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131053534 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.159999299 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126410732 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205940696 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139187991 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.270367112 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219149033 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161268991 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164833489 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16789257 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170269793 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151014211 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.094767955 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150896998 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.165276281 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162673043 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107029252 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160409449 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15029438 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.131584112 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156889946 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.099307299 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164528346 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.137417761 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170116351 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167214515 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.104594437 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16899731 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153875885 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.1614682 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176482544 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189768627 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107631345 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135340893 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197168932 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163169359 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.139431532 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178071839 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189600933 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.167744122 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113308577 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199265667 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198564139 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117758385 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218352336 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117591768 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136166662 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.153996036 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165121164 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158421306 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.130889717 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132772597 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.155725937 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197519784 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.129495942 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112770294 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179046636 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129904981 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104365368 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148399295 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14008089 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.118108198 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.153139847 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.143560985 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159500652 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165041497 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157261136 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162232481 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117454861 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224383148 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108716392 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.164610349 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151560975 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.093826439 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.182859782 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215760694 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105269886 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190227851 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.172291272 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.263665943 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166818159 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134913793 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184811049 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104412044 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.122817295 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171011178 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163672182 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165104179 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.185300924 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236331853 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.198830276 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.129205453 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154350245 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171302204 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.177536756 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159598523 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.148774872 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166499952 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172820646 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.09797156 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.127146629 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.102246365 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144749087 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134216816 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107816859 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214111853 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168930526 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.229373185 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162729443 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144313692 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185330779 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.128557907 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169115893 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.175183029 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114158397 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.186865608 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185343651 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169686586 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146431997 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174486609 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.124348025 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100485481 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.136579859 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169999762 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107272619 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138331799 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147132065 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18595238 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180341597 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154351809 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.268006649 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174226738 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195619976 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.097924689 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.167327255 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175059376 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162516482 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.166494629 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134235878 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.164091466 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181477207 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148259951 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195243238 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167523346 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172983522 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201670926 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.160827516 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134357115 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152534577 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171929689 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115284126 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165065065 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149618846 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138706539 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130441987 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.139176862 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130013247 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186434682 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148041036 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18317288 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.160415924 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176421695 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101172213 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147528437 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164790311 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151065306 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.093003736 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174949183 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219128307 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118521216 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16368805 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178443049 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133976194 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.353958403 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218594345 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18908598 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140223153 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118617305 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166320846 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163584464 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169454029 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.185618892 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147493303 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184505805 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163073001 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.117707409 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139413875 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151320865 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125731588 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.154785466 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.138733621 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.157432738 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.146797871 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189871236 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14953445 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134091939 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169258386 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.15181483 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.158618952 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116634989 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232520787 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134344447 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209934396 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.131497714 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.16940932 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191178866 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129042044 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102913202 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.131886471 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185505122 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135957529 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134765176 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.252756044 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273699054 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163240015 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174413027 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114044355 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.127652449 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163568645 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153826798 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24045886 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143281332 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.142123094 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19581813 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.155200027 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105901964 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166750771 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.36173811 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12062202 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205395404 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.096691555 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.322378857 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127499958 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135150677 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135180256 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173298121 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.136721983 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.187046796 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170762471 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119866854 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163413473 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143154836 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.254033019 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222759241 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175590245 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180145826 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.147853485 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161943524 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167965708 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18040965 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146838334 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.119922345 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167207232 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186249617 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.187436932 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.137305239 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168230833 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168930569 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164054511 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177905788 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108699317 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190926677 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135760442 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1698793 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144407215 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099257577 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164392068 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.253453395 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135620728 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180265643 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133298696 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135844727 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129071575 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126475392 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164337367 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148190271 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.132767354 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183913806 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.102493593 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168276297 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184963168 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135669456 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157346714 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121150247 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136135398 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14593108 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119577728 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139028006 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.149051768 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212002017 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.106741046 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180070776 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20563329 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169133501 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134904303 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119258678 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.664467262 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.103004828 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185891105 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152199658 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189842449 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153265818 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172587042 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166242961 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1543913 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173798363 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153209194 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.193979667 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169759002 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.163243947 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135005313 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147972065 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121266258 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.136330844 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155865086 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16757326 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116317853 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.141732579 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.161762713 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149278606 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.119678511 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14442559 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187622664 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1530141 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188554551 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187382356 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141292975 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171326356 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177271338 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105201822 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.164198418 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176181213 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146808848 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154674006 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.105260544 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.141060253 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183428323 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.098697963 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166386495 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167349632 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165385408 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168252834 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.138929234 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164952037 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116915075 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165416205 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130197431 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.158875074 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160289899 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106306926 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.132283406 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130342129 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16381453 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.163302373 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130646043 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.148528086 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181225643 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.128819465 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108301405 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.360799285 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163638399 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196429765 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.156542454 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13834128 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119673932 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159996299 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.156995194 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164589323 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.103649013 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136248659 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.134693391 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.183306519 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.130466169 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162614181 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199675237 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165641135 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193173396 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.140250889 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.266012438 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114432944 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160510778 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.135013166 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.104511497 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145850558 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139505077 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120265528 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.257641019 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183929635 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.157538001 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.118841562 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132840329 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.13110392 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108595861 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166653124 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160851099 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163968753 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118064466 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.124029965 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149537058 seconds)
  done (took 79.269083739 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.149414937 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.147652723 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.153025645 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.198621899 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.170747227 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.247800681 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.208988069 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.232051521 seconds)
  done (took 2.584369575 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.104080041 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.137632827 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.143617875 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.128339117 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.095295381 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.32839498 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.141341639 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.127767949 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.12353868 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.139306842 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.121228712 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.565313176 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.098520399 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.128234264 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.117075703 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.093544867 seconds)
  done (took 3.663027229 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.329659232 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.545176687 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.133629869 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.249905097 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.232842008 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.15502047 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.759389864 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.187650212 seconds)
  done (took 12.67176804 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.126721798 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.142496421 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.142028836 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.168241272 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.124867862 seconds)
  done (took 1.785189204 seconds)
done (took 121.400903242 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097713734 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.10038416 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.126326871 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.129752683 seconds)
  done (took 1.520510875 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.110515973 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.084096626 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.115683928 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.083370303 seconds)
  done (took 1.467369931 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.424071113 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.114218108 seconds)
  done (took 1.65005412 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.117878555 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.136172037 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.109058174 seconds)
  done (took 1.445744328 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.10638924 seconds)
  done (took 1.191809382 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.100701848 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.102278031 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.145046029 seconds)
  done (took 1.433267958 seconds)
done (took 9.78897249 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115825391 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.528760612 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.388391701 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.140301457 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.724535036 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.38266429 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.042042692 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.159938383 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.141361948 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122623659 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110271181 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.70247146 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.000322038 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.46699276 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.986278846 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.371543554 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.675496825 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.124465863 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.099285668 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123860979 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.992855577 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121841984 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095110597 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.125455193 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.675434233 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.426869826 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093833881 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.385566569 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093344257 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.1268253 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383008074 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122466742 seconds)
  done (took 17.119847176 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.099430927 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.18337164 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.102576635 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.12561565 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.097603859 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124344763 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.10497728 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.13754024 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.182707617 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093730965 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141370229 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093639648 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.12854467 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.09550118 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.143710754 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.09375188 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124793903 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.096631297 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.129646522 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095978743 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.142234749 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093507968 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.125565989 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.097531471 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.122983487 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107819096 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122064766 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.107814879 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121713988 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098519537 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127771587 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095872328 seconds)
  done (took 4.844078376 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.144731644 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.192697797 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.131236268 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.128886437 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.173866218 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.09562103 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.207607417 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.161607832 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.187617696 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.121918808 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112101692 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.123206861 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.129834767 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.124121167 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114254648 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.123467521 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.09806328 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.124921334 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.100810586 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.125188419 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.114346662 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.122628759 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095962798 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.125676878 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094559472 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136733034 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095094801 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.136389684 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094005258 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.128463557 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099574805 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.12379137 seconds)
  done (took 5.18015723 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.10272389 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.131797683 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.111165186 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.139931788 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.098059835 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.131551894 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.103050007 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.125865859 seconds)
  done (took 2.032651114 seconds)
done (took 30.258076688 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.112831002 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.100017326 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.138105799 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.106745746 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.133376943 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.117527758 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.12265565 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.105551629 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.136735803 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.103283837 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.139974352 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.094065919 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.124428591 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.094070933 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.106572028 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.128486113 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.109355563 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.132651351 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.114392112 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.138427585 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095417176 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.135130305 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.104523824 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.14401952 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.114964561 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.144548567 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.138505405 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100823571 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.123479361 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095969412 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.140205862 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.120264755 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.125713789 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.110429171 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.128602767 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.100112317 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.095771746 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.125834615 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.109352541 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.135737996 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100633271 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.134994755 seconds)
  done (took 6.065185497 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.120780754 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.166561625 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.09518935 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.125002552 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.096021458 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.161995708 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.157798982 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.096468803 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.096296393 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.148243617 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.149141334 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.097300959 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.095873295 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.126843249 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.094787542 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.125271721 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.117492378 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.149313533 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.152899295 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.124666331 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.168620159 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.154845968 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.128517623 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.147736165 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.134756506 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.15952022 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.144448365 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.130407296 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.149701155 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.094265647 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.156338481 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.155020658 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.094817108 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.123863892 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.134666639 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.158595466 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.150728039 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.133816462 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.154658468 seconds)
  done (took 6.268212036 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.103968009 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.108864867 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.146071156 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.190520047 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.133826004 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.138554044 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.105509282 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.143604597 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.111602527 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.125153332 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.105303775 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.156212602 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112853055 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.133694363 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.100647845 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.139881685 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.113587535 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.127249342 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.09979889 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.143410805 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.113141144 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.140344592 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.108405765 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.135398834 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.094386222 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.133810924 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.098409107 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.139749211 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.100267123 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.132693507 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.099528991 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.128488912 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.102561925 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.136403863 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.099672415 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.132123976 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.116667054 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.134066355 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.105255741 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.158116517 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.13685148 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.100894647 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.145851924 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.136149477 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.125312531 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.102748388 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.131903892 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.104740668 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.122975858 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.115479376 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.134594787 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.096173338 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.140080508 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.095006603 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.124270935 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.111563143 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.097367818 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.128622721 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.103854896 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.131949585 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.115382842 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.129858607 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.111446101 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.126493556 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.101944168 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.125275124 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.095923488 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.129651434 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.117824865 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128448693 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.13417232 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.134366859 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.101018733 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.133047672 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.101860118 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.134622888 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.095952258 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138746373 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.105347944 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.128991289 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.106331159 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.128249883 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.099306725 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.142929448 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.110371282 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.132007321 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.10083948 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.131474172 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.099132932 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.125652967 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109846667 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.127795795 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.100174794 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.142916468 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.096209558 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.127656421 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.102493498 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.130596746 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.095332258 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137756619 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.101599588 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.126016582 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.106181086 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.096808361 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.131188484 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.105879822 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.129866193 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.095788099 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.130379992 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.102438354 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.125863881 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.099294951 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.129125642 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.0987542 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.13912957 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.103230549 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.127990758 seconds)
  done (took 15.129292483 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.240365105 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.221897941 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.197551463 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.304776901 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.148296585 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.122536894 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.218725208 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.176872974 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.097247492 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.165529008 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.181067613 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.192319991 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.181436259 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.191238615 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.183248227 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.127143253 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.116410848 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.178478233 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.222467088 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.300895348 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.115469788 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.142096698 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.167840422 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.166082203 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.115680504 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.143423308 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.154128064 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.118643668 seconds)
  done (took 6.000763907 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.112571782 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.165867732 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.104182235 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.15926122 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.153253787 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.097178517 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.132327585 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.096684633 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.140496069 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.109911249 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.128713771 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.103605715 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.132412799 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.105236261 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.126428418 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.104838501 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.136320275 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.104989936 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.129597983 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.10031466 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.144388606 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.113728193 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.132959351 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.102033108 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.144780828 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.132864937 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.098791059 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.147599187 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.134548902 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.12550483 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.123922681 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.104784711 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.142230109 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.095546401 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.133820219 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.100297252 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.127551048 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.098755637 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.098175037 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.123844355 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.096245993 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.117691383 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.102252875 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.141033676 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.102916 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.128492834 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.101935058 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.131637703 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.102663524 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.123519621 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.099327518 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.129291278 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.102190458 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.141458523 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.099804857 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.132677968 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.100858181 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.126972655 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.105887918 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.098949599 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.124114285 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.101642781 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.133396837 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.129858331 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.105733284 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.102248958 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.131760917 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.098067078 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.132492164 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.103025152 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.12967406 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.108535501 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.124216813 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.097981265 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.137069069 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.109281424 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.131406288 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.100988804 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.134969397 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.095839252 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.116515088 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.096353844 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.08389369 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.132472997 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.095566216 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.132252821 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.099883382 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.133100386 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.142483786 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.109307362 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.133977591 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.09751212 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.132348831 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.101091944 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.094627806 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.131164817 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.114222351 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.14754634 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.125659174 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.094494769 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.143159593 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.099234061 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.094832331 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.118856617 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.105539675 seconds)
  done (took 13.489851675 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.137531276 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.177641328 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.128057285 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.115557184 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.161703295 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.167969635 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.105639329 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.105033389 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.12947718 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.115945658 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.134006843 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.104755482 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.13395969 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.111307134 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.168616846 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.137101877 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.097901669 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.141659388 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.102617809 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.18005245 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.146414302 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.136098045 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.170418971 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.134949126 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.102294327 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.164085228 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.172241715 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.110135657 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.139297068 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.171108693 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.110736225 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.171832012 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.172654271 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.102841197 seconds)
  done (took 5.791033111 seconds)
done (took 53.830703372 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.201524009 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.425454891 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.183595743 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.191611089 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.230149408 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.215203642 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.183779709 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.374077469 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.917464697 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.169334924 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.181394773 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.180529902 seconds)
done (took 27.570947991 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.233741704 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.336325317 seconds)
    (2/2) benchmarking "String"...
    done (took 1.483177835 seconds)
  done (took 3.929533861 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.178680512 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.180339114 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.428657795 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.190412772 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.182524246 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.199847501 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.177984398 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.216586353 seconds)
  done (took 15.682755388 seconds)
done (took 25.134969766 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.265354234 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.379973419 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.438191199 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.200373397 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.201644646 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.190163847 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.182275079 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.215270339 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.193886425 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.184679756 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.178715895 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.460916101 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.20432875 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.561285511 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.179233346 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.188560535 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.198024394 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.417895134 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.180468365 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.243233862 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.16882475 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.167932452 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.179606338 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.205034512 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.186412588 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.190226372 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.249847865 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.183679448 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.376283617 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.191911129 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.225375767 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.182355008 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.249381557 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.186801869 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.28740537 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.215511931 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.363118662 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.184665495 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.171915098 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.184336193 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.369090138 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.594676115 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.193114395 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.189375244 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.180678335 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.23797173 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.174695379 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.897044668 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.184427192 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.188037475 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.24391855 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.550944777 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.188497607 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.192686327 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.18131827 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.424098575 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.202393796 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.198525471 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.210190111 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.185697251 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.19221963 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.180073325 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.244372515 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.182360358 seconds)
  done (took 142.311635932 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.17968695 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.183155278 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.183921067 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.241052625 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.185919012 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.184541871 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.184225593 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.182414548 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.181633741 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.209007326 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.187927374 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.182563709 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.188799425 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.146077514 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.183245611 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.192114906 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.187668295 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.184522045 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.183613208 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.185056011 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.210228848 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.189116233 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.200174383 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.185162186 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.227792027 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.267295377 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.218656135 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.207246455 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.183686771 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.184607377 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.222779236 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.246827782 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.801450256 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.039556014 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.193638335 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.20412006 seconds)
  done (took 79.628312745 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.181253279 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.185441497 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.183099656 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.215756241 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.184985277 seconds)
    (6/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.181611024 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.755149234 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.915035845 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.230663085 seconds)
    (10/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.763234667 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.54558988 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.481593305 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.188583331 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.278012705 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.200191911 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.186072026 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.202492503 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.21277795 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.186331876 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.184573758 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.757900857 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.204014238 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.206693856 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.35816706 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.201968226 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.215075365 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.583110871 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.18259985 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.215599515 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.516864991 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.233142199 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.183217761 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.56059055 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.141082179 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.299709659 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.188151835 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.214625727 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.186277362 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.464307073 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.181917853 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.18254312 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.185959574 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.188303022 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.871676622 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.189067926 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.751454626 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.188756203 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.146631365 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.190675639 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.184516 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.163210287 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.854074445 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.202184475 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.185191533 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.188197542 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.183625956 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.183373335 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.213279436 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.131845929 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.280490898 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.18472454 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.189372346 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.215150766 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.18535867 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.376110498 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.197268743 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.450748587 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.245274726 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.285865316 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.735778097 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.185431611 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.280470603 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.30098022 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.181710199 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.181272026 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.183627225 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.182118533 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.289771804 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.180980588 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.184268266 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.570766252 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.353284508 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.2007549 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.48742467 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.285142411 seconds)
    (86/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.185478378 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.186032498 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.57069901 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.187445174 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.184375757 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.953971575 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.282195214 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.180913336 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.182718862 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.181290409 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.574050798 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.738455106 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.420447647 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.187272588 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.423322472 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.188982081 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.5845659 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.721324615 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.862557216 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.191061179 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.296934016 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.356102256 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.203176681 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.182936406 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.492149376 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.190294729 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.245870532 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.18405021 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.581056656 seconds)
  done (took 365.172559646 seconds)
done (took 588.220879321 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.901874302 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.854341286 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.980230006 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.882763679 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.840884918 seconds)
  done (took 10.571395032 seconds)
done (took 11.682281666 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.367798271 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.369591251 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.244151184 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.37120629 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.215955152 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.386195309 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.352134083 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.205351219 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.28752893 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.263171974 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.285339603 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.237207535 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.219992201 seconds)
  done (took 17.917029869 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.531169656 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.190603475 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.269616768 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.509070407 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.229750147 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.510614181 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.39961023 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.207248895 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.395148863 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.206041797 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.200717904 seconds)
  done (took 17.762912636 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.562805942 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.192113497 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.275091762 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.51818942 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.231367452 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.561882393 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.407589225 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.209230797 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.400891821 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.211444683 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.204175894 seconds)
  done (took 17.887533084 seconds)
done (took 54.67907836 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.231913153 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.360579858 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.226121361 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.203535468 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.199503825 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.200843201 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.204630433 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.210136296 seconds)
  done (took 10.955659876 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.196243356 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.196327415 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.200618039 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.19670314 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.198991196 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.197110311 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.196275841 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.69824185 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.199078912 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.199176135 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.198900433 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.20054584 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.19520268 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.199634518 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.197720771 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.199512151 seconds)
  done (took 20.789044557 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.197730027 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.195928787 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.19584103 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.196548139 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.196606154 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.196026996 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.197862365 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.195129548 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.200032692 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.196111854 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.197662867 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.196230683 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.19801126 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.194373395 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.196045064 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.197987355 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.202068761 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.196221423 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.200151107 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.19551818 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.19597296 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.196590974 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.19758084 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.196454186 seconds)
  done (took 29.850533136 seconds)
done (took 62.712013208 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.197592266 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.207788582 seconds)
  done (took 5.528227723 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.258207915 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.257511557 seconds)
  done (took 3.635459882 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.199407655 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.199089766 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.199742402 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.199278135 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.198247312 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.200263157 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.199142747 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.199482923 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.200496629 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.199005419 seconds)
  done (took 13.112976991 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.199642859 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.199777048 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.19769748 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.198760611 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.200201103 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.197973818 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.199558016 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.20025691 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.199705372 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.197741283 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.199353419 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.197959303 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.199876891 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.198529351 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.200978598 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.197703288 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.198446796 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.198927457 seconds)
  done (took 22.701797558 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.213905442 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.221467775 seconds)
  done (took 3.553282761 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.327441265 seconds)
    (2/7) benchmarking "second"...
    done (took 1.240325462 seconds)
    (3/7) benchmarking "month"...
    done (took 1.30765782 seconds)
    (4/7) benchmarking "year"...
    done (took 1.295240703 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.239586243 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.219939818 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.240979206 seconds)
  done (took 9.989667779 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.203093264 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.393874131 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.502693603 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.766772166 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.203238017 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.203906456 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.068351781 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.206355912 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.20739826 seconds)
  done (took 13.875112157 seconds)
done (took 73.513749692 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.196259309 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.209174569 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.206845474 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.210038513 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.494874225 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.196266791 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.200582296 seconds)
done (took 15.833465325 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.181085969 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.197349122 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.2031436 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.209347873 seconds)
  done (took 9.909813946 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.209230292 seconds)
    (2/2) benchmarking "read"...
    done (took 1.550021681 seconds)
  done (took 4.879291093 seconds)
done (took 15.909947327 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.201953138 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.202582509 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.199275325 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.201805178 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.201703704 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.199563863 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.199884657 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.19831839 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.202086874 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.202535199 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.203570365 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.202967353 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.203811786 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.200896361 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.201056613 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.20184373 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.203717727 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.20115374 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.200786048 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.200639506 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.201597805 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.201717283 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.200223605 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.200888799 seconds)
  done (took 29.956749344 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.203890151 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.200572943 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.202725301 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.203109211 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.200883441 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.204914588 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.20438721 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.202592247 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.203339467 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.203215507 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.202293255 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.201915674 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.20405939 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.200803018 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.205259913 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.201517465 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.20475685 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.201951008 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.204470935 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.202606059 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.20525947 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.201900825 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.203219076 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.203997791 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.201865616 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.202458021 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.204756711 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.200947746 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.206739193 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.20303553 seconds)
  done (took 37.216691997 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.209431335 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.21199821 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.20565544 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.204610937 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.205548595 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.206332413 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.204766063 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.205222574 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.205209285 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.20509346 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.205191681 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.207241126 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.20678916 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.205975442 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.206980482 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.206164363 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.205929326 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.207307229 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.2065114 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.206428784 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.206486493 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.205718809 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.207782906 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.206693307 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.206899967 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.206230747 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.206646571 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.206591467 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.207195829 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.20622269 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.206804389 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.207750824 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.208951945 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.207314551 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.206987689 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.207746573 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.21223685 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.216096114 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.209963206 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.208100398 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.206907498 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.207958338 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.206713218 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.207886313 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.20681282 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.20652863 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.212624328 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.207485475 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.207804728 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.207201089 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.207984137 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.207752665 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.207462944 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.206915407 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.207329157 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.211001883 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.207086003 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.207403836 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.207685088 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.20734693 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.208052365 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.207113787 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.207114701 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.210608472 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.208555641 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.208785263 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.206710521 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.207008949 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.208087413 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.207929501 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.208617713 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.209445366 seconds)
  done (took 88.067719693 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.206980918 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.20580615 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.206512375 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.205459194 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.205160488 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.207410896 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.205511199 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.209874834 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.20407528 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.207151577 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.20750386 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.206257473 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.204089167 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.207458984 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.208229426 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.205896802 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.20707329 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.204911871 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.207343061 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.209748593 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.208586983 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.205969811 seconds)
  done (took 27.672550289 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.210470006 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.209272637 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.206043548 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.208455334 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.207665662 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.209573949 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.207918315 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.209892368 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.208510523 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.211034914 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.204490763 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.207570579 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.207722791 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.205923859 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.205271764 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.206219615 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.207963363 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.215111352 seconds)
  done (took 22.875756749 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.206649814 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.204462174 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.207514398 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.205550062 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.205516074 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.208481068 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.207424155 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.208128042 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.207014082 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.205825496 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.207952914 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.207750803 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.207178053 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.205472761 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.211461871 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.206315099 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.20782236 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.205618907 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.20868515 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.206212987 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.206661104 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.207537979 seconds)
  done (took 27.681487317 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.209656361 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.207263796 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.207013106 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.204823238 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.206878579 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.20763571 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.207110155 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.205435975 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.21155544 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.207088216 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.204928574 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.207313436 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.206700716 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.206024606 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.206121798 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.205980046 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.210014806 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.204815757 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.208797644 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.206127444 seconds)
  done (took 25.267794982 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.219094477 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.220146376 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.218058712 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.218387546 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.221044546 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.218457609 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.218499776 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.219201491 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.219608441 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.21902091 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.218027245 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.219240695 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.220308505 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.219700832 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.218037396 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.219027008 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.219532463 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.219326585 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.219575748 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.219324548 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.220223193 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.220280472 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.219561464 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.219219609 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.21855113 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.22005881 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.219601018 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.219726036 seconds)
  done (took 35.266987543 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.210877929 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.209162938 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.207512828 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.206856935 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.207916688 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.20823519 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.207697494 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.207227712 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.210347664 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.206419584 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.21089491 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.21084605 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.209170017 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.210345593 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.208104929 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.209892241 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.211024154 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.208338862 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.208114606 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.206304359 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.209939831 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.209838998 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.211936485 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.208415305 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.209198629 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.211301725 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.208474238 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.209042526 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.211356371 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.208862681 seconds)
  done (took 37.402198892 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.251495684 seconds)
    (2/2) benchmarking "in"...
    done (took 1.250938834 seconds)
  done (took 3.632134141 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.208485785 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.211566186 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.21084839 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.209259758 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.21055667 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.211910883 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.212750246 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.209768637 seconds)
  done (took 10.814727537 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.212157036 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.212375554 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.213136716 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.212594539 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.212448662 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.212530238 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.219484733 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.23110351 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.212486732 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.212672133 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.218070212 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.219253279 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.215297065 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.213529046 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.212920887 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.215040841 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.214146271 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.21232585 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.213435346 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.212698349 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.213493457 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.215149041 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.21557181 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.211765921 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.213556619 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.224169938 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.2163338 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.215185507 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.214772831 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.217374537 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.214228755 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.211454217 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.213571458 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.214846806 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.212678153 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.215088684 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.223071337 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.234050967 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.220935839 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.214047241 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.215335738 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.212905559 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.2159521 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.216057243 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.215830088 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.214856018 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.215454203 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.211863101 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.214921849 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.219004066 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.220338333 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.215424344 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.212766848 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.217971546 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.217774404 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.220813447 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.23491927 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.218413619 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.225197247 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.226175766 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.228631714 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.238719262 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.217113493 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.215582225 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.226971086 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.238645538 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.222733767 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.233237496 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.215132791 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.217398016 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.222326764 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.229176667 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.241409148 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.216986408 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.217420466 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.217664419 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.217063024 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.21849759 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.224105119 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.238218545 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.218309453 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.217548521 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.227916899 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.238887096 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.217703402 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.217927868 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.218418805 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.219357205 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.219267789 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.227645759 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.235923516 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.218274434 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.218226411 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.218812979 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.21908928 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.219296445 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.218973159 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.218050277 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.216231749 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.220549014 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.218687891 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.222780724 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.227129895 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.220915302 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.220816711 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.226158443 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.220565888 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.219379775 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.226032726 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.219775977 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.219607025 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.221195981 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.224103705 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.218052054 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.22323565 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.226835446 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.219496987 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.220617779 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.221122113 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.221070938 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.231023411 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.244573298 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.222306114 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.222041795 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.226188852 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.229553817 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.221880469 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.223394618 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.221037737 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.2186903 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.21618221 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.2226945 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.221832595 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.222466763 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.221964972 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.223421719 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.21874713 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.221149926 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.221433955 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.223295112 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.223273952 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.222498751 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.223688824 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.222116736 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.221872919 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.223683129 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.227179336 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.22155899 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.221882653 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.222758914 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.218734272 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.223352732 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.222541504 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.223127556 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.222088717 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.222488565 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.222531105 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.222599003 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.222572311 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.223808317 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.222986307 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.224027182 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.2260852 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.224102286 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.226370622 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.222053477 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.22183246 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.224521218 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.224338966 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.222587498 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.22364382 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.22246546 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.2274078 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.232715153 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.224620856 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.224027572 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.22631595 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.225105038 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.224130689 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.224119784 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.226226187 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.231736103 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.224114349 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.230618521 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.224393171 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.22418778 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.224435262 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.224318214 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.222651741 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.224154393 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.22914662 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.232146068 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.235353248 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.247572152 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.226364852 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.22995393 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.225895346 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.228272315 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.227956007 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.224726805 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.226659197 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.225047605 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.225768553 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.226597783 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.226563344 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.226473253 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.224749899 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.226261002 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.226848331 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.225737277 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.227151029 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.226617504 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.226458627 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.223580781 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.226593872 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.225615361 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.226210272 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.223226539 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.223767812 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.226700699 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.226089768 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.226613854 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.2328277 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.224436345 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.228251348 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.228650034 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.226520079 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.225850213 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.227671404 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.229352459 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.226768713 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.234596304 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.243312578 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.228035869 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.233850763 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.245406453 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.227311791 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.22957164 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.22714923 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.225629875 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.230370711 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.234855391 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.228785283 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.228636039 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.22809907 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.228259901 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.229143997 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.234514582 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.226785425 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.227986511 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.229689695 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.229679485 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.227084244 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.229656871 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.229524842 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.229743686 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.230881942 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.230633518 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.228936097 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.23081855 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.22974385 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.229454332 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.231528226 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.231080895 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.237080934 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.234251625 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.227357596 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.232949276 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.230043615 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.232950989 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.230807983 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.230459131 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.229533099 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.243181057 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.252494121 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.235386967 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.232092663 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.231195124 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.235975672 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.231653224 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.233937868 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.229838356 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.230652094 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.23088791 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.229769241 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.229014081 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.23072907 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.230996004 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.232647913 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.232718177 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.236098246 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.232764099 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.231539832 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.231803107 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.23175238 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.232031983 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.230779834 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.23167658 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.232400297 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.234059562 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.230911732 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.231867371 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.238336424 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.250687287 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.233769014 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.233695715 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.232457421 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.231728437 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.231791086 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.232585314 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.237115222 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.240130547 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.23582223 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.241060829 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.235870503 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.242567948 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.234642203 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.236847642 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.241606952 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.231241532 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.233172568 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.233840569 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.233614216 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.241180634 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.253033682 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.235591927 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.238204091 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.234698412 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.235714311 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.23390799 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.235367309 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.235760334 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.234055662 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.242548742 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.255709901 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.238885477 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.234720615 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.232811425 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.234506873 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.234791856 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.234895594 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.238263224 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.233735982 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.236345627 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.234828336 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.234681522 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.234868492 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.235195138 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.235642549 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.231943071 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.236775635 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.242977397 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.254778227 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.239349901 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.235634785 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.240922052 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.235424069 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.242401013 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.256720969 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.238050061 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.236499397 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.236774247 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.237130594 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.237031405 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.23784462 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.234937179 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.236944051 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.239698085 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.236413216 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.239265733 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.237082258 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.23605389 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.237313206 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.247434661 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.258306742 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.239141502 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.240967947 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.234701904 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.238710477 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.242386559 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.237092605 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.237573057 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.240464401 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.247616279 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.245087682 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.238787872 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.238069031 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.237616306 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.239017646 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.237971796 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.238188201 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.237897737 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.23755762 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.237586185 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.239275816 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.240868751 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.239617261 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.237633099 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.238563367 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.24040411 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.248296463 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.238253906 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.239691872 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.240066963 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.240593365 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.238254765 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.24001399 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.239962957 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.240193869 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.240011771 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.241322447 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.246617048 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.246737903 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.24281126 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.239391637 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.240642102 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.23924757 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.240639219 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.240270636 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.240362365 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.241456415 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.241289177 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.240763412 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.241396482 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.238528177 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.240531266 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.238349275 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.239698859 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.2443225 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.248039687 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.240742116 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.237821911 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.242513767 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.241175637 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.239975176 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.240817417 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.247917962 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.244115523 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.250995673 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.250354893 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.244481036 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.239904839 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.243860771 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.247476942 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.242123617 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.241478512 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.241491946 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.24313538 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.24337169 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.245420382 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.242967825 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.247840973 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.242248374 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.241139201 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.249660111 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.262906681 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.243687437 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.243839425 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.246356533 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.241849253 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.239189216 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.243309377 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.241385969 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.250065332 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.262634772 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.24318035 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.243901952 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.241950139 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.245224201 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.248132464 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.243968768 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.242856318 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.241587415 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.244101073 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.243579525 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.243260741 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.241025847 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.244384544 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.24367287 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.247560217 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.250979486 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.240879056 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.245907587 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.245149436 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.244812634 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.244278288 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.244825428 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.242406796 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.242017667 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.243437773 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.244238329 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.245063567 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.24609459 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.2436591 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.245820596 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.246845285 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.245875544 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.2483442 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.253909951 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.252011459 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.243176571 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.24607391 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.247035082 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.246446307 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.24411089 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.245812764 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.246364763 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.247331801 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.246239846 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.245739613 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.247303036 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.248550352 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.261187134 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.267067192 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.246122851 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.247401992 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.248424331 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.248005543 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.243682995 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.247112556 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.248737379 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.251084311 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.254022278 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.24628246 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.252541369 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.266225592 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.247703342 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.251305847 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.249800193 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.254180163 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.250163001 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.246475684 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.24766235 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.252018225 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.262414471 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.249141823 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.258188787 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.276183169 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.265314136 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.247632111 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.248154804 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.247209753 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.247749878 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.249423998 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.249522338 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.249098904 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.251056373 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.249210669 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.250407389 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.25376391 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.24982198 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.251256143 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.249499191 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.248212481 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.249841474 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.247870535 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.248213097 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.250004438 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.249890782 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.248422589 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.250613321 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.250617558 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.261680159 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.275722573 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.250256323 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.249801478 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.248012121 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.252781512 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.253638379 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.260854578 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.257258024 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.249201547 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.250151643 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.252291559 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.249356153 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.250357686 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.251015579 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.250478 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.250520385 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.248192301 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.262089772 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.275179914 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.253736131 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.25006693 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.250496159 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.251806412 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.251999894 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.251810805 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.25268372 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.25219275 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.25457832 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.255160444 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.251791397 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.251055122 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.254488555 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.259802382 seconds)
  done (took 736.877657229 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.25008695 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.249072741 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.248227901 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.248843546 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.24904077 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.24951347 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.250048374 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.251916158 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.250624894 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.251530778 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.249092123 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.249540395 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.250214595 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.251414406 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.250187899 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.249318072 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.250213722 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.250316534 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.250932953 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.25241141 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.25028187 seconds)
  done (took 27.418825113 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.253070423 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.249991975 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.250784743 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.25318696 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.250272304 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.253893765 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.252725826 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.253626174 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.252210232 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.251540557 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.253669596 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.253596917 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.251637241 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.249948196 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.251954203 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.252967371 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.254247198 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.251044037 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.255225243 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.251739382 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.254864711 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.253162783 seconds)
  done (took 28.722649182 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.255731328 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.255736619 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.256002715 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.253693525 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.257000078 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.252275599 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.255256913 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.256002861 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.255543639 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.255672086 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.255085959 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.258076553 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.262409936 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.259652285 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.256894913 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.255496687 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.256658237 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.256173256 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.256151932 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.253860877 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.259474346 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.253366946 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.25428297 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.254855881 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.25797444 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.257590137 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.255752376 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.256502737 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.257103561 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.259442814 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.258340718 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.258114629 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.258891995 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.257896838 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.258285698 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.261595393 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.257027053 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.255386064 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.25685481 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.267343387 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.277444179 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.258138801 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.263821113 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.257219065 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.259201085 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.261113652 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.265776888 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.256665105 seconds)
  done (took 61.548637685 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.257303077 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.258177701 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.255658989 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.258709359 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.259232665 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.258054253 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.258969037 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.259271664 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.255369893 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.255711708 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.259629529 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.255645809 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.256374977 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.258252873 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.259024138 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.256873716 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.256283221 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.256802289 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.25663647 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.257747853 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.257325151 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.258213156 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.260461274 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.25769654 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.259829458 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.257961928 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.257602872 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.259883951 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.257566027 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.255832859 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.259758303 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.25950737 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.258146267 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.2581796 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.256750096 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.2601823 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.261051134 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.258140627 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.260380787 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.257137531 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.260998113 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.260620786 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.260562173 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.260929457 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.258405952 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.259268708 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.258206879 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.258238965 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.258299265 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.260868224 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.261590684 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.258869083 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.260750045 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.260281683 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.260790051 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.262509563 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.258810813 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.259527715 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.261435817 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.257893467 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.259265026 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.261230532 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.260297026 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.26102784 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.261828906 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.258781402 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.258454108 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.261870603 seconds)
  done (took 86.776557461 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.262662608 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.263047377 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.263413791 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.261433 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.263344438 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.262128774 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.262810846 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.263290188 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.263168217 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.263562298 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.262713759 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.264048691 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.263869288 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.263707179 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.26297861 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.26395486 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.263791044 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.264470664 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.263552844 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.26434737 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.264578948 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.264913904 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.263786804 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.263550554 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.264385797 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.264323441 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.264017052 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.264513632 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.264634603 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.264291989 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.263814023 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.264940383 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.264683042 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.26478513 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.265359238 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.265941646 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.265070708 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.265906278 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.265100352 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.265625337 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.266135342 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.266437739 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.265390845 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.265956693 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.264510629 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.266422761 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.267105158 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.266891639 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.266050943 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.26469256 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.265028382 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.266772181 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.266274025 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.265618295 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.265833332 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.266076847 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.26564322 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.266357843 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.266281933 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.268871001 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.266287506 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.266369501 seconds)
  done (took 79.59360241 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.267102507 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.266576291 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.264081778 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.262188815 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.267160577 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.265289721 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.266258347 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.266697013 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.267185078 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.266948738 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.268152311 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.264644495 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.26648767 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.268099438 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.268892988 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.267970723 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.26556511 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.265750301 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.267863755 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.266406205 seconds)
  done (took 26.50794642 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.265529083 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.269010874 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.265400204 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.265962458 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.267903633 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.265857325 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.2689036 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.267244116 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.265915063 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.269900844 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.26861305 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.267572763 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.266443716 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.266714424 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.268814094 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.267612348 seconds)
  done (took 21.456525826 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.267188794 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.269363089 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.268144651 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.268544627 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.266652612 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.266221386 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.270500511 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.266557079 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.267077397 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.269989874 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.270247114 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.271142086 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.268983878 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.269363808 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.267643625 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.270300027 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.267249896 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.267931045 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.269870283 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.270650099 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.267773295 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.266763649 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.271954446 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.271323845 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.268611945 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.269595086 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.269411537 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.269324663 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.268754577 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.272439376 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.270000721 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.26946534 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.268869996 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.267804257 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.271141322 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.268266277 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.271049786 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.270932585 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.270718477 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.270721586 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.271561564 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.269681421 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.27116 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.271329795 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.269241011 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.271897084 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.269471805 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.269294884 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.268870429 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.268278043 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.271565891 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.271466084 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.271425834 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.272981197 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.272073043 seconds)
  done (took 71.010938229 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.272021872 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.271578464 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.269510503 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.272442911 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.272178309 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.270741313 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.272449078 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.272283278 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.26955769 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.272880075 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.271252581 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.273555128 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.269947039 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.273089679 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.270784904 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.273756862 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.270455559 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.270791015 seconds)
  done (took 24.073053545 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.271382518 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.27121602 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.273876186 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.270458212 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.270866863 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.274710802 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.272488965 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.273557157 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.274913766 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.270803726 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.272300666 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.275088833 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.272959279 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.273582003 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.271810365 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.271548597 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.274089622 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.275173321 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.272036599 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.27163252 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.275375457 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.275746025 seconds)
  done (took 29.191279143 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.271959884 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.275124855 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.275003515 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.291448197 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.292393427 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.273949375 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.273859471 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.274268842 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.295213149 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.324401946 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.320032677 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.291705858 seconds)
  done (took 16.645626246 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273854639 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276861112 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.274653282 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275040407 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276388285 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27311469 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274157328 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272181343 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277124669 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27285606 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272921425 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276994445 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276874142 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274523714 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278090785 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276085486 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274141535 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274391201 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274756972 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27689014 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275048354 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277162788 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275411276 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275178258 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27384365 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275995947 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27771438 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275506474 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273968765 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278516934 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278103531 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275221969 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278549011 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276475961 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278026295 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27753161 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275987144 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278657132 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279063106 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276855619 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.278817713 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278809786 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279188457 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277857938 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279160024 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277800174 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277041865 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278052051 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27731484 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279004675 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279926023 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276150592 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280568378 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27912016 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279067566 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281188493 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278271289 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276487077 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279794664 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276722428 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278551557 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28054666 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278098092 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278377419 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280366116 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278706776 seconds)
  done (took 85.469355132 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278643797 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.276893201 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27908249 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278074508 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278227716 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277597721 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279106477 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277939313 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278793097 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277608167 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281065739 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278893125 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278803159 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277758377 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278160008 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279507794 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279505765 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279236886 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278325231 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281842623 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278070022 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278234371 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278833202 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280049375 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280464475 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281922296 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280000933 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27787312 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278823475 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279707129 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279950168 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278604677 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279839011 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.279306213 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280673358 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279409946 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278376354 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279676507 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27891176 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282753186 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280864118 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28136887 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279169112 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27947608 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280399475 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28120573 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280054299 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280822108 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28010056 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281166316 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282579797 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280801872 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280770344 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279497744 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282073728 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281298653 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28089603 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281079774 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28117967 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285508815 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280914781 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282142417 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284409817 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28160482 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280735849 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283026257 seconds)
  done (took 85.6720469 seconds)
done (took 1727.93862902 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.448239543 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.400188993 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.283073532 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.299765802 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.284049726 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.278040299 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.293110902 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.282394986 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.284039032 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.283405325 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.282487451 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.470543959 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.276886629 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.283468442 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.283295055 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.379871497 seconds)
  done (took 26.31028574 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.31235002 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.291626082 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.39872213 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.306502656 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.311061255 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.47193537 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.339710947 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.292369347 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.452644497 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.329922225 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.285497969 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.310141163 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.290186885 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.288129005 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.306018651 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.470905378 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.525777408 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.286112878 seconds)
  done (took 28.467126659 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.719945855 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.297594321 seconds)
  done (took 5.213935301 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.307506599 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.29061136 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.290288622 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.289047518 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.279220122 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.280487086 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.288016793 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.286107746 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.281088643 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.414197097 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.291737664 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.299667723 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.310450409 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.289949314 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.286986496 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.328417274 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.45730202 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.288615914 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.28677323 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.29509259 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.289601375 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.390625214 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.33100502 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.288174636 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.409814838 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.28753026 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.291939327 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.297669748 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.461657488 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.289603611 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.289592251 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.289741259 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.293157739 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.189766946 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.727931545 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.297717015 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.315713406 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.30027442 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.288085329 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.453089512 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.292383609 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.298487623 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.287527254 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.704129403 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.437953517 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.406051416 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.302432951 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.316699791 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.293673108 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.354397783 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.293083765 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.292468969 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.334804257 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.086456838 seconds)
  done (took 82.836505238 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.345073413 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.284983809 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.464617745 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.302500585 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.285524489 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.285275194 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.299538076 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.562863762 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.314684161 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.287003229 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.574187775 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.82645296 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.309395402 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.332619934 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.134328227 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.347072423 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.286086469 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.301168227 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.285659649 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.286245105 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.826556848 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.290337214 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.286373376 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.511662807 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.324822154 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.799427566 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.29100059 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.285317667 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.289557201 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.285300146 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.784143326 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.322023792 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.344950554 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.29377482 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.557675191 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.661914329 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.62688333 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.291847336 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.303790163 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.29103392 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.312674293 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.774050735 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.635849405 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.288711038 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.287775105 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.79022319 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.29114032 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.293737181 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.29692219 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.534565014 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.288091856 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.288306455 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.302696309 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.289115056 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.287693737 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.363425642 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.362529143 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.802215144 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.291969558 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.287903084 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.346767644 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.289072777 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.291377987 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.287542176 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.287818575 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.646920747 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.435062551 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.292094293 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.643060437 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.785406236 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.308171039 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.865846698 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.309095277 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.303538894 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.430896602 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.300584821 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.301494552 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.795337575 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.324953034 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.289383558 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.62827499 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.297712673 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.583167119 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.30766208 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.29047957 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.839530713 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.290622802 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.292371436 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.288302894 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.290323375 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.290526581 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.306221686 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.56713359 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.329562775 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.291310384 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.289878155 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.29863914 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.289266634 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.291470653 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.298526648 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.850476702 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.319873257 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.28956412 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.2944472 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.292296786 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.313104285 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.291784173 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.294016178 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.554643241 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.292668204 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.292593609 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.294323021 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.291273504 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.294240573 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.524059322 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.298821237 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.597390446 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.296053971 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.302969663 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.296963221 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.292116542 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.362277499 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.291562351 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.294121502 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.182399142 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.583129195 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.31252808 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.308999209 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.293918307 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.292318291 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.292784809 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.293188407 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.327196213 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.296318913 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.035330041 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.32705711 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.307782223 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.293402661 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.294543466 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.292986218 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.30048447 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.295003885 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.58257073 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.566911576 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.431170629 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.294090851 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.293631618 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.038075427 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.316612394 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.475183254 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.311852781 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.293198221 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.539856488 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.512690895 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.295621575 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.293893761 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.296102141 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.550949344 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.293092891 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.612576166 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.814893745 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.314319536 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.294380452 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.040122458 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.024460303 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.295212116 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.296780001 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.579525565 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.313607221 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.296163606 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.29566174 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.296337439 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.310603098 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.299234171 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.304350474 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.295240237 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.295370061 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.395398701 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.486927838 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.314517308 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.300865715 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.803178325 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.309246305 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.296261379 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.317799041 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.296220686 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.297217451 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.356749582 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.29891742 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.336780075 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.300339605 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.297770864 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.852654574 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.300675276 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.29675995 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.4876333 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.960275354 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.319983241 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.296215326 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.317537464 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.191909555 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.826277072 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.341000807 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.604649641 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.309695215 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.337755316 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.296572842 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.32065196 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.828472623 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.303233367 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.314944276 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.935993703 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.319259892 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.148156903 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.297869227 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.301539251 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.885761206 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.318960245 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.301784721 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.297832934 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.298199608 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.59020546 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.298005086 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.327893215 seconds)
  done (took 489.409994684 seconds)
done (took 633.432725526 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.299254286 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.300113392 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.292156758 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.308262335 seconds)
  done (took 10.413727705 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.310183336 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.306720967 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.316430156 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.305357312 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.309266973 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.305831943 seconds)
  done (took 9.067952206 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.298583113 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.30288574 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.30669798 seconds)
  done (took 8.124071885 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.503946791 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.334019812 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.627133817 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.325281365 seconds)
  done (took 9.005299873 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.314164921 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.311978589 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.314056989 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.307204653 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.30770468 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.309272213 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.30672658 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.307766788 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.310101617 seconds)
  done (took 12.999726914 seconds)
done (took 50.824171619 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.290458705 seconds)
    (2/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.85681978 seconds)
    (3/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.287276518 seconds)
    (4/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.312954677 seconds)
    (5/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.323716982 seconds)
    (6/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.48053378 seconds)
    (7/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.105924712 seconds)
    (8/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.504005208 seconds)
    (9/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.408705144 seconds)
    (10/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 2.297508442 seconds)
    (11/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.584291711 seconds)
    (12/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.703461053 seconds)
    (13/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.66542681 seconds)
    (14/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.318673536 seconds)
    (15/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.34077426 seconds)
    (16/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.286106627 seconds)
    (17/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.404714878 seconds)
    (18/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.177787875 seconds)
    (19/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.623555509 seconds)
    (20/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.914350933 seconds)
    (21/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.738636044 seconds)
    (22/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.28842321 seconds)
    (23/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.306336448 seconds)
    (24/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.328658341 seconds)
    (25/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.298912638 seconds)
    (26/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.288956834 seconds)
    (27/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.38645708 seconds)
    (28/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.287547258 seconds)
    (29/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.288601265 seconds)
    (30/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.199317203 seconds)
    (31/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.365674225 seconds)
    (32/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.287953071 seconds)
    (33/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.288157109 seconds)
    (34/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.036828861 seconds)
    (35/286) benchmarking ("sort", Int64, true)...
    done (took 2.301538957 seconds)
    (36/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.09786242 seconds)
    (37/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.412078781 seconds)
    (38/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.300844354 seconds)
    (39/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.306036996 seconds)
    (40/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.878747785 seconds)
    (41/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.387541555 seconds)
    (42/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.039686492 seconds)
    (43/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.386758629 seconds)
    (44/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.287498759 seconds)
    (45/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.084531196 seconds)
    (46/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.504336465 seconds)
    (47/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.300536768 seconds)
    (48/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.594576804 seconds)
    (49/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.300761636 seconds)
    (50/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.304247604 seconds)
    (51/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.287857385 seconds)
    (52/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 2.32302229 seconds)
    (53/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.300757236 seconds)
    (54/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.362139374 seconds)
    (55/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.185033923 seconds)
    (56/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.30234529 seconds)
    (57/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.311582565 seconds)
    (58/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.329556656 seconds)
    (59/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.327315137 seconds)
    (60/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.325897181 seconds)
    (61/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.301500081 seconds)
    (62/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.426527304 seconds)
    (63/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.28998679 seconds)
    (64/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.289681217 seconds)
    (65/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.462488466 seconds)
    (66/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.045327083 seconds)
    (67/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.31034854 seconds)
    (68/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.289651028 seconds)
    (69/286) benchmarking ("sort", BigInt, true)...
    done (took 2.306297143 seconds)
    (70/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.297311705 seconds)
    (71/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.707030625 seconds)
    (72/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.34663525 seconds)
    (73/286) benchmarking ("sort", Int64, false)...
    done (took 2.30321656 seconds)
    (74/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.311036488 seconds)
    (75/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.303903361 seconds)
    (76/286) benchmarking ("sort", Int8, false)...
    done (took 2.307616482 seconds)
    (77/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.293852199 seconds)
    (78/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.21234413 seconds)
    (79/286) benchmarking ("sort", Int8, true)...
    done (took 2.32259727 seconds)
    (80/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.933473741 seconds)
    (81/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.290554899 seconds)
    (82/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.302481502 seconds)
    (83/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.416379867 seconds)
    (84/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.899667013 seconds)
    (85/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.850411367 seconds)
    (86/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.305178298 seconds)
    (87/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.304852435 seconds)
    (88/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.321609668 seconds)
    (89/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.573203912 seconds)
    (90/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.323570638 seconds)
    (91/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.351085053 seconds)
    (92/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.356086815 seconds)
    (93/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.372289502 seconds)
    (94/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.290896618 seconds)
    (95/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.308839082 seconds)
    (96/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.291272395 seconds)
    (97/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.918909884 seconds)
    (98/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.293877684 seconds)
    (99/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.391250605 seconds)
    (100/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.333579989 seconds)
    (101/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.652140067 seconds)
    (102/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.527377073 seconds)
    (103/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.293238912 seconds)
    (104/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.913390989 seconds)
    (105/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.365885092 seconds)
    (106/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.305688571 seconds)
    (107/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.305217718 seconds)
    (108/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.292617844 seconds)
    (109/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.126785454 seconds)
    (110/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.19532558 seconds)
    (111/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.306875575 seconds)
    (112/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.126750569 seconds)
    (113/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.410135824 seconds)
    (114/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.294068527 seconds)
    (115/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.3075769 seconds)
    (116/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.50131627 seconds)
    (117/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.304479337 seconds)
    (118/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.191166787 seconds)
    (119/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.699355678 seconds)
    (120/286) benchmarking ("sort", Bool, false)...
    done (took 1.867930591 seconds)
    (121/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.332062457 seconds)
    (122/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.565024966 seconds)
    (123/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.332911227 seconds)
    (124/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.046044298 seconds)
    (125/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.570026809 seconds)
    (126/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.294602319 seconds)
    (127/286) benchmarking ("sort", Float32, true)...
    done (took 2.306207993 seconds)
    (128/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.306858142 seconds)
    (129/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.418610251 seconds)
    (130/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.288783177 seconds)
    (131/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.312123808 seconds)
    (132/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.398297648 seconds)
    (133/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.295180322 seconds)
    (134/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.202806624 seconds)
    (135/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.086802277 seconds)
    (136/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.333421363 seconds)
    (137/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.323837089 seconds)
    (138/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.295976709 seconds)
    (139/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.301653292 seconds)
    (140/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.307513227 seconds)
    (141/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.445430207 seconds)
    (142/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.330805169 seconds)
    (143/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.307659135 seconds)
    (144/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.35076253 seconds)
    (145/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.349077749 seconds)
    (146/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.703379501 seconds)
    (147/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.315416464 seconds)
    (148/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.634215441 seconds)
    (149/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.372566371 seconds)
    (150/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.305758748 seconds)
    (151/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.328263325 seconds)
    (152/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.295918635 seconds)
    (153/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.299706736 seconds)
    (154/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.294893065 seconds)
    (155/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.296184789 seconds)
    (156/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.144255146 seconds)
    (157/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.343517728 seconds)
    (158/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.044367565 seconds)
    (159/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.334428427 seconds)
    (160/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.307818852 seconds)
    (161/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.295340633 seconds)
    (162/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.296345975 seconds)
    (163/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.350811335 seconds)
    (164/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.311230033 seconds)
    (165/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.311005389 seconds)
    (166/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.336308289 seconds)
    (167/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.615536509 seconds)
    (168/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.634983694 seconds)
    (169/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.413897661 seconds)
    (170/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.904994954 seconds)
    (171/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.421634383 seconds)
    (172/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.335152188 seconds)
    (173/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 2.309850953 seconds)
    (174/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.316654691 seconds)
    (175/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.053795717 seconds)
    (176/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.297831635 seconds)
    (177/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.142659515 seconds)
    (178/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.352576916 seconds)
    (179/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 2.315043177 seconds)
    (180/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.30273267 seconds)
    (181/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.29911007 seconds)
    (182/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.310688846 seconds)
    (183/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.434296592 seconds)
    (184/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.426186482 seconds)
    (185/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.310119197 seconds)
    (186/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.317865457 seconds)
    (187/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.328668754 seconds)
    (188/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.327549146 seconds)
    (189/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.415881042 seconds)
    (190/286) benchmarking ("sort", Bool, true)...
    done (took 2.310534071 seconds)
    (191/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.387455516 seconds)
    (192/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.303607892 seconds)
    (193/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.442598855 seconds)
    (194/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.769336561 seconds)
    (195/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.31817818 seconds)
    (196/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.305875133 seconds)
    (197/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.316217136 seconds)
    (198/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.309263682 seconds)
    (199/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.155373806 seconds)
    (200/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.315566836 seconds)
    (201/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.309309925 seconds)
    (202/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.518606239 seconds)
    (203/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.298800838 seconds)
    (204/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.338465821 seconds)
    (205/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.053319978 seconds)
    (206/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.170814477 seconds)
    (207/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.657954007 seconds)
    (208/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.303088461 seconds)
    (209/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.304300797 seconds)
    (210/286) benchmarking ("sort", Float64, false)...
    done (took 2.313272474 seconds)
    (211/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.173908342 seconds)
    (212/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.300756678 seconds)
    (213/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.316059094 seconds)
    (214/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.335500416 seconds)
    (215/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.43624932 seconds)
    (216/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.300229165 seconds)
    (217/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.331007454 seconds)
    (218/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.354156942 seconds)
    (219/286) benchmarking ("sort", Float32, false)...
    done (took 2.312320056 seconds)
    (220/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.303042103 seconds)
    (221/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.300682625 seconds)
    (222/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.301199855 seconds)
    (223/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.301332202 seconds)
    (224/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.079719711 seconds)
    (225/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.308575754 seconds)
    (226/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.307080503 seconds)
    (227/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.301089874 seconds)
    (228/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 2.340268492 seconds)
    (229/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.514197951 seconds)
    (230/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.300568129 seconds)
    (231/286) benchmarking ("sort", Float64, true)...
    done (took 2.313380096 seconds)
    (232/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.320953497 seconds)
    (233/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.693063584 seconds)
    (234/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.522033057 seconds)
    (235/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.395518222 seconds)
    (236/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.300301398 seconds)
    (237/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.913063439 seconds)
    (238/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.337685396 seconds)
    (239/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.135958837 seconds)
    (240/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.40219456 seconds)
    (241/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.302003014 seconds)
    (242/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.340591071 seconds)
    (243/286) benchmarking ("sort", BigInt, false)...
    done (took 2.313896856 seconds)
    (244/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.503282048 seconds)
    (245/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.417783409 seconds)
    (246/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.314287561 seconds)
    (247/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.705356066 seconds)
    (248/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.661975068 seconds)
    (249/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.693098963 seconds)
    (250/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.441427196 seconds)
    (251/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.301322497 seconds)
    (252/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.511653877 seconds)
    (253/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.331682201 seconds)
    (254/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.329287475 seconds)
    (255/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.933755186 seconds)
    (256/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.440251908 seconds)
    (257/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.310590148 seconds)
    (258/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.319489325 seconds)
    (259/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.302307486 seconds)
    (260/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.407818286 seconds)
    (261/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.47712852 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.498921506 seconds)
    (263/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.478669658 seconds)
    (264/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.32907405 seconds)
    (265/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.314785607 seconds)
    (266/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.304747478 seconds)
    (267/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.436426828 seconds)
    (268/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.316390002 seconds)
    (269/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.290425439 seconds)
    (270/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.358523961 seconds)
    (271/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.380913292 seconds)
    (272/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.312420614 seconds)
    (273/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.304242274 seconds)
    (274/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.850433214 seconds)
    (275/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.327579021 seconds)
    (276/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.331583426 seconds)
    (277/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.34389806 seconds)
    (278/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.306139257 seconds)
    (279/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.381647762 seconds)
    (280/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.34423338 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.340186978 seconds)
    (282/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.317210408 seconds)
    (283/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.437077103 seconds)
    (284/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.31172247 seconds)
    (285/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.458213112 seconds)
    (286/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.318839126 seconds)
  done (took 559.723100447 seconds)
done (took 560.935691718 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.363944582 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.374531579 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.329006418 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.361597573 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.444174511 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.504665205 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.340130257 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.368157747 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.377448342 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.378360241 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.33444313 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.504749032 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.329296587 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.328386868 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.328912363 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.371931377 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.324660588 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.335278177 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.346719562 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.363405097 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.34505901 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.336988579 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.381460643 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.505697273 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.334260608 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.334240268 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.333564821 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.354437242 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.445851732 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.334013521 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.332780181 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.343731702 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.32620209 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.33897123 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.3253162 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.354644072 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.342816094 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.339766157 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.365104201 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.446414637 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.326069182 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.33723889 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.333513318 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.333148001 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.332736952 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.372468519 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.335557431 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.391107856 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.376772242 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.375496516 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.335679004 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.347599761 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.342485775 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.334165092 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.344438414 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.334927175 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.390785049 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.380289577 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.353260218 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.380368 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.324266818 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.344297372 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.372930329 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.351179095 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.347112456 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.324889832 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.333333186 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.373326316 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.331049934 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.339873835 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.323284493 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.347210892 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.338350725 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.349704874 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.37115603 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.334568109 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.334819781 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.333279052 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.347769165 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.335475964 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.38428475 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.376794781 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.384809415 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.335748709 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.376919368 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.512367588 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.346856832 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.337567683 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.373906797 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.355920199 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.347342424 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.346845235 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.370286243 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.339020338 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.384774294 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.394102216 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.346706721 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.344296958 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.385879963 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.348626793 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.33254008 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.384013758 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.332602403 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.334587732 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.337058729 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.457717732 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.338704109 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.337189133 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.370773599 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.383856791 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.397170617 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.326429763 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.354300407 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.384886063 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.346864538 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.398333504 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.339870222 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.326825751 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.34940109 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.462535795 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.340878715 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.344015822 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.38297087 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.398851988 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.340516565 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.32809714 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.357401879 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.380081674 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.460237877 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.349910115 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.453968838 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.340115357 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.344216839 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.373976153 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.38495222 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.37617272 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.401052746 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.384766538 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.356662231 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.339774357 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.351514045 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.35136242 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.340657137 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.397042711 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.337878981 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.376286472 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.382730405 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.38199221 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.373611565 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.46137866 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.346337731 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.331420318 seconds)
done (took 224.342198016 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.400370529 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.333201207 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.447854176 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.337443674 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.43755557 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.438580039 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.335142931 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.334827629 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.335373007 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.718744586 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.33452904 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.334623116 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.334476801 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.335705962 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.420477667 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.338889228 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.335869709 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.680871094 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.339372958 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.408143821 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.338371045 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.33612554 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.338285246 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.721106836 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.33471726 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.332057294 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.408899559 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.337880472 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.683914688 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.33344009 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.334737611 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.685694887 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.430660937 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.356072418 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.347845809 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.34674906 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.439610643 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.356432719 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.421386663 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.420548424 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.44990414 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.377797481 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.333839995 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.337840384 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.340381578 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.34059852 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.33778266 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.366976821 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.33804105 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.338823005 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.682785537 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.349884395 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.347378275 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.339021929 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.337727481 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.360685342 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.338897209 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.340763507 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.431551463 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.340269461 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.403826261 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.724729256 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.723493862 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.341526204 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.337711807 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.338024013 seconds)
  done (took 104.83020635 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.407014926 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.41649605 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.453094526 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.344792623 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.390742846 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.455955431 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.345182025 seconds)
  done (took 11.058494173 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.349985893 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.342093902 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.391305089 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.392777746 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.342645351 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.559880216 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.342729319 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.353455813 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.339444004 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.421615864 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.355028956 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.343468521 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.348808349 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.342217313 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.39115947 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.353806579 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.457390588 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.344685761 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.342665124 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.496578227 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.340523153 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.349709319 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.420754666 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.354601463 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.355076555 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.352242567 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.293046403 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.344101574 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.340806746 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.342382006 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.342519363 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.453822539 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.344560612 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.345227837 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.340762768 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.503790444 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.345173026 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.341510741 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.344612017 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.343785973 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.345994056 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.344334078 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.344577323 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.342739561 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.343720492 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.367771722 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.344791799 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.344500406 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.344157764 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.34459876 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.42187546 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.346959429 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.34106696 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.341430245 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.422056978 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.351045107 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.347012427 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.341936755 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.345146556 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.344401398 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.499270355 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.394520566 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.345654228 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.393287817 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.34569272 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.346784548 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.345718765 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.346521006 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.4390633 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.345791226 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.394594396 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.344033323 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.56881323 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.371017666 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.348682068 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.349705632 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.349135337 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.347182769 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.345601918 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.355355659 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.344833548 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.347731024 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.352922001 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.344583751 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.345344536 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.528562249 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.50482266 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.345049607 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.361656769 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.356270767 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.346040601 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.424384555 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.347832122 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.345494438 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.401069025 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.464464574 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.427964063 seconds)
  done (took 139.295665377 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.353548361 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.357120013 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.350888016 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.369616589 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.349884456 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.347691289 seconds)
  done (took 9.379098691 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.351372969 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.350156926 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.349330939 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.348602742 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.349286012 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.3605114 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.360999448 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.350168512 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.353368046 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.349594702 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.361069452 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.352124807 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.353236725 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.351539703 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.360721671 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.350994161 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.360504863 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.347024912 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.351980485 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.350344624 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.34917569 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.350682545 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.349953208 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.351283139 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.36488543 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.350230654 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.358836136 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.350376506 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.35170297 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.357617996 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.371047984 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.362509253 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.352221708 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.356591681 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.366971394 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.35273001 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.354953839 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.353464701 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.349094129 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.361646859 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.352189894 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.353299463 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.352210721 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.353219322 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.355149673 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.358249218 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.357910249 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.361513107 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.362792279 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.35388377 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.353480447 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.351991358 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.364629297 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.352654215 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.356745816 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.374548598 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.358034814 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.364169608 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.352752109 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.354295135 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.355632182 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.363239562 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.354860653 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.367494624 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.353883706 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.35538229 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.355818427 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.357704068 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.354772095 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.354015927 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.355249605 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.353097683 seconds)
  done (took 99.859126574 seconds)
done (took 365.663063356 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.787887191 seconds)
  done (took 4.045952709 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.428310177 seconds)
  done (took 3.686657698 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.682588219 seconds)
  done (took 22.94695331 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.42860293 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.386911933 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.36617669 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.348535723 seconds)
  done (took 10.789073557 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.596482597 seconds)
  done (took 3.854780101 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.348929486 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.364129043 seconds)
  done (took 5.971823191 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.63755625 seconds)
  done (took 3.896221781 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.764994532 seconds)
  done (took 4.027930865 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.369354205 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.361634194 seconds)
  done (took 5.997622799 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.346029944 seconds)
  done (took 3.602966766 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.356441375 seconds)
  done (took 16.614587113 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.358342425 seconds)
  done (took 3.618754049 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.384141705 seconds)
  done (took 3.642185281 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.950393044 seconds)
  done (took 6.207697965 seconds)
done (took 100.158738727 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.352575502 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.358398945 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.357646685 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.358023948 seconds)
  done (took 10.683705392 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.388619169 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.389572528 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.390095957 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.399662818 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.391606194 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.390694046 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.381668872 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.38133122 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.401697709 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.39237846 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.392746815 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.392337563 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.392253825 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.382223335 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.392553202 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.39177592 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.401443756 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.390757551 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.382959026 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.393251344 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.358145104 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.401849363 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.392159132 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.357136219 seconds)
  done (took 34.587196987 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.877001722 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.428450523 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.510447201 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.410973309 seconds)
  done (took 7.488232477 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.426518309 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.427955071 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.435956294 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.474816118 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.500685801 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.435973156 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.384925565 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.380052058 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.367166145 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.42648205 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.486013216 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.423806642 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.501820081 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.358778415 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.544895823 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.359236161 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.358481293 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.436928894 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.475064647 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.488826644 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.358663331 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.435082726 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.436374614 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.423563566 seconds)
  done (took 35.609521991 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.358955996 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.377188278 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.359706196 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.358604303 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.366331993 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.358777499 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.360105321 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.360044737 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.35907912 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.877793092 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.364519694 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.371684198 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.86607974 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.365241033 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.366824255 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.361292744 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.880196586 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.873964109 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.366866223 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.365788027 seconds)
  done (took 30.580521208 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.354516842 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.354115219 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.708281312 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.610543183 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.353312123 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.354882993 seconds)
  done (took 13.99774399 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.433187376 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.581808435 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.367906189 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.718591741 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.798780312 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.365541409 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.364575404 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.613470515 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.932721 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.917161196 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.422523934 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.436760085 seconds)
  done (took 20.218156313 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.362597566 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.358715106 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.363354594 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.380602862 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.416152432 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.365220623 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.371503595 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.354853338 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.422840998 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.424177874 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.364830149 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.419000274 seconds)
  done (took 21.868082525 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452358526 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.356410865 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.357307352 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424964234 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360954445 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.204062104 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.401582714 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.10877777 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.385970977 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.631958742 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359250568 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460175109 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.61380158 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367535007 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.363003846 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.351020096 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.593414416 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.854145517 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359552349 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362813501 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393291975 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.360236265 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.365487538 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.577841119 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.36238409 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359217844 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.619245472 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.357806032 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.646950085 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.370561594 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370553799 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.356688453 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.634703247 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.030755577 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.488727231 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.575983819 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366877982 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.365718395 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.361438321 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.367402814 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.37399226 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.368594295 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370407262 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360112177 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.359730476 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359027025 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.122311045 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.392051895 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.358574335 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.359487967 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.623016012 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458629196 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.36417772 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.359208112 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.457153063 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364307279 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.36465956 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.359414779 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94591767 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367319903 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360988013 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.388037609 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.389882258 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388921848 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987775331 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.368255264 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.365597234 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.365555401 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361686901 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.364011443 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.378736915 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361313159 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.388764369 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361965859 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.087512844 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.38358175 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3699606 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918663657 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37092054 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.368346436 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.596039502 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363606719 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361170164 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.36124826 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.361657945 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.092211699 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377307284 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.349778322 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.386828847 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.120675361 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.606931995 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388341122 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395152201 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.587773495 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.348350056 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36161164 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.363633877 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371168725 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387309616 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.117354533 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388263129 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.368964193 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.623483755 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.576038684 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366742653 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.364727462 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.87217201 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405769834 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.38527017 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.363352873 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.606401854 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.967836607 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.385222545 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372039774 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385512361 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.36423051 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.132168158 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386016234 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.473289155 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.373137362 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.644583776 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.173500376 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371668769 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.434251644 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369374598 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.365826994 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.372728023 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367825131 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.364311297 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.575535703 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390702269 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.381347454 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.378050777 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367261385 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.363987445 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365805948 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.390070309 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.591624012 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383326914 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.648062035 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367820815 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366170703 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365393825 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.592493318 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.372793229 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.709350427 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.629761912 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369524444 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.373273692 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.383546812 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385115481 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.475219976 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390228055 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.379809845 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.63082716 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.372036059 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.371461402 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.374291381 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.368966491 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373418044 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.374688772 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406442828 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.969030969 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345759638 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.376918825 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.259600863 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.382377177 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.435895059 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.374584439 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.587929624 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.373682929 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393256196 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.377998873 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.379829771 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.595609068 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.381282352 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.374123787 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.447011788 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.868691099 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.989952667 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.383568494 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.367963512 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.367265041 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.371028973 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37471522 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374984938 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.371385624 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.589161597 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.391278129 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.387843108 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.972864929 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373264159 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.378309288 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.37606085 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.383386531 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.377289271 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371204136 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.368554402 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387465273 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385634546 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.389357388 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.516241256 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.386962858 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.371764551 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.88746003 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.378016045 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.373778922 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.372181719 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407364393 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.381595185 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.252724251 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.639108183 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381710921 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.641623621 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.379579055 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.388314686 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.370326212 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376595875 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387885894 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.379429784 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381171911 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.383227511 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.378838308 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374492462 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948969754 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.112181246 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918942327 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376646215 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.387264578 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.378822823 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.132416632 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39747301 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.37177129 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.611230231 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.129867356 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397268682 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.879251599 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.404251054 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.152713239 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.642793859 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.609064068 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376161922 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.413076975 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.648372932 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.589535838 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412192612 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.385191306 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379363541 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.359452517 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.962501095 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395966664 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.457931904 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.136269011 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41281005 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.38151295 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.429108402 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.386557438 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.801933268 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.398995628 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374430182 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.387203846 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.395013622 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.19752612 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.383840233 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.374236527 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009381327 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.378788806 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.882381398 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40392465 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.597126397 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.395101718 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.381200087 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.37965313 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.38807448 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.636837269 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.640199733 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382811192 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.374844291 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930374461 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.245405295 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.381840969 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377358695 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.148559676 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38760712 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.672591249 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.39723337 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.385458254 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384016552 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.37768287 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378761692 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.374330761 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.383020031 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3534318 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877952959 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.395890216 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405388434 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.384215796 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383881618 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.634118019 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.393563256 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.976084871 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.613347642 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391532794 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405995296 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.384288107 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39508641 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.372359945 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.380385634 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.379510417 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472125866 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.608029769 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.37883378 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.372035474 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.442172519 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.597981829 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.379984699 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.381136481 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.637027187 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.382592684 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.389000575 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.114331464 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416116622 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.378695583 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405736415 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.385542324 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.384395615 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.457687304 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.60246273 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.399258124 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.391924876 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.803805143 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416225055 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388070591 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.39409093 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476115954 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380749347 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.388785721 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.158447833 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.98304654 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.14592906 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.991610785 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.648023466 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.388504515 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382871674 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380998805 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.545316377 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380228246 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.655671671 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380705392 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.386574674 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411035121 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383069971 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390409716 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.600136427 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.658133306 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381186596 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391074862 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390155083 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.382890653 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.393051021 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.594122978 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888428756 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945530593 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383184361 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.381636328 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.148949986 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.682250714 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383430912 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383769873 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384503101 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.390735916 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.398282224 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.394326995 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388720785 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.533345559 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.649101964 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.071887378 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.419889243 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.409836515 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.157582478 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397912248 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.640525802 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385767556 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.612027788 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.991839858 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.105096293 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.656097322 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454838743 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.607420854 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.389585366 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.548257431 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.388577347 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.39047813 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386231246 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384395043 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.381877815 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.394548983 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.990754627 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.652573433 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.389045691 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.387215357 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421545219 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.396069324 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.609315245 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.13052458 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.614602475 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.395350891 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.390759586 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.385473175 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.989196615 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.654877552 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387306398 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.390999962 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.635559963 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.39319324 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.411670806 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.840509003 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.384954643 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952640936 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.361668096 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411385227 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39025565 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.114274548 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.992508972 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.398270054 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896652899 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390761161 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401103906 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.665997114 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.394975897 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.393550698 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.668951622 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.39198481 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.399571993 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.617401304 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.994245094 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.172208931 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.405263737 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390473716 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.408566731 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389808863 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.455812924 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393103019 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396160153 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.828111347 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.414831795 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388534454 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.400624263 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.393415529 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39734734 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.389887502 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38777683 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.394571698 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.403677577 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.38862968 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.400552159 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.393224004 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.994755004 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421873139 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.059735135 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.714827066 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.647027058 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.391504484 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.381150799 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.394968221 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389534449 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39077291 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390376645 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.39426809 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956841023 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.391121052 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.407201047 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.395960885 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.607358459 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.603064744 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.38995645 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.623042965 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396283589 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.411928782 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.377398501 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389432469 seconds)
  done (took 982.073240614 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.412491373 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.419666111 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.415057366 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.405680453 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.425886501 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.434700885 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.45673487 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.410989708 seconds)
  done (took 20.678200629 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.392421275 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.407322613 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.406917071 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.405181088 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.402437425 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.880800108 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.413261441 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.402448495 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.403805309 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.407861122 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.396336312 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.103500044 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.425544912 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.40226036 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.396821827 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.401919101 seconds)
  done (took 32.951961542 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.419380612 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.550752831 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.425327597 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.454648256 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.410169042 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.397157402 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.642581124 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.410487313 seconds)
  done (took 27.009657712 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.404477667 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.406049176 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.40487878 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.404696035 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.403371075 seconds)
  done (took 8.320714331 seconds)
done (took 1247.325002911 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.397493829 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.400540674 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.398689846 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.400591896 seconds)
  done (took 6.89642485 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.380662626 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.381983391 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.384277084 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.398312933 seconds)
  done (took 9.84373174 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.129541553 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.070503152 seconds)
  done (took 5.499019473 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.39456623 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.157529138 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.132725957 seconds)
  done (took 7.984434743 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.698183266 seconds)
  done (took 2.997538187 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.807588459 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.786504646 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.585395806 seconds)
  done (took 6.47907436 seconds)
done (took 40.9988507 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.403486006 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.734704164 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.552919869 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.401810681 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.55677277 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.554564546 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.132479735 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.39734507 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.402557879 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.396180994 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.394880521 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.556747928 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.116117949 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.735914577 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.116805753 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.641916452 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.560027627 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.39858547 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.425050039 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.400529499 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.134487231 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.401632551 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.395566908 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.424195757 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.55959903 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.544456091 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.408873557 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.643552092 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.395496072 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.429553835 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.545131496 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.40741377 seconds)
  done (took 83.469382512 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.399093629 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.408333559 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.397876767 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.413266622 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.414384157 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.413506322 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.398196936 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.396603234 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.414733856 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.39753448 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.414903285 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.416743262 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.39629397 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.396268147 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.398488868 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.396812911 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.411407805 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.399394665 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.397528653 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.398635357 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.396218013 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.397840147 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.400505456 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.396784555 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.405787766 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.401263361 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.427989368 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.397238106 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.397625458 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.409975174 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.402486386 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.417079949 seconds)
  done (took 78.23270934 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.402170048 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.405523884 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.404262361 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.397550217 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.398124172 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.401541089 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.401107389 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.398146416 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.399380414 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.398865692 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.399059907 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.398034141 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.398648878 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.398013833 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.400665001 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.399830897 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.416642353 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.409580715 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.399227046 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.419377244 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.403766863 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.399436412 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.400623159 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.41692426 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.399697097 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.406133602 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.410485737 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.416160801 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.400491871 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.413850866 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.402872771 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.408025657 seconds)
  done (took 78.22872181 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.683174003 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.408952479 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.409327348 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.39284943 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.407998721 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.407537758 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.402682896 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.682432711 seconds)
  done (took 15.100592662 seconds)
done (took 256.329352175 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.401568242 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.423014902 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.633887105 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.430995384 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.402070875 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.434817213 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.430266526 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.62859794 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.388654743 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.650577865 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.428950782 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.426138198 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.412493495 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.427833306 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.684815917 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.553927736 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.347988374 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.400573068 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.747510064 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.426052648 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.702493186 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.408903929 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.681494161 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.402992457 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.420210951 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.409886355 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.403312624 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.356315223 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.450095468 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.758018802 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.417629742 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.396711585 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.497624636 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.514132751 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.630158135 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.570334465 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.405391679 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.515937278 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.630233823 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.415267573 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.408401864 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.216110584 seconds)
  done (took 84.598648831 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.411523837 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.532962671 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.411292037 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.410356196 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.412221597 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.534832849 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.509120839 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.413947584 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.413049045 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.410754946 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.411236151 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.41293962 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.412035193 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.412213876 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.413338655 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.414426414 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.411542069 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.42440675 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.424779473 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.4584418 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.542124801 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.438818947 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.409115386 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.413056064 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.517693489 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.5574506 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.411386986 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.406565541 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.455851259 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.414089774 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.41652476 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.461967516 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.413973224 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.413537048 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.534374159 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.514462777 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.424893094 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.411687578 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.532190826 seconds)
  done (took 57.656854508 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.414204834 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.668361362 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.855806735 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.42633461 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.413747104 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.419092084 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.495416311 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.421160324 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.419163027 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.420206792 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.583268101 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.419467716 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.451127291 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.879835832 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.41868506 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.416852525 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.416130642 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.416365433 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.675305033 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.426857957 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.516287986 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.421724388 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.496106405 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.429366313 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.439938917 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.41817745 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.421544904 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.990076405 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.421094095 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.583816942 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.22622251 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.497076729 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.931601223 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.865797066 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.233716273 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.424025243 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.415888564 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.589438397 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.418711108 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.416094369 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.497673884 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.424212046 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.86311005 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.0864603 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.443853031 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.417090473 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.009033795 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.589796613 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.66636163 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.429386749 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.892463751 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.425647183 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.419463499 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.420320086 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.666568085 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.425992483 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.417017973 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.988744951 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.44201995 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.498470952 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.422087894 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.419116221 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.684605433 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.425225489 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.67078718 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.423806104 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.427530913 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.439314174 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.86066063 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.4542987 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.100224704 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.454462704 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.419330374 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.59084398 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.672965598 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.043855212 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.428867662 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.689235884 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.943584051 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.497818627 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.426904236 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.984123596 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.501509732 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.424893744 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.423960659 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.422716317 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.421204828 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.472349937 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.496447132 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.026394211 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.093587129 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.025897391 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.520933276 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.436572364 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.421216803 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.002016575 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.43998818 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.421720199 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.859308517 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.104005486 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.447048883 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.42899358 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.110352745 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.448524735 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.502237612 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.432444625 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.872626004 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.42974816 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.474149133 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.421819695 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.429521423 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.445877054 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.503457268 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.430444038 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.422166309 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.072223542 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.621538869 seconds)
  done (took 187.041334362 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.41607213 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.414934208 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.414990328 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.431824371 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.41635449 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.424936996 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.415077092 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.415554629 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.422555371 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.416478177 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.41580364 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.418420187 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.417689909 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.421865837 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.428637422 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.423923447 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.417195439 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.415542487 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.418385995 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.419237418 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.416587035 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.439084537 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.418783032 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.417156231 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.420435888 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.416841915 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.425263122 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.421860993 seconds)
  done (took 65.080910677 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.424326254 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.996462624 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.431718762 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.559113027 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.452007304 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.422961597 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.558257716 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.484863947 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.427223238 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.42297154 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.423108817 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.737146931 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.432074139 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.942951981 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.621404258 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.560315729 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.948498276 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.445641058 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.424052163 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.422341307 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.558539298 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.440217845 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.737759263 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.011978572 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.433284864 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.004996996 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.424192245 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.425953348 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.425412174 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.006225366 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.429488511 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.739992892 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.509180626 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.487111891 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.014409873 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.958386347 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.969619116 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.579820137 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.431748955 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.425425485 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.424663114 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.417302332 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.012709536 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.434425615 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.427580748 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.008156907 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.451366275 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.42921584 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.432565272 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.424877702 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.487232908 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.497006437 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.7495962 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.023711969 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.535610257 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.441924413 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.561640998 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.807624029 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.437110125 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.947568095 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.420847004 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.011342725 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.453595711 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.419474479 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.428966404 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.433008375 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.581522924 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.569459482 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.955044677 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.447948286 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.947491275 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.60097089 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.430927994 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.42786622 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.430698569 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.003734853 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.949659522 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.60217287 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.570456251 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.629464253 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.421886193 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.430987137 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.421965365 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.508025576 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.428834964 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.005274355 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.968567104 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.451001127 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.432037637 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.432656511 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.433524262 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.613856379 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.006385881 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.509425188 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.948451091 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.75833599 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.742011609 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.431720554 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.491801984 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.453605332 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.749407506 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.43889193 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.490043354 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.871750346 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.756010278 seconds)
  done (took 169.940099453 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.67509625 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.444889817 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.526655207 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.58688605 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.03962909 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.03109718 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.442312108 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.564093642 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.547003869 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.697799054 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.444183606 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.52776089 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.650307229 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.518875565 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.163890474 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.506840306 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.530238845 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.58749616 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.575067691 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.42811744 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.111410975 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.740177253 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.624662509 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.449160991 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.545028718 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.191831938 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.017433539 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.954817957 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.61139797 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.426697305 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.967217365 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.434727858 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.382157369 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.135717122 seconds)
  done (took 66.409829852 seconds)
done (took 632.032770862 seconds)
SAVING RESULT...
DONE!
