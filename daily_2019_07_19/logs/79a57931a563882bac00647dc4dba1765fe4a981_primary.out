cset: moving following pidspec: 30784
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.305347081 seconds)
loading group "string"... done (took 0.597980639 seconds)
loading group "linalg"... done (took 6.85261632 seconds)
loading group "parallel"... done (took 0.158191663 seconds)
loading group "find"... done (took 1.195169557 seconds)
loading group "tuple"... done (took 1.803915015 seconds)
loading group "dates"... done (took 1.217981784 seconds)
loading group "micro"... done (took 0.226916067 seconds)
loading group "io"... done (took 0.995106822 seconds)
loading group "scalar"... done (took 38.122421937 seconds)
loading group "sparse"... done (took 11.706120372 seconds)
loading group "broadcast"... done (took 0.973877743 seconds)
loading group "union"... done (took 12.771950467 seconds)
loading group "simd"... done (took 4.660092469 seconds)
loading group "random"... done (took 8.971146399 seconds)
loading group "problem"... done (took 1.876202729 seconds)
loading group "array"... done (took 21.504279626 seconds)
loading group "misc"... done (took 1.782361351 seconds)
loading group "sort"... done (took 3.1236591 seconds)
loading group "collection"... done (took 17.152752899 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.478802852 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.121243461 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.114036005 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.117348429 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.142820511 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.117351222 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.12477542 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085630376 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.795166099 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.140159205 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.11785694 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.407439015 seconds)
done (took 4.919715995 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.174138522 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082601177 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081335923 seconds)
  done (took 1.28084433 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.06636881 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.120733224 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066059141 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066174977 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065913115 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066454433 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067348411 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.06713481 seconds)
  done (took 1.636318139 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075891455 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068638222 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067871333 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067229395 seconds)
  done (took 1.394864352 seconds)
done (took 5.679322753 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.755349413 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.202648634 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.18139327 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.390534309 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.131986438 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.165376279 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.643857523 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.310650894 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.181217842 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080412945 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.102694445 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.317894911 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106127591 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.636063015 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077044914 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.092010841 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.140067688 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.417863755 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067231193 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082038144 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.089142538 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127672692 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.084685931 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.075231635 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.143486778 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067626689 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.127888239 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.082034519 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066287241 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.205362407 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172234508 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.672663336 seconds)
  done (took 10.148569163 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095318343 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.095864335 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069332534 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.125069854 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098713101 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.071508232 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072624992 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.069116717 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.089245889 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.130241352 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.090674537 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.102767354 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.067372785 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070527787 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.08629614 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.205155996 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079157261 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080567449 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070223514 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076203138 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.108337176 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.079432477 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.079090807 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.078023094 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128770737 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.182226555 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099519632 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.099620594 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069111177 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.082276763 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.116375432 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.128123413 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067093624 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.068065272 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.126212332 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096277796 seconds)
  done (took 4.608434146 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.904225917 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.1381663 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.092444565 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.166783578 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.069160529 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.109405718 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.067001602 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.086111058 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.202849305 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.043486574 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.114063585 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.432781307 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113155791 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.087258217 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069613786 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.070453393 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068484995 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.343356124 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.109029501 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.112357084 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.085881836 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.076408252 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.072022919 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.345251253 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068549981 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.068277808 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069495733 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.066166571 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.05902408 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.115226569 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069663809 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.971734721 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.086630658 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066741101 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102595154 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.167090829 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089535131 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.135200207 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066002605 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066388754 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.149519424 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.075015481 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.06669743 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083712013 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107233379 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.103731626 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.200670289 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069215104 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.167293913 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068877313 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.08534422 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.704507386 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153509173 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078362306 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068698432 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.247521166 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.086619637 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069130036 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.066043264 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.179964359 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.125635978 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067131336 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066352324 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067626141 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.070267551 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.372493372 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.07001874 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.729043749 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069803474 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.07878005 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071292053 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068359065 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074922337 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074800429 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.086909344 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067845728 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.071048621 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067686085 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067735856 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.070770434 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.088588744 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.191529432 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.06798346 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068487215 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.066799051 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.087892519 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098728489 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.071153528 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.067630993 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107559775 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070235035 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.069015902 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.103572465 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068297207 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065826387 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.086595114 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065746224 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.070298516 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.115489438 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.068002805 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.099252849 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066804803 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.098265828 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.073132707 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100753601 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.169173964 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068555121 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.227791568 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.06718298 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.066614605 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068481631 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067250237 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.069660761 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.070224427 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.081539289 seconds)
  done (took 20.006232662 seconds)
done (took 36.781522755 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.288578166 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.077897376 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.078547081 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.078522565 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.078240474 seconds)
  done (took 1.803638672 seconds)
done (took 2.986695731 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.121638464 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.101259793 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065646458 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097635552 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065807478 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101941851 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.100910775 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.083492033 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.101743169 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065849745 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098213929 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.066076237 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065864803 seconds)
  done (took 2.336472275 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081863615 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084500517 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071062724 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084279956 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064959293 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08399226 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082128694 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090321466 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082056549 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073341246 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065088639 seconds)
  done (took 2.040678178 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081040416 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084658748 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070700012 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08404852 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065153475 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083242506 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082505189 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087401826 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08265276 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074707594 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065229455 seconds)
  done (took 2.037416092 seconds)
done (took 7.58543505 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076353157 seconds)
  done (took 1.23969179 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.588313568 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.036255265 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080692659 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.113399737 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.188338747 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.120775289 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.278011965 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.08954632 seconds)
  done (took 8.849978292 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.102597205 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.072911205 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.073917591 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070786071 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069955478 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.070158721 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.073709201 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070687462 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.072370615 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.073032557 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.070267078 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071127822 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070118422 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071034922 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.07352245 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.072207976 seconds)
  done (took 2.412066698 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094102563 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092512334 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074840306 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076239841 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.073666036 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073695636 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.076257445 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074735101 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.072254549 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073693247 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.076478588 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075066318 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.072983328 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067864578 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.075743005 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07705805 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.072388438 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075334215 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.07653106 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075942815 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.07584361 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065794484 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.072826223 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075545807 seconds)
  done (took 3.09069176 seconds)
done (took 16.764313352 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.111009853 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071119699 seconds)
  done (took 1.351275437 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081648307 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084719614 seconds)
  done (took 1.340972204 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082096869 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.066000062 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090359597 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.079685088 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.06829434 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.067955356 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.088707167 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.06810228 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.067992418 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.067995964 seconds)
  done (took 1.922469923 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.067650127 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.079197258 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.07217224 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.082459598 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.076086311 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.065800827 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.074999985 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.070020207 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.079505721 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.064435177 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072355149 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.08370159 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.073324 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084738964 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.074188053 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.069720583 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071976589 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068562478 seconds)
  done (took 2.509764155 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065546394 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068152252 seconds)
  done (took 1.318503654 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066430564 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065074259 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067992979 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067923805 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.065330979 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064121022 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.065282949 seconds)
  done (took 1.643687225 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.381500747 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.113070542 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.299335634 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072317657 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.083521857 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.253208567 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066565506 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072271905 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.07177526 seconds)
  done (took 2.644291881 seconds)
done (took 13.915525568 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079405408 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086580656 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.095885214 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.347716807 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093377335 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067267817 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.118564792 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.190565999 seconds)
done (took 2.270719546 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.204404659 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.559015104 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.375041478 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.199429056 seconds)
  done (took 2.317454045 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.312352165 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.093392056 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059929229 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068632551 seconds)
  done (took 1.726879381 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065814277 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069779875 seconds)
  done (took 1.325503884 seconds)
done (took 6.765190761 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066546326 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066964498 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.065289666 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067878975 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.084383379 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.064899415 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065352292 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.06749076 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.067364952 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067588183 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.067226537 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.070457393 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067477129 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065063829 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065034651 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067194824 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064913237 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.067353515 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065451086 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064709965 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067239969 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065324013 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.067303739 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.064914739 seconds)
  done (took 2.841438591 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082285045 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066827278 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073216483 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.073101209 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071872321 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.072997386 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.072469652 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067697655 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.07279931 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069573653 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071021177 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.07112615 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.069508837 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071294356 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069416734 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071953843 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.072953813 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068055861 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069849948 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.07190062 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072333373 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067816402 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071576276 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072405775 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071594884 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071135188 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070166628 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.068027144 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072541054 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071316211 seconds)
  done (took 3.337822342 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.07010302 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065028261 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.065249774 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071639357 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065003075 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.066117195 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065073448 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.065825083 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.066090113 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.06491614 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.066783375 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.065031535 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064963879 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.066313616 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066101934 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.068508619 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080586331 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065350216 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.064922232 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.065655216 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068182274 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.065119431 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065190081 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.064993064 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065274756 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064618724 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.065664833 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.064905228 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065800932 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.064909692 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068002284 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.06867382 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.065113581 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071654255 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.068268275 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064649999 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068934129 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.064776421 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066099119 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.064974878 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.064854375 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064701454 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.065285004 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.07158788 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.064760502 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.066472147 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065245611 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.06619878 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.065098317 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.067616436 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.064492173 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064679408 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.066608091 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.066181457 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068922292 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.064408558 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.0657595 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064439801 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.06552999 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064363943 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064920888 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.064903956 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067267836 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065423934 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.079217862 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072063096 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.064679268 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.066433251 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.066146096 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.06754928 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066445712 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.07778344 seconds)
  done (took 6.005297956 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089808625 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.194854697 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06524984 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066696608 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064163582 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.068240511 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068782384 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065755074 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066842847 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.071058852 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065458331 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067250259 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06683362 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078044762 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065875673 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067016218 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071057483 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063574095 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065716072 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068740938 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065744887 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069454138 seconds)
  done (took 2.851619924 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.153868506 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071109229 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.107094484 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074324993 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069350835 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074341711 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071387564 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07128908 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07173808 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069388976 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069763297 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071584608 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069288138 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069554315 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070079175 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070204514 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07162434 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070109805 seconds)
  done (took 2.601289253 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.0766096 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066220561 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.088249418 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067677265 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067141075 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069872046 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072176227 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.0758721 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.069803382 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067519183 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.075493924 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070214648 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.069748947 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067795366 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070075852 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06756263 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069624462 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067600551 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075573809 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072197832 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072267645 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076111384 seconds)
  done (took 2.781864474 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078979475 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068313413 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082062971 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070443966 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063737191 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066053441 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.071574879 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067531991 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.071644128 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069354578 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06761654 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.066029747 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070966994 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067710786 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.071291103 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067613451 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069150199 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067875114 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06936131 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063576733 seconds)
  done (took 2.598523133 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085456518 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067690326 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069107859 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077235154 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06933257 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.06964016 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076477296 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.069457031 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069536954 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088968297 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.0692649 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069143803 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076560172 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073819492 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068734996 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076647316 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076243715 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076262588 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068615911 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068861216 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088675753 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068913209 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076113026 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068671235 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069048165 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069109545 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068989104 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073902909 seconds)
  done (took 3.259130055 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066485703 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067148539 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.065405431 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065145415 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064745894 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.065295651 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065664508 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065407045 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067643907 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066099548 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067098726 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.067688648 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067529736 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.067076435 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067182354 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.06744601 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067260724 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065272733 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064897299 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065061146 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.067523837 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067827051 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.067128397 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065247861 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064803285 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.06742778 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065151826 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064827381 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06718313 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065057329 seconds)
  done (took 3.200301862 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075377385 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072424597 seconds)
  done (took 1.360682338 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063176118 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079674304 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.064827351 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.07194148 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071208335 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068299765 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074776906 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071165052 seconds)
  done (took 1.773851933 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081408231 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078775797 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.069107229 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.081254545 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.077954576 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084312268 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.135404482 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.068930337 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074573847 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065931431 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081323499 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066754454 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.073942427 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068210535 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.073640248 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07379143 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065477424 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.073845981 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070251991 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.066281882 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068857237 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076163094 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070093924 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.06367173 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.06885687 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.089409551 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.078926102 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067474276 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070578408 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.074832885 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073120989 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062060281 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067075049 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.067849326 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.065585024 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.077330162 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083078288 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070569239 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076782872 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068687612 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.078554421 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063173204 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072653788 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.073806351 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07774979 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.067952367 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068525686 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063333005 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065157095 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069818216 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062868929 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067706151 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062381011 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074761759 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071184417 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080673043 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.066356456 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.06932292 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.07067297 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070974596 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074703074 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.069510073 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069731303 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.067372694 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077613391 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072141896 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076807938 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.06329555 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061768704 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.06569277 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077641595 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090398739 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073898997 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.068124972 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068330562 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.065429171 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070747382 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068696917 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073153538 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.073771776 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.067550061 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073241187 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07470826 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068427535 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070479515 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.076574212 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.066470103 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070797762 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065455582 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084470822 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.066634978 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.066443221 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065511628 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078200009 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.071550239 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067443112 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065604937 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074483507 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062226109 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.068040791 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068081723 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068425112 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.077975232 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071795506 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071782323 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.07589884 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074529326 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06738673 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.06982956 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.063638833 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067755995 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066218385 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074198927 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.06117335 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069445374 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.067336691 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.191965444 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.075258164 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.066472372 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068602891 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076629984 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073751848 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.067189361 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.065212588 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070888869 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.067836233 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071047702 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076686503 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.066853709 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063218598 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.063700474 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.07156403 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.068184631 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071743281 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07245472 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071258967 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062548237 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.066365977 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073803519 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.07691466 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068467347 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068794044 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.075009052 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069385005 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.067496088 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074228238 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070296585 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067223786 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073358547 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068648375 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063572135 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07101145 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070936838 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067036571 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071753234 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072112264 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070151949 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.068949165 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066730845 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.076388281 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068924458 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067670337 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068368285 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.067528831 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078882911 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070057797 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063417249 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065731826 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.077641775 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066483802 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.068039536 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067692197 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070107137 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.068667901 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065859561 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066962242 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.069421187 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078437795 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072056107 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068858941 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073676462 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.07982038 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.067980639 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070863149 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067704984 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069278868 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068842579 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.076846477 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073395921 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072593953 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070804729 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.064800995 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073423151 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075070672 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067058732 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.065688359 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066934076 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.072268409 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073201699 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.07224093 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068980442 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066155049 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06879195 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071086196 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070711745 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.068225251 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067264663 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.075413863 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.066102133 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.075528919 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068679631 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.077921 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071217276 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063205354 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071559109 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065982366 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074059699 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062764088 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065477581 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.06708326 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.068820874 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.066523947 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069702093 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.061476025 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073788723 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073920955 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067002785 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066172353 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.06610524 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073268355 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.068537619 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070410321 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070295948 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.072462668 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076867125 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.066712694 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070012394 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.206039978 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.067884191 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.063280797 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.073948363 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067127761 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.067485781 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067430576 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066293639 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07143808 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.077536705 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.07480901 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.06224733 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071401143 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.067024559 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067612538 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063709141 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073051008 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071574024 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069513477 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074997886 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069698661 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.068582974 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072034681 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.06842071 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068877009 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.070203712 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071180827 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.069536652 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070797235 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067296517 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.071682951 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067672702 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.066111394 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070069916 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068371335 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068956978 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073493835 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.067757332 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068112285 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070676014 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.069193565 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069070839 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068288215 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067610036 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071378381 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069304367 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069162991 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070879512 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063440975 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075530778 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.06820498 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075597876 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068997233 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.064986776 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.075627465 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070687923 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.074617091 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.069593876 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.06939864 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069868697 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.067803089 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.071030867 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075012771 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067078152 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.07916458 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076921666 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069226563 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.07046737 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068308402 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069905206 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.0674328 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.069593646 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.068495406 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068241473 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.067701742 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072701833 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.071066974 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068677824 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070191658 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.068769011 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068348637 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.068946913 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.06286715 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066935126 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067423292 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068424949 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077565886 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068281365 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067427464 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067358064 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069539071 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.067396854 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064982704 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.076323249 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077485787 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.068422143 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075707353 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067009475 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069437842 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078590446 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.062633976 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065807109 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.06569545 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065771948 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074791598 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.068760222 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.076418015 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.067150625 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066757214 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.064821675 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.067750989 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065546971 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061895598 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.064999767 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070294315 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.066169561 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066075006 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066806798 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.069038493 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068114105 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076507328 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.066227723 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067588671 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.199772549 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.065631762 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.067948971 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068004353 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.071605761 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.069272258 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066474214 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.065916939 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068101695 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069380201 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069928596 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068069847 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069703363 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074993448 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068618424 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070826494 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071902536 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.066257287 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071540693 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.069010051 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068209295 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067786572 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.072603779 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072172487 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069646326 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077860259 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.068067139 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069266178 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068380831 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.066579412 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.067991193 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067780091 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.068142284 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.06780527 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068788752 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075896826 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065780556 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071912496 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068440262 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.068410624 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074764708 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069027883 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070782993 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.075389151 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.068686537 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070090721 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075850017 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.072591155 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071491289 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068408774 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070841317 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074553954 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067210147 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074034211 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068681489 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.0688618 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070122458 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066492316 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068070858 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.068120002 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067875075 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074022357 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.068580176 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067281353 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068185864 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.065977029 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.06942058 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071858142 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075778358 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070508719 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070870357 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064023784 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.065377348 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069187654 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066081137 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.070009387 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070682086 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073422182 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070149593 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068841261 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.067224808 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077324637 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073799715 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071945992 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.06622069 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071350056 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.06902707 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070342525 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068732297 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067935927 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069364268 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071633024 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069762475 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067199382 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075126088 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.07173899 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068881199 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069684471 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.068852339 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068551857 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.063666943 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.068887987 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070159321 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07321892 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070598143 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068703213 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078419938 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.066025957 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068915151 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071121095 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066948377 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.07213804 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.063170914 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.069433707 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068366457 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068273484 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062455436 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066412008 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064984382 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.069411843 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066685458 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062515891 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077461239 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.0760749 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.202218832 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067924382 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067758049 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.064328895 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063935007 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068102858 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070004742 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070715502 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.079094154 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.06784926 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067536825 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063756305 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068504794 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071326426 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071874505 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.065839074 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063790971 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067837622 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.071508544 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074250852 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067654469 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068710092 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071481168 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070896124 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.065991866 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072130135 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064930182 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071722991 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081365455 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.06898589 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068884951 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074772057 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076515286 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069649787 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063517053 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.069005105 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071762763 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.068661648 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.069361951 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.069212667 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083171674 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071236358 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067667987 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067418675 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.07057644 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067736519 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076690138 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068787203 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.06872558 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072748018 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070485719 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.078452214 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071469267 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076546524 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.072139626 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.072379514 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.067330899 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068783859 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.066616895 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067294375 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.069127226 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.06926072 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073724249 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.076751709 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067637378 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078924847 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077285058 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.070388984 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.064634499 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067787022 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.0674786 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063161784 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068990494 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.066544905 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066351303 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.066188045 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.06714767 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069738154 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073725787 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.06929924 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.068821094 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.06804908 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062754188 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070181438 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070538978 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069471679 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.065303651 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.068091686 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.068564831 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072120361 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071589994 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.06625591 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.070318666 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070156014 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069140874 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.063560475 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074797444 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067594751 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070496171 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067876704 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068621312 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.069345006 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07179065 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073121204 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069569756 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070526403 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.072058309 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070275748 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.065517241 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.065031642 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.072860982 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.065373438 seconds)
  done (took 43.523606241 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099900584 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063955643 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063569229 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063722387 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075196401 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064754031 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063816245 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064919429 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064921824 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069334655 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063847303 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063739839 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072649365 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079646048 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07550655 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068393107 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064155489 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065112388 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063743435 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064786869 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072448083 seconds)
  done (took 2.761436262 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073663155 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.070927316 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074508058 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.077194203 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068988499 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.072318449 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074650368 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07227074 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077680392 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069042577 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.078088872 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072712969 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.068864201 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.07753521 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06918479 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072888762 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077574747 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069744247 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.071949553 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073896572 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072508731 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074168018 seconds)
  done (took 2.896537804 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066508249 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067618342 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069685823 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.06357663 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067959216 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062999324 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.071522754 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.065403002 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.071737829 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066957201 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.06699317 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066930217 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.069195199 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062978297 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067959075 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.06599262 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.110438466 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.071112461 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.067555008 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.068465033 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063059039 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.070129578 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063932295 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063825623 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066600345 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.071148827 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.068579189 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.065686479 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067435926 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066644973 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.0678161 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.065974344 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069494446 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068181446 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.066992354 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067175644 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.067453196 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.06761478 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063359461 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.065975504 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068511532 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.064117519 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.068030429 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069550734 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.066164064 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.065532269 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069674524 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.067793015 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.06309812 seconds)
  done (took 4.620600845 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.079087413 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.110643935 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.069591431 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.09215582 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.081426235 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.074631521 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071137724 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.090655484 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065331509 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.066459949 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082678444 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.083620958 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06804087 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.071745855 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.070915984 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067362193 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068661164 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066592781 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.071180346 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067113846 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.07140221 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.074042208 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.081444247 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.080681915 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071530459 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066715163 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066914425 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071920095 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.080071727 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.072150111 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.071930419 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072723721 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.082181097 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.069353761 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066632946 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.06982994 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.083283601 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067890774 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.069709987 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065523992 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.069548482 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.071780786 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.074018463 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.083926792 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067753638 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.07294942 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067251278 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.06479375 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.079935252 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.069291615 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.075166346 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080979019 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070699412 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.067309789 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071543543 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.082158529 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067304237 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.065597564 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.070045929 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.079171656 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065079788 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.07085559 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080378457 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.068913599 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.07433479 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.081050604 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072679307 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070708696 seconds)
  done (took 6.445008199 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07466706 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.072475525 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082286481 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08149451 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073909288 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073945612 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.074219398 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074062426 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.073753371 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078620761 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073922102 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.095104752 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069675275 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076609043 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074118696 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.074113279 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074116115 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073975041 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073630912 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07374653 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.073652861 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081499956 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.073710491 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.081376709 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.100181307 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069598416 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073787605 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.074331823 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081190158 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.073769218 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.080999346 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073713716 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073918311 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.081528248 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.081157788 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.073549623 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066922717 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073755067 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073719569 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.073596368 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06938573 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081808116 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073966487 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.069694485 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074142796 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07393256 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.081410582 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.08086121 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076456028 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078390122 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073947504 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085105154 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073983424 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.074130859 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.081363916 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.106494328 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081331884 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081710138 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073911234 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.081790214 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081384353 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.088141572 seconds)
  done (took 6.108891361 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083347917 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074261199 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.075784553 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063011194 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06587412 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071871564 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066104824 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.066619499 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.076106285 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.076359479 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078882305 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071483409 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074355878 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078367977 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072021768 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074368326 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071666825 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071528301 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076135051 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071639867 seconds)
  done (took 2.771184751 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.07399739 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.084471733 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.06910524 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07347985 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.070851763 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07340639 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.070408151 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070997995 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06928464 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071050077 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.078011646 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.078162077 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068698261 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073665534 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.07764158 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073853442 seconds)
  done (took 2.479585929 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.074268244 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072908828 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.081658894 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.067766049 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065722307 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.064238724 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.06725636 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063671448 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.064110217 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.079803969 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.067910203 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.069967992 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.067567064 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.066414411 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064670347 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.070502464 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064570713 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.065144906 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.067859509 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.08043823 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.078398488 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066554373 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068277849 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.067584762 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.067951839 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072673186 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.067495605 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065318897 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.065201467 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067694785 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.068524137 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.071031702 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.064796567 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065721942 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.066549035 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.065536593 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067508084 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.070286577 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070262346 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067388149 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.06526002 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067570276 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.067296906 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068343757 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.064093726 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.067736293 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.06392763 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069639508 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065241498 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.06780076 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.06732649 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.069782569 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.067979426 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.073788887 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.070504825 seconds)
  done (took 5.071668811 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078797113 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069949722 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064496818 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06547946 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.070388706 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069613763 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071471476 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069533306 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0701423 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.066098739 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069970363 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.070608258 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069873423 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07135195 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069262019 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071114304 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063892197 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069613588 seconds)
  done (took 2.567002642 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070973831 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066433249 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.074588991 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068107086 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.067395824 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070177598 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064286753 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.06661729 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066722962 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067572999 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067914256 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070063639 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066156598 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.069886778 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.068086934 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067374456 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.070012706 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066453641 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067883112 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064040236 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070307601 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066839557 seconds)
  done (took 2.806094926 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.072414045 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.091106734 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.141922348 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.085362417 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.083822032 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.081107772 seconds)
  done (took 1.865096576 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089674092 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078365547 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067412862 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089437498 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075011439 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069209835 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069268745 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069048033 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077676229 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078184138 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069427347 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077601916 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077480695 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076948997 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075026671 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075312811 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069671741 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069046866 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068267524 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085888257 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069609759 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077635248 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069768042 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069152279 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069520664 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076990864 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077585794 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077841392 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069119725 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077903714 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074601388 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069424031 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077687869 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078113186 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070960285 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07787942 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069279225 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086022848 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074895369 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077449752 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070969979 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075288508 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077790079 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073832523 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078089434 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069480913 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074019787 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069604686 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069602832 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087406016 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075431394 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076518169 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075398439 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078067228 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078098395 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087392123 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077782546 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076750511 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075367871 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077759834 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076870784 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074841015 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076742864 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077680101 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075425435 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07909292 seconds)
  done (took 6.297318249 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081265766 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.088194628 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07009936 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07825182 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077098995 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069639261 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070003226 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069610131 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069676397 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069403267 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10984065 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070544028 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077330167 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077504373 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0694889 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069590476 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069724799 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077117542 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069713878 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088262348 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069334063 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077220609 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077117139 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076918377 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078427199 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074737109 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069467768 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069589741 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069437453 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069476837 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074088613 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06969617 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077355089 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06919002 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077453007 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069883335 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069423419 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074111928 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0694909 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074835076 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077278251 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086070428 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06950693 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069649422 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07809633 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069417215 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069401876 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069264236 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06941134 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069157257 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078058529 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077780869 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07908555 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077043143 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070167641 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069604184 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069447352 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069526249 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069564495 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074848735 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07663894 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069006654 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087095488 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069496009 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069455612 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076754241 seconds)
  done (took 6.218975299 seconds)
done (took 130.231358507 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.182580415 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.168210098 seconds)
  done (took 1.655608843 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.067717411 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097320242 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.079400356 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130308205 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066674569 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100429397 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.097985061 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.07803368 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.069170231 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.068616919 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068858233 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.06993705 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.13329404 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066369748 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066216879 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069989158 seconds)
  done (took 2.647187582 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.096885749 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.178851383 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.101507722 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067167137 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100047804 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.075667905 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.066966276 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.077791853 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.073009601 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067309627 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.075108861 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.073001793 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.067290255 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.073170059 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.073227189 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.075190101 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067385141 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.075269173 seconds)
  done (took 2.805875602 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.099462125 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.089889642 seconds)
  done (took 1.515831224 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.155148843 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.104942314 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.149252824 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.332885717 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.159821087 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.22885174 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.127087142 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.125578467 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116378063 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.12187104 seconds)
  done (took 2.941921189 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.097068001 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.14616559 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.256137214 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.116621096 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.074704684 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.093588419 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.119541303 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.079883887 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080202708 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079677314 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079557172 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078164755 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098698516 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.075682326 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075749394 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077945995 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.101958647 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074689881 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.077379515 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076087656 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099256614 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067926535 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.075576643 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074399339 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076860471 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076939586 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067947249 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.067439255 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075595877 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.076156797 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079044365 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.092171759 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076368004 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106789213 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.072298089 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107760856 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078427252 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073660901 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075776731 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.07352754 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078392876 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077733946 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.074239361 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.078388442 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.067350956 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078830783 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.067431352 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.067396537 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.080453861 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.068747559 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.080078851 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.07928034 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106919172 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.068692894 seconds)
  done (took 5.975589483 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.66371331 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.102281424 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070028701 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.110032073 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099163516 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07432158 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.687320916 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.090210098 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.176723392 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.094361898 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.091404444 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072364109 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083286949 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.086648205 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.108135149 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.100780003 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.093340194 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071511702 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.103285094 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.101173437 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070388202 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096489762 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.092835814 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.378274701 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.069422945 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071725039 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069630135 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071842085 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.112557211 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.079982686 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07233864 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.122704365 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.089028901 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.120151194 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066887208 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069634671 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070125443 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.081817055 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.18293179 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.133996731 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.131344516 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069407416 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069560715 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071495753 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.092019819 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069605162 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.112678156 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.082075969 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.11928172 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071266809 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071678482 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.069749662 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071320949 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.08146973 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.079277407 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.082822126 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.233706863 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070164712 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06986043 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072798591 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.17964011 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080354611 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080633927 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.094308784 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.131380059 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068906287 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.697584587 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085640958 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069666472 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07079789 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069238255 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070732529 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.198336383 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.118313649 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.358357408 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069753131 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070851749 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070452898 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.152596244 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080901351 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070875527 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.115393334 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069915828 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070660317 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072731185 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072156355 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.11877693 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.082335901 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072779831 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070219632 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072824708 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070418457 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.069240671 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.165407855 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.082748329 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.081484057 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.160231589 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069070925 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.11150302 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079506352 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071094166 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.080288203 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070108022 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072776865 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071655962 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.081712521 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.097492427 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082581804 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072795763 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070135574 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.10052244 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082713737 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070700768 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.080874057 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.401093484 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.082431046 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.06976156 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083145916 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070742571 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.113961258 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072732338 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.185544595 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06951836 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081020204 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070842879 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069359707 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070644862 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.113145013 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072441324 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070952794 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070944126 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072037189 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.08192852 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.134950784 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070934753 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.160089176 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.135388335 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072153429 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.120568319 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070046679 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.118927906 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072753567 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073815222 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071819469 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.691300896 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067593775 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069570574 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071340176 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.13739175 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067602391 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080156293 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078141383 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068133654 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.727617009 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080496981 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.207593654 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.081158271 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070091896 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.071034039 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070965302 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.072593524 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.113518534 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.148274717 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072976869 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072097464 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.079995862 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.114818386 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.069432411 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079516908 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.08097628 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.08068966 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.071516482 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072279103 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082254387 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.120737129 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.081040793 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.138961922 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.509784287 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071398194 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079305387 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.143045512 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070290393 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087271098 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071267352 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.084653319 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.114129878 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.0795086 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.23131525 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.115993348 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.139464839 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.082887093 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.084998196 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.07038067 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070942379 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.082030196 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070209458 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072154255 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.080497078 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071916397 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072196642 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.086922768 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068847402 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.174037194 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.073451033 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.080722238 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069990313 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07219084 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085431581 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071119895 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071853727 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.082085977 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072507908 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.07962925 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.789534218 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.07807487 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068462344 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070612307 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.136921877 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.114113888 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069603627 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070414443 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07249564 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.112001818 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.158447665 seconds)
  done (took 28.648949974 seconds)
done (took 47.521614936 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.21049604 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.151992151 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.200550864 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.117504808 seconds)
  done (took 2.102117618 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.120950438 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100761797 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.096538868 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.067836429 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.105288315 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.068020084 seconds)
  done (took 1.915147796 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.304644128 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.207890498 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.180297516 seconds)
  done (took 2.044988697 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.198261213 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.190747982 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.398320466 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.252777057 seconds)
  done (took 2.497841228 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.144000846 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.093550643 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068461192 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.08615677 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.137477517 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.162536807 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.1023685 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.124865664 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078474867 seconds)
  done (took 2.403789086 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.144914066 seconds)
done (took 12.487074578 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.11138454 seconds)
    (2/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.209307247 seconds)
    (3/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.110904593 seconds)
    (4/309) benchmarking ("sort", Float64, false)...
    done (took 0.129649815 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.165978173 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.124786666 seconds)
    (7/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.104578919 seconds)
    (8/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.23013624 seconds)
    (9/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.075027291 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.074116881 seconds)
    (11/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.080007317 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.142722506 seconds)
    (13/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.190676279 seconds)
    (14/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.085994876 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.080426181 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.110676073 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.076808751 seconds)
    (18/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.193826406 seconds)
    (19/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.183645121 seconds)
    (20/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.141147204 seconds)
    (21/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.189606811 seconds)
    (22/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.110612817 seconds)
    (23/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.186276599 seconds)
    (24/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.076006133 seconds)
    (25/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.072368711 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.110016398 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.109587037 seconds)
    (28/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.096646374 seconds)
    (29/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.076516612 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.09165865 seconds)
    (31/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.18776808 seconds)
    (32/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.077763579 seconds)
    (33/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.074304683 seconds)
    (34/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.067502327 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.074046947 seconds)
    (36/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.10057588 seconds)
    (37/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.211552778 seconds)
    (38/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.162488266 seconds)
    (39/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.078448928 seconds)
    (40/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.10956313 seconds)
    (41/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.0765407 seconds)
    (42/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.076975841 seconds)
    (43/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.166504934 seconds)
    (44/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.18169194 seconds)
    (45/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.13967443 seconds)
    (46/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.185362786 seconds)
    (47/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.080227512 seconds)
    (48/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.074142803 seconds)
    (49/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.075666403 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.123236161 seconds)
    (51/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075745912 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.097272829 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.089275345 seconds)
    (54/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.080980612 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073223167 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.072514317 seconds)
    (57/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.14973671 seconds)
    (58/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.074039854 seconds)
    (59/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.063273496 seconds)
    (60/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.073789205 seconds)
    (61/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.202764222 seconds)
    (62/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.054439419 seconds)
    (63/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.069871995 seconds)
    (64/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.085231051 seconds)
    (65/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.159709492 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.148792719 seconds)
    (67/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.068861668 seconds)
    (68/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.069372172 seconds)
    (69/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.149179906 seconds)
    (70/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.18983106 seconds)
    (71/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073523291 seconds)
    (72/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.078482589 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.093434583 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.094405704 seconds)
    (75/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.150821407 seconds)
    (76/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.10200332 seconds)
    (77/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.076725989 seconds)
    (78/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074569058 seconds)
    (79/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.054386738 seconds)
    (80/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073332472 seconds)
    (81/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.157680901 seconds)
    (82/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.072330407 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 0.068194724 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.089561633 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.099743038 seconds)
    (86/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.149578056 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091119242 seconds)
    (88/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.074068619 seconds)
    (89/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.070050505 seconds)
    (90/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.076799622 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.156516493 seconds)
    (92/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.135391925 seconds)
    (93/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.078027966 seconds)
    (94/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.052941418 seconds)
    (95/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.141553405 seconds)
    (96/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.150735802 seconds)
    (97/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.0671339 seconds)
    (98/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.100541926 seconds)
    (99/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.073805156 seconds)
    (100/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.076062643 seconds)
    (101/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.167039081 seconds)
    (102/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.152616959 seconds)
    (103/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.054021694 seconds)
    (104/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.081245704 seconds)
    (105/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.054068156 seconds)
    (106/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.074895578 seconds)
    (107/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.136609406 seconds)
    (108/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087110913 seconds)
    (109/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073747158 seconds)
    (110/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.052696089 seconds)
    (111/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.137432555 seconds)
    (112/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.066078749 seconds)
    (113/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051315614 seconds)
    (114/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.162865375 seconds)
    (115/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.054106845 seconds)
    (116/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.358154183 seconds)
    (117/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.08712117 seconds)
    (118/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.051066488 seconds)
    (119/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.114175632 seconds)
    (120/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.053540092 seconds)
    (121/309) benchmarking ("sort", Bool, false)...
    done (took 0.134035527 seconds)
    (122/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074107848 seconds)
    (123/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.052264901 seconds)
    (124/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.073499879 seconds)
    (125/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.111444906 seconds)
    (126/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.088949711 seconds)
    (127/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.070636585 seconds)
    (128/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.074566546 seconds)
    (129/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.133685732 seconds)
    (130/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051069989 seconds)
    (131/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.104990036 seconds)
    (132/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.095776749 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.068235224 seconds)
    (134/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.069418436 seconds)
    (135/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.06379138 seconds)
    (136/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.17500334 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.111220882 seconds)
    (138/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.051046517 seconds)
    (139/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.076740364 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.093720133 seconds)
    (141/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.07406519 seconds)
    (142/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.065445509 seconds)
    (143/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.069855344 seconds)
    (144/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.064456397 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.062986105 seconds)
    (146/309) benchmarking ("sort", BigInt, false)...
    done (took 0.177025284 seconds)
    (147/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.052432462 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.063586259 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.063764998 seconds)
    (150/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.070659491 seconds)
    (151/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.133786787 seconds)
    (152/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.069692929 seconds)
    (153/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.077432633 seconds)
    (154/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.07004415 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.108865722 seconds)
    (156/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.066853772 seconds)
    (157/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.134010974 seconds)
    (158/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.071586056 seconds)
    (159/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.058952041 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.06378334 seconds)
    (161/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.063711097 seconds)
    (162/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.096065196 seconds)
    (163/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.077747654 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.063656313 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.064068981 seconds)
    (166/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.050261268 seconds)
    (167/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.065606897 seconds)
    (168/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.137380161 seconds)
    (169/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.065135428 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.089233531 seconds)
    (171/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.093424508 seconds)
    (172/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.049227236 seconds)
    (173/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.05005895 seconds)
    (174/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.067501833 seconds)
    (175/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.069493782 seconds)
    (176/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.064108212 seconds)
    (177/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.069840807 seconds)
    (178/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.051444571 seconds)
    (179/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.169575412 seconds)
    (180/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.073191143 seconds)
    (181/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.083883929 seconds)
    (182/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.065040917 seconds)
    (183/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.050543931 seconds)
    (184/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073265289 seconds)
    (185/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.111297368 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.064714968 seconds)
    (187/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.05155675 seconds)
    (188/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.166886177 seconds)
    (189/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.174368221 seconds)
    (190/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.162318164 seconds)
    (191/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.070095693 seconds)
    (192/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.050313108 seconds)
    (193/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.096379331 seconds)
    (194/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.051007309 seconds)
    (195/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.165807893 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.063602074 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.367699039 seconds)
    (198/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.065595815 seconds)
    (199/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.073872489 seconds)
    (200/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.073108164 seconds)
    (201/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.055934117 seconds)
    (202/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.06847444 seconds)
    (203/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.054575534 seconds)
    (204/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.148257463 seconds)
    (205/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.1732065 seconds)
    (206/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.068747149 seconds)
    (207/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.078747374 seconds)
    (208/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.054719183 seconds)
    (209/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.076613247 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.116350363 seconds)
    (211/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.083111038 seconds)
    (212/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.068812565 seconds)
    (213/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.139260451 seconds)
    (214/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.072835124 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.092510036 seconds)
    (216/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.054074446 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.0692194 seconds)
    (218/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.075265249 seconds)
    (219/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.079895174 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.092857361 seconds)
    (221/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.184369533 seconds)
    (222/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.055523572 seconds)
    (223/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.05524344 seconds)
    (224/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.066826548 seconds)
    (225/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.074965814 seconds)
    (226/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.055605148 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.091855364 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.068384168 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.14231853 seconds)
    (230/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.054856912 seconds)
    (231/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.068171273 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.092737772 seconds)
    (233/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.053854207 seconds)
    (234/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.053733634 seconds)
    (235/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.055394954 seconds)
    (236/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.069684102 seconds)
    (237/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.142349998 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.091957333 seconds)
    (239/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.06897746 seconds)
    (240/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.053037661 seconds)
    (241/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.0690376 seconds)
    (242/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.054163895 seconds)
    (243/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.065765873 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.097586831 seconds)
    (245/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.054640847 seconds)
    (246/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072961532 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.092885762 seconds)
    (248/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.0632135 seconds)
    (249/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.147944483 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.095145031 seconds)
    (251/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.052170197 seconds)
    (252/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.066319376 seconds)
    (253/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.173751362 seconds)
    (254/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.077022876 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.124478424 seconds)
    (256/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.05738853 seconds)
    (257/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.053808879 seconds)
    (258/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.067597029 seconds)
    (259/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.068163645 seconds)
    (260/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.074428945 seconds)
    (261/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.070224716 seconds)
    (262/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.075827676 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090966605 seconds)
    (264/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.064910524 seconds)
    (265/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.063945949 seconds)
    (266/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.055383792 seconds)
    (267/309) benchmarking ("sort", Int8, false)...
    done (took 0.142967567 seconds)
    (268/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082882796 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.068561516 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.133106846 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.068267176 seconds)
    (272/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.05402592 seconds)
    (273/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.054047432 seconds)
    (274/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.066919571 seconds)
    (275/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.055348511 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.093494438 seconds)
    (277/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.068930447 seconds)
    (278/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.055743438 seconds)
    (279/309) benchmarking ("sort", Float32, false)...
    done (took 0.131136698 seconds)
    (280/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.058726589 seconds)
    (281/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.137967326 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.092131599 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.075923603 seconds)
    (284/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.149680873 seconds)
    (285/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.054278227 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066857784 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.1132423 seconds)
    (288/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.12183488 seconds)
    (289/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.054200077 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.066691025 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075906674 seconds)
    (292/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.06870597 seconds)
    (293/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073768605 seconds)
    (294/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.057234792 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.073362331 seconds)
    (296/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.070198078 seconds)
    (297/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.06923887 seconds)
    (298/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.053350754 seconds)
    (299/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.064660781 seconds)
    (300/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.053492177 seconds)
    (301/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.05349086 seconds)
    (302/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.053312377 seconds)
    (303/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.053201331 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.073475337 seconds)
    (305/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.078850075 seconds)
    (306/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.071203302 seconds)
    (307/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.075827249 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.068032215 seconds)
    (309/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075608541 seconds)
  done (took 30.620381488 seconds)
done (took 31.985053456 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.087051964 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093239769 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076134535 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093794925 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081166149 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.077450129 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073407485 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079205664 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.082247331 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.085620765 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.082278881 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.05874007 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.076512753 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077220196 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.076549273 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091522832 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078300608 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.0731437 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073260842 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.06563105 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.07485899 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.067575174 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067901758 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.055045001 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.079741464 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073368319 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.073107942 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073876598 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065725115 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.06660854 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068963235 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074080637 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.067051001 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.080810933 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.074424467 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075543013 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.077527401 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.078612505 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.069658373 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.068915721 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07675316 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068198972 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.074970096 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.076102135 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.07448359 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.073034971 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073543125 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077190011 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090594814 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068187891 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074585198 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076406692 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076130033 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072560382 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069528962 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073036528 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070638123 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090739348 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073502818 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068092661 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07374967 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073833379 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071458238 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073796635 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074774977 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077616176 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.077859478 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.074314828 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076945563 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073717914 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.0682072 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.07561533 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071532946 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.070626355 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.078426801 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.079495942 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067212339 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073961793 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074637823 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.07406092 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.067144989 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070433513 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068678697 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.072413863 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068609746 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.056553865 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.070743116 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.073497271 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.06658101 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075182724 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073622081 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074497643 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.069400298 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.078120499 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067370593 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.073072153 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.06782117 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068202174 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.070011997 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071546656 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.067339822 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070595814 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.076492166 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.068951312 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.073933257 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.081577725 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.068009454 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074067213 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.066971711 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.0672857 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.082195245 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.077151462 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067854526 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069738871 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.06544621 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072681385 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065710279 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065964783 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065863405 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065441628 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.072566277 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066081054 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067099027 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071555203 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.07795547 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065850513 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070250032 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069724112 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.067063583 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072720977 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.067203215 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.199200928 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.067739177 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061904321 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067960772 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066171156 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072240303 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067739363 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073253655 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066850154 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.076222018 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.072352399 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.074306453 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073480721 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.067067377 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.06214022 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070926739 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070505354 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.069827386 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.068626162 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06997518 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.067477599 seconds)
done (took 12.722456629 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066226504 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.140902377 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.097273598 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095123692 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.088990053 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068585295 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.078775253 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.104526059 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.069770862 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.104891801 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.08809676 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.086529416 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112915433 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.066913089 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068293147 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.073553049 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.069307661 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.090144915 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.104440945 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088535132 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.109529376 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.06487623 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093534556 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.088848048 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086720499 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.092502764 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066674744 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070664732 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.072068014 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.102251953 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.088128801 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.06982557 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067576178 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.100182469 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.094074064 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.084048164 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.067730161 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.084309714 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065958116 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.06659804 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.086535318 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.096937141 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079463325 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079910016 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.071744777 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068442426 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067825792 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083537716 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088933982 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078165705 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085784785 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102184631 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.06848122 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.080175965 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064552986 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084617937 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.079629531 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068111039 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066436712 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068144363 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065603961 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069565397 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.086311519 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.088088453 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069864901 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.07975742 seconds)
  done (took 6.911109475 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.082938503 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089468098 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082908044 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083715182 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065807922 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066760519 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.067123255 seconds)
  done (took 2.054724967 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066197197 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087391113 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088361006 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088963813 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.086799229 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088486019 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077419063 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068525674 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.081506003 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067092186 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089382 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.103627395 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067854271 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072531211 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.089832996 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066502213 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089803323 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066565554 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069178095 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089539383 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068237818 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081721266 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.068631832 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066385913 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080255714 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066662692 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112314941 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070722992 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067797352 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069528439 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067116572 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.105543481 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079899451 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075523876 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066045564 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.081010203 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083220731 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067099161 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.085264883 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.074473484 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082811421 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.070071114 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.069872412 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066761256 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.073643421 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.079309756 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.069838706 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.069650836 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070745397 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087516496 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.069086041 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081747742 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.068554855 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.072045964 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.070504976 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072736893 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078374352 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.069627413 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.088809356 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069859146 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.085729759 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085224442 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.082187014 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08559193 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070839311 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.082252578 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.082736625 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.071136556 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.0704999 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.072240247 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.085594839 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.067134921 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.070256093 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079503096 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070837186 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.092738832 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.092365767 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071195711 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.078284604 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067303388 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066817459 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.067063242 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088748734 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068751851 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066374767 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070484037 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069473734 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064059921 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066836898 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072395177 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.066916445 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.069904667 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.071390156 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068863999 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071406594 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085826024 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069707647 seconds)
  done (took 8.900894886 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068624809 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067979971 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069636201 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067473777 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067940883 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067911792 seconds)
  done (took 1.948974172 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.09233402 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068974551 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079536684 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071997504 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.10357666 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.0810214 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.082466092 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.08130366 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.085176686 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.080787205 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.083873687 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.085026681 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.089283442 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.075359763 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.083582683 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.075386087 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.084171412 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.078553261 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.083731834 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075657611 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.087613409 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072602032 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072663799 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081194344 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.069913628 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071685234 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.075813101 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078982403 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078219463 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078088449 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072200304 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.069839082 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070038363 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078261854 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.081181464 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.069985063 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071795389 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.070635423 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.07597331 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.069718793 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.081190399 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07445082 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074504378 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.070916719 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.07810349 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070196431 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.070776592 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075576415 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.080822205 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.072318415 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.072730719 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.072666479 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.070013027 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.071088938 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.071241126 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078049119 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.07112652 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.080850206 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.074033443 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.071519575 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.071320828 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.071368245 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078000268 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.069670159 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.079731887 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.073581298 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.0728675 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073691564 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072358748 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071477719 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.070725415 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068891136 seconds)
  done (took 7.010786801 seconds)
done (took 28.330483773 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.543843012 seconds)
  done (took 2.050353815 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.611339632 seconds)
  done (took 2.140152737 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.400945603 seconds)
  done (took 7.926797059 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.388403379 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.5026285 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.705375675 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.129234684 seconds)
  done (took 3.300933862 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.666466464 seconds)
  done (took 2.206203358 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.208733679 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.195258444 seconds)
  done (took 1.951423041 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.366687575 seconds)
  done (took 1.896414027 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.091667671 seconds)
  done (took 2.622682861 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.257365758 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.148503422 seconds)
  done (took 1.941369562 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.466665635 seconds)
  done (took 1.999124931 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.789589244 seconds)
  done (took 6.326426412 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.205130483 seconds)
  done (took 1.78507465 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.235856587 seconds)
  done (took 1.772632524 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.724926578 seconds)
  done (took 3.264749232 seconds)
done (took 42.719294585 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080270784 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.082697707 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081443867 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078294447 seconds)
  done (took 1.851277138 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076973127 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073235618 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076541725 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072203819 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.07658239 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072696706 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074442651 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076542554 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072177171 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072857574 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072472046 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072534393 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075387237 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.075215202 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.07310783 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076427661 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076002151 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072728261 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075573982 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072797625 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071380859 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.075021291 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074925161 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071890328 seconds)
  done (took 3.318602675 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077578538 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072984725 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074421279 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072047404 seconds)
  done (took 1.842564776 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.07747778 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091653254 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089145932 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077542793 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091728219 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086479316 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069697969 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069401561 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.070654332 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077092546 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068711497 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095374481 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087386253 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076771224 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079410107 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066058074 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068268219 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087045725 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077676896 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077497474 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.07229027 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077045662 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068189025 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087832928 seconds)
  done (took 3.432533627 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077026425 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103276944 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077395495 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.08718419 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089316465 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065689634 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.07500091 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089319949 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.122279566 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.06562525 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070347449 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065535131 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.073041389 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065236153 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076178608 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104810179 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.10827851 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068835071 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095897716 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065835504 seconds)
  done (took 3.19888785 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073404924 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069972733 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066201115 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069083175 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077172621 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072697856 seconds)
  done (took 1.980705562 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068037324 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067278305 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067818608 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066980222 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072554534 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067538466 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066161649 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067228568 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067242352 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067297136 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066853062 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065913988 seconds)
  done (took 2.358365383 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.335519658 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068481585 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.06892875 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066497006 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070830448 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066740653 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079918432 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068388671 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.091960405 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066665015 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066698506 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068683422 seconds)
  done (took 2.669287267 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202947218 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076194014 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233946413 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136220424 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110893654 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115250279 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103737889 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112317623 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.141978915 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102148105 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166089916 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164004025 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10661807 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136117635 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089802277 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.098031446 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153692822 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160832889 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10285954 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164139418 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142597379 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123786348 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145549766 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101104746 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105369712 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121196065 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070898855 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079824666 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167979805 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131005186 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144935351 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110689005 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093601598 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174507527 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169785876 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142104073 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134828321 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084140014 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.102403897 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.133074873 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198018572 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088828187 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163657553 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24463726 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081721604 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13881992 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118645238 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.119766681 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.105496517 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089918547 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145299851 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181785073 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.137951433 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087065736 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112218608 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11456055 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.116047962 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103247054 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179072435 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160351535 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126807923 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071612247 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098683608 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151980929 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131087515 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108934574 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.126177422 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093664381 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131985986 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15366027 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118236208 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142436083 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.128143438 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092385882 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117898218 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139031533 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127210442 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168719783 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125248384 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.076132902 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128148912 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107117886 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08424291 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.146367567 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078750733 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17982305 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10194085 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.107295999 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11309345 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110541634 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110681656 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161520322 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.283668379 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10376176 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066054514 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103665821 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.119879287 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146628511 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088063513 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108176942 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115410361 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077684843 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137605524 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075037757 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122389511 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.07577321 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122619159 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127870287 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075931247 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12341623 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100282189 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099592874 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131142452 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158419746 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088688344 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082024654 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16587089 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122071706 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.1048105 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143008066 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155098137 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.098798688 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102996003 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148420672 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178174359 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089591611 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161098586 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106815301 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083921915 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.088811654 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125607637 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112887093 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.122006105 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082077794 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.117971526 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167635929 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075608181 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095275452 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132708718 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079571791 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081172163 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103672349 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100229136 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094889038 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099583608 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103462553 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137487534 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122450373 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.246417006 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1261836 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09794104 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168901942 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090469765 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.104078344 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107042462 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.072404227 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.139287186 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160407623 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084890697 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165787316 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.121519209 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104636057 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118303953 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082935922 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139139405 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078972229 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070810269 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142856532 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109568936 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109970115 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.149636685 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104704294 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.126446804 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.118928821 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133947356 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131907114 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.128296735 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104007859 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087504804 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110618532 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124882933 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073417188 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090885854 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079956699 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103264817 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095296438 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084880193 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14451086 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127850692 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103740563 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114508876 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099583193 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149032829 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077196984 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132276748 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.122568206 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09738152 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.153823057 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15034916 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130355109 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098722899 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14327014 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070477004 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.216527367 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.090588685 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123327647 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083016259 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084673146 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115995215 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145889699 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127971793 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136506169 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111184578 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12030065 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15380221 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069752021 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.115362878 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146187774 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120581564 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.10397944 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089888589 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099104509 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141705206 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107439116 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178317338 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113034048 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122007886 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152322362 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.0994996 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.07995649 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105413037 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134185122 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103606996 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143074046 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098659136 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087769732 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108912046 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074542311 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099526195 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125994777 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122240209 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133907748 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.114044141 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134197655 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083225128 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120474699 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124463132 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122750801 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064922241 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120691213 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16020376 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093493234 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116511835 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150908082 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07939103 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.265559616 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175732793 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144517583 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08512668 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109489718 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118497434 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126857797 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119474651 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140553887 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109504997 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134529275 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109312621 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085026298 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087904995 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09693123 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104468671 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094512486 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.107370493 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.113360626 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094483916 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130910133 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102584403 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108579683 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117534825 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.09664185 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089676387 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096582391 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174487402 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12040515 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172411988 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099843549 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.145422071 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161988639 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075421641 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079124522 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078067841 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138975758 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083715523 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129788575 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.097551829 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105266423 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123502223 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140959095 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094621438 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.0686287 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108380004 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137833007 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114423755 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101479659 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.105127926 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160242372 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.099636197 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079113046 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112926958 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103856661 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101921755 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.312042346 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.062933522 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097852694 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077619666 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08130576 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127579823 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154684574 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080852654 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102587989 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118241763 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110261274 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127416675 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100826008 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098279644 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114288462 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149008005 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127637383 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089376025 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112142792 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13087181 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154841551 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104991334 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.095360038 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169417692 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167458781 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.159896707 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088196486 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112853562 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112725087 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107480706 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137443003 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083293452 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161824212 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082199004 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13486692 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103166757 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089723459 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128927922 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.09873909 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088625749 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146748764 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117236542 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08262752 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078564813 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11696879 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119471872 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106628103 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.07562109 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137119858 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073272671 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130909505 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166363258 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22376565 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105804838 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096115424 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080568086 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108375073 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102791617 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087627971 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.098189131 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171464207 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087695219 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148739108 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140059837 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112787788 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135933819 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099369452 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.635507557 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078059757 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152884654 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115257313 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170552352 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097089001 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116799962 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108468924 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12261522 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142878026 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104392893 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.176529036 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131003276 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.115190086 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079979031 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101587309 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101789453 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088581777 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104632559 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112400701 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11541159 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093358205 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.114926027 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122660297 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082327078 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095079881 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155237004 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11607577 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142845282 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139352642 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08497566 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116982973 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136755312 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081049495 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.120350207 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149673263 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.247448327 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09880278 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080434546 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.101516097 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169134832 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074368027 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160040731 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119106764 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108966842 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112366855 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.113173476 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131011057 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106978598 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120915155 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093556519 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.108459345 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112133744 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08187881 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077785251 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103666268 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112013331 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.0969681 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098593268 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097630137 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150005526 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071532316 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095476014 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102814143 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143343028 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172536934 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087411448 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082218866 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117990961 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112240424 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113028443 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119735824 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079251791 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082461846 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081682866 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077057084 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.107820198 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111964583 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103883393 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110011307 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162345508 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083002843 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.223800408 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094764717 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104549241 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070282855 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078550403 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095224403 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096937651 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107693181 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100280145 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168243291 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094001617 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089301584 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092066042 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073048219 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082286916 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126674512 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10916396 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116365496 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095527817 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062481495 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10633679 seconds)
  done (took 58.601736004 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.110610488 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.083347979 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097888561 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.150808031 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122878572 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.212189774 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157835336 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199188052 seconds)
  done (took 2.814789701 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068068601 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.0941917 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100428234 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082799539 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.06697143 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.06849908 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.220686038 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.083314639 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066394795 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.089841584 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.080546915 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068959583 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.404465314 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.06842374 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.070395107 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.063598474 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.069010843 seconds)
  done (took 3.410314433 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.374115828 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.370178109 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.370506095 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073734464 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.659051474 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088978357 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.071043503 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.09741107 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.071569685 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.280156908 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.705678634 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.093181542 seconds)
  done (took 13.910534588 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075894043 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069998961 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.086205424 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.086679304 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.075504169 seconds)
  done (took 2.048802802 seconds)
done (took 103.046327515 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.079460871 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.297282376 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054734442 seconds)
  done (took 2.033502976 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.082578814 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.083881751 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.083821079 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08318529 seconds)
  done (took 1.987657414 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.073335212 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076040196 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.084365904 seconds)
  done (took 1.884894658 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.222613818 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.138106099 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.089088282 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082319575 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077524404 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078436414 seconds)
  done (took 1.89239071 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.071994739 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075154604 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.07260433 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076337687 seconds)
  done (took 1.946761529 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076224183 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.054367392 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.05665641 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055929325 seconds)
  done (took 1.893140822 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.085577543 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078876665 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078474691 seconds)
  done (took 1.894541266 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106623875 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.084702124 seconds)
  done (took 1.843168213 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081528011 seconds)
  done (took 1.733053711 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098682528 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.11287119 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.127315336 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.109383514 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.134894808 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.108059439 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084953576 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086193281 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076528984 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086368393 seconds)
  done (took 2.676586905 seconds)
done (took 21.971226683 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078945001 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.36105835 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360683554 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089951203 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.667457735 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357114416 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.969081534 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096086614 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127099554 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070573669 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087867101 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.65017325 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.963242481 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.321978789 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.948824145 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.322302224 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.654025704 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071112487 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070820204 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071047746 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.956721581 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070489795 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071056061 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071173022 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.65314914 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372651925 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068200215 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.315015217 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068187496 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069764669 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354542179 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068078909 seconds)
  done (took 16.118753171 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070385808 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.117204945 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073121413 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08397978 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070474409 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069955256 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072273152 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069169541 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.124717642 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069544766 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085495755 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068578423 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071681708 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068465967 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087153132 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068341452 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068839194 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069357702 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068542853 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068182458 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086401311 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067465632 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068151403 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068677261 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068599349 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080104211 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069262583 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068798751 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068366509 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070037643 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071004432 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068754538 seconds)
  done (took 4.06908493 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114374556 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124864999 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074272252 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102778618 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112121854 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070358953 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.142373347 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093585691 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127550036 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069529654 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08451085 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068438651 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101127719 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071635143 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088841244 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068635303 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069117212 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068858216 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068142739 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06885746 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087279922 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06791496 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068185944 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068861463 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068634916 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081833022 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068668191 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069005968 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068459523 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070098786 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071538414 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06894297 seconds)
  done (took 4.316830428 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072241829 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074778961 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.08191186 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083857486 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070053483 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072672649 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073595483 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069589293 seconds)
  done (took 2.268511606 seconds)
done (took 28.43205809 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079098284 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069056648 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.07171661 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080650168 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072940308 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.07815494 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067241966 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074441114 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072124079 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073008802 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074962368 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067754784 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071297106 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067315061 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073734643 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068133823 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079010941 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071652513 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080110289 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080824201 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070612572 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073103549 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074325669 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079454373 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079442628 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078910776 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077067171 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072719114 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069057327 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070495292 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076656559 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084078328 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069898805 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.078877407 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.06809003 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.06791213 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071508337 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068211328 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079121114 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076434116 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069704233 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076116838 seconds)
  done (took 4.754767038 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.08735033 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091328372 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084744921 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.062935155 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067315466 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065775469 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088555057 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.061451902 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059973781 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087701425 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.05669555 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059420136 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062414734 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054330225 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059862198 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057351931 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.062011422 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056177619 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.05920999 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059879362 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058382825 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.05474771 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060605633 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062758767 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056772643 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062681741 seconds)
  done (took 3.376341817 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074650261 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.08449685 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.087984103 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127666428 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.103816098 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077044682 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.078061098 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.087247553 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.08524385 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066924463 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071338582 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093157484 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087927808 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073642022 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.070165244 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.0836189 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081752254 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069101402 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073823736 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090392278 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.083936602 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.077536039 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092068226 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080498091 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066832362 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069624373 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070834339 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.092302415 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072131947 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076725971 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071688741 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071427687 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069510389 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079209999 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073532692 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.071533237 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.091786289 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078505885 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080328975 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068911945 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071077152 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068530936 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.089223909 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.124047032 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.069621273 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.077283411 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.078729734 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079023705 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070232264 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086701685 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078678113 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067266398 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070600456 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067064878 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067785355 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080854979 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069956347 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069865911 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076346587 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070948155 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.080060379 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071637275 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082748805 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067214232 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075071702 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066836539 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068320131 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066553844 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092425777 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069399439 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.107813029 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.071205689 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.070912815 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078465325 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.07570608 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074088126 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068721468 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082774582 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080098097 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072156322 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075970036 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.07116654 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070742135 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.088170572 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070476548 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069132388 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068654696 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073613772 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070280111 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068817683 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080089089 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069967137 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.071805437 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084186332 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067233641 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068909915 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074046346 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072246112 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067463968 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078836783 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072594188 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068506273 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076534411 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067833743 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070575421 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078236714 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073948133 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067022858 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072277473 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074598465 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068646156 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.06975194 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070955223 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.06954662 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.077168624 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.0743712 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072614155 seconds)
  done (took 10.629142644 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.159269373 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.153306407 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070716736 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.143066123 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076719663 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078852409 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.145689176 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094310514 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068182273 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068862478 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068939119 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.115079956 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105441624 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.121696552 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078779324 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068078538 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083356617 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.116818041 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.148715812 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142171331 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.084048917 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076956674 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070168577 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069115048 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.074223245 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.082433782 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.090224035 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076586684 seconds)
  done (took 4.446764496 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.080776917 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.101491521 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073933561 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089399549 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.09067121 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068199402 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070749351 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069911268 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080747414 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078951779 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067797201 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073977961 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074697116 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.074366505 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069289857 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074802927 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074990152 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069215099 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071167186 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073098695 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077911606 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080482872 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072154056 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067722304 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074166001 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067433697 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064376215 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.08403315 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068361119 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090428094 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066129044 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075144688 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082234601 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068976726 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068246849 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067867033 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067693597 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.06775437 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070050328 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066638011 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066468448 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.05811375 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.06736204 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079529641 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.075307601 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.05697703 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072712438 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.07281673 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073111926 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065561859 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.07084919 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070614715 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071033977 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075087021 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072976805 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073002762 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068926956 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.06636354 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075598788 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067891255 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064862197 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066620179 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072656725 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066034535 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075782716 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072743308 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.067248939 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067980778 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069719538 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.074374013 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067996424 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.07098444 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065586171 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069911832 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072349356 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069768679 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069311857 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066455066 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067844252 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068283913 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.056245723 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067867806 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054320558 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071349201 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066378543 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.06633327 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067675387 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072499189 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080138706 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.06929471 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.074374674 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068826782 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067407163 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.07154848 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060898731 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071013791 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082970711 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083067061 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068103423 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066323575 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.083234224 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.073162686 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067754251 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.057483456 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075301132 seconds)
  done (took 9.213358225 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.095000004 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.087803379 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069893815 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083206413 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.091163659 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.087178766 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075370465 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077111788 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069844057 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.082705015 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074651275 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076531316 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068162317 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.07775982 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.094705808 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077074696 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.06998537 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077482757 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072247424 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.101779713 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083284439 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082223702 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.075098845 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068717522 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076903909 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080324488 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.090239352 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.080402545 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.078641598 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.076283931 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.080410644 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.090575212 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.074731877 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.072352252 seconds)
  done (took 4.442778379 seconds)
done (took 38.526996478 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.753968269 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.933212871 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.749772665 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.10066509 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.822965251 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.782843627 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.816383275 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.740854191 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.098826826 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.789622076 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.969820806 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.803730917 seconds)
done (took 65.050892911 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.832907209 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.889327835 seconds)
    (2/2) benchmarking "String"...
    done (took 2.041215662 seconds)
  done (took 5.613577057 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.091596348 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.273311751 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.98671136 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.737290202 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.745032115 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.03607801 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.545965074 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.268398231 seconds)
  done (took 30.277017671 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.029909277 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.956031477 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.45223271 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.494410339 seconds)
  done (took 15.675975876 seconds)
done (took 63.265175751 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.746091506 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.755156393 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.741620333 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.723460903 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.904671877 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.757178427 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.942367941 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.786089113 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.738398071 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.731260232 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.741444819 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.173018557 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.746956792 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.893730239 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.742145615 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.747565274 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.802978736 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.245498597 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.910760954 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.759866586 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.745971461 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.79065397 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.749364453 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.75641515 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.794377241 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.742306566 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.171845117 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.754666382 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.366713793 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.748480437 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.771747584 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.1320776 seconds)
  done (took 202.797839259 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.742370509 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.618736539 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.66197702 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.76041935 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.16046213 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.939643821 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.878242723 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.198354093 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.74752795 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.769271448 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.91623716 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.746017537 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.937035487 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.776859327 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.750555234 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.747939135 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.917394233 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.968925345 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.747736739 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.019573399 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.759537608 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.772400574 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.715404246 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.918330424 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.758540803 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.794873789 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.759824212 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.968269494 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.939170629 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.89436332 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.769451415 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.774689999 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.975627436 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.624433289 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.746812962 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.770271293 seconds)
  done (took 168.63434497 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.158174112 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.745335194 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.744479249 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.746928202 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.758450712 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.746347125 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.87255369 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.872183814 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.211877971 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.981222892 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.748493262 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.795189207 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.59582242 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.745493171 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.813123719 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.759357433 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.750993414 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.762254475 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.775584595 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.750480986 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.746341024 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.872155059 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.758481973 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.799739227 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.755961687 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.747295408 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.75239486 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.747356804 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.11641665 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.747544726 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.752318697 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.006668379 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.753606675 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.747310743 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.65933958 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.765731847 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.841729408 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.748697403 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.753463307 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.749710475 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.967655712 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.748490572 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.748109575 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.7511749 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.939423423 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.750848045 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.873575524 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.749200603 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.277992273 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.749335354 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.74781484 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.740832436 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.493871253 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.754021078 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.750449092 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.752852443 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.749575114 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.749889563 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.757687257 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.588109396 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.828654465 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.752274846 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.755569587 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.758962925 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.754692983 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 22.022974359 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.756355889 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.963935466 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.811985773 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.858459945 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.874881662 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.755412857 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.818770607 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.846436106 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.753967746 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.751648135 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.752110928 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.752602441 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.833962472 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.754434905 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.875695659 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.758808887 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.753296125 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.800949265 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.821238426 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.753041055 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.659864029 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.755595935 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.753849831 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.091445384 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.823061442 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.753479957 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.75470055 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.752434583 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.752129932 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.895556644 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.753431323 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.877797975 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.547019942 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.758556658 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.596372108 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.758082821 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.919188616 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.876705713 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.955943837 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.757382282 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.836255008 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.757737342 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.754006785 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.753779081 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.783051014 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.753790587 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.810581661 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.756435772 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.124917342 seconds)
  done (took 399.3836445 seconds)
done (took 774.721537375 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.430948059 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.397547077 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.496998905 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.411425466 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.395425762 seconds)
  done (took 13.83079525 seconds)
done (took 15.527451196 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.84051436 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.845374881 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.780027649 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.84311562 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.775885487 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.842522336 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.824432768 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.78138373 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.811822501 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.780466874 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.811187452 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.78002568 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.766328197 seconds)
  done (took 25.180932698 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.984699175 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.986647311 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.824622852 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.984733667 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.80197573 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.994624666 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.917666147 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.909030095 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.907400264 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.771492352 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.769061677 seconds)
  done (took 22.551453002 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.995572653 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.996040649 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.829557113 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.999314583 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.805598883 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.991453397 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.92343197 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.907005434 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.908303607 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.795537396 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.769499753 seconds)
  done (took 22.619884747 seconds)
done (took 72.050620025 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.76516636 seconds)
  done (took 3.46519365 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.786441061 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.923868543 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.77029474 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.76762209 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.76395312 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.765836359 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.769058144 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.764868282 seconds)
  done (took 16.012838976 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.763476784 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.763802391 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.764520237 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.763000494 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.761590013 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.76147402 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.764778736 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.762372097 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.764391862 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.764432964 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.761733173 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.761920107 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.761760506 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.762979983 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.764938306 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.765601534 seconds)
  done (took 29.914048805 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.764368437 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.76240681 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.761034173 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.762363852 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.762211064 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.762146472 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.763470392 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.763275029 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.761592579 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.76227182 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.762769135 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.762722422 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.762924868 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.762806159 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.764497716 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.763661507 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.764346872 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.764494852 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.768880042 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.764734518 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.763742588 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.762987248 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.762720555 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.765049635 seconds)
  done (took 44.025430327 seconds)
done (took 95.11750516 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.440517073 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.170503644 seconds)
  done (took 8.313654492 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.766966017 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.766940329 seconds)
  done (took 5.2663012 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.765378328 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.765912541 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.765390201 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.766499595 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.766034355 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.76656059 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.766238846 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.766092965 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.76629076 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.766138476 seconds)
  done (took 19.362568735 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.76544801 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.767044582 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.76457825 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.767655013 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.767810879 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.764310324 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.767443367 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.767771843 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.767461386 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.76462697 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.767089761 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.764980407 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.76762867 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.765413578 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.767331126 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.764822783 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.765114917 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.76486118 seconds)
  done (took 33.494732868 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.768130377 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.768481276 seconds)
  done (took 5.24039201 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.765450481 seconds)
    (2/7) benchmarking "second"...
    done (took 1.765629731 seconds)
    (3/7) benchmarking "month"...
    done (took 1.765001727 seconds)
    (4/7) benchmarking "year"...
    done (took 1.764435208 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.766333962 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.765317066 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.766454174 seconds)
  done (took 14.062621368 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.76964678 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.927539299 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.996020809 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.449617098 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.769880602 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.771882915 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.685961774 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.772013212 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.774306293 seconds)
  done (took 19.620841033 seconds)
done (took 107.063031935 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.579215059 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.765273996 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.109572209 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.808075963 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.783682268 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.105182397 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.776885475 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.994361253 seconds)
done (took 42.627350566 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.789002254 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.236030433 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.247754082 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 5.580632691 seconds)
  done (took 11.768420054 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.749395683 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.305008677 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 7.054357743 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.444885032 seconds)
  done (took 20.272894755 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.138877723 seconds)
    (2/2) benchmarking "read"...
    done (took 2.131389291 seconds)
  done (took 5.981743216 seconds)
done (took 46.518318656 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.770819714 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.770367664 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.769881916 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.771130362 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.767878149 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.768037884 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.768872628 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.771233414 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.772485009 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.771811386 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.770724209 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.770751388 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.770049619 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.768940767 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.768875472 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.770743016 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.76758809 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.772134596 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.768647862 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.769990816 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.772420421 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.769643274 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.769828518 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.768382083 seconds)
  done (took 44.189065541 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.771778764 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.76984205 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.773081145 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.771517631 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.76998632 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.7730022 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.77277235 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.770315568 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.771752697 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.771627224 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.769872482 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.77079895 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.772166642 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.770515567 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.772980915 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.769713605 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.772199499 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.770182948 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.772380358 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.770217906 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.773577416 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.769963485 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.771644779 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.773897744 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.770343361 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.771766172 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.772851965 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.773133628 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.774412107 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.771607302 seconds)
  done (took 54.858262406 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.778703021 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.781487752 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.773993117 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.773976529 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.774026206 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.773191975 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.773435603 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.773736012 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.774585922 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.774951494 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.774404755 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.773422863 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.773662235 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.773789211 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.775076831 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.772862161 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.774483653 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.773536469 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.774514559 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.775549071 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.773997042 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.77371913 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.774292286 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.773490571 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.773415906 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.774288201 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.774936927 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.774417671 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.774833879 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.774864472 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.775372195 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.776170626 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.77479718 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.774670355 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.774363659 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.775746227 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.781350195 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.781680332 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.774684798 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.774673696 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.775433532 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.775648215 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.775515139 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.775896401 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.775530418 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.776419938 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.775598684 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.775913875 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.776004385 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.775334686 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.775892516 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.775467865 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.776700801 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.777460728 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.776169428 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.776595102 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.775734824 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.775943007 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.776704828 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.777055354 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.777248747 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.776967008 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.777291464 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.777353961 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.779452669 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.777804698 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.776344817 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.77698562 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.776491903 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.777708218 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.777806693 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.777658509 seconds)
  done (took 129.561296847 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.776748884 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.774951497 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.774658155 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.77426067 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.774459178 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.779295818 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.774645508 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.777843699 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.775541228 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.778862977 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.777308315 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.775291322 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.774881869 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.778292042 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.779869608 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.775376896 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.777689853 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.774505161 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.777956168 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.778637058 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.778316892 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.775740664 seconds)
  done (took 40.798444551 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.77778961 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.778421969 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.777111683 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.778523761 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.776329009 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.778735743 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.778242921 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.779340688 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.779764776 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.776126843 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.777508052 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.777950449 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.775653528 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.776854467 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.77677727 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.777758418 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.778855254 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.777289831 seconds)
  done (took 33.713020908 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.778018463 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.776956757 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.780331344 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.775969574 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.776978493 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.780049998 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.779272919 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.780326769 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.779225369 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.777095084 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.779867663 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.780811227 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.780629964 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.776031305 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.780874956 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.777780734 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.77991663 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.777547097 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.780126377 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.77675634 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.776493669 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.780407694 seconds)
  done (took 40.846682937 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.779594057 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.779938372 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.778113908 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.777573152 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.778459918 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.780655402 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.779770937 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.777222791 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.781167912 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.780391971 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.778831344 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.781092365 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.778828667 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.779093503 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.778151069 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.779068867 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.78143289 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.781375786 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.781131842 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.778378723 seconds)
  done (took 37.305761986 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.782875887 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.783527337 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.781829671 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.782661943 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.782695135 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.78271143 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.783653847 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.783157426 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.784052877 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.783294867 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.782883955 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.783669874 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.783006751 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.78292824 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.783357537 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.782092996 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.78319183 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.783141422 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.783368797 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.784143899 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.782838149 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.783333473 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.782927293 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.783447264 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.782689954 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.784145169 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.7841686 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.783679854 seconds)
  done (took 51.647242705 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.784265637 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.783891332 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.780566099 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.78138559 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.781235129 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.78010361 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.782498279 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.78011425 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.783195417 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.780760409 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.783693126 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.78295775 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.783252483 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.783185015 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.783831109 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.784095067 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.783439677 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.782189788 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.781314212 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.781225776 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.784092382 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.783633325 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.782906807 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.783714213 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.781775143 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.784903927 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.781974757 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.781204411 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.783853005 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.781977202 seconds)
  done (took 55.196502445 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.805456899 seconds)
    (2/2) benchmarking "in"...
    done (took 1.803636887 seconds)
  done (took 5.329398016 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.782620481 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.783819713 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.785640494 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.782302649 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.782714987 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.785911855 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.7873491 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.782926639 seconds)
  done (took 15.993776744 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.784280011 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.785103973 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.786479334 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.78605716 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.786378573 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.785137049 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.793237231 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.786136279 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.789519891 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.786214406 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.792650134 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.79437129 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.79065782 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.786515163 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.785305321 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.787084118 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.785237824 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.786068387 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.786685084 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.786244185 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.786683812 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.788096628 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.788455929 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.783756245 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.787491278 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.800298781 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.793826469 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.787124101 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.786360614 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.79377619 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.786964932 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.783362933 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.787646957 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.788369219 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.78615734 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.788276994 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.797895015 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.789652323 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.79541151 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.788137751 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.786020416 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.783746627 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.788441453 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.791976842 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.788706284 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.78962904 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.787798375 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.786129842 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.788036191 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.789851219 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.792055697 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.787293932 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.786244337 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.796649254 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.788902372 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.795290272 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.789148946 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.790797411 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.7974507 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.801560175 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.804848125 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.795516883 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.7909467 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.788980626 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.797968238 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.810778693 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.796784469 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.785945386 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.786427333 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.789237375 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.799225184 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.80585497 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.798334538 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.789665358 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.789809091 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.790045552 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.790150309 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.790163067 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.799476483 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.793278323 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.789908808 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.78913181 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.798334087 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.810408714 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.788465728 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.790476336 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.791517121 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.789781457 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.789767221 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.801263067 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.790910169 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.790221946 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.791170554 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.790542582 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.794925862 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.79115635 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.789357601 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.79205364 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.788156808 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.790083395 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.791490935 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.792528781 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.798572283 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.79223642 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.791137683 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.801295806 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.7901272 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.789545018 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.802424528 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.789956329 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.792640446 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.791811512 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.800758737 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.788306923 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.796039342 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.799285121 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.791601945 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.792433244 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.791937622 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.792135506 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.800606836 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.815660024 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.791386181 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.7913202 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.79642764 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.803917624 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.791510607 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.794260566 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.790982052 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.788798915 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.788301869 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.794763702 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.792169406 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.794556254 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.792203997 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.794436313 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.7896481 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.792477583 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.792900456 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.794246099 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.795467576 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.792764752 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.794221571 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.796452239 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.792529548 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.793722859 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.802111387 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.794636167 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.793345736 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.793469988 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.7912204 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.792544241 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.796247001 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.794923166 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.792584097 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.793241446 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.792951061 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.793638187 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.794228436 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.793399079 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.793727424 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.793618231 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.79623198 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.795040879 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.802015905 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.792509123 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.791646303 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.793466026 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.794190448 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.79393176 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.795547829 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.79418648 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.797231038 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.802804874 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.794117241 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.796035057 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.798914318 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.794656314 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.794055022 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.794362764 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.797076994 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.802155396 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.795500499 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.803929419 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.795211467 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.795031626 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.795295159 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.795041044 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.794473947 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.79530971 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.798027215 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.801916511 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.81162936 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.80464715 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.7989024 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.798486321 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.795185634 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.798832531 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.802310529 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.79583054 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.794911958 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.795752125 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.79371619 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.796537911 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.799556751 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.796216837 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.793528448 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.796000216 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.79518875 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.795660455 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.794786593 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.799262754 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.798500883 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.794156238 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.796231426 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.798042355 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.794719576 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.793862905 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.794853707 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.796231827 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.797630711 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.796253102 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.808124618 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.793539001 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.797205409 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.798512652 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.796067306 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.794486385 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.795760546 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.79861529 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.796544566 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.806758481 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.796721923 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.797969058 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.803299747 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.797631906 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.797479295 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.799258617 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.796617899 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.794479153 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.799466436 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.804987259 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.796996545 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.798219534 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.797677871 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.797253858 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.797909678 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.80582487 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.794888302 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.796929039 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.796818304 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.801880504 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.794847007 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.800398673 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.799355178 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.79889322 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.800753108 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.797872799 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.798584791 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.800800903 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.798765613 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.79854698 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.798914428 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.801241832 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.805991574 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.804295808 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.79932286 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.803711686 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.798395275 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.803477043 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.801770646 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.799238864 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.799395401 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.816389577 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.808953079 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.810693453 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.801874933 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.799926298 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.807228603 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.799495564 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.804480807 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.801048187 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.800217935 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.799789896 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.799932643 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.797583767 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.80325381 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.799835971 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.799533108 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.800787065 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.803407717 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.800715908 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.799879501 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.799911515 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.801125476 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.799112167 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.799790177 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.801107028 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.807243232 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.801549121 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.800198168 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.80128514 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.809041238 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.802536977 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.80289618 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.800614598 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.802013552 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.80065735 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.802781077 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.802547817 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.803174983 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.80843083 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.803795086 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.811646289 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.802275671 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.814434953 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.801122545 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.804250121 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.809996465 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.799225058 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.800875592 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.802683185 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.801615535 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.811849887 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.802084584 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.80403782 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.806323425 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.80319505 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.801960469 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.801743553 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.802488595 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.802724154 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.803399937 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.814548931 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.8034812 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.806171213 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.806355039 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.798621188 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.803654211 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.801838925 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.801642069 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.808754397 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.803976198 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.80471164 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.802100698 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.804339135 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.802555753 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.8027893 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.802781205 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.79972922 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.802551302 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.810912298 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.803150976 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.807499977 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.80251793 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.816039174 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.803063753 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.813140057 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.804293595 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.80440325 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.804692806 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.804353804 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.809205316 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.80411833 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.806270236 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.805193972 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.805939622 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.806703846 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.804642983 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.809643587 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.804938028 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.805271603 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.805194802 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.814048858 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.827401772 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.807651083 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.809584625 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.801734688 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.806051856 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.810453565 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.806115513 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.804727447 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.809036918 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.815821532 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.812703838 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.806782319 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.807319604 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.806686774 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.806463151 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.805016264 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.805176169 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.806361699 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.807065107 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.80934443 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.805717742 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.811328486 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.806196924 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.808085011 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.810330548 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.807516624 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.820253716 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.807153248 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.808714174 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.807146812 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.807014542 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.806380465 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.806915733 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.807367925 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.810106718 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.806729167 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.807240457 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.813260745 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.812401581 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.809958037 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.808804072 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.807531613 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.807077695 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.808399295 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.80707108 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.809124543 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.80812489 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.808512279 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.807531974 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.811404318 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.805883249 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.808140486 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.808288686 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.807107372 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.810616364 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.814506513 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.80956386 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.805160152 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.80763732 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.808955967 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.807069045 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.810963308 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.821156066 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.810792741 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.816578695 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.816828401 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.812870778 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.809908277 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.811497384 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.815855871 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.808096082 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.81015215 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.809835418 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.811548448 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.809045815 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.812346289 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.810133687 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.818431863 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.810913628 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.809499417 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.819060421 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.811106911 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.809433768 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.810289118 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.814550453 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.810530198 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.805568127 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.80873082 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.807808127 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.819407748 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.816006984 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.811348294 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.811591294 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.807682963 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.810809508 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.81607115 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.808434125 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.8109047 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.806357062 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.809800576 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.811041179 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.810334462 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.806165329 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.811100169 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.810137417 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.812214751 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.817431827 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.807864877 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.812451001 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.810388927 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.810984461 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.81150228 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.810458524 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.807393952 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.807374512 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.811129026 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.811395963 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.811720332 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.813634295 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.811011337 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.811748703 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.811698438 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.812118736 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.815025005 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.822498924 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.819137319 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.808648929 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.810988306 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.813539099 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.814763593 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.812083782 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.812502649 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.812745109 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.815117133 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.811606583 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.812145051 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.811341877 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.814676977 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.830809736 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.812422402 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.813656062 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.812672071 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.818153018 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.811438128 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.80962365 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.811942034 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.817162555 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.814193402 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.820731044 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.813699393 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.822115888 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.812742123 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.81300352 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.815182675 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.815759617 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.820261716 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.816398798 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.814015547 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.814065309 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.818422699 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.831983479 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.812954927 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.821776322 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.843263423 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.815787309 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.814721741 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.814262866 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.813225045 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.815715845 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.817557174 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.814103636 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.813153052 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.814206233 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.814873618 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.815029162 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.81944299 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.816133758 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.813512087 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.815702758 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.814352907 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.818255683 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.811747747 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.814884847 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.815066883 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.815713508 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.815147285 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.815066429 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.816383212 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.831559009 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.828871166 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.81546522 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.815008001 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.812008339 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.82070114 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.819114811 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.824885555 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.821071965 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.816225544 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.815789971 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.815893816 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.817224907 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.812399512 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.816274948 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.817305674 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.815240401 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.812475567 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.832122944 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.824010995 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.82391326 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.817061718 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.816673547 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.815632726 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.817482786 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.816993134 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.816979949 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.819364259 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.816121273 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.821213855 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.814755729 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.815546544 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.819112992 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.822330559 seconds)
  done (took 1076.363215902 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.814215294 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.813541603 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.81292718 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.812680331 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.814640015 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.813919724 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.814321375 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.813979874 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.814154975 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.813788552 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.814949877 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.812978162 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.81442165 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.814767115 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.813622641 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.815131156 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.814540262 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.814465942 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.814967801 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.814655596 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.815068783 seconds)
  done (took 39.849007997 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.816665056 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.814841621 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.814817361 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.81665422 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.814734707 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.817189563 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.814622291 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.815735729 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.816458158 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.815079512 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.818091536 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.818193469 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.814895286 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.814962559 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.815104356 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.818528605 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.817434779 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.816556582 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.81801045 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.815449149 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.817726415 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.815671636 seconds)
  done (took 41.710196269 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.818367198 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.819111499 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.817456391 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.816158811 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.819337723 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.816997904 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.820631748 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.818454785 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.820051758 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.821500565 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.818290949 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.819669025 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.825273768 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.823324403 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.823655772 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.818531788 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.962816189 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.819861659 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.820676917 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.820537894 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.817944829 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.828621433 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.817748527 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.815549419 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.817968801 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.820419116 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.818515927 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.819073628 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.819944448 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.820324678 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.823596503 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.819377483 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.819250841 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.822388685 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.819555483 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.820342288 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.823616168 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.821257065 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.81631939 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.819120872 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.830515113 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.839904768 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.822520544 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.831265344 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.82226516 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.820955193 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.824172483 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.828598525 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.817622106 seconds)
  done (took 91.133972389 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.819295314 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.822222811 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.819200912 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.821820461 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.820588699 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.820954232 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.821256704 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.821269987 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.818587358 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.819444342 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.821124029 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.81881666 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.818724766 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.821208755 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.82217517 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.818239707 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.819103141 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.818954225 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.819380594 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.818837102 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.819446597 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.8210887 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.822266729 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.818002815 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.82156029 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.819624759 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.818865413 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.82139683 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.81995066 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.819177409 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.821488712 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.822526464 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.822106123 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.821071871 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.819618031 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.821977343 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.822768019 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.820708373 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.822393958 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.819752629 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.82222964 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.822880889 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.823872227 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.822422771 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.819405263 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.820285906 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.819988997 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.820589256 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.820372515 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.822633491 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.822669052 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.820944422 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.823756951 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.819973442 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.822784129 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.822774066 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.820373614 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.820632883 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.822297773 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.82009564 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.821287077 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.822723864 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.820905304 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.822757286 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.824282343 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.821161112 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.822254319 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.823341719 seconds)
  done (took 125.58494351 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.82447239 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.823417586 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.824397533 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.824752392 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.824560354 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.825246696 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.825649928 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.824890565 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.823834696 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.825322091 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.824857142 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.824855719 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.825851378 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.826020466 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.826297247 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.827592239 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.826625586 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.826413519 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.825942313 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.826636034 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.827018705 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.827215454 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.8260972 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.825825529 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.827165836 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.825822507 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.826719334 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.827720402 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.825688732 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.827293903 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.826426634 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.826035629 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.827210448 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.826767387 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.827447138 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.827441328 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.82704508 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.827623007 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.827309035 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.826812332 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.826915042 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.826727593 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.827390284 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.827264043 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.828169676 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.828450784 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.828096372 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.8273397 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.82658037 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.827600837 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.828238793 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.828111279 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.827439543 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.827756009 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.829711792 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.829214657 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.828506642 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.829576517 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.828109861 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.828892316 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.828009122 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.82865452 seconds)
  done (took 115.021567919 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.828988478 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.827446541 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.824433994 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.825853255 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.827807635 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.826106241 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.826841567 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.827147171 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.828510568 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.82900927 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.828160998 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.82655301 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.826030571 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.828400884 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.826256578 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.826696025 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.827083133 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.827444209 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.829374076 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.825897285 seconds)
  done (took 38.306789205 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.826879322 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.829931561 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.826135591 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.827571219 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.829193915 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.826473969 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.828428996 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.829356037 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.82625558 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.829898842 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.829435836 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.828686359 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.828165747 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.827164111 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.83029331 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.828002686 seconds)
  done (took 31.015065135 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.826862446 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.830150906 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.83038345 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.830321464 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.826487546 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.826911678 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.829769976 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.827481699 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.828675397 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.833154826 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.831404324 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.830279851 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.828817819 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.831237588 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.828800451 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.830279206 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.827673956 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.827887724 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.830107669 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.831350075 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.828129797 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.829102158 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.831005565 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.831123751 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.828557281 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.829022438 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.829617058 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.828456189 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.82983793 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.830024899 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.829158428 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.8291269 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.830225606 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.828500758 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.832304187 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.829577726 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.830942045 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.831628983 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.831232649 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.831379755 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.830762567 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.828507994 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.831255499 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.831918817 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.829264374 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.832369158 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.828786545 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.828519517 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.828842176 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.829657684 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.832556116 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.833005167 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.833222786 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.833022506 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.831648251 seconds)
  done (took 102.417520855 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.839313094 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.845268675 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.838001667 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.840336472 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.840532464 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.837405053 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.841261194 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.836689193 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.839440807 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.841557406 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.838977184 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.840562237 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.838714535 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.841659564 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.8387496 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.840394107 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.837909802 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.837954697 seconds)
  done (took 34.881524101 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.839196523 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.838903461 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.841028049 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.837876511 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.837993655 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.841920853 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.838275841 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.841387134 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.840903538 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.839878915 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.839019424 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.841318419 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.841213585 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.841554201 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.840305016 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.840918635 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.843428181 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.842139266 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.839186735 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.839437839 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.843412931 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.845169042 seconds)
  done (took 42.271355547 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.841087203 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.841539274 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.859449213 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.886835793 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.872593336 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.842458475 seconds)
  done (took 12.919750108 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.838828573 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.844659701 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.839985175 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.842520711 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.842831286 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.839617111 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.840557335 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.843365848 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.842756305 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.83996115 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.840028238 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.842921513 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.844950035 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.841060684 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.841935173 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.843412548 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.839223995 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.839840309 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.843631755 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.843440889 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.840133462 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.84214154 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.83909696 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.839722599 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.840017351 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.839858794 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.842553439 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.83989564 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.840568948 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.844762057 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.84321668 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.841828325 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.843661111 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.83983118 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.845426839 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.844057482 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.840462347 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.844967956 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.842370684 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.840882859 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.844040651 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.844115103 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.843800121 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.841694817 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.845114728 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.843078642 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.841182255 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.840844367 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.839646682 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.842965992 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.845067235 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.840422538 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.84453391 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.844293504 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.843365186 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.84379545 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.843465926 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.842079444 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.843565041 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.842359811 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.840853117 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.844843089 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.841074652 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.841486248 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.843992782 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.840767105 seconds)
  done (took 123.362899774 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.842533631 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.839707505 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.840563721 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.842543856 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.842283721 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.841435749 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.842311796 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.841460794 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.842114405 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.841068578 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.845113598 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.843170112 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.842860086 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.84164707 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.843808676 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.841655575 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.843371873 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.844159675 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.844399589 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.846452091 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.84126526 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.843206329 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.842517254 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.843295859 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.841971123 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.844282236 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.84325614 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.842121083 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.842715902 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.843095524 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.841636275 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.843119519 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.842804572 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.84255164 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.84288141 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.843850759 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.843273378 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.84288323 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.843382591 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.845607267 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.843928173 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.846485658 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.843040883 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.843683391 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.842766319 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.842734991 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.843905121 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.844309219 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.844058255 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.843209676 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.843472951 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.843995499 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.844386116 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.84418288 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.844635986 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.844912147 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.843651396 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.845387884 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.844990888 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.847007106 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.845303315 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.84452277 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.847214757 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.845153854 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.845155747 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.845373288 seconds)
  done (took 123.452172762 seconds)
done (took 2509.435999922 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.833321768 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.93549022 seconds)
  done (took 15.550542452 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.010433261 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.963528045 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.846344701 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.850736095 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.846985496 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.863667941 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.865073976 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.848410015 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.846628257 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.847455843 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.846214969 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.035363566 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.849186563 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.847762898 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.84702867 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.941940626 seconds)
  done (took 51.940887349 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.848984137 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.85066841 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.875841846 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.85381378 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.849361581 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.879319503 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.899719907 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.852780145 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.96641899 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.871965118 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.119662937 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.855256632 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.85088089 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.031714506 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.878316095 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.881757161 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 2.04310176 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.114823076 seconds)
  done (took 36.307694826 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.143333413 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.850140888 seconds)
  done (took 10.777579465 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.846520271 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.872800414 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.885746935 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.853582407 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.843495353 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.910132846 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.855012017 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.860981939 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.864632656 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.895269688 seconds)
  done (took 70.472035585 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.858553348 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.854571588 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.853568706 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.850830718 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.845565021 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.861897266 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.851366038 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.84550705 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.243852719 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.934352385 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.877109136 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.859188608 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.851280207 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.854640722 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.850620387 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.876540062 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.987953674 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.849515168 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.849148353 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.85776365 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.850708304 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.938208938 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.882608283 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.854885197 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.928929428 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.26358177 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.858859575 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.85925471 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.960909354 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.84971364 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.853011064 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.853069818 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.855060905 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.370234525 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.304583151 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.862791923 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.880188087 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.859809196 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.850267966 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.968055577 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.852345129 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.85907442 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.845009021 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.272295827 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.976390493 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.9271058 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.694381971 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.853628109 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.855883213 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.899662591 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.85292717 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.855488072 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.866879171 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.500123873 seconds)
  done (took 136.519172241 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.876952073 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.331416675 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.00251245 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.867182039 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.269733066 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.214624513 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.847375044 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.026710768 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.909632147 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.229747311 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.142108248 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.098393659 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.849525496 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.852957387 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.852782498 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.850898431 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.069398514 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.050157188 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.852106339 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.85411597 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.88771619 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.269017059 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.043404351 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 7.000181567 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.87631176 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.206469434 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.040092094 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.097449474 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.851954848 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.851423668 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.049829833 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.855450111 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.852504683 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.854291438 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.085204491 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.085261895 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.076184254 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.852386217 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.879636798 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.855927037 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.883600752 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.203304106 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.086864394 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.052456402 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.168760675 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.207117631 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.855712548 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.853026696 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.855584795 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.04661681 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.086869459 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.256419777 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.044928077 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.854766344 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.192652869 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.852662987 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.876644986 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.234663292 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.149575854 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.094428561 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.88147538 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.853080272 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.853087845 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.299973492 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.856366189 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.090419252 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.977203469 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.854723392 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.09272877 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.094986232 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.148969707 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.221023743 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.880274748 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.868337788 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.922683845 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.26486663 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.048774226 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.233184651 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.860828321 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.854934154 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.077239285 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.854899264 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.131870091 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.300825496 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.247308009 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.893330902 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.875535192 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.853731293 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.23539512 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.231052265 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.122991552 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.178976493 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.084750407 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.895775445 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.856522862 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.853996965 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.864031229 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.054165061 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.857142841 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.22096825 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.233877153 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.624637746 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.891053578 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.304244337 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.055746571 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.856235249 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.857440976 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.85633816 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.058572681 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.918975382 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.877027049 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.85458372 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.23430578 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.81137892 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.990101107 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.587103959 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.053949486 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.855574752 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.255988185 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.860585064 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.238457956 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.901619447 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.296291313 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.358173652 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.910008234 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.076719706 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.193676104 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.860024696 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.282729537 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.300171629 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.044764044 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.230705074 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.699569264 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.861057161 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.283251925 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.875261887 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.876384916 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.026277063 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.88329457 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.086636654 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.870087753 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.301161554 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.883873899 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.096349697 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.905734125 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.264647935 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.901228916 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.061440472 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.87952644 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.986514404 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.88207072 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.850085754 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.043785389 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.298913989 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.861269196 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.397917355 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.859724905 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.006198862 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.308895078 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.882132028 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.060838855 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.860909202 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.868652554 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.085083686 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.884526633 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.524770229 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.863693377 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.151388736 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.840205235 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.309521787 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.860683429 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.305232863 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.069685614 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.882403929 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.862820674 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.667389492 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.859645612 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.922417354 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.019919087 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.518692192 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.860934229 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.210576069 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.862714404 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.059883244 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.860233494 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.861318056 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.214408883 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.903114428 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.862667358 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.883233621 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.859621852 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.860267456 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.220973523 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.887570937 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.579691831 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.998394949 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.262254918 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.167831977 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.255922313 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.906460111 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.885221169 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.299316533 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.926458615 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.060950359 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.859082154 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.883751928 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.235086563 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.863068682 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.266131702 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.279458784 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.914684893 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.04514963 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.864546172 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.198586612 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.855840695 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.067520628 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.086356594 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.862289434 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.857944223 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.044491466 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.049658758 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.052800018 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.878327566 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.896609342 seconds)
  done (took 962.214702554 seconds)
done (took 1285.564683593 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.860178703 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.868096238 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.853521727 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.867285796 seconds)
  done (took 29.25355652 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.854986361 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.851896089 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.855814215 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.853652174 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.855954709 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.853509456 seconds)
  done (took 12.929865222 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.916737996 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.849580988 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.850230783 seconds)
  done (took 21.401364514 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 2.007910517 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.796404504 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.114877433 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.352102562 seconds)
  done (took 12.057193768 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.855491679 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.860161929 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.857897623 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.856961575 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.856263245 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.8568916 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.854946816 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.855804492 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.85879903 seconds)
  done (took 18.498778433 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.766701584 seconds)
done (took 100.710035644 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.865312938 seconds)
    (2/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.879903627 seconds)
    (3/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.980778204 seconds)
    (4/309) benchmarking ("sort", Float64, false)...
    done (took 5.94377251 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.966324438 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.685675144 seconds)
    (7/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.876199744 seconds)
    (8/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.369552411 seconds)
    (9/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.47098382 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.07155704 seconds)
    (11/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.969363414 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.20939195 seconds)
    (13/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.305322392 seconds)
    (14/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.395402697 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.889442724 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.362385191 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.875349187 seconds)
    (18/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.96111486 seconds)
    (19/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.929608043 seconds)
    (20/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 4.16830286 seconds)
    (21/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.148157699 seconds)
    (22/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.883478132 seconds)
    (23/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.836882453 seconds)
    (24/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.896578216 seconds)
    (25/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.912590621 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.534092437 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.532504086 seconds)
    (28/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.856509626 seconds)
    (29/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.879247067 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.688410509 seconds)
    (31/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.24175196 seconds)
    (32/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.863075845 seconds)
    (33/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.973591471 seconds)
    (34/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.384173492 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.981340939 seconds)
    (36/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.851895598 seconds)
    (37/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.697535583 seconds)
    (38/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.472094626 seconds)
    (39/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.936420244 seconds)
    (40/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.12957254 seconds)
    (41/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.159189698 seconds)
    (42/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.856851051 seconds)
    (43/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.693539109 seconds)
    (44/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.790222864 seconds)
    (45/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.851806507 seconds)
    (46/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.48460512 seconds)
    (47/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.937896499 seconds)
    (48/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.888017466 seconds)
    (49/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.844139074 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.855248952 seconds)
    (51/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.881221387 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.159916533 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.670459814 seconds)
    (54/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.603867903 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.963866042 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.132287772 seconds)
    (57/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.722065299 seconds)
    (58/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.875153115 seconds)
    (59/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.461968701 seconds)
    (60/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.980068709 seconds)
    (61/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.138588879 seconds)
    (62/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.349580359 seconds)
    (63/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.90738104 seconds)
    (64/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.608139247 seconds)
    (65/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.98866664 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.963510441 seconds)
    (67/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.901691461 seconds)
    (68/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.934542739 seconds)
    (69/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.149099389 seconds)
    (70/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.85797096 seconds)
    (71/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.880076735 seconds)
    (72/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.877827733 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.129254656 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.64635601 seconds)
    (75/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.049081076 seconds)
    (76/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.268860035 seconds)
    (77/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.956544003 seconds)
    (78/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.879798631 seconds)
    (79/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.50937552 seconds)
    (80/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.879858261 seconds)
    (81/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.015180021 seconds)
    (82/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.868345848 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 5.857719827 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 3.069622956 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.899818349 seconds)
    (86/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.221009978 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 3.03320399 seconds)
    (88/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.854152018 seconds)
    (89/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.836571403 seconds)
    (90/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.939507598 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.875409946 seconds)
    (92/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.856076318 seconds)
    (93/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.877823258 seconds)
    (94/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.315395928 seconds)
    (95/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.224908382 seconds)
    (96/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.490879662 seconds)
    (97/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.870178399 seconds)
    (98/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.852650497 seconds)
    (99/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.958900323 seconds)
    (100/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.854509961 seconds)
    (101/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.864587646 seconds)
    (102/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.885532822 seconds)
    (103/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.355104115 seconds)
    (104/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.479450466 seconds)
    (105/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.009301421 seconds)
    (106/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.933535816 seconds)
    (107/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.17963111 seconds)
    (108/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.869516534 seconds)
    (109/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.095054877 seconds)
    (110/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.474605413 seconds)
    (111/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.224092915 seconds)
    (112/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.875470913 seconds)
    (113/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.780628225 seconds)
    (114/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.823489015 seconds)
    (115/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.84968568 seconds)
    (116/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.866442402 seconds)
    (117/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.881864428 seconds)
    (118/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.294989198 seconds)
    (119/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.84198255 seconds)
    (120/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.680341158 seconds)
    (121/309) benchmarking ("sort", Bool, false)...
    done (took 2.342420742 seconds)
    (122/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.875207238 seconds)
    (123/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.995092585 seconds)
    (124/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.155209342 seconds)
    (125/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.388145428 seconds)
    (126/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.958532053 seconds)
    (127/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.937377128 seconds)
    (128/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.859822868 seconds)
    (129/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.234487064 seconds)
    (130/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.789371983 seconds)
    (131/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.96064492 seconds)
    (132/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.018794555 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.372771979 seconds)
    (134/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.110889829 seconds)
    (135/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.488557838 seconds)
    (136/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.840588308 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.989498132 seconds)
    (138/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.701471157 seconds)
    (139/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.446170786 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.088227455 seconds)
    (141/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.864564743 seconds)
    (142/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.921219582 seconds)
    (143/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.95723189 seconds)
    (144/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.878021497 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.216415182 seconds)
    (146/309) benchmarking ("sort", BigInt, false)...
    done (took 6.860211157 seconds)
    (147/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.116637635 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.173447366 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.379379804 seconds)
    (150/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.880538949 seconds)
    (151/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.047224555 seconds)
    (152/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.884538961 seconds)
    (153/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.489376897 seconds)
    (154/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.37431862 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.927631943 seconds)
    (156/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.921399007 seconds)
    (157/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.577753224 seconds)
    (158/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.892481934 seconds)
    (159/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.136433874 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.481967109 seconds)
    (161/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.857839775 seconds)
    (162/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.273401411 seconds)
    (163/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.984272162 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.487582182 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.53289239 seconds)
    (166/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.12469454 seconds)
    (167/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.313633038 seconds)
    (168/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.859816677 seconds)
    (169/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.012197194 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.904660647 seconds)
    (171/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.024478713 seconds)
    (172/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.595943904 seconds)
    (173/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.245957975 seconds)
    (174/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.944023879 seconds)
    (175/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.885258851 seconds)
    (176/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.859357186 seconds)
    (177/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.949078752 seconds)
    (178/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.368809795 seconds)
    (179/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.860053993 seconds)
    (180/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.877906651 seconds)
    (181/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.943021313 seconds)
    (182/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.917515763 seconds)
    (183/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.710470014 seconds)
    (184/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.899893776 seconds)
    (185/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 4.340151303 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.543644073 seconds)
    (187/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.544765487 seconds)
    (188/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.860642327 seconds)
    (189/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.846611841 seconds)
    (190/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.857910885 seconds)
    (191/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.88475594 seconds)
    (192/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 4.101511437 seconds)
    (193/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.13059732 seconds)
    (194/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.621726774 seconds)
    (195/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.867806386 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.248066801 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.937325547 seconds)
    (198/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.919015986 seconds)
    (199/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.968429888 seconds)
    (200/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.068235205 seconds)
    (201/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.848621382 seconds)
    (202/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.980654257 seconds)
    (203/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.012955623 seconds)
    (204/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.857858749 seconds)
    (205/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.488163844 seconds)
    (206/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.964703647 seconds)
    (207/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.582605706 seconds)
    (208/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.156112677 seconds)
    (209/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.066720704 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.93725796 seconds)
    (211/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.429660677 seconds)
    (212/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.8577929 seconds)
    (213/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.025186197 seconds)
    (214/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.183600587 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.563088421 seconds)
    (216/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.404334262 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.095494267 seconds)
    (218/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.88284042 seconds)
    (219/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.95501817 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.640302535 seconds)
    (221/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.861823687 seconds)
    (222/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.27676714 seconds)
    (223/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.027651163 seconds)
    (224/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.903799527 seconds)
    (225/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.84145827 seconds)
    (226/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.845527609 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.131323636 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.233712599 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.864315218 seconds)
    (230/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.869399432 seconds)
    (231/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.210865331 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.557110404 seconds)
    (233/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.06697098 seconds)
    (234/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.738774333 seconds)
    (235/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.875852162 seconds)
    (236/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.885234071 seconds)
    (237/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.388620912 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.709932734 seconds)
    (239/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.926441925 seconds)
    (240/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.051766723 seconds)
    (241/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 7.035246724 seconds)
    (242/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.849706403 seconds)
    (243/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.078580087 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.854193092 seconds)
    (245/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.85157611 seconds)
    (246/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.915076469 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.552931895 seconds)
    (248/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.385668336 seconds)
    (249/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.063506048 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.913176968 seconds)
    (251/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.469828904 seconds)
    (252/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.029157463 seconds)
    (253/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.866343395 seconds)
    (254/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.892234524 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.887979668 seconds)
    (256/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.849057243 seconds)
    (257/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.884416603 seconds)
    (258/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.407472847 seconds)
    (259/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.838628015 seconds)
    (260/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.888617145 seconds)
    (261/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.971214241 seconds)
    (262/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.242754879 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 3.095194045 seconds)
    (264/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.71661737 seconds)
    (265/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.135226786 seconds)
    (266/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.932499776 seconds)
    (267/309) benchmarking ("sort", Int8, false)...
    done (took 4.951713289 seconds)
    (268/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.625495366 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.311805501 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.980511422 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.038301242 seconds)
    (272/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.255167369 seconds)
    (273/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.22752472 seconds)
    (274/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.973022681 seconds)
    (275/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.852464283 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.210695205 seconds)
    (277/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.869314177 seconds)
    (278/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.850770925 seconds)
    (279/309) benchmarking ("sort", Float32, false)...
    done (took 5.755802458 seconds)
    (280/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.84879729 seconds)
    (281/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.905805566 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.630214509 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.945132852 seconds)
    (284/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.864996359 seconds)
    (285/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 3.006508357 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.970531756 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.85109877 seconds)
    (288/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.902474663 seconds)
    (289/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.774032441 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.980666789 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.083877171 seconds)
    (292/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.866232006 seconds)
    (293/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.883512718 seconds)
    (294/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.853297604 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.910364679 seconds)
    (296/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.888105757 seconds)
    (297/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.971553763 seconds)
    (298/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.128368866 seconds)
    (299/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.728098788 seconds)
    (300/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.522052021 seconds)
    (301/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.867666062 seconds)
    (302/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.088023338 seconds)
    (303/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.126526994 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.897780629 seconds)
    (305/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.880786066 seconds)
    (306/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.933224537 seconds)
    (307/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.878551283 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.376889701 seconds)
    (309/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.879365019 seconds)
  done (took 1049.279795952 seconds)
done (took 1051.069268546 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.900027346 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.896118576 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.878373865 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.90116635 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.992035287 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.909641466 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.888586796 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.880357603 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.926298182 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.928149565 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.87958492 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.905839868 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.879349637 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.878046245 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.876319086 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.892851479 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.591276048 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.877355832 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.894714912 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.88760015 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.89552428 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.877133462 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.926162896 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.904882629 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.880455399 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.88097566 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.880408682 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.896097809 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.98800929 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.879255566 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.880708334 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.887727835 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.590263209 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.875075958 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.87136901 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.898564499 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.887287591 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.885139627 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.881563142 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.908787335 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.851265257 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.876974325 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.878811386 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.877726215 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.875666403 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.879657299 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.879180985 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.880350143 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.889156404 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.889993526 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.845437436 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.891926253 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.879776581 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.875887977 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.886913116 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.87637898 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.879835269 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.891851363 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.895831485 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.890271645 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.579104181 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.881278833 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.876931003 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.892213548 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.88336074 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.882184115 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.870257825 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.877903618 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.847600309 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.879982419 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.882936544 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.883307715 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.876216114 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.890329237 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.908151151 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.589851566 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.869593167 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.873480351 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.883384514 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.873371277 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.886496262 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.887982719 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.880538321 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.875584162 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.888799325 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.906456108 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.885931632 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.8769861 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.884513023 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.894451438 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.88550699 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.886230797 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.878114622 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.870669346 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.885563735 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.879214933 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.880059104 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.877630254 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.879096503 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.884384946 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.844125701 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.893352095 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.870594886 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.870709542 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.874407141 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.888540579 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.846981003 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.875770207 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.89550874 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.922083073 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.876998981 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.58027149 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.877849909 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.889404009 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.883039485 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.878286209 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.871884429 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.57895389 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.845032341 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.888919691 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.877824695 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.872686151 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.891650193 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.875909834 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.871437896 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.592509671 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.876553369 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.889085893 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.99633282 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.885042253 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.910006855 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.873326217 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.879588093 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.904702093 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.890553006 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.906559947 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.880144142 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.891810728 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.891813451 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.87296397 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.886752944 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.88771074 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.876938874 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.880967469 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.87032019 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.90999209 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.891899799 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.88905266 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.895719762 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.997141775 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.873180544 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.585664079 seconds)
done (took 302.255348678 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.933558786 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.872989445 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.967542625 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.869714908 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.953388698 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.971889748 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.867501791 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.868231167 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.867287295 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.249979683 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.867905044 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.868426234 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.867898085 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.867679265 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.952026896 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.870799677 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.868348696 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.212057348 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.872341481 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.941138501 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.862620252 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.867491971 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.871723449 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.251114702 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.864179021 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.870478622 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.941255553 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.871115774 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.215414644 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.870299538 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.864413911 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.218421084 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.959504448 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.899429045 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.881385647 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.869370095 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.957673518 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.89967663 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.951575881 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.950740947 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.966533985 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.904530973 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.869860548 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.864363065 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.872411926 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.873572235 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.867588678 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.899338608 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.869278807 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.870445571 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.214210498 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.880753554 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.870388593 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.869070298 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.870313545 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.902272748 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.869727634 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.872863744 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.96063362 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.875174405 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.933862282 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.252385192 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.250890577 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.872163061 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.868107099 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.869835702 seconds)
  done (took 184.4453474 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.940896625 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.945426778 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.956258158 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.873854167 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.922480473 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.962281479 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.870746723 seconds)
  done (took 15.277314675 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.875900297 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.870784212 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.920283935 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.922900144 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.870063404 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.018686609 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.869660662 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.881794174 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.869122639 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.92177902 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.869223399 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.869359307 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.877051923 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.868166021 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.916228581 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.879980385 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.985239311 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.868194249 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.868640216 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.023970126 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.865898497 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.878002822 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.91828424 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.877412826 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.868504311 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.872629034 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.453113822 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.867968806 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.865228531 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.867608907 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.864562959 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.907001246 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.867293171 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.865116642 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.866311812 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.981085306 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.865829694 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.862614344 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.864958632 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.862927696 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.863138501 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.863763207 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.866148519 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.860852526 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.863353932 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.887564927 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.863364216 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.865176068 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.863131615 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.86361227 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.913382219 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.863466583 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.862283514 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.862979074 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.919534093 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.870770927 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.864920507 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.861945714 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.864943821 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.860596007 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.019358125 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.912547345 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.863790294 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.914297971 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.863009231 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.863374286 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.863701859 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.863445741 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.917822275 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.864851607 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.91268187 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.861215058 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.023420701 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.886570349 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.868089558 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.866186362 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.865893491 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.864888178 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.863801719 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.870051707 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.860213477 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.865126675 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.87015535 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.86141399 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.861774615 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.970779611 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.973142904 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.862742197 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.877226107 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.871230585 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.861433319 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.916908978 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.864107867 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.864281875 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.916867076 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.978428615 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.917677994 seconds)
  done (took 205.423574736 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.870552839 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.870435525 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.863539617 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.879555577 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 2.298030692 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.863364537 seconds)
  done (took 13.442965886 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.865845685 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.863264557 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.86325184 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.863813683 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.863749156 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.864585879 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.864591362 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.865012074 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.867300729 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.865189495 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.860922548 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.862053457 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.861724472 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.861501029 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.861615834 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.859741333 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.861420521 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.857417427 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.860891702 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.860962756 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.005030641 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.861274186 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.860771102 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.862008275 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.864387194 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.860258983 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.868400877 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.860494282 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.860284791 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.869034087 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.864233167 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.862784354 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.861384355 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.867573608 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.866152033 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.861831218 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.867331166 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.861970965 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.859337181 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.862892568 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.862440151 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.863716369 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.861869721 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.862742596 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.863646368 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.866531899 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.866974464 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.868980233 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.861485631 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.862552893 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.862751251 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.861360179 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.862846156 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.861893985 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.863999232 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.866307782 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.866050434 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.862925612 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.862974181 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.862375887 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.862767096 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.862512612 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.863145744 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.867289266 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.869049484 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.861926784 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.863111056 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.867891327 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.863607086 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.862925847 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.862771581 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.858951476 seconds)
  done (took 137.10206847 seconds)
done (took 557.495025551 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.933789574 seconds)
  done (took 8.72943187 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.030266323 seconds)
  done (took 8.827185762 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.185460105 seconds)
  done (took 16.982426471 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.887864638 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.90783723 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.887455917 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.85280334 seconds)
  done (took 29.331699863 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.242419594 seconds)
  done (took 9.03735399 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.852979905 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.885896069 seconds)
  done (took 15.534712058 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.42283942 seconds)
  done (took 9.217316071 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.885582122 seconds)
  done (took 8.6786367 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.857604837 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.879424995 seconds)
  done (took 15.536123103 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.840423177 seconds)
  done (took 8.63514128 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 11.666309886 seconds)
  done (took 13.462623084 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.862491619 seconds)
  done (took 8.659905017 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.890686525 seconds)
  done (took 8.687914931 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.114226293 seconds)
  done (took 10.910059044 seconds)
done (took 174.027219649 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.85526499 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.860252347 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.859511903 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.859807583 seconds)
  done (took 29.229985151 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.896562251 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.896306105 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.896707659 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.907113229 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.899973493 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.89732966 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.889335479 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.889864737 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.907177861 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.899517595 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.897123264 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.898157319 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.899461573 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.889050756 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.899436715 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.914583168 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.908011912 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.90823453 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.888582471 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.899441855 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.863324814 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.907605158 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.901137123 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.863416598 seconds)
  done (took 47.314672875 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.059923706 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.935649847 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.017056275 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.916408235 seconds)
  done (took 9.727157662 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.914327017 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.916997493 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.928593171 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.966339471 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.993058348 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.92474337 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.890180142 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.885667689 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.871437286 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.916217457 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.992563164 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.932499911 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.999877359 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.864111708 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.060606873 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.863698577 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.864415068 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.9182386 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.966433046 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.980923986 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.864035684 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.915979755 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.919711016 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.934247745 seconds)
  done (took 48.083767325 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.863760046 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.871339595 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.868568084 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.864387548 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.864520905 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.864093426 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.870413399 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.864809375 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.886709147 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.866493091 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.863852519 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.864936371 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.864266835 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.863771022 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.863166405 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.877014847 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.878907626 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.865231785 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.868468909 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.870881475 seconds)
  done (took 39.165378246 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.859547168 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.712381323 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.210213365 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.113991553 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.859301699 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.862212065 seconds)
  done (took 31.417564204 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.913635383 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.993686394 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.867164994 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.090519862 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.169205339 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.870905168 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.866444666 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 2.020230964 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.228251063 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.213492043 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.920893777 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.905750498 seconds)
  done (took 25.860922779 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.867389567 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.864171485 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.875732434 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.8788285 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.894135963 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.872673708 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.873208152 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.860219813 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.897854793 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.899801257 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.871199764 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.896427603 seconds)
  done (took 44.352396705 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948111419 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.910771139 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.327699303 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.656531757 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.236350729 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.072985611 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.670192893 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.256409407 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.864254827 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.134697144 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.519055375 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958004898 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.115914966 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.866512165 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.865790125 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.581698759 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.0940985 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.224939219 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.862690175 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.956608597 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89373583 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.880596527 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.039151747 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.880733401 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.074111271 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.991317117 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.12417228 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.863817875 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.084719928 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.878672158 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873368233 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.863662361 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.137094294 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.367617258 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.954870026 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872646072 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.562612226 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.572034714 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.86594733 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.039339778 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.302256737 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.869708871 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872830098 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.861649943 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.797382535 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.867886772 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.267681484 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.868060477 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.57443273 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.863190497 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.873420417 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957465695 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.866312611 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.679910709 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.8945499 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.864918013 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.859110185 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868493647 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.437127027 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.429071339 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.874240294 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.800212114 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.953223146 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.041735362 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.403480523 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.973643389 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.87425409 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.868117353 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.799961868 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.020802948 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.888252293 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.192483513 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.885782805 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.51493201 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.454296168 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.536040092 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.802104661 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.286031869 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.866454542 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.802882399 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.093132969 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.864288894 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.799646327 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.810604618 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.798285044 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.359428781 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872260594 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.925007582 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.874829371 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.259585324 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.875986863 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883790201 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888392992 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.088741981 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.752956154 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.86407841 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.295756614 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.027720952 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885652834 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.261593602 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.799233759 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.868140442 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.122264516 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.076686191 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.866005871 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.593135236 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.019686642 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.876035112 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.884257618 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.879333088 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.879343184 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.350832178 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.874878198 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.429678232 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.8892963 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.865776459 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.395812859 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.874233564 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.969076659 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.552965285 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.053737915 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.409966162 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.86607967 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948874494 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.875224931 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.866678286 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.060182458 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.388662662 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.866549626 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.869550837 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.871346008 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.880761864 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.867918749 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.820335673 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.865147993 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.556355534 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.87520145 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.091317513 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.884628515 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.145652753 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.79994652 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.196225877 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.956681514 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.090879219 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.876020615 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.873689908 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.125455266 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.870657655 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.872031722 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.878019307 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88161575 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960610807 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884627422 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.874429128 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.122025204 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.865492383 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.867134812 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.06790686 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.872030189 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.873337861 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.869226096 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.698611049 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35279278 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.838386146 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.868842908 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.756941734 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.876248306 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.927965218 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.869963881 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.873741663 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.159974988 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.770780778 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.868153999 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.863153434 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.089592225 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.875607485 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.049833327 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.951489666 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.012114511 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.356986311 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.87541242 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.799127297 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.575738508 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.557832184 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.864496333 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.799993315 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.864944974 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874460563 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.875410283 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.161871805 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.35273422 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.865952039 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.977089712 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.876855724 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.874674864 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.869974178 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.864278146 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.128572383 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.440286717 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.887187101 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.878493444 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008696023 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.877973303 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.799339894 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.868987669 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.871021047 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.86543855 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.865909335 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899075619 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.977960295 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.280439985 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.124912666 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.55920533 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.875517472 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.055484331 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.886661158 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.865341559 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.310638488 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.887701055 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.86762876 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897792277 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.875255765 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.02720486 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.529858059 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.435216504 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.470864516 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.300190465 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.571586907 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.880738882 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.867454767 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.269353746 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.799533044 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.42166761 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.990367187 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.270103394 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.810273699 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.015112958 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.861004943 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.419116748 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.879021084 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.094444305 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.56785197 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.317529305 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.882982572 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.077042406 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900597076 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.878246104 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.797625079 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.170014312 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.07448716 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.34001551 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.950161749 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.265614 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.323836623 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.874413245 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.86497487 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.875191268 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.974545214 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.574986098 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.037004559 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.866601994 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.569669095 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.280600951 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.87258278 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.091065494 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.395902714 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.870274929 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.019091397 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.802264144 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.87870086 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.877614799 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.867939325 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.624103516 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 5.517495594 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.119994101 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.878386361 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.801157218 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.867352808 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.311871773 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.723616219 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.872734112 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.867746403 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.394368329 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.87229978 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.096612053 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.873266964 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.113334471 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.873243741 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.802546713 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.801778954 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.560773702 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.873557323 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.845017376 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.229556268 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.939154256 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.86802244 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.868492932 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.927796139 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.123013871 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.882121172 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.356543093 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.094846384 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.650123715 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89026759 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.968190717 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.345146099 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.860826006 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.868529567 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.104230472 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.706653872 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.092326303 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.353970264 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.781455756 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.868835624 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.081573859 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.868997919 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.572388441 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.056664091 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.580085997 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.881934441 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.466749821 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893370468 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.571299358 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.79040084 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.958641443 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.878062371 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94909129 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.88105058 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.880471593 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.880495993 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.978123907 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.569546224 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.877038516 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.884089415 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963391387 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.451780311 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.120345724 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.874123279 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36472454 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479426186 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.36477434 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.881912278 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.870534882 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.873360053 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.805007932 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019500954 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.095947178 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.142430174 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.001373974 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.072689373 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89162252 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.349839572 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.88852429 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.08491205 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.144484691 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.763942111 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.869982414 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.887257715 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.869515501 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.880280784 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.082122541 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.236075349 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.296974751 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.038058495 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.878905192 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.274224727 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.145994893 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.871931096 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.871693397 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.464445492 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.89538582 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.887421601 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.876212754 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.600116495 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.025433675 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.881378116 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.384882256 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.88346269 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.031307805 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.644759618 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.075559428 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.133502766 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.124872179 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.885629033 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.362439689 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.468555842 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.133713698 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939307894 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.883983445 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.980504001 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.020305919 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 5.539142201 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.873175553 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.873502671 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.110528623 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.581787475 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.88372583 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365539186 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.134499043 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.869327798 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 5.544327532 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895824134 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.884013872 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.096781447 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.372099378 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.097794961 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.882719095 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.878208759 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.690117418 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366019057 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.883950828 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.807150037 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.876521851 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.051781308 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.10981433 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.893647933 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.32707545 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.584000639 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.301041766 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.848103773 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895274869 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.879513855 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.478226632 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36348229 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.120163077 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.236468857 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.438505085 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.883256984 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.153550054 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.879059036 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.874748782 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.153264995 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.876675516 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.881068716 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.888961502 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.367242836 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.432145597 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.887152118 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.018782965 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.82021962 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.221360157 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.513213098 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.809579038 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.883732735 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.001687595 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.876175518 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.003697603 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.885907908 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 5.552560006 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.87960206 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.613192417 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.158369661 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.87942502 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.864962451 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.374486557 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.889705525 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886783935 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.085244244 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.876359154 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.551743592 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.227362403 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.133881357 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.87626034 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.863881271 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.879935823 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.877067523 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.863169221 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.070911147 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.171309998 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.309356015 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.877416206 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.891480113 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.880658778 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.095341237 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.088830859 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.596442526 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.894943514 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.880906076 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.895571033 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.78218537 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.384613063 seconds)
  done (took 1790.433843934 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.91543221 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.876826401 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.881021905 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.913869015 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.896494903 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.98176743 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.934035564 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.902973548 seconds)
  done (took 57.12008316 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.892443859 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.091370006 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.911250803 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.884676942 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.887788456 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.882475872 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.205763547 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.891945969 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.887141298 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.887416752 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.88423236 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.89226108 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.366877951 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.88696069 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.880676399 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.86641131 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.885752552 seconds)
  done (took 74.902510428 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.894838569 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.938522623 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.884220577 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.878521778 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 9.205176759 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.884327732 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.487268094 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.932320128 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.879433799 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.938016784 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.532095652 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.895036926 seconds)
  done (took 90.169161967 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.886024179 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.884957952 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.885391595 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.885590538 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.885747989 seconds)
  done (took 11.245455806 seconds)
done (took 2300.821975296 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.134128194 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.358743807 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.29759508 seconds)
  done (took 6.474125403 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.026602639 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.07575579 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.194148837 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.200923126 seconds)
  done (took 10.315925511 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.165902543 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.249764221 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.084014203 seconds)
  done (took 8.317862407 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.86446253 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.880121079 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.95355815 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.879115656 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.882948957 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.880679401 seconds)
  done (took 22.462498178 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.884089791 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.885398629 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.882723538 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.886325693 seconds)
  done (took 9.35709242 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.864133081 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.697446835 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.865731849 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.881261708 seconds)
  done (took 21.128023956 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.6316101 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.643125874 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.628201573 seconds)
  done (took 9.720924877 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.749494268 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.744135265 seconds)
  done (took 11.313977562 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.153307071 seconds)
  done (took 3.972359108 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.015165418 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.146236341 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.768712214 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.607582811 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.789344872 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.447129031 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.980521418 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.68789546 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.595313381 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.301026265 seconds)
  done (took 30.157557254 seconds)
done (took 148.869875148 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.677903596 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.140820694 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.082353728 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.645672446 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.121292099 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.079028703 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.101105907 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.622467168 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.174955646 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.172261944 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.673551181 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.124503383 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.052013298 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.126263004 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.051004338 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.118167277 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.110572511 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.710995559 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.365324438 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.565923446 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.124843827 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.287625533 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.506329901 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.323452034 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.135617145 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.031066873 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 4.866477393 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.139777892 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.505682401 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 4.900324384 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.053951923 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.716229757 seconds)
  done (took 196.127766538 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.881007821 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.881431616 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.879826752 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.882062528 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.791981053 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.902967823 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.883349249 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.881201455 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.569345686 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.579900081 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.917221116 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.74680485 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.904417633 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.880576285 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.88138897 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.881278508 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.661175159 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.903538417 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.881314575 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.881472868 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.881372752 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.640438238 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.910976911 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.664290081 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.657810166 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.9188261 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.88003732 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.880544426 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.898186324 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.879840323 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.90045948 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.879640107 seconds)
  done (took 220.486320482 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.881648436 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.880276794 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.881763633 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.881753883 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.901446715 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.881206916 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.883225329 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.88682714 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.881058059 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.882314711 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.879894694 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.879459331 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.882044354 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.88144838 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.883629801 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.880898736 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.90161268 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.895736951 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.882589793 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.889391702 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.882963338 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.887973255 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.882018459 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.914951474 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.882206949 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.900264583 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.881725065 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.893174635 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.883622854 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.883396373 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.882206598 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.897797986 seconds)
  done (took 222.192101788 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.07876885 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.89153479 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.890296506 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.826721501 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.889747249 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.889479419 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.886304897 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.087051889 seconds)
  done (took 19.262400813 seconds)
done (took 659.887708479 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.791036713 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.532323612 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.064587072 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.90857119 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.451693634 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.91590984 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.908764104 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.026330417 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 3.259901471 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.016208013 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.923067027 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.908257466 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 3.045536133 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.907995821 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.107514123 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.979714024 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.623371912 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.720047207 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.158630414 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.217787527 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.112088247 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.200797562 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.027650939 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 3.301797089 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 3.048798903 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.240513896 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.408701395 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.621996269 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.909314517 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.160162761 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.094384961 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.603447232 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.924796547 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.924062766 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.977315477 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.963121835 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.63428599 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.923416784 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.067657472 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.994856875 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.246377137 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 3.097276867 seconds)
  done (took 111.775214004 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.88040202 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.880361388 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.879112465 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.88198727 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.882179346 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.880535067 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.881081946 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.879233221 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.88175878 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.880268744 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.87958202 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.883245882 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.881550617 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.88265286 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.879686024 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.879536892 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.881397818 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.882516446 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.879764869 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.880105773 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.881676947 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.881311042 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.882515521 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.880396116 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.881412024 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.882885718 seconds)
  done (took 50.733747486 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.895098695 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.090175146 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.209677172 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.900429111 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.89266305 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.896697368 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.947753569 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.897197044 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.896267964 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.895733901 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.02244225 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.899969684 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.913652706 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.218480706 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.896526302 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.894578568 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.893692041 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.893210569 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.096364116 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.901794483 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.949291713 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.896675286 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.948613444 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.90546816 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.896244139 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.894833417 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.898216264 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.409066176 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.897782913 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.022080963 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.415181361 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.948316636 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.359276205 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.227171374 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.412949908 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.899323274 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.896138174 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.025501075 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.8999503 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.896818955 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.948817002 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.897336869 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.219392944 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.443285811 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.914719302 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.895795243 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.414737614 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.028508174 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.05945363 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.903806417 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.226520405 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.899475081 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.898937854 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.89739947 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.055550294 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.900907125 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.895241887 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.276587729 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.899582479 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.949443783 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.896322269 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.896066462 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.103795967 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.897188858 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.092700595 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.898699298 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.905578308 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.89842387 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.219472416 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.899525359 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.458376798 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.914937543 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.897870785 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.022279198 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.096634808 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.449142114 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.902509936 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.106505966 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.368874202 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.950571616 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.90034213 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.395289468 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.956155747 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.900762768 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.898950947 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.898947764 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.899349701 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.94172323 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.947508224 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.401816722 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.451953817 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.294706165 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.951184115 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.910582029 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.899498103 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.277558826 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.899673186 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.897883992 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.216773288 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.462649992 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.918351805 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.905502933 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.444509568 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.917895144 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.952683382 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.904653291 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.225821309 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.900387457 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.942963073 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.899212848 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.904958436 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.902116561 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.95258459 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.903187453 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.89923818 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.435251639 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.050386326 seconds)
  done (took 238.646115069 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.894870108 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.893055311 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.891963752 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.894768627 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.892272442 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.897905737 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.892991464 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.892825655 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.900554951 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.89301901 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.8930854 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.8993804 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.89555603 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.893030523 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.90183596 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.901195605 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.508604577 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.893589239 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.894731725 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.893886957 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.630113081 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.893840782 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.904237055 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.892817116 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.898739513 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.892729662 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.894598438 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.893726182 seconds)
  done (took 168.253097663 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.900908449 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.277974007 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.903438795 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.979241417 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.925691385 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.897395344 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.978851674 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.931492934 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.902802495 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.899388779 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.899835119 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.103798081 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.902382647 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.239315869 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.013743778 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.979432469 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.240668713 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.903888874 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.899125803 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.899095887 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.982374567 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.912317623 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.102882422 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.279478986 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.901138983 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.2801417 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.890645268 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.902667636 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.901571623 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.281644048 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.900416385 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.103055615 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.95440125 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.934495782 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.284192632 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.241598794 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.242936577 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.980589193 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.902999468 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.900496354 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.899475305 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.891970251 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.281775749 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.904174302 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.903806568 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.273321534 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.904196588 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.903916658 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.912683649 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.902905512 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.934423967 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.936999543 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.108192255 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.286821101 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.954060235 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.923314632 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.981351423 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.238011404 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.905581755 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.243812443 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.890780774 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.284165441 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.907568682 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.89132275 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.901950832 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.905943681 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.003012724 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.982910635 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.245795154 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.904687759 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.244386191 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.002382573 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.902153272 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.903619558 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.905530153 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.283385471 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.245734055 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.002230849 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.985086195 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.040575728 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.892945556 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.904285198 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.894438465 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.956153585 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.903390022 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.283383576 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.246623599 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.906604305 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.905928165 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.905341828 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.905923255 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.019024768 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.28472145 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.956418313 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.238967662 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.107974762 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.109692275 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.906311832 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.935495773 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.90546513 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.109937076 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.907496972 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.934345635 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.283486584 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.106686357 seconds)
  done (took 213.632568136 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 2.080195741 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.730315915 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.965633666 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.993143233 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.336932521 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.406926728 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.852442747 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.952094464 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.970676372 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.994550724 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.375673266 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.996742046 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.039729256 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.952685546 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.481724092 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.942963657 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.96861935 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.990778635 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.988320585 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.755156919 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.393007318 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.135359218 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.000896596 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.469132872 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.934652259 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.478550844 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.562767044 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.369131555 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 2.033605594 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.694956496 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.338551997 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.844768504 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.413497298 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.372213842 seconds)
  done (took 79.657378811 seconds)
done (took 864.520928911 seconds)
SAVING RESULT...
DONE!
