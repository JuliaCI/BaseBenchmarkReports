cset: moving following pidspec: 22136
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.347912627 seconds)
loading group "string"... done (took 0.53920182 seconds)
loading group "linalg"... done (took 7.061478733 seconds)
loading group "parallel"... done (took 0.153824967 seconds)
loading group "find"... done (took 1.079627141 seconds)
loading group "tuple"... done (took 1.700759805 seconds)
loading group "dates"... done (took 1.168966113 seconds)
loading group "micro"... done (took 0.211887526 seconds)
loading group "io"... done (took 0.9855567 seconds)
loading group "scalar"... done (took 36.238798561 seconds)
loading group "sparse"... done (took 11.133798644 seconds)
loading group "broadcast"... done (took 0.903540358 seconds)
loading group "union"... done (took 11.849557042 seconds)
loading group "simd"... done (took 4.125706125 seconds)
loading group "random"... done (took 8.488203336 seconds)
loading group "problem"... done (took 1.861263673 seconds)
loading group "array"... done (took 19.748094884 seconds)
loading group "misc"... done (took 1.627445104 seconds)
loading group "sort"... done (took 3.130742009 seconds)
loading group "collection"... done (took 16.361681125 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.495812383 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123480123 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.114469922 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119163471 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.145916001 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.114719093 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.124266034 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083940131 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.787382104 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.148486836 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.119920827 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.417618119 seconds)
done (took 5.120870433 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.177455042 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086098415 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081243696 seconds)
  done (took 1.304586774 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066395097 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.124260182 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066228942 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066511781 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066827188 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066159629 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066139099 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065620619 seconds)
  done (took 1.661653642 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.07596224 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070941379 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.069461149 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068760104 seconds)
  done (took 1.424868846 seconds)
done (took 5.785415832 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.772742714 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.202161329 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.183054349 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.398041404 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.129310092 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.154664527 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.628988107 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.325803443 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.183596341 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081927219 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104736561 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.317818766 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107216131 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.649490455 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074831055 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090895347 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.139256348 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.402713232 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067411627 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082159324 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088492312 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128834905 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.085763649 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074580147 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.144257297 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067785174 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.130727121 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080857049 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066874312 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.208262769 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172545012 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.654101366 seconds)
  done (took 10.179679686 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.098829583 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.098965327 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068376541 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136522939 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.096241891 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069550711 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071123574 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067091584 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086672346 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128387188 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.08895551 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101184694 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.06548429 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068757169 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084835466 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.205176978 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081971505 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081248381 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070465401 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075411735 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.118991133 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078366522 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.078508336 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077454222 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128273751 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.180902555 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099006789 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097895468 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067179228 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080561267 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115139388 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.128605245 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065714726 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.06607318 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124166687 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094595752 seconds)
  done (took 4.625043061 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.288474975 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.140088567 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090904128 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.131689251 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.109922213 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064079381 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.106872067 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065239651 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.08036642 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.200095256 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.292446872 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.590395772 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111501652 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103588477 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067830975 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068653237 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066779363 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.348304909 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.106980442 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102714708 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081009468 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069114542 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.06841259 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.340709259 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06754127 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063516298 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067939223 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057818284 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.123028303 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067743478 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.918033595 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.123923933 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06612432 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100327708 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.16128282 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089607423 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.271058917 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068382613 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.063895501 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.148994554 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.069979426 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064377675 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066052535 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.082687675 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103962636 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.114098597 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066359657 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066507721 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.160858831 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.06498973 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.078866735 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.97939153 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153726795 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.075942522 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064187657 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.243984361 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085979086 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069747228 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065090953 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.175105968 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.133493382 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067228048 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066502418 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067710539 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068835471 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.348918131 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066399371 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.728601572 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070681295 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076689121 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068631853 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069414829 seconds)
    (72/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.063770228 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075004292 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07228521 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.08495447 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.06619385 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075063633 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065899035 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065653891 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066647508 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084241939 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.359562531 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066346689 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068083218 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064548596 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.086307965 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100745746 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066250884 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064741904 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099935424 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.169586037 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066862498 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.106297876 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066878005 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.08445607 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069499689 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113320596 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066490096 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.078763413 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067314845 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.066062487 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096090743 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070972511 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098377034 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.082474016 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06793029 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.395394498 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.06506509 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064871069 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068404468 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065613739 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067544683 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066073457 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079281196 seconds)
  done (took 20.808388188 seconds)
done (took 38.040503168 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.269447914 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.075513156 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075345608 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075183024 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075294955 seconds)
  done (took 1.803582778 seconds)
done (took 3.017372592 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.11931568 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098554617 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064868292 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095313304 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064058919 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099387469 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098259641 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080284381 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.09869626 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063911485 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095162173 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064140867 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063703821 seconds)
  done (took 2.338766257 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084046983 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083183691 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069545853 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082847659 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06337651 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081952239 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08055584 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087980557 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08038874 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071598651 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063414814 seconds)
  done (took 2.054943025 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084344795 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083077045 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069658046 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081335216 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066045419 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081324726 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08060734 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084809239 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080728504 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072849772 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063574363 seconds)
  done (took 2.049246496 seconds)
done (took 7.643728661 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079425014 seconds)
  done (took 1.269595968 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.587117543 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.087103944 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080969442 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111538182 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.18338109 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.119580071 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.278407087 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086194943 seconds)
  done (took 8.909732368 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.087727726 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.0822587 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071467214 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072460963 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071470946 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072054428 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069370265 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071638763 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070366002 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.06900367 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068423807 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069227677 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068545508 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068704464 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069343852 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070559954 seconds)
  done (took 2.419357791 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092568051 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.09138067 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.07319616 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074785086 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071781655 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071887812 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074415049 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073198579 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070304891 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071892167 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074533258 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.0734729 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071325729 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064682382 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073741256 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075565784 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070727355 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074278307 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074889678 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074453869 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074144588 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06419048 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071178092 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073761935 seconds)
  done (took 3.076979699 seconds)
done (took 16.875497647 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.116477689 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071809417 seconds)
  done (took 1.385229794 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084571172 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.085725892 seconds)
  done (took 1.371889975 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.08532226 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.066117729 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092133252 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078872368 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.06601433 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065848848 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.090021857 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066003186 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065606887 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065973238 seconds)
  done (took 1.944660708 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.071039716 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.07869599 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071110719 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.082016931 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074395579 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064419157 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072605537 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067701391 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078471638 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062828631 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071871394 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082610388 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071625551 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084248707 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072814281 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068793216 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071390046 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.06740342 seconds)
  done (took 2.522421846 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067285714 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068548943 seconds)
  done (took 1.346258785 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.070132143 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064744394 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066816615 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066998775 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063501885 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062898035 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063764805 seconds)
  done (took 1.664954703 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.393563741 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109824125 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.297575698 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070069131 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081060057 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.247675989 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064962399 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069883944 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069778599 seconds)
  done (took 2.652615498 seconds)
done (took 14.100389294 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080720666 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086653158 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.095955779 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.361734191 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091305561 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065402862 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113537251 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.190463726 seconds)
done (took 2.310315589 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.231424725 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.614505946 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.38551171 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.196660497 seconds)
  done (took 2.410989631 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.329621698 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.086455696 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059526094 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066254883 seconds)
  done (took 1.769639491 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065496646 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068165801 seconds)
  done (took 1.353032236 seconds)
done (took 6.986171247 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066523777 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065777352 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.082133321 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063507313 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.063833281 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065466473 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.063127457 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064035788 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065515881 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065966563 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.068230688 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.065467653 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065756586 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063103074 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063506764 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065341056 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063087529 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065692197 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065474652 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065548578 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063463263 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065782069 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063170119 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063220429 seconds)
  done (took 2.826842539 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.083327412 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065943795 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071038636 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071496028 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069956852 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070693695 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070631614 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065693069 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070946004 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068021713 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069547923 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069754996 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067602152 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070206385 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067909636 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.06979665 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071135242 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066085385 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068000611 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.070373417 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070873567 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066208924 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069552819 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070659527 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.06913175 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069955281 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067898649 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066247053 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071293478 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069717735 seconds)
  done (took 3.318203691 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069316355 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063606277 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063929904 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070486463 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.06358785 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064744996 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063171841 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.064303579 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064154341 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062975824 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064990884 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062957362 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.06316819 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064030798 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064218799 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.06671893 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078432058 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063706198 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063258499 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064196974 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066329189 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063510877 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.06331972 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063286054 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.173754753 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063193071 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063484114 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063217057 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064014821 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063238334 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066116449 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066588593 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062830757 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069740451 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066435493 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.0629735 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067162364 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062676692 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.06368265 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.06320167 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063205876 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062879439 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063387075 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069875972 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063173317 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.06458528 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063284485 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064257221 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.064152498 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065879112 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.063103176 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063200725 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065461318 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064349245 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067195324 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.06290193 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064047809 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062553595 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.0638612 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063221875 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062808177 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062701111 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065423717 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063881115 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077767483 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069848711 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063689997 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.06528801 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064454538 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065383119 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064941898 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076036865 seconds)
  done (took 6.02226741 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091606101 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087068823 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065426477 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064924366 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061962185 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064329536 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067343371 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064133505 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065540115 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069902889 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063986066 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065231487 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065654205 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076544394 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064139021 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.0651463 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069472572 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061840704 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063931956 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067705218 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064215366 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067348711 seconds)
  done (took 2.738745685 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.15448649 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07091925 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.106210577 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073070667 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067402728 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072861382 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070013959 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069833634 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070024809 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068135472 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067987539 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069905646 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067233137 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067751418 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067972389 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068145038 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069928472 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068009762 seconds)
  done (took 2.601916595 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077028671 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065633333 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085333925 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06596394 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065888306 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067893325 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070847482 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074060172 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067795684 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065700255 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073848436 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068096427 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068272232 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065646379 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068097772 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065697566 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068156317 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065898001 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073883897 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.0704421 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070422424 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074039881 seconds)
  done (took 2.771327357 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079675233 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067639213 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082430669 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06849291 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061730094 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064576174 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.070213317 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065840553 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069566913 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067374239 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065562674 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064317706 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.06904183 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065894326 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069199243 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065758793 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067361018 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065940841 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067371669 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061682492 seconds)
  done (took 2.596816234 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087283515 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067766172 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067680216 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076141034 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067160149 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067653626 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074961096 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067160457 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067354084 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.089543835 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067315242 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067285567 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075057402 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07200268 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.06759234 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075340664 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074711212 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075188792 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066993178 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067313008 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087197954 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.06721332 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074966508 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066888785 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067478202 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066751401 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067135741 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072022482 seconds)
  done (took 3.247983408 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065986348 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066036032 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063491862 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062966816 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064039426 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063344245 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063446531 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06355565 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066129544 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063440486 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065675476 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.066049087 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065765815 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065500313 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065882209 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065831017 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065621939 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063916241 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063529287 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06302064 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065673829 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065632727 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065432329 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063487398 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06367404 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065649377 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063164719 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063067264 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065606495 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06335756 seconds)
  done (took 3.179262861 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076264109 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073056529 seconds)
  done (took 1.388010783 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063012559 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080109055 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063309302 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070019536 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070370867 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06614304 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073185484 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069671861 seconds)
  done (took 1.792687791 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082041876 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076788374 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067874928 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080891786 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076326057 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083061984 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132002978 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.067004451 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072779221 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.06471188 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079698401 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065039711 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072258593 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066837042 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071693005 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07216825 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.06408087 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072581241 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068390022 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.06488575 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067223437 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074839972 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068437928 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061997582 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.06744398 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.08774239 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.077124239 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065519863 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069000861 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.07353482 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072258644 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060421795 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066140204 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066675569 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064086796 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075427675 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081319424 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068663806 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074324407 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066789394 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076736437 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.06432057 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070452309 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072278994 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07587571 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066427266 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.067067857 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060877012 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063631997 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068324228 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061505777 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06622196 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.06069652 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074929556 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069319857 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076398874 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064468086 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067430237 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068831573 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069477213 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072387152 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067973366 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068720147 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065965013 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076110665 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.07062564 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075043298 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061487175 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060333519 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064063187 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075290468 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088630078 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072077536 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066361701 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066628495 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063928274 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068954373 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066878867 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071856857 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072640028 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065989012 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071729269 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073387562 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066357268 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.06887572 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074394101 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064143474 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069128065 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063877351 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082492958 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.06467515 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063933076 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063786828 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076493754 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.06945548 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065714476 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063779272 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073026115 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060364296 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066297714 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066246001 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06556688 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.074863651 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069586832 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069649203 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073702824 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072140765 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065464701 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067244817 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062001895 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065509559 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063863053 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071929505 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059119238 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067649392 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065857477 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065649359 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.073033782 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.063486947 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.064579865 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071811745 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.070489241 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.063828317 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.061457381 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.067689177 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.064422013 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067586666 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.072495927 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.063503737 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.060079443 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.06041915 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.068638858 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.065313952 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.068584837 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069540785 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.068226927 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.059630611 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.063304049 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.069762552 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.073243736 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.06546304 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.065754843 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.070378332 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.066565267 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.064452366 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.071547059 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.067286 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.064829669 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.070541695 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.065844087 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.06038949 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067771313 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.067344145 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.063565478 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.068726082 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067924225 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.067329662 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.06579894 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063739018 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.072072955 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065647248 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.063506197 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064537498 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.063173397 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.073737957 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.066458526 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.058884405 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.061869742 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.071559229 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.062410585 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.063789562 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.063180954 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.065710755 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.064825773 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.062246367 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.063597764 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.06555199 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.073291805 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067563871 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064956299 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.068654701 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.074714845 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.06356182 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.066557261 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.063055184 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.064245729 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.065052472 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.072006161 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.069423644 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069015458 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.067259223 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.061472421 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069817898 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071906552 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.063909388 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.062203702 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.063766532 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.06813294 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.069079006 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.0676499 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.064975398 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.061657096 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.064496955 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066607905 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.066816835 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.063681013 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.062590994 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.069573017 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.062868243 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.069396108 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064671478 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.07381904 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.066498156 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.059772458 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066607879 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062704232 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.069552627 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.059500678 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.062598971 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.063293219 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.064902213 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.06317263 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.0664205 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.058485389 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070968631 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.0714818 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.063948576 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.063325065 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.0642858 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.069641327 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.065543708 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067986719 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067360193 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.069704494 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073829586 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063896657 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067051696 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.30709102 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.069653568 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.064244105 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.075967992 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067114444 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.067481526 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.068131988 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066289326 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071735972 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.077553438 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.075322265 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.06204273 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070932426 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066794561 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066734507 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062853466 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072936175 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.07087379 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067992933 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074611028 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068680942 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.068276497 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072688075 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.06774108 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068719673 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068611318 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070918946 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.068017758 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068991078 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066919519 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070686306 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066363328 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064940304 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069669613 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.067204591 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068518707 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073178529 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.067268715 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068176966 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069756104 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.068531338 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068181674 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067537468 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.06723559 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070331998 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067803168 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067741494 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069659919 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062393545 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074471641 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066532837 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074670766 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.06807117 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063995338 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074285983 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069841548 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072629337 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067893519 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067852866 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068255836 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066752598 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069759636 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074135597 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065062761 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077377778 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074569311 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067938657 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069491834 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067598062 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068387805 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.0658796 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067785722 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067618513 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067216929 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066350267 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.07177055 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069406624 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067246926 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068395083 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067689093 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.067124776 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067638141 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061308684 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066297858 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066306493 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066718169 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07649194 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067448639 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066563329 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065396737 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068127202 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.0656561 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063410349 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074861263 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076122482 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067726431 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07473584 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066157048 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067940244 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077160849 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.06107715 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065115533 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.065013401 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064810305 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074309535 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.067378447 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075851383 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066787095 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066171534 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.064129201 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.06674185 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.06467002 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060526873 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.06391327 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06914859 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065377335 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06503073 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065938955 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068857089 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067178578 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07538171 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065495306 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066759504 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065968458 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.196132196 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066541751 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065988147 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069736314 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067781182 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.06440755 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063792468 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066195901 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067641294 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068034672 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066833654 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068731354 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076129859 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067215657 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.06994365 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070016358 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061731947 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069856813 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066591335 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066793204 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066156716 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070331985 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070107084 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067747168 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075382121 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066541052 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067676461 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066613263 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064592343 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066719065 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065959283 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066738644 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065877908 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067686604 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074709718 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064496113 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069558517 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066599184 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067082911 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073272185 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.06751691 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069336401 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073326741 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066822811 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.06820246 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074390363 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070999071 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069985313 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067769626 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068235995 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072454199 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.0659087 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072829265 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.06705795 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067574384 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068719482 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064823209 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066152236 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066485205 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065781137 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072638435 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067594655 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066054437 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065884893 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064358385 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067693899 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069648785 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074501422 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068704933 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070036668 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.06171359 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063788448 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067335947 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064383773 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068207252 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069053725 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072030108 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068929826 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066808684 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065506545 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075148686 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072165092 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070277981 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064260082 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.070416331 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067023202 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068791067 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067564775 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066879947 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067681941 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070154794 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068295365 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065911648 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07341094 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069795161 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067219894 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067794854 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067130684 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066740606 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061285929 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.06678925 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068567356 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071708548 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068533828 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066334661 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076410429 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064105472 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066581294 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069355394 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06536071 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.07016951 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061362888 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067698518 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066582343 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066353589 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060832127 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065158875 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064052769 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068292137 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065409278 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061185439 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07597542 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074846593 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068637915 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.200757224 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065150014 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062404224 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061419682 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065567443 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068128198 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068855239 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076739442 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066619545 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066074864 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062235914 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067711739 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069640037 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070577268 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063773677 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062883389 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065846861 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070039206 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072140369 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065282283 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066621548 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070257662 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068979502 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064680232 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070437583 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063492377 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070449365 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080086782 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067231713 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067804904 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072867756 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074426562 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067479445 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061986436 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067237022 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069992395 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067491473 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067693279 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067365915 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081977052 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069917992 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066606178 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065335037 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069114299 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066277475 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075254222 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06750606 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.0672877 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071185132 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068497866 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075592219 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069353393 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074587069 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069641087 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.07011357 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065559708 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067184543 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064613933 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065799531 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067414581 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067249636 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071612289 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074813212 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065958424 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077515029 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075438845 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068436198 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063409552 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065915395 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066177688 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061600183 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067293275 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064859442 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064595295 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064347372 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065031562 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067201245 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071669346 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067185019 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067003663 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066314077 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061945796 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069351975 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070359553 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068369699 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063108092 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066735955 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067089759 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070389985 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069546083 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063708631 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068091818 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068341383 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067013315 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061598572 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073077922 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065286997 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067776385 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065296064 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066660792 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066900902 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069496824 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071135864 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.0672756 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068606337 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069882962 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068371635 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063647637 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063857956 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071426625 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064165235 seconds)
  done (took 42.374064063 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101728591 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063858941 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063112702 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.0622555 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074866502 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063252204 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062770544 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063494141 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063297189 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065733921 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062502971 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062698754 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071516388 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078660094 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074649539 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067882382 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062926178 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063504971 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062777074 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063823712 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071752303 seconds)
  done (took 2.80513516 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074746297 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.070310895 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073504781 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075985775 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068001877 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.071368183 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073307794 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071526871 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076599013 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067950761 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085047353 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071481915 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067727085 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.069002998 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068595579 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071285355 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076665162 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067946425 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.071301084 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073046342 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071581309 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.07326475 seconds)
  done (took 2.932327657 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067223237 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065895249 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068133919 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062394103 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066966209 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.06255361 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069995433 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064832432 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069986158 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.06575425 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065747218 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065693585 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068364492 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061844776 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066516926 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064251658 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.10966133 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.0695959 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066142674 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.067362827 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062274281 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068166801 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062151938 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062663071 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065610729 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070119376 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.069167046 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066408534 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.068322876 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.067278952 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066413222 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.065984217 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.070056857 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069047554 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.067501807 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067572112 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.067630363 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.06726439 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063353168 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.064521866 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067151496 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062377317 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066759316 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067764383 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.06455772 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.064755821 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067880391 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.066562065 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061632942 seconds)
  done (took 4.63601689 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080684493 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109432953 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068579319 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089268248 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.080823128 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075749064 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069591409 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.090221896 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063982799 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064788523 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082204042 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080471595 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066533327 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.071076757 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072985857 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066519987 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067682718 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065326736 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070395378 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066258606 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070463977 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072736915 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.080652917 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079487548 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070311902 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065290701 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066184162 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070709998 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078930847 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071087617 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.071245703 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071860279 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080936119 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071904997 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065641567 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068084357 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.082019869 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066173796 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068516209 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063579913 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.068400923 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070206481 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072602158 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081937461 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066028045 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070868799 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06540142 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062959778 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.079067429 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068162855 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073572302 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079894154 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069385977 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.06609501 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070182485 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080361743 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065754101 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064320873 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.069010609 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078239558 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063558289 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06988282 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079629106 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.068015833 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.073215848 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080312246 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071375098 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069821217 seconds)
  done (took 6.420183609 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075672895 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.072831252 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082177161 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080911849 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072400331 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072879166 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072916323 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072210209 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.0725371 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.0774338 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072983308 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.093866251 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.068359843 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075644285 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072943631 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.073183184 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072797567 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072828137 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07264426 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072637977 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.073104666 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080460712 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072788885 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.080526173 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.099215103 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.068004913 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072390054 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072837721 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080657029 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072658907 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.080219259 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072612247 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072911233 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080765536 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.080219058 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.072239974 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065371107 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072252822 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072489266 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072601243 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068057061 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080531206 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072230765 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067848227 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072715271 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.072392393 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.080981503 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.07975672 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075417364 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078066097 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072855894 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080749126 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072056905 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072641825 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.08090794 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.105882151 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080834693 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080610384 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072729107 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.08060735 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080408255 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.086370648 seconds)
  done (took 6.096759068 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083892474 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07579805 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.077415022 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061849996 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064427747 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070368727 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064482633 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064697628 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075337692 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.075196965 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077966058 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070461681 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073432212 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077366727 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070408304 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073157565 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070129519 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070528116 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075012174 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070267028 seconds)
  done (took 2.810081289 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074383423 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083280773 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.06790738 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072769031 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069904079 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07222109 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068808024 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06950591 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067448596 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069410586 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076509378 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07644711 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067283354 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072511041 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.076456792 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072048692 seconds)
  done (took 2.517822527 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.075121501 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.073858772 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079809509 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.067375118 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064665241 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062952275 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066159612 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062128426 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.06273769 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077945068 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.066165453 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068839623 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.066392177 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065193934 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063278852 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.069110308 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063128666 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064011315 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.066048984 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078587237 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.077736589 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.065015514 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067120513 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.066666566 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066673807 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071064067 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065737133 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064087683 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063423233 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066143717 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066915213 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069416056 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063301634 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064288109 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.0646073 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063440133 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065504898 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066379841 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.06880716 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065588787 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063908108 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065878372 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.066138903 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.06683853 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062341261 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066536214 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062427849 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.068284867 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064096158 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.066579755 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066215197 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.06852803 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066570909 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.073112915 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.069245233 seconds)
  done (took 5.054240976 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079647642 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069841965 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062132712 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064443838 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069171254 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068217087 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069612788 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067582791 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068340275 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064732393 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06858155 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068930922 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068281776 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069716155 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068035975 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069822629 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062336379 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068044733 seconds)
  done (took 2.601625689 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071150012 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067104586 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073411322 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066486488 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065580576 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068432295 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062336307 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064928034 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064724643 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066210688 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066203631 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068688533 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064978515 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068448621 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066105317 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066382139 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068654779 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064841719 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066537441 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062093252 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068524657 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06505306 seconds)
  done (took 2.833969275 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.092878068 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.08166408 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.138695855 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079083278 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.083586027 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071874118 seconds)
  done (took 1.916689379 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090436554 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079914457 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067101946 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088452456 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073990756 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067547766 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067651226 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068160958 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076774221 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076677476 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06798405 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076664832 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07656684 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076186086 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074059212 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073677284 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068043381 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067997115 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066744267 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084800353 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068114006 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076737739 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068343462 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067809631 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068328158 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076013042 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076842145 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076895286 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067838104 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076773439 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074155806 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067803526 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076849028 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076431801 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069288609 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076643951 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068172261 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084770284 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073493612 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075543883 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069090267 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073878082 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076546257 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072585744 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076353241 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067775539 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072408713 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067541178 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067601877 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086478813 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073371477 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075554542 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073743643 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076463271 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076785332 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086667197 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076446688 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075428253 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073665194 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078771375 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076289783 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073588452 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075806368 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076897871 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0739434 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075874922 seconds)
  done (took 6.281430954 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082433478 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.087406457 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067910882 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076690326 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076329889 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068122371 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068412994 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068112269 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068380483 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06789622 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108381494 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068282809 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076023216 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076462245 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068174811 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068015459 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068186062 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07582283 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067852646 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086665247 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067831911 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075846263 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076068564 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076171467 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076492055 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073624167 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068546187 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068104681 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06773752 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068151711 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073008825 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068563511 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076324936 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067863946 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076256613 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068006944 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067977444 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072793695 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067995467 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073398695 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07592587 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084486561 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067721342 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068218668 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076531857 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067479518 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067479036 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067393285 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067916745 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067152718 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076255802 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076621217 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076272105 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075777685 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067715007 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067897853 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067816609 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06808904 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067743636 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073398435 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075307321 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067401355 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086439045 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067708515 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067621546 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075981444 seconds)
  done (took 6.18583104 seconds)
done (took 129.169292911 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.181912666 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.164406281 seconds)
  done (took 1.716004204 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069478538 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098171059 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077648351 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128432915 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.067067167 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100442475 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099820182 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078127486 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066356682 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066710162 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066720124 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.069041551 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.13173473 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066654711 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066318795 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069475791 seconds)
  done (took 2.706796671 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.098115571 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.15874915 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099763386 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065390984 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.097637754 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073445639 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.06499717 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075416117 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071475239 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065479622 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073346658 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070901184 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.06543856 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.071294934 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071353184 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.073371123 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065171756 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.073629869 seconds)
  done (took 2.821792151 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101706694 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.092673572 seconds)
  done (took 1.581939496 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.162595833 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.106681439 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.152154696 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.34776688 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.169197622 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.231213923 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.131125119 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.130729551 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.121636546 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.125212311 seconds)
  done (took 3.063484299 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098399569 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.152167209 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.257493957 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.116131546 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072847907 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.095701563 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.116696556 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077950577 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080960297 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.08089356 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081061934 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076560689 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099288091 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.074133582 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073826841 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076684416 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103063885 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072673521 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074406475 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077285467 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099906173 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066077446 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074012559 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072798573 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077672958 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077767897 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065752846 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065604244 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.07704056 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074522341 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077586996 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.094178332 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077949019 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.107678349 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070560895 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.108716106 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076790365 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074472668 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074253234 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074244134 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079071549 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079360721 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072400227 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076500156 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065207124 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076667118 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065409198 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.06830495 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078331467 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.067349654 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078464814 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077017325 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.107522854 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.067355887 seconds)
  done (took 6.017407987 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101830635 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104261379 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072174003 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.111125168 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100112084 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071823052 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.101734961 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093987358 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.103214218 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070183098 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068663613 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070631511 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08273845 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.08397024 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.112094453 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.104744472 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074164266 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070556473 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.104263379 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.102943942 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068848128 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095512971 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090028476 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102135575 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067829279 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070531662 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068503047 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070713202 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077469739 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.079131118 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069993802 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081557427 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.08490068 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.07915684 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067276701 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067997366 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068737782 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.080127748 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080198968 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079209598 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078319875 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068060786 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068304024 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069753957 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070555751 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067505144 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079513093 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080711559 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079705184 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069692219 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070794559 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068190971 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069767998 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080793324 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078198456 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080926916 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080463856 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068619789 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068946107 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072196363 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08171858 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080448105 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079844604 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069909494 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079528543 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068971387 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080753607 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084925595 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068963279 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070215739 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068725431 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069511994 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070239625 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078518576 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.07929629 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07009229 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.06971596 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068848378 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080705936 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079327038 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068680133 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.0777878 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067933504 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068990568 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070668333 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070460537 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.07850349 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.08071932 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070527639 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068932949 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069974875 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069281502 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067644162 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.077536851 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080514909 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.07886648 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078552962 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069885719 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079136195 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078560541 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069458571 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.081539234 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068121108 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.201275281 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071095451 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079767948 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078855605 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080508918 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070429736 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06921288 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.085753301 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080855676 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.07007586 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078743847 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081713375 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.081556073 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.06926077 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081787564 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069412179 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081185873 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070827534 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080579958 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069688639 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080523286 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069437947 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069175277 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069331211 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080562654 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070225639 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069514564 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070916863 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07057091 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080808737 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.084332384 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071385544 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082027748 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079326121 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071571591 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080604159 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069571339 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.07997761 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069919421 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070750939 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068314163 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083750876 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069912247 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069098312 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070155401 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081341527 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06927914 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081399445 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079859954 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068783013 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081761241 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080489436 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078010745 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.081347604 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07104907 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068924769 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068604258 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069780531 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079050197 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080272572 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071273209 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069414743 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078698676 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080485569 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068239451 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079369047 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.0795731 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079167076 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069546499 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069782249 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080755772 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081879429 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.07928007 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078346554 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078730817 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068720634 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078357872 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079057176 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068412803 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084060709 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068511746 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082715519 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079606267 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077603889 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07927718 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.081261869 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.081234215 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080947246 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082740704 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06819682 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068192351 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080026862 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06911879 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069858224 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078883696 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070058395 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069569005 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083171269 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068541502 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079816532 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067605547 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.07866839 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066670837 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069244501 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082254389 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.19920563 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070886868 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080620275 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070784592 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078454636 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082565924 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.081225152 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069414018 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070128646 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081356945 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079533291 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068984007 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069208978 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071607698 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079353618 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078678596 seconds)
  done (took 18.812675381 seconds)
done (took 38.115220891 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.209718841 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.151251479 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.199230721 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118822522 seconds)
  done (took 2.1614167 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.12238542 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101394194 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.095487111 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065359932 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102440619 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065675598 seconds)
  done (took 1.971534711 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.315560723 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.212113529 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.183370573 seconds)
  done (took 2.130023241 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.198779806 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.188254754 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.395710052 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.25412705 seconds)
  done (took 2.563850888 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.143754717 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089795809 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067368368 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083155273 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.136050423 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.161905244 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.102103379 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.126586144 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078221321 seconds)
  done (took 2.460934594 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.148999084 seconds)
done (took 12.857385546 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Int8, false)...
    done (took 0.169014533 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.122850359 seconds)
    (3/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.079185647 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.12796794 seconds)
    (5/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.198395302 seconds)
    (6/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.196321108 seconds)
    (7/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.088967292 seconds)
    (8/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.074277068 seconds)
    (9/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.075126016 seconds)
    (10/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.196077278 seconds)
    (11/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.174517813 seconds)
    (12/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.075361252 seconds)
    (13/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.074626165 seconds)
    (14/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.081707454 seconds)
    (15/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.201691257 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090350549 seconds)
    (17/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.076962955 seconds)
    (18/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077695576 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073624712 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.090779794 seconds)
    (21/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069059933 seconds)
    (22/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.147992951 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.114731471 seconds)
    (24/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.108690181 seconds)
    (25/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.149821772 seconds)
    (26/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.066342025 seconds)
    (27/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.076284424 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.124586251 seconds)
    (29/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.160842709 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065662607 seconds)
    (31/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.225790051 seconds)
    (32/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.15577989 seconds)
    (33/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.184864266 seconds)
    (34/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.159421623 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.092396298 seconds)
    (36/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.071943372 seconds)
    (37/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.156462815 seconds)
    (38/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.065679113 seconds)
    (39/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.071160441 seconds)
    (40/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.148647351 seconds)
    (41/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.160540471 seconds)
    (42/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.071660454 seconds)
    (43/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.073459265 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.100554988 seconds)
    (45/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071646534 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087676239 seconds)
    (47/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.148433432 seconds)
    (48/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.205589575 seconds)
    (49/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073110948 seconds)
    (50/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.073257918 seconds)
    (51/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.220840951 seconds)
    (52/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.110184628 seconds)
    (53/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071606142 seconds)
    (54/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.073816999 seconds)
    (55/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.062448652 seconds)
    (56/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.064993959 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.100643131 seconds)
    (58/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070267699 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089283878 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.065692195 seconds)
    (61/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.065524073 seconds)
    (62/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.174825669 seconds)
    (63/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077605815 seconds)
    (64/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072621794 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.088426683 seconds)
    (66/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.072150226 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.124019839 seconds)
    (68/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.146636047 seconds)
    (69/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.173881325 seconds)
    (70/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.071304427 seconds)
    (71/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.092312892 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065091833 seconds)
    (73/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.099949632 seconds)
    (74/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.061952196 seconds)
    (75/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052506073 seconds)
    (76/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066906702 seconds)
    (77/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051193893 seconds)
    (78/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.154632941 seconds)
    (79/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071678052 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.08901794 seconds)
    (81/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.148930237 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.090164378 seconds)
    (83/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.149672213 seconds)
    (84/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.07205299 seconds)
    (85/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.170396485 seconds)
    (86/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.221168655 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.066740976 seconds)
    (88/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.05464827 seconds)
    (89/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.176471003 seconds)
    (90/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.052017242 seconds)
    (91/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.270196189 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.092706197 seconds)
    (93/309) benchmarking ("sort", Int64, false)...
    done (took 0.066975397 seconds)
    (94/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.101072504 seconds)
    (95/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.118426757 seconds)
    (96/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.063614769 seconds)
    (97/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.078019718 seconds)
    (98/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.090278002 seconds)
    (99/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.149807821 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.092173275 seconds)
    (101/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.169819726 seconds)
    (102/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.071959592 seconds)
    (103/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.104977276 seconds)
    (104/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.09504367 seconds)
    (105/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.089233541 seconds)
    (106/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053616552 seconds)
    (107/309) benchmarking ("sort", Float32, false)...
    done (took 0.128519834 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.089618313 seconds)
    (109/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.148051771 seconds)
    (110/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.07578048 seconds)
    (111/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.071989151 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.093873792 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.066018192 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.133260091 seconds)
    (115/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.067610457 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073144745 seconds)
    (117/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073644161 seconds)
    (118/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.184230772 seconds)
    (119/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.0522758 seconds)
    (120/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.06880341 seconds)
    (121/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.063489865 seconds)
    (122/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051462117 seconds)
    (123/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.15064028 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.135898461 seconds)
    (125/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.052064737 seconds)
    (126/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.067636954 seconds)
    (127/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.065733716 seconds)
    (128/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072138122 seconds)
    (129/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051160872 seconds)
    (130/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.137496001 seconds)
    (131/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.100031183 seconds)
    (132/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.076197484 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.106812622 seconds)
    (134/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.086823052 seconds)
    (135/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.07362355 seconds)
    (136/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.054929461 seconds)
    (137/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070067379 seconds)
    (138/309) benchmarking ("sort", Bool, false)...
    done (took 0.133856207 seconds)
    (139/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.105047124 seconds)
    (140/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073209148 seconds)
    (141/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.051904459 seconds)
    (142/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.072660443 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.107813002 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065271391 seconds)
    (145/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071575064 seconds)
    (146/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066740692 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071104103 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087910791 seconds)
    (149/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.085103879 seconds)
    (150/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.072198748 seconds)
    (151/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073993585 seconds)
    (152/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067534895 seconds)
    (153/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.180096512 seconds)
    (154/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.07278262 seconds)
    (155/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.07262212 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.146048723 seconds)
    (157/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.165704558 seconds)
    (158/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.07090887 seconds)
    (159/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.156913658 seconds)
    (160/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051552523 seconds)
    (161/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.185524763 seconds)
    (162/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072978429 seconds)
    (163/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.150168813 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.138455534 seconds)
    (165/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.051318511 seconds)
    (166/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.082620741 seconds)
    (167/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.158824533 seconds)
    (168/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065575722 seconds)
    (169/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072573671 seconds)
    (170/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.164749529 seconds)
    (171/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.054111044 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.075116216 seconds)
    (173/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.089119284 seconds)
    (174/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.076090598 seconds)
    (175/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.06513227 seconds)
    (176/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051740112 seconds)
    (177/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.060670442 seconds)
    (178/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.15818011 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.128096074 seconds)
    (180/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.064534428 seconds)
    (181/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.086941874 seconds)
    (182/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.078949575 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.095206626 seconds)
    (184/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.148806083 seconds)
    (185/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.182641373 seconds)
    (186/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.074760644 seconds)
    (187/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.154567533 seconds)
    (188/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.194119215 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065085806 seconds)
    (190/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.052232121 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071388432 seconds)
    (192/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.227468917 seconds)
    (193/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.080993808 seconds)
    (194/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.178789207 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.075043075 seconds)
    (196/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.05338634 seconds)
    (197/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072700466 seconds)
    (198/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.111605648 seconds)
    (199/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.179615846 seconds)
    (200/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.05309987 seconds)
    (201/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.09938032 seconds)
    (202/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.139823848 seconds)
    (203/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.052053579 seconds)
    (204/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.068562198 seconds)
    (205/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.052158082 seconds)
    (206/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.051831924 seconds)
    (207/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.052057872 seconds)
    (208/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.066174905 seconds)
    (209/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.067181015 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.139619858 seconds)
    (211/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.054029264 seconds)
    (212/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.074322933 seconds)
    (213/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.075470665 seconds)
    (214/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.06449085 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.066141213 seconds)
    (216/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.06769037 seconds)
    (217/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.05378458 seconds)
    (218/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.068664733 seconds)
    (219/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.052170273 seconds)
    (220/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.067116525 seconds)
    (221/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.054045861 seconds)
    (222/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069120196 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.091536858 seconds)
    (224/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.067591324 seconds)
    (225/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074243317 seconds)
    (226/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073115724 seconds)
    (227/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.152347555 seconds)
    (228/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.053482042 seconds)
    (229/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.051571948 seconds)
    (230/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.052936501 seconds)
    (231/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051722979 seconds)
    (232/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.099136679 seconds)
    (233/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.068233011 seconds)
    (234/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051966163 seconds)
    (235/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070838075 seconds)
    (236/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.0647481 seconds)
    (237/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.067239117 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.110686437 seconds)
    (239/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.05172044 seconds)
    (240/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.15179698 seconds)
    (241/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052950135 seconds)
    (242/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.052350954 seconds)
    (243/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051822776 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.133506268 seconds)
    (245/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.052131991 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.136607262 seconds)
    (247/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.073103139 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.066154171 seconds)
    (249/309) benchmarking ("sort", BigInt, false)...
    done (took 0.185351068 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087444204 seconds)
    (251/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.066993406 seconds)
    (252/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.109428962 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.066431194 seconds)
    (254/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079962323 seconds)
    (255/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.070211194 seconds)
    (256/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068897315 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065619178 seconds)
    (258/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071839918 seconds)
    (259/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051597271 seconds)
    (260/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.080756664 seconds)
    (261/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.07347031 seconds)
    (262/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051514921 seconds)
    (263/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.063292058 seconds)
    (264/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.05140891 seconds)
    (265/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.0522833 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.089216463 seconds)
    (267/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.10829667 seconds)
    (268/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.07843139 seconds)
    (269/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.061737969 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090003801 seconds)
    (271/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.052337642 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065921614 seconds)
    (273/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072051195 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.092015732 seconds)
    (275/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.052598707 seconds)
    (276/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073658935 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.118000089 seconds)
    (278/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068004651 seconds)
    (279/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.066638752 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.073256083 seconds)
    (281/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.06504239 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.06405647 seconds)
    (283/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.070008486 seconds)
    (284/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065659501 seconds)
    (285/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.051339589 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.064373689 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.08975613 seconds)
    (288/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052762107 seconds)
    (289/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078647746 seconds)
    (290/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.062208465 seconds)
    (291/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.065684048 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072897169 seconds)
    (293/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.071777382 seconds)
    (294/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.077978552 seconds)
    (295/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.061415331 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.0711412 seconds)
    (297/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.052679201 seconds)
    (298/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.05262056 seconds)
    (299/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.079879776 seconds)
    (300/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.067105749 seconds)
    (301/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.071678542 seconds)
    (302/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.052006546 seconds)
    (303/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.068043391 seconds)
    (304/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.051763901 seconds)
    (305/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.054205822 seconds)
    (306/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.052877751 seconds)
    (307/309) benchmarking ("sort", Float64, false)...
    done (took 0.125254498 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065614434 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.099474007 seconds)
  done (took 30.529841514 seconds)
done (took 31.962922767 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084385414 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09274721 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073918979 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092238723 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080879248 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076820308 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072219052 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078160961 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.080657101 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081428925 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078439284 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054771022 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073769478 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074177756 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074984469 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091160411 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078050209 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072783655 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072992662 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065125837 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073220951 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066024169 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.06772311 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054894769 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078031203 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.072184836 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072910788 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.074226586 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066171328 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066146666 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069460167 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073434105 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066169945 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077986223 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072693916 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073206053 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074688749 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076419795 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067789401 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066105312 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074130855 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066194348 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072764705 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073389414 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071591816 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071178595 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072756914 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078295349 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091197654 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068234794 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074403632 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075992473 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076603711 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072398263 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069283255 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072997264 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070485273 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091772004 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073272286 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.0684619 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073754921 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073911634 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070769669 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072758803 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.07304066 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074822862 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075389196 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071318762 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074247877 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071001231 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065578894 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072901162 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068842832 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065808853 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075251605 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076567695 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064454658 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070662076 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072143443 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071906118 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064541114 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067529581 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067066366 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071442463 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067591434 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054534786 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068762287 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071478949 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064653638 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073129976 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071431995 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.07185446 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067018513 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075040262 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064533963 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070473633 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.06567126 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.06595054 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066978398 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.06930403 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065427609 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06775475 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.07429748 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.067212031 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071342841 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079057459 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065738105 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071833805 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064750349 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065391952 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079377181 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.07486662 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065401852 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067648529 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064704148 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.07217607 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064255292 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064770344 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065011252 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065617688 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070458414 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065470567 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067629107 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072091229 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076971697 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064934363 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067866623 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067011866 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065271282 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070180412 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064794741 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.198767217 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.067628945 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062289022 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068125317 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066236853 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073592154 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067235399 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072887145 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066765212 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.07417276 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069632173 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071932511 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071040803 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065103328 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059620854 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068401879 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068180671 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.068052108 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066832151 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067825517 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066584381 seconds)
done (took 12.47931341 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066812985 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.142559352 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.100420654 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095441494 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086394699 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066620168 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076482845 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102184184 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068191981 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.103291379 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087634052 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085022067 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112616425 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064886135 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066025879 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.07028036 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067671367 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.082060288 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101496904 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086503985 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116536408 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065462765 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.095229701 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090245209 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087788208 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.10196201 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.06703709 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070730787 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069855261 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.0913962 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.08686101 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070074353 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066729211 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.1006154 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092836054 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083825524 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066725794 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083373765 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066774109 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066017038 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067474712 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.098186627 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080655826 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.08058365 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070573838 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069193037 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067376604 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083660816 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089278991 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.079069523 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086697607 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.10333702 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068724785 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.066405557 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.06494024 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085615309 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065703758 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069115162 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066612162 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068567563 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066384419 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069288714 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081557094 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.082105037 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069712286 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.080628627 seconds)
  done (took 6.84552712 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083649146 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.090590516 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083458919 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083480772 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065958898 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066639418 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066748891 seconds)
  done (took 2.065233632 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066735924 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088747228 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089519513 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088622464 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084293478 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087409217 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.076037751 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066799402 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080707152 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067956768 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08724973 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102117314 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067080209 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073254243 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090766466 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.06697793 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090548872 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.068123593 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069564083 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090517571 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068458218 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081980301 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.070134045 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066964812 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080845628 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066844428 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113585331 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070835383 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068347073 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069673375 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064608609 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.107515543 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.08036594 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075684838 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066509789 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080717701 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080988838 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064942302 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082735479 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071554873 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080243916 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067033588 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067242637 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064507859 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070620948 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.07673008 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067705026 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067332722 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069179841 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086067732 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067358609 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080432824 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070360599 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.069524389 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068393038 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070343695 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075975805 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067135891 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08595069 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067902217 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083403249 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082876121 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079906054 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082687063 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068708741 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079994452 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080024136 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068989301 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067961853 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.0698015 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082552541 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064707071 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068434162 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076898044 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068272516 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089604533 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089646962 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067947063 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075823289 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067082916 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066662807 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066860895 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.08949632 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069137473 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066947007 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071032488 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06987607 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065396455 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065823761 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070278369 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.065054454 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068183353 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069506386 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070213111 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069859583 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083752342 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069118482 seconds)
  done (took 8.804899101 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069325156 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068216175 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069942501 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068459952 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.06863208 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068043557 seconds)
  done (took 1.954244199 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.094328424 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.070106656 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080780114 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072485512 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105109724 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087039937 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087175448 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.080579254 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084172047 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079209574 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.0869653 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088956245 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.093539561 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073278736 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.087407484 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.07242566 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087126316 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076314759 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078658397 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073240533 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086940404 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072977157 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073316531 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.082164564 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075677653 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072121239 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067679287 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079074555 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078387487 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079041542 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072727131 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075910231 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.071212075 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.07915159 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086866037 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.071198624 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07247239 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077434622 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072704195 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.076158303 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.08811531 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073156851 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074764399 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077216893 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078826305 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070908864 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077426795 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076600194 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086541134 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.07703391 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.078056155 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071828432 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075589914 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077184365 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070661452 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078531387 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076660444 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.08661486 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072162564 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070380458 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069253115 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075791162 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07832909 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075714992 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.079322859 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077058192 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070744328 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072817421 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072656472 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.07173302 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077129959 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069155766 seconds)
  done (took 7.130602615 seconds)
done (took 28.312652277 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.548570395 seconds)
  done (took 2.058758775 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.601829183 seconds)
  done (took 2.138437065 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.730809502 seconds)
  done (took 8.264726857 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.398171057 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.47602533 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.694309963 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131536596 seconds)
  done (took 3.278472454 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.692048609 seconds)
  done (took 2.229910978 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.215764157 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.197168137 seconds)
  done (took 1.964562828 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.384272677 seconds)
  done (took 1.917110421 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.121483811 seconds)
  done (took 2.649472268 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.269268891 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.163431193 seconds)
  done (took 1.969519786 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.463027007 seconds)
  done (took 1.998320876 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.827627979 seconds)
  done (took 6.364203628 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.208474442 seconds)
  done (took 1.785052694 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.246333921 seconds)
  done (took 1.778749694 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.675468214 seconds)
  done (took 3.210381792 seconds)
done (took 43.149678506 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081468073 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080710406 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081216881 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077616823 seconds)
  done (took 1.842893748 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079498757 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075163457 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.077958117 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072577839 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076159379 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072722561 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074343329 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076918599 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.07230568 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073002701 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072527187 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072220246 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.07481924 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074298761 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070690952 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074582334 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.07596076 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072282959 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075526504 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072527173 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071098756 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074691226 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074811215 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071512305 seconds)
  done (took 3.31326906 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.07970805 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072556077 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074612012 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071289544 seconds)
  done (took 1.841291643 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079247732 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091681272 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.08976316 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.07802998 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092237981 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085740942 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068974386 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069185981 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072519843 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076910584 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067985656 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095462126 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.0879506 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.07644167 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078753002 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065914283 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068233685 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086960245 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077163787 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077495253 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070049725 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077391328 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068179515 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088030089 seconds)
  done (took 3.42816897 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.079683108 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.10255111 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.076895169 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.086992696 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089353181 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065266258 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074311229 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088784264 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.122256225 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065244797 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.07016134 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065290479 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072128664 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064930603 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076598721 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104574891 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.107887541 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068139538 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096027692 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065120531 seconds)
  done (took 3.190995561 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074740731 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070036677 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065415513 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067928896 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077022505 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072784923 seconds)
  done (took 1.97963539 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070399113 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066826291 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067335101 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.06650084 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071718923 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067284724 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065701089 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067361993 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067222659 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066661423 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066596402 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065831291 seconds)
  done (took 2.360086262 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.174148734 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068644065 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069285379 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066218696 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070484123 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.06649635 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080028699 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068428883 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.09014545 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.06609899 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067095771 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068110665 seconds)
  done (took 2.507011089 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21113628 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075930485 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237654897 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137581667 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111058173 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115906998 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104226332 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113457472 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.143779261 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101460275 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168195014 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165888731 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106940749 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13747871 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089012326 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.097813976 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155770449 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162275781 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103861769 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165651364 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14424569 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124760152 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146896726 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10102889 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10601374 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121500166 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070769034 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079576883 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17092353 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131996436 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147155028 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110776799 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093130239 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176869293 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171254191 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143350614 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133955146 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083518245 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.102237651 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.133168643 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199059873 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087938348 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162415114 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246440837 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081600548 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134724033 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119887847 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.120305723 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107326283 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090119079 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148751871 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186222302 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.139410442 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087522472 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112057501 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115061463 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.1164371 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104619941 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182650075 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161895552 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128895138 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070938171 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098957007 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153032155 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131427073 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.109691996 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.127138163 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093742006 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134946625 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153963968 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11792236 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143584502 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.128433831 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088880023 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118718209 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139909948 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128315801 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17021881 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124595312 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072262234 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124691814 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103688237 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081341487 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.142291398 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075059007 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174899379 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098112904 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.105462669 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112916792 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109007242 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108640097 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160688046 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143785634 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.243960149 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065687117 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103700448 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.120967726 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148834542 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087206694 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108138947 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116933989 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077602432 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140809197 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074943688 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123640371 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075332429 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125884651 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132073765 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075513522 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12099874 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101644885 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099816983 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134300211 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161183707 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089221594 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08196734 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166893964 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122434063 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104897781 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143405403 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155597657 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.098601881 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102036852 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150217311 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180404625 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089424555 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163149326 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107259192 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083192962 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087819331 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124093539 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112554908 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.122834074 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082133421 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.119310293 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16910283 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074876682 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095400609 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133876261 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079000995 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080487763 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103154712 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100282078 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094476452 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100507313 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104210431 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137416149 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123171234 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.244608334 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13007203 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102202796 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173862261 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089150358 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101271898 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104421284 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.07013414 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.137889252 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158369144 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.0801504 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165526542 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.124301878 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105585066 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119238002 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083389039 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140819322 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078841637 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070345836 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145492168 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10960894 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110050533 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.151598995 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104979418 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.128232332 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.120097413 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135670821 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133461207 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.129190321 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105279826 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.08763007 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11134092 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126418624 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072806984 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091345646 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080168896 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103704184 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095332452 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083042566 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142753817 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125366668 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100412242 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111707276 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096817042 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147410818 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076609792 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129714313 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119058727 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093634276 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.151635261 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15170538 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130938177 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099111721 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144128078 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069970619 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073544513 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.231169109 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125423336 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083269989 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08421564 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118331177 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14776476 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130423407 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140549277 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111203401 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120743933 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15432814 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069581548 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116131549 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147452093 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12171985 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.105118312 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090220236 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099002105 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143222319 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10787882 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18260081 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114527548 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125807896 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153922249 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099460791 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079947909 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106516239 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136488674 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10529994 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144737923 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099881556 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08792806 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110055357 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073984462 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100074116 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127544391 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119981631 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135813353 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.114644248 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133729236 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077303731 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117252015 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120885036 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123118131 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063897164 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119356367 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161058509 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093702167 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118286458 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152727194 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078500497 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.123455258 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.320990591 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149493061 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085206064 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110643001 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119180698 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128626002 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120690669 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141009212 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108847969 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135240907 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109197545 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084980865 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087605034 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096363763 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104980334 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094655871 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.109687731 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114529111 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094056827 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132744225 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103948244 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109645214 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118894966 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096409275 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089847349 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097248661 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175177515 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120178926 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17193409 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098462816 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.144906432 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163894679 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074439117 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07930527 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078388593 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140286742 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083820643 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131310559 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.098175425 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105862187 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124398769 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142242782 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095089015 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068723572 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109196299 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137562268 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112378469 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097998886 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104411984 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16231776 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.099968915 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079089207 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113143887 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104060152 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102417405 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.318619732 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061465308 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098205561 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075854516 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080841951 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128343977 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154536117 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.08106735 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102329889 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119453127 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111366291 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128426108 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102459494 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100412738 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115253322 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150918895 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12969965 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089785499 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112773072 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130204898 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157499927 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105190019 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.095386458 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172222395 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168648458 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.160637683 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.08820547 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114495402 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114338159 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10803905 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138748349 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083007241 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164389853 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082001611 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13654783 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104050203 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090386323 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130304033 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.098778977 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088210813 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148159107 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117688368 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082830961 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07768937 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118108879 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120546045 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105918529 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075092225 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139004265 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073151299 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131773668 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168208967 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222957096 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105308717 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096881227 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080533714 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108602586 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103429519 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089219263 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.098874122 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173947327 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088532194 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150678657 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142002519 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113555037 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137073389 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100038373 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.636194939 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.07738164 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15142307 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11668824 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174570743 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096865545 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117458472 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109391756 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12328976 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145004086 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105160674 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.177300314 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132110741 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116454119 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079786343 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102499867 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102844531 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.08864523 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105069915 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113220795 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116350237 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093764495 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.119097891 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123959175 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081542436 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095133021 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15615366 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117186625 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145176234 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140866497 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084591866 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11762469 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138834796 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079743845 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.121911933 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151852235 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105342329 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242382526 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081529861 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.102927374 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171177789 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073947953 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163649786 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119431926 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109011814 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113364551 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.115909194 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132193276 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108453194 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12178825 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093634481 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110653772 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112902947 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082065189 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077153261 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103960157 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111895318 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097291876 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09966339 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097903329 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151432931 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071327177 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096021417 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10344579 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145466241 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175267667 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088833442 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082167663 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119093214 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112431047 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.11343119 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120925474 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079172236 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082508586 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081700002 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076952379 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.108293126 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111892193 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104733324 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111189631 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164809843 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.08237347 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.224184398 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094868668 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104602594 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069418828 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.07901371 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095991047 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097719891 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108560976 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100422414 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169381376 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.093501602 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089140235 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091832917 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.215188241 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083818199 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129400267 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110581173 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119824983 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097749212 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062766716 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109164961 seconds)
  done (took 58.979864595 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.107746104 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.083295073 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096061096 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149879878 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122842401 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.212668242 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157609753 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199887632 seconds)
  done (took 2.778835881 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070756241 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094486621 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100002546 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.081774707 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.06676663 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068227822 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.224846026 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079863516 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066184579 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.088475328 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078353955 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.06833413 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.421252839 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066044644 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067253877 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.061581469 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067101338 seconds)
  done (took 3.409069074 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.372930478 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.602989934 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.37224304 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073034749 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.839295224 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.092150624 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.042091453 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.130291583 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.073962069 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.538098468 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.705821943 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.124245499 seconds)
  done (took 18.609384436 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.079024445 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.072227113 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.086928676 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.086453303 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072637189 seconds)
  done (took 2.035897573 seconds)
done (took 107.847388422 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083281678 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.407046128 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053962457 seconds)
  done (took 2.129036175 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.08588069 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.088660485 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.087256365 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.085347144 seconds)
  done (took 2.005688999 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.076998811 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.079459084 seconds)
  done (took 1.802379656 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.226430573 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.138517658 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.086868188 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.085121932 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080352396 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081022877 seconds)
  done (took 1.893423624 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074560915 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.078057021 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.075309475 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078395731 seconds)
  done (took 1.950660368 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079247222 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.054636837 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.057104947 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.058127895 seconds)
  done (took 1.893450025 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.089543819 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.081035037 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.081100595 seconds)
  done (took 1.901450286 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.105023199 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.088492945 seconds)
  done (took 1.83909563 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085158233 seconds)
  done (took 1.731935415 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.104105526 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.116114125 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.129096526 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.110748781 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.136434188 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.108864462 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085694335 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087311538 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077527363 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087560795 seconds)
  done (took 2.686878283 seconds)
done (took 22.004776304 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081234955 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.368196116 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.363606782 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089905004 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.672609381 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356244569 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.967646834 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091875877 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.11374405 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067870132 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083980911 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649580883 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.953956976 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.319450131 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.939857584 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.318997447 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649921286 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068176223 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067908423 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068362819 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.951616154 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067733623 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067992627 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068351002 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.648632186 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370600931 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068093093 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.319485576 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067341932 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069252156 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354567293 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068116655 seconds)
  done (took 16.046275067 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073687566 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.118080383 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073697413 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083290609 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070463841 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.06968316 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.07145674 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068646895 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119020957 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068262882 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084496511 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067532923 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071551416 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068464152 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087171336 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067945523 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068832273 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06897519 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068305191 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068571567 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086348779 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067377114 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068113021 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068273097 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067723844 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079833673 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068609786 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068276716 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068675687 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070481974 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071128219 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068682384 seconds)
  done (took 4.048228077 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117614837 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126320374 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074715612 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103119033 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112238337 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069987303 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.142302247 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092643708 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126753102 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067880965 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084538883 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067873647 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100786298 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068841784 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087646691 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068663539 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069550756 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06868708 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068747854 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068689684 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087426392 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06807632 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068314941 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068700976 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068891923 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081455373 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068613761 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068435824 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068598587 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070129401 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071220626 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068946838 seconds)
  done (took 4.310593799 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075298662 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.077298408 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.08233174 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083479323 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069683344 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071858404 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072959707 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069290388 seconds)
  done (took 2.263123572 seconds)
done (took 28.319108374 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081040262 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.06984663 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072321483 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081038705 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072706355 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082048954 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066984913 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074404305 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071699131 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072792851 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074705915 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067296277 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070663739 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.06701816 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073740075 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067690033 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.078940546 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071406442 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079073378 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079692227 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069835872 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072949664 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074290601 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079099626 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079455909 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078732225 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076967583 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072399957 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068798917 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.07029029 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076890217 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083543858 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068505573 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079148006 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067808473 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067762161 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071523529 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067637991 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079500206 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076361729 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069632081 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075603969 seconds)
  done (took 4.741867878 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090646218 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092747101 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.083942671 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061632218 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066519464 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064255017 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088356365 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059207871 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059659161 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087474934 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055632391 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059397496 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062089443 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053805884 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059096033 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056266835 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061755996 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.05601194 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059277582 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059086488 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057960995 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054414348 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.059955759 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062333986 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058323234 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061635238 seconds)
  done (took 3.359729651 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076779288 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084165055 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.088479493 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126376904 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.10351038 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076533592 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.077822531 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.091433954 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.084446103 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066601278 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071155498 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092629899 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08783544 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.084381928 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067427167 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084022579 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081162953 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068711755 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073242521 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090108692 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.083700931 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.082773277 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.091931971 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080337507 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066587948 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07002164 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071117868 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.080619745 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.075248375 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076194289 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071670115 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070367468 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069230053 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078546955 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.0708625 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068840681 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090202921 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076951207 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077517 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067943897 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070828565 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.067998079 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.089403538 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.12192054 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.06698947 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074101603 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074844188 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076553916 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.066960895 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085027429 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078639729 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066906126 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070427862 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066681764 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067451291 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080021819 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069854888 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069494428 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076479802 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070000483 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085394725 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071250942 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082286527 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066937476 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074765939 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066328349 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068361349 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066517945 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092158656 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068804729 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.107844606 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068757888 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.06834436 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075996184 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075080828 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073662942 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067941435 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082270846 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077420029 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.07088801 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075803158 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070709034 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070321035 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087874309 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069639452 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068929262 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068258676 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073387532 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069976487 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068944668 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080156401 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.06730789 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070366338 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083806495 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067217689 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068569296 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073431312 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072097397 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.06710649 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078447488 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071957783 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068242766 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.0759681 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067369605 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070794526 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077308321 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073553139 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066521221 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.07237947 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073698797 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.06877548 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068880287 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070219288 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068962245 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075470374 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073786542 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071862467 seconds)
  done (took 10.558096501 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.1649924 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.154243989 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070201453 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.144741331 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076162172 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079048199 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.147273133 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094373503 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067774888 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068765542 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068604734 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109756783 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105845946 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.114852022 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078248537 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067670561 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083589397 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114318193 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.149255757 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142362165 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083216668 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076635762 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069929993 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068568523 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070394215 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.07793423 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.084969117 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076245636 seconds)
  done (took 4.404620893 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083544719 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.099106507 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074180977 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089558801 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091627038 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067695784 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069750695 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069431563 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080777585 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079010815 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.06736937 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.072915362 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074312055 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071076894 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068538541 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074357309 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074965153 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068986649 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070960657 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072537854 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077349894 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080794984 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071477686 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066685803 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073981231 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067252635 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064326534 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084195383 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.06783581 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090017715 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066203994 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075022948 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081534047 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068728698 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067440036 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067800451 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.06719779 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067332963 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069289459 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066066709 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066271346 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.05763189 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066743391 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.07949175 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073770514 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056307139 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072082428 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.07271391 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072703762 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065067793 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070668039 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070213079 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070988311 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.07455163 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072058539 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072846891 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068504529 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065565748 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075282352 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067289996 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064237446 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.06599784 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071810836 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066143137 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.074924622 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072114785 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065845518 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067146921 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.06921665 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073089859 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067171549 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070379222 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065207485 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069127819 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072022078 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069057886 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.06776321 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066082012 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067199749 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067729301 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055389066 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.066964114 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053832432 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070460909 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065428119 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065825125 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067347516 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072043281 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080106182 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069207383 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072922648 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068109544 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.06626215 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070511935 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060442452 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070540758 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082781174 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082496586 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067048337 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065430947 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.0818649 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071744256 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066463521 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056568603 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074465316 seconds)
  done (took 9.134979756 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.091430256 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.07247162 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084237404 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.091121354 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086489404 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075129081 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076679546 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069034204 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.082346326 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073509263 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076123995 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.06780042 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076606386 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076607891 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070157996 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076357079 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072126359 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.08292064 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081690594 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.06803272 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075697044 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080191805 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.08898713 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.07988883 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.078352219 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.079705134 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.088815928 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.071740876 seconds)
  done (took 3.895984399 seconds)
done (took 37.754098017 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.728521279 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.917344554 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.735252935 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.142419149 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.835817716 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.766578299 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.850507715 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.734065381 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.934459482 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.780789427 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.984029501 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.857700029 seconds)
done (took 64.933393071 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.767928489 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.869170699 seconds)
    (2/2) benchmarking "String"...
    done (took 2.002628121 seconds)
  done (took 5.545076772 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.024482256 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.335138191 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.972801511 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.729734599 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.731959739 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.035606655 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.53149786 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.254210481 seconds)
  done (took 30.257993505 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.832630726 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.960679742 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.396963851 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.433235007 seconds)
  done (took 15.338991749 seconds)
done (took 62.686545605 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.756808271 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.779748164 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.755806254 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.708936939 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.781682631 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.732209515 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.19472525 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.855373589 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.721514638 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.708055492 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.728370857 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.149670754 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.736498816 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.227307279 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.72065907 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.730718066 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.76360005 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.413503659 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.878373566 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.733335094 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.726131795 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.759546808 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.723902976 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.730570597 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.743621383 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.717642903 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.157457668 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.726960816 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.325037903 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.726744724 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.746055552 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.733015456 seconds)
  done (took 202.560884475 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.726850036 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.53986367 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.627077822 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.724696029 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.083561927 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.897688265 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.83553111 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.174462605 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.722686554 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.722382898 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.92617726 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.722643038 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.903454469 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.666674292 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.752710128 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.736665586 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.897724127 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.926320504 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.756423923 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.889138158 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.737973177 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.711375131 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.666472282 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.860924976 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.726156654 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.723450222 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.734513274 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.921563697 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.918610499 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.867088462 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.744896807 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.738233135 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.950546484 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.603410241 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.740702584 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.742581373 seconds)
  done (took 167.279324336 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.883984211 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.727423185 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.728168 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.7305158 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.729500428 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.740603359 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.731750441 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.852072911 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.852253827 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.204640737 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.213426855 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.780108866 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.55263366 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.725733716 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.796884829 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.742707527 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.732959794 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.744641954 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.757917058 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.727766397 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.730957161 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.85249322 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.740155816 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.165158276 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.736305148 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.730080031 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.736670983 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.100777693 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.728046883 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.73542841 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.987103663 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.729132468 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.730783833 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.631897393 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.376629518 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.819850177 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.728887334 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.738087537 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.731376822 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.952199022 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.729854052 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.7314668 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.731857343 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.733852527 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.912056334 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.731965557 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.8550488 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.732368605 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.233097582 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.725144323 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.728381372 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.505951966 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.425088013 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.729596139 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.72899862 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.734712831 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.731213835 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.735062321 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.735957839 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.438892513 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.803086329 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.731681721 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.740297864 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.738095681 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.731861666 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.733078468 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.729808783 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.152387445 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.789001766 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.852722771 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.852304096 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.729626116 seconds)
    (72/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.730441926 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.799768515 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.823633557 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.728609945 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.730188278 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.732763793 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.729930183 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.818389661 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.72911978 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.872260549 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.737021412 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.734705699 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.77878809 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.798526377 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.726783459 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.622122313 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.72741168 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.727787798 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.04655577 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.799871 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.728626218 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.730158267 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.72892654 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.882865198 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.853626826 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.507886694 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.729699652 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.543474349 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.735653686 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.733508946 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.942875441 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.738738489 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.924172652 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.735883568 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.820947812 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.741880338 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.740527197 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.73782465 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.771120314 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.739623438 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.79776121 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.739828036 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.111207126 seconds)
  done (took 397.739807985 seconds)
done (took 771.190310714 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.44053533 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.384055293 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.499187155 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.419630534 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.390019924 seconds)
  done (took 13.811278617 seconds)
done (took 15.489468368 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.826388542 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.83216232 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.765171179 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.835708963 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.758030898 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.829277211 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.808802385 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.761285279 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.796841206 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.768844922 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.801210614 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.765122828 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.752486673 seconds)
  done (took 24.977444498 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.980205479 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.977413469 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.811819198 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.983388656 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.787512225 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.975170071 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.901913387 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.893619628 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.895392155 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.754432344 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.750023849 seconds)
  done (took 22.391115663 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.9784961 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.981665545 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.805791084 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.975928622 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.788485135 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.97820048 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.900589555 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.891016267 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.892069571 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.753257199 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.750904717 seconds)
  done (took 22.378435829 seconds)
done (took 71.426434202 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.74432519 seconds)
  done (took 3.417937112 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.766320357 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.910092841 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.753821525 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.752564822 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.748519261 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.748760149 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.757323055 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.749349974 seconds)
  done (took 15.86018352 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.747704878 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.752281981 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.750144656 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.754847172 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.750900138 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.751439818 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.745452675 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.749624127 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.748089218 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.753097021 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.746176777 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.747345093 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.74928999 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.748229256 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.746697969 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.749852455 seconds)
  done (took 29.672463275 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.749044336 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.748216593 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.747109622 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.749204123 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.74687049 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.748417434 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.748184591 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.745521025 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.749557049 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.747029596 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.748554302 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.747825624 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.747901755 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.747796041 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.746026179 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.751008152 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.748038118 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.748694339 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.752160118 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.748752797 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.749635518 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.750922286 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.750300093 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.749966929 seconds)
  done (took 43.652213912 seconds)
done (took 94.281056895 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.632734362 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.137284832 seconds)
  done (took 8.451141312 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.751079975 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.757290667 seconds)
  done (took 5.227619138 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.752140285 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.749365035 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.751934345 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.752637197 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.756700885 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.750561319 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.75212691 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.752103429 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.753375669 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.757052505 seconds)
  done (took 19.209384782 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.750582868 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.753272651 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.746833299 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.75285654 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.756760164 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.751778249 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.752461739 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.75187475 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.753676991 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.747947013 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.755446469 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.750682248 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.7520919 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.749097752 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.750247697 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.750373297 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.753126521 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.748637873 seconds)
  done (took 33.207927723 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.753985925 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.752992923 seconds)
  done (took 5.190121408 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.747045494 seconds)
    (2/7) benchmarking "second"...
    done (took 1.749125723 seconds)
    (3/7) benchmarking "month"...
    done (took 1.750227055 seconds)
    (4/7) benchmarking "year"...
    done (took 1.750195321 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.7490568 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.753974419 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.742529536 seconds)
  done (took 13.929997314 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.743661737 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.900391578 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.976785539 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.441315679 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.745277978 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.748898309 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.729204286 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.75068013 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.750229509 seconds)
  done (took 19.462029138 seconds)
done (took 106.359991922 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.530217447 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.737998817 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.071136752 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.818360964 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.757208581 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.08577994 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.749280786 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.962656827 seconds)
done (took 42.387197445 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.754164593 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.287631216 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.317019399 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 5.899552984 seconds)
  done (took 12.179862014 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.72503409 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.254755769 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.776067048 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.327316118 seconds)
  done (took 19.771471045 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.114442141 seconds)
    (2/2) benchmarking "read"...
    done (took 2.106456209 seconds)
  done (took 5.901535307 seconds)
done (took 46.283608509 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.745947879 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.746093191 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.742996538 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.747402156 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.742455316 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.744659865 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.74229154 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.742667233 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.74517743 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.747720342 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.747012289 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.744899663 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.74639876 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.744078145 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.742585015 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.748704147 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.743761589 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.743014727 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.746250298 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.746235236 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.747724286 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.748265685 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.742968364 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.743233186 seconds)
  done (took 43.558704963 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.74704177 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.747625643 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.747530747 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.749347231 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.743925376 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.747252779 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.74748712 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.747839069 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.748141954 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.747884435 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.746943524 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.746356816 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.747632267 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.74516443 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.746669942 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.745844861 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.747817859 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.748259304 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.748778906 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.746331417 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.749527549 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.745475215 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.745430603 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.748781101 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.744825666 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.745334014 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.752476555 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.746815421 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.750309894 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.745949765 seconds)
  done (took 54.098348479 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.753542567 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.758033629 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.748350291 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.751161021 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.74974546 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.749300171 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.749391067 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.749265259 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.74853979 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.751025507 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.74788511 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.751226245 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.750144683 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.75121515 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.750099521 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.749966681 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.749269569 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.748623084 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.749097721 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.749681845 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.751392145 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.751776822 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.749613112 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.750511932 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.751676565 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.75203924 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.749267083 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.752184596 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.74989802 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.750968392 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.750246964 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.751965957 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.751026708 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.752545474 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.750528415 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.750374195 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.756471759 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.758352963 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.752401066 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.750389063 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.749691627 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.750275714 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.750543552 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.7532019 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.750982829 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.750790268 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.749574365 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.753135885 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.752511254 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.750902547 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.750402604 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.75137142 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.752261288 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.751909889 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.75511761 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.751363573 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.750007962 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.750599087 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.75147266 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.750799973 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.752201429 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.752683581 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.751865933 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.752006474 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.754066529 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.752215189 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.751668013 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.751843449 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.752508104 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.754867613 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.754140128 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.75074073 seconds)
  done (took 127.779619754 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.750920116 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.748616007 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.748718026 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.750508848 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.749170518 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.753362522 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.75022321 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.752383518 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.749239924 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.752374087 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.753443183 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.750312945 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.750612345 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.75411149 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.753184308 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.75106173 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.753561054 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.749134756 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.753715725 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.755415593 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.752700909 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.752485758 seconds)
  done (took 40.218091531 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.753028867 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.75511597 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.751840424 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.75422986 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.7511008 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.75358871 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.754570975 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.75418694 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.753123347 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.752344551 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.75195308 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.755900917 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.751017723 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.751892576 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.75099015 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.751761882 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.753943121 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.750646743 seconds)
  done (took 33.234967315 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.754957362 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.754507983 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.75811764 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.751148655 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.752580767 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.753765379 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.755789448 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.754327463 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.755302437 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.752874842 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.754395044 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.75409409 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.756514551 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.75211824 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.757265603 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.752713244 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.757291275 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.753935544 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.756116845 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.753383951 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.755472662 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.75974669 seconds)
  done (took 40.290815193 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.756126301 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.757600713 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.751544482 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.753439827 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.75298109 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.756200234 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.758156002 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.754867967 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.755594729 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.754596025 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.756002628 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.755253424 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.754078784 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.755436308 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.753073184 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.753445493 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.757113251 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.758129332 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.755725679 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.754789777 seconds)
  done (took 36.790428526 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.756585487 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.756689942 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.756837158 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.756109764 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.758331498 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.757924225 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.756945752 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.758520198 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.759569839 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.758770754 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.758487339 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.757246561 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.757726156 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.758493371 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.756459556 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.756669211 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.756882041 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.758834232 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.757759249 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.760928813 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.759874137 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.757828339 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.757018046 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.759851735 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.759343009 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.75865267 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.757853388 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.758959651 seconds)
  done (took 50.914206297 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.75833846 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.759513915 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.755995909 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.755939741 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.756797393 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.75437924 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.756097278 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.755801593 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.756875589 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.754953616 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.757779226 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.758294895 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.759359887 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.759412611 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.758174787 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.761606209 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.760372946 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.758489155 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.755943805 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.755750991 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.759930159 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.758720366 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.758546674 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.759027373 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.75724479 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.761182515 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.760358521 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.757462092 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.761894232 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.756425852 seconds)
  done (took 54.43061045 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.779445677 seconds)
    (2/2) benchmarking "in"...
    done (took 1.778656785 seconds)
  done (took 5.247496026 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.75694622 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.761208896 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.759855504 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.758832106 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.758650487 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.761802286 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.761847014 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.757379675 seconds)
  done (took 15.765256809 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.759682359 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.760816998 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.760924309 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.760198577 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.760543207 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.762577391 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.766229182 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.761787312 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.761278187 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.76341472 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.768758298 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.768923466 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.763201691 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.763613401 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.761900369 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.760581669 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.76431257 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.760143276 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.762082516 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.761381914 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.762438041 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.765661933 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.765385364 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.758116705 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.764909273 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.77071416 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.766566744 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.763754131 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.761338121 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.767427282 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.763905571 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.759405963 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.763909545 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.760498414 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.762895711 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.76309301 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.770529144 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.764943163 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.767400037 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.761670113 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.761528163 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.761493404 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.762048811 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.764696588 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.764484847 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.76293878 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.76565626 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.758863663 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.76264371 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.765478204 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.768087224 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.761139722 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.761061233 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.765310278 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.76265922 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.770334063 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.763352485 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.765683489 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.774009371 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.771289113 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.77724847 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.770365417 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.763685184 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.763134136 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.772294466 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.78942129 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.767504089 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.761964767 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.761070542 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.764071083 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.768697231 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.775845559 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.773518444 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.766181047 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.764840218 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.764150031 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.76592006 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.764625724 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.769901069 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.767622246 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.766079265 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.764326289 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.773380925 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.787632868 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.763850199 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.763477143 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.765725861 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.764438086 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.765458026 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.775369445 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.764989502 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.766011714 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.764622038 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.764087039 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.767072499 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.765300963 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.765430331 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.765971812 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.76263322 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.763931493 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.765195393 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.77029031 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.773641731 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.766122827 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.766370557 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.770139988 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.765539472 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.7640169 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.773725326 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.766873865 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.766332007 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.766294798 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.771758907 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.763155189 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.770195136 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.773333759 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.766427219 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.766689598 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.766822091 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.766310185 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.774975357 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.794969412 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.768045354 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.766171581 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.771798681 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.779831095 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.767932361 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.77125059 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.76920624 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.764640483 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.764588164 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.768377994 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.766932726 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.767778204 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.767507004 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.768183054 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.766863418 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.76782389 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.768016932 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.766994725 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.76966275 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.769873266 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.769898967 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.771157906 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.767953555 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.76925458 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.772822436 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.768524618 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.769643944 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.768280453 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.767468602 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.768693162 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.77212833 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.771073938 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.769690193 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.767843005 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.768025353 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.768438831 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.768732428 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.769426296 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.769451694 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.76895543 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.772023034 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.769261728 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.773508066 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.769736625 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.765718713 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.7692884 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.768397355 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.768699024 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.769396062 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.767622186 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.771815338 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.778348485 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.769449811 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.770041625 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.771864043 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.770021534 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.769606726 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.768814465 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.771979894 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.777376948 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.7706086 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.773137018 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.769980839 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.770549399 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.76984663 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.770086009 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.769561807 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.771528285 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.77195421 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.778490047 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.782915584 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.777917447 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.769688285 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.773210609 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.7715308 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.775019697 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.772363055 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.769973422 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.771456549 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.7706419 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.770441732 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.772008812 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.771676388 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.77246191 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.770596326 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.770029311 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.769536856 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.770524372 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.7711633 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.769458485 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.771841102 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.7685682 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.769962427 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.771138479 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.769584625 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.767681505 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.76972471 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.77002388 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.771190549 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.771259216 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.778140965 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.767541887 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.77270976 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.771407243 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.769563587 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.770040843 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.771521427 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.773252859 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.771014621 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.77652015 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.772017633 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.771129011 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.777881481 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.772271518 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.771356231 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.773359342 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.773177878 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.768971575 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.774710374 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.781355192 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.773481108 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.771307535 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.773748767 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.771658881 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.774068002 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.777924015 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.769481382 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.770193475 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.775816573 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.772922771 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.768902656 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.773847134 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.774300156 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.772813347 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.775202485 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.773910775 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.773494344 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.773849254 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.775290209 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.773672534 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.774379043 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.775085626 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.78173816 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.776232369 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.774175559 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.774691963 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.774496787 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.77708058 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.773184333 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.774050796 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.772579676 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.784560151 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.781997671 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.779039216 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.776829472 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.773427005 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.778695864 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.775942896 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.778277123 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.773613468 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.773515585 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.774051708 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.773965658 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.7718954 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.775807715 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.776048127 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.775040161 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.776188074 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.777709169 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.773860075 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.777038194 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.775786888 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.775043514 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.775017068 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.774774354 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.775473389 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.77658422 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.779297302 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.77489929 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.774321357 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.781662443 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.777596715 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.776066299 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.776834111 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.776021556 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.776095982 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.776172648 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.776944132 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.77824405 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.78480081 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.778944168 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.785945014 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.779196384 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.786159662 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.778890986 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.779215071 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.786430386 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.775984186 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.774520961 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.776310358 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.778154366 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.783654094 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.777048174 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.776683251 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.78054189 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.776443666 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.777725851 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.777238104 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.776605538 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.776648283 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.778476835 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.783555806 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.779514084 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.78098341 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.778760353 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.774112549 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.77790682 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.778156433 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.778071379 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.78031122 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.777325827 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.778847046 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.776387988 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.779395797 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.776516215 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.778752162 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.775914746 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.77432285 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.777836544 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.783833228 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.778615169 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.782805071 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.777986334 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.786127762 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.778702173 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.784575781 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.778457955 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.778646193 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.779274673 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.779724364 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.77982832 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.778638026 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.781049214 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.779002468 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.780164458 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.783172969 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.7786592 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.779868802 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.778312459 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.779647637 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.777576582 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.788592567 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.804129575 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.78101333 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.784185298 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.77746034 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.783638216 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.784561492 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.779290898 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.778373545 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.78125189 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.791330106 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.78791922 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.778993053 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.780178496 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.781929487 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.781591923 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.779087132 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.779090081 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.781685022 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.780138802 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.781246035 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.780254729 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.784506404 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.780723895 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.780653321 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.780443481 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.783040745 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.789007825 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.781544592 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.782095764 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.78030248 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.779813811 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.780790706 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.78163742 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.781271171 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.781502071 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.781097742 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.781455265 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.789989123 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.789118256 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.78384549 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.780652716 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.782151245 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.781480875 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.782371072 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.781187188 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.781421987 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.782103968 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.781749078 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.782178607 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.781403937 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.781101851 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.781723285 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.782960016 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.782276825 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.784256847 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.791720023 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.782273893 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.780411857 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.783710611 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.782093541 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.780683649 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.779740843 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.789617708 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.784820021 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.793413727 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.792009962 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.788219599 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.781974466 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.785373107 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.79103641 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.781530581 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.781676314 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.782051381 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.784742081 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.784223536 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.787761453 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.784080897 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.788562286 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.783737991 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.783788336 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.790555013 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.784295069 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.78330523 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.784750379 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.78823199 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.781715215 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.780688464 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.783165299 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.78133805 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.789619789 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.785048913 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.784200955 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.785233387 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.781818505 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.782996644 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.789927068 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.782847289 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.786113436 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.784509965 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.78519816 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.785245056 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.784664175 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.783037456 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.785915496 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.784355109 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.787619577 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.794170362 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.784062683 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.786760341 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.785194396 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.78556557 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.785803179 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.78632005 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.783550742 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.781518297 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.785210563 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.785898108 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.784860936 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.788061711 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.78532429 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.785716497 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.786348171 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.786627717 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.789069785 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.796142241 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.793416921 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.782005914 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.785543084 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.787228595 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.789801116 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.787089938 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.786901595 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.784654438 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.788194895 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.786333795 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.786665211 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.786698395 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.789435222 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.802926471 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.789747634 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.786920073 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.788544887 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.790379343 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.787679502 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.78574657 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.786338488 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.790550138 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.790286883 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.797483533 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.788859659 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.792455217 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.787971122 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.78875798 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.79194875 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.791860259 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.794189431 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.789648903 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.786881455 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.789742014 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.792867141 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.801835328 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.789530474 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.798963363 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.818421965 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.787746556 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.790501403 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.787802605 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.787435039 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.789162129 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.790253706 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.788715535 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.788214987 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.788719625 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.789678719 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.788961508 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.792968177 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.789773172 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.789103386 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.788800731 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.788507801 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.788406918 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.787437459 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.790529969 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.788644584 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.78952883 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.792708072 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.788591191 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.790068416 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.801804427 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.798916357 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.789231355 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.789587883 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.787040513 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.792440823 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.79267579 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.801411306 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.798732537 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.790128101 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.790436544 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.790916526 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.789842229 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.789849271 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.790110223 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.789681499 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.791367687 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.788102786 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.802579424 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.797990886 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.792950019 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.789188904 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.793076875 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.790248472 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.792485513 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.792218245 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.789854477 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.793761135 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.791407445 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.796091667 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.791171418 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.792996843 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.796305304 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.799469969 seconds)
  done (took 1061.038330507 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.789548354 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.787743426 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.789017697 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.788764332 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.789305839 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.789067534 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.788990239 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.789440395 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.788016378 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.788221973 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.789440886 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.787898939 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.78947005 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.789491096 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.789219098 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.788749161 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.788158736 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.788708812 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.788231286 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.788117489 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.789503797 seconds)
  done (took 39.285522888 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.790274858 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.790423615 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.788578267 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.791584036 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.789303491 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.793540263 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.789710489 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.791615382 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.79093407 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.788666668 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.792557609 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.791365972 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.789709621 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.789251671 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.792525879 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.793033107 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.794560564 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.790388819 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.793405167 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.789124364 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.791979941 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.789915029 seconds)
  done (took 41.122526916 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.795438848 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.79276374 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.792861578 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.7924419 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.793288845 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.78994395 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.793635592 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.792736656 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.793098202 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.793206487 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.792465223 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.794217599 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.80000886 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.799217339 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.794638246 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.792601887 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.939524008 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.792937206 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.796389951 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.79439398 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.794069341 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.800314311 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.791965655 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.791373645 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.791499467 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.795214666 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.793656498 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.794785604 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.795149484 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.796374495 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.800533531 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.794607278 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.794838375 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.795625245 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.794764396 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.795239449 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.799123021 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.796336645 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.792986829 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.796538896 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.805324905 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.815481766 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.798874458 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.800386264 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.795005048 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.795723779 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.797556377 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.804845182 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.793304372 seconds)
  done (took 89.859642236 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.795151221 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.796031969 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.792496563 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.795306936 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.798531874 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.796848221 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.796283097 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.79624342 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.794059743 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.794247047 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.797322201 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.795163158 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.793637122 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.797880404 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.796640103 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.793338519 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.794324959 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.792168369 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.79344385 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.79595761 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.793300764 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.796552522 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.797365052 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.794356083 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.79679146 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.794623174 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.794258971 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.796742225 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.795818951 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.794514111 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.796843671 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.796944483 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.795826696 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.794396827 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.794183079 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.797132408 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.797555319 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.79528057 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.799356865 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.794390491 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.797464483 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.797585823 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.798144015 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.798239441 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.795818377 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.795345375 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.795148012 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.795312136 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.796248859 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.798938799 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.799091292 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.795623211 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.798137178 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.796885889 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.798741711 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.799996011 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.796166339 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.796817022 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.798278776 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.795550221 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.797211918 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.799729991 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.798043842 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.799724931 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.800338532 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.796516946 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.795529257 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.800303524 seconds)
  done (took 123.879388342 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.800366783 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.800444417 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.80036211 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.800401989 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.79928766 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.800580461 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.799022536 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.800320029 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.799834033 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.799003119 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.798815733 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.8000879 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.799271361 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.801736295 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.800305231 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.801612957 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.800107184 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.799296956 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.799635782 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.800311013 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.800909754 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.801405594 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.800225659 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.801552624 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.800543261 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.800884969 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.800577394 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.800389278 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.802020321 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.80028114 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.801586404 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.80141858 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.801956382 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.801438914 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.801201432 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.799081663 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.8003554 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.802216764 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.800092382 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.801119471 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.803055635 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.801341808 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.801553806 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.802589239 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.802270329 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.802264448 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.801989475 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.801367746 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.800843017 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.802403794 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.80338052 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.803122363 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.801087279 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.802285926 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.802909373 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.801569176 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.802168515 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.801757029 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.801912818 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.80276699 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.803896397 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.801178723 seconds)
  done (took 113.397882488 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.802873041 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.802941204 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.798736037 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.799179637 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.803334152 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.800727194 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.802722538 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.802496607 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.803138268 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.802380673 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.805046193 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.80012369 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.799781599 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.802783904 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.799552195 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.801409632 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.799566834 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.801615957 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.803152719 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.800135553 seconds)
  done (took 37.762377461 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.799249582 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.802562003 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.800561658 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.800918305 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.80280083 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.802711578 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.802028324 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.804764435 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.801227314 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.80321856 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.804342117 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.804788089 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.801064351 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.801818133 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.804081294 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.802309551 seconds)
  done (took 30.570085111 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.802650843 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.804785147 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.80498989 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.805704142 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.801435023 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.801321853 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.8047734 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.800710135 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.80203219 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.804019148 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.803989789 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.804784795 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.80409317 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.805802698 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.802407167 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.805226636 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.803118807 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.803337738 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.806165691 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.805511595 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.802931697 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.802785842 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.805850548 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.805514984 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.803836567 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.80416734 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.802520088 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.802895958 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.805450303 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.80414791 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.802024345 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.803246141 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.803399945 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.802996297 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.805929172 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.802864411 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.80659826 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.804482993 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.806099725 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.806512113 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.804812763 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.804288288 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.805424681 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.806024333 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.803276894 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.80706681 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.804262586 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.804577254 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.80350632 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.804765087 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.806024413 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.806163567 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.808214558 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.808312497 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.806316861 seconds)
  done (took 100.978003716 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.805251341 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.807330629 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.80428695 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.808914097 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.810009398 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.804845708 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.808297334 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.807807451 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.804155772 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.806136915 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.80608175 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.805429589 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.802764094 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.806891101 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.805322223 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.807622098 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.804135926 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.802309187 seconds)
  done (took 34.243374076 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.804034427 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.807170435 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.806506541 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.804686042 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.802273136 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.808531193 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.804072466 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.808454483 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.806318038 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.805280695 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.803687492 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.807089248 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.806711507 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.806848852 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.804851006 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.804258605 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.810236202 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.807929685 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.802565062 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.804646761 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.805789625 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.807550907 seconds)
  done (took 41.465924301 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.807017354 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.805930407 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.824150134 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.829216962 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.828141045 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.842854175 seconds)
  done (took 12.67921108 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.806091309 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.807510119 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.806596908 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.809052707 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.80807825 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.808087593 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.808800404 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.807641035 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.809488589 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.807299688 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.807299746 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.813022422 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.810906077 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.806778147 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.808718397 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.807927106 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.805893541 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.811866111 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.809078733 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.812541353 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.812677802 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.808698637 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.80810844 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.807856573 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.808352084 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.807368366 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.81093015 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.808278773 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.810084175 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.811507111 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.810913703 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.807443053 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.808272837 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.808109263 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.808979757 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.81021456 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.8107222 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.810824312 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.810869785 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.807675599 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.812310161 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.808866796 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.810164253 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.807789401 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.809152162 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.808863371 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.807968145 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.807889242 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.807770038 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.811058025 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.811745888 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.807567604 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.812297652 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.812335464 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.810345593 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.810749336 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.812056825 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.80666244 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.811532836 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.806924807 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.808628301 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.810730104 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.808534718 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.808573846 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.81311776 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.809780823 seconds)
  done (took 121.15252202 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.809266509 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.807284685 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.809214566 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.811111965 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.811171009 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.81142043 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.808905808 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.810238035 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.810037012 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.811139976 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.811620585 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.81058638 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.810033363 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.810350606 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.810210106 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.814132252 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.812862305 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.809752068 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.810677643 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.813076169 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.811264407 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.809773728 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.810521424 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.809516794 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.813944921 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.815086166 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.811595936 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.81116691 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.81169327 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.809819648 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.810671464 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.811287444 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.809256134 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.808709864 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.81120275 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.810191607 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.81016794 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.810516638 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.810303336 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.813380375 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.810485398 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.814105605 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.81088323 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.811678582 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.811682846 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.81077613 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.811397848 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.811539777 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.811395086 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.810980019 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.811666278 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.814820899 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.815029105 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.813411388 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.812739258 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.816079032 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.81192685 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.812051023 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.811079365 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.814241452 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.811879938 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.814184263 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.81635488 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.812224868 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.810695925 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.81143249 seconds)
  done (took 121.301951795 seconds)
done (took 2472.742285484 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.86100663 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.082768172 seconds)
  done (took 15.685847367 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.974970521 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.928116185 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.814336444 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.855160253 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.812007245 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.831645159 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.829185619 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.811761755 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.813106515 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.814785308 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.81457218 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.001483672 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.817967681 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.812342183 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.81465096 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.906472499 seconds)
  done (took 51.403968244 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.819952878 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.819385349 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.829681046 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.821654699 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.819121482 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.837659268 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.851896666 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.822773231 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.876908618 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.829628788 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.940027013 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.828811992 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.81829442 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.868963238 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.830124289 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.834191185 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.907436321 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.893027666 seconds)
  done (took 34.994103861 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.900169526 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.824875192 seconds)
  done (took 10.478980556 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.820963536 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.842926071 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.840769359 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.823610479 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.835540219 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.816734977 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.81773607 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.817647263 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.824441136 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.828691736 seconds)
  done (took 70.019857643 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.829864095 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.82145208 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.819975314 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.817177689 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.812749064 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.813404312 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.817494343 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.815629116 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.515362613 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.853819196 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.826195311 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.824458404 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.818711395 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.82243702 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.819097153 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.841434794 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.947034107 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.818178632 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.817884327 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.826589717 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.820259456 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.885206028 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.834170757 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.820847125 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.850441587 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.507752011 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.828488397 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.824739324 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.945304623 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.818620655 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.818422416 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.822495344 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.823357437 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.21465694 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.091193957 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.817058302 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.826990922 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.828168784 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.819776875 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.94642504 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.821262619 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.827775674 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.814737337 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.067137523 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.9130475 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.863462887 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.18349685 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.823045372 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.823379268 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.851693857 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.823559025 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.822541768 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.836437205 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.344361492 seconds)
  done (took 129.992515042 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.817490395 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.112821133 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.970297642 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.815228501 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.089867582 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.021843482 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.755429883 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.86523294 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.815932884 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.020603255 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.981051599 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.924655635 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.815964028 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.815357787 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.812729767 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.81304243 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.979609178 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.884300048 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.817002007 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.813736523 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.844081908 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.027907058 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.946447655 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.817377922 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.839049473 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.027213659 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.93800355 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.924340394 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.095080916 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.816076439 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.881912335 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.81625664 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.820212203 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.81313445 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.974092194 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.913651503 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.907255978 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.817680284 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.814615479 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.814315622 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.479420205 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.014837401 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.917245435 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.961558148 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.011526503 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.021668722 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.465126947 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.816036133 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.45781498 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.980912997 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.031888193 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.02884066 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.942570912 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.816628783 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.051423373 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.81618105 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.817034616 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.053474547 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.965448777 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.924630078 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.819440094 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.816585902 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.814670094 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.064104001 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.818294694 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.914366944 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.818713102 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.816380882 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.921763766 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.927077355 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.961761677 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.033014064 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.853502376 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.690714382 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.32808378 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.034887151 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.88794808 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.053864455 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.81989658 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.817863806 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.905917835 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.56845697 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.980608342 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.067546478 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.039500932 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.854091103 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.414152349 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.818689079 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.013987135 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.005830848 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.014350838 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.028669739 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.972536161 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.014862887 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.817596245 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.819258676 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.054001386 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.956872107 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.820941879 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.175927137 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.053663025 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.394435103 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.845002895 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.118346016 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.95503436 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.19337336 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.45053206 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.822044992 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.988872573 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.860848723 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.827205158 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.821460332 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.012752205 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.627954948 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.820587228 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.357731472 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.886311826 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.822650227 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.023687286 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.822060894 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.030970693 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.822182266 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.060241016 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.639527375 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.853935812 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.994716925 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.031768295 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.613416651 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.069534166 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.067751949 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.941265185 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.045572665 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.411480903 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.819470341 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.096309164 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.820868619 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.820559971 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.989812299 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.822674777 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.969306022 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.823659865 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.05228635 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.846268111 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.979285909 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.824519441 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.056686287 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.85833834 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.875609705 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.823931412 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.952950776 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.823363171 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.758346467 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.978791992 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.825985029 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.822464733 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.270559744 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.824230754 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.96974034 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.057017798 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.846568095 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.894484403 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.349948271 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.823615802 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.910923795 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.848141993 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.273974668 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.822766715 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.98389054 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.791988555 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.268247817 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.823773426 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.066916975 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.006780337 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.825547094 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.821655991 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.566136872 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.53056102 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.823554378 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.985291321 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.411348638 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.470940807 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.029130814 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.828084823 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.955199122 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.826916834 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.898187581 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.171887695 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.821955693 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.823887049 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.825730084 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.825029354 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.824070573 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.035617556 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.856290529 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.323334877 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.963492939 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.043203106 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.133023139 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.04728924 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.870655265 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.83051901 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.087277856 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.825419336 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.889472835 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.826522408 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.850057321 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.061938274 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.831835425 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.039922656 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.08017504 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.731048254 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.87853256 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.830422029 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.825603336 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.823931537 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.977659085 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.920427157 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.827744897 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.827404981 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.939823556 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.95636849 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.020718099 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.417288981 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.003438903 seconds)
  done (took 888.289989101 seconds)
done (took 1202.60914134 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.825837463 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.828264971 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.813492396 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.827216566 seconds)
  done (took 29.056359706 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.836485228 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.831925775 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.835055447 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.834316066 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.834265244 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.833386086 seconds)
  done (took 12.766338111 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.855636605 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.827437438 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.827916369 seconds)
  done (took 21.272906773 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.905034678 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.247595012 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.939394824 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.284606971 seconds)
  done (took 10.140843359 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.837630285 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.835229719 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.834591822 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.837026077 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.836752341 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.83713436 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.834831769 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.836421573 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.839920925 seconds)
  done (took 18.291308801 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.179138952 seconds)
done (took 97.467707561 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Int8, false)...
    done (took 4.867759406 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.479107629 seconds)
    (3/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.83579715 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.537307364 seconds)
    (5/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.813219888 seconds)
    (6/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 7.153392821 seconds)
    (7/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.839915855 seconds)
    (8/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.932691424 seconds)
    (9/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.785946388 seconds)
    (10/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.883874788 seconds)
    (11/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.178728208 seconds)
    (12/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.178872763 seconds)
    (13/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 2.003741053 seconds)
    (14/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.9624171 seconds)
    (15/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.063564227 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.079866856 seconds)
    (17/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.924484326 seconds)
    (18/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.871206863 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.85586332 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.166480932 seconds)
    (21/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.895587636 seconds)
    (22/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.831900466 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.875949782 seconds)
    (24/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.003221033 seconds)
    (25/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.116921491 seconds)
    (26/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.379266298 seconds)
    (27/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.926976542 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.895001253 seconds)
    (29/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.421506354 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.15684749 seconds)
    (31/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.816161804 seconds)
    (32/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.858324635 seconds)
    (33/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.181706362 seconds)
    (34/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.112550691 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.521726231 seconds)
    (36/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.110983116 seconds)
    (37/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.417227647 seconds)
    (38/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.913673129 seconds)
    (39/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.000094447 seconds)
    (40/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.13782329 seconds)
    (41/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.901056429 seconds)
    (42/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.242498211 seconds)
    (43/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.051323969 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.070463099 seconds)
    (45/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.964951413 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.840781392 seconds)
    (47/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.22445545 seconds)
    (48/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.820817303 seconds)
    (49/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.907344757 seconds)
    (50/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.95171901 seconds)
    (51/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.11648198 seconds)
    (52/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.907152195 seconds)
    (53/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.857361514 seconds)
    (54/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.4682851 seconds)
    (55/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.058178164 seconds)
    (56/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.191086193 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.219966042 seconds)
    (58/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.852528869 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.841286768 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.436051596 seconds)
    (61/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.831399373 seconds)
    (62/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.060420823 seconds)
    (63/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.861624317 seconds)
    (64/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.942250026 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.75063506 seconds)
    (66/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.096997617 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.934702947 seconds)
    (68/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.352756741 seconds)
    (69/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.720139078 seconds)
    (70/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.99616976 seconds)
    (71/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.833372318 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.770838005 seconds)
    (73/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.344417006 seconds)
    (74/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.932822376 seconds)
    (75/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.248801663 seconds)
    (76/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.893301862 seconds)
    (77/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.719667744 seconds)
    (78/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.999431371 seconds)
    (79/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.854833974 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.748985654 seconds)
    (81/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.82285788 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.484420295 seconds)
    (83/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.008011028 seconds)
    (84/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.450978183 seconds)
    (85/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.924169363 seconds)
    (86/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.959528975 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.110025356 seconds)
    (88/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.822025548 seconds)
    (89/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 7.539423358 seconds)
    (90/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.931139512 seconds)
    (91/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.973257897 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.888259754 seconds)
    (93/309) benchmarking ("sort", Int64, false)...
    done (took 5.527458762 seconds)
    (94/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.981006511 seconds)
    (95/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.834378391 seconds)
    (96/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.816653538 seconds)
    (97/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.00815778 seconds)
    (98/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.861134145 seconds)
    (99/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.233901615 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.636165638 seconds)
    (101/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.838719329 seconds)
    (102/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.921962685 seconds)
    (103/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.820052735 seconds)
    (104/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 8.362942473 seconds)
    (105/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.916943339 seconds)
    (106/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.819555713 seconds)
    (107/309) benchmarking ("sort", Float32, false)...
    done (took 5.670204103 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.734444228 seconds)
    (109/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.840993343 seconds)
    (110/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.922225481 seconds)
    (111/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.073435245 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.886602219 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.16319715 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.836018279 seconds)
    (115/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.948935133 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.079836785 seconds)
    (117/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.861368841 seconds)
    (118/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.128162045 seconds)
    (119/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.077650656 seconds)
    (120/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.821637782 seconds)
    (121/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.889114916 seconds)
    (122/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.271972167 seconds)
    (123/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.464055503 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.835956743 seconds)
    (125/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.824152258 seconds)
    (126/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.969269026 seconds)
    (127/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.935015119 seconds)
    (128/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.865867363 seconds)
    (129/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.13501108 seconds)
    (130/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.840170636 seconds)
    (131/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.175163792 seconds)
    (132/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.848069617 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.11246864 seconds)
    (134/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.937374173 seconds)
    (135/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.846080707 seconds)
    (136/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.820956375 seconds)
    (137/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.668642322 seconds)
    (138/309) benchmarking ("sort", Bool, false)...
    done (took 2.282068511 seconds)
    (139/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.008914966 seconds)
    (140/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.864626453 seconds)
    (141/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.98172945 seconds)
    (142/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.153386791 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.567682951 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.236774126 seconds)
    (145/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.121480473 seconds)
    (146/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.896942196 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.136438383 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.129527627 seconds)
    (149/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.098759981 seconds)
    (150/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.175295341 seconds)
    (151/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.865913429 seconds)
    (152/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.836774024 seconds)
    (153/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.749028555 seconds)
    (154/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.863251633 seconds)
    (155/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.968433264 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.938448214 seconds)
    (157/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.83932691 seconds)
    (158/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.865450758 seconds)
    (159/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.342482319 seconds)
    (160/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.03057515 seconds)
    (161/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.199956266 seconds)
    (162/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.866822772 seconds)
    (163/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.028187219 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.950022283 seconds)
    (165/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.440897844 seconds)
    (166/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.677279407 seconds)
    (167/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.044803029 seconds)
    (168/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.079143288 seconds)
    (169/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.865661467 seconds)
    (170/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.792319567 seconds)
    (171/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.143179236 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.143350679 seconds)
    (173/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.927468086 seconds)
    (174/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.861069326 seconds)
    (175/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.088319911 seconds)
    (176/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.142625584 seconds)
    (177/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.3432222 seconds)
    (178/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.034488594 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.945931815 seconds)
    (180/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.056654686 seconds)
    (181/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.839073068 seconds)
    (182/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.468761236 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.834332126 seconds)
    (184/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.199074297 seconds)
    (185/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.2263877 seconds)
    (186/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.002755972 seconds)
    (187/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.442084635 seconds)
    (188/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.823711259 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.576596245 seconds)
    (190/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.422814161 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.865931897 seconds)
    (192/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.924592295 seconds)
    (193/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.964818332 seconds)
    (194/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.84033595 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.883593286 seconds)
    (196/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.237833334 seconds)
    (197/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.868037992 seconds)
    (198/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.092915113 seconds)
    (199/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.245452813 seconds)
    (200/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.205394134 seconds)
    (201/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.989995697 seconds)
    (202/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.84041203 seconds)
    (203/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.902683602 seconds)
    (204/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.009334574 seconds)
    (205/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.444206587 seconds)
    (206/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.022914296 seconds)
    (207/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.048753391 seconds)
    (208/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.838477127 seconds)
    (209/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.890705553 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.942623205 seconds)
    (211/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.826807726 seconds)
    (212/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.851952655 seconds)
    (213/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.840809398 seconds)
    (214/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.947722288 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.140241303 seconds)
    (216/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.970262651 seconds)
    (217/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.826100105 seconds)
    (218/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.69163023 seconds)
    (219/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.268564692 seconds)
    (220/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.932259117 seconds)
    (221/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.185988565 seconds)
    (222/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.914124451 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.227288605 seconds)
    (224/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.977603262 seconds)
    (225/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.63979918 seconds)
    (226/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.047649376 seconds)
    (227/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.950477281 seconds)
    (228/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.447097335 seconds)
    (229/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.937030294 seconds)
    (230/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.827897684 seconds)
    (231/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 3.570231992 seconds)
    (232/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.996970959 seconds)
    (233/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.844367112 seconds)
    (234/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.692780771 seconds)
    (235/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.865190102 seconds)
    (236/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.883419869 seconds)
    (237/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.938422634 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.91755513 seconds)
    (239/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.103165496 seconds)
    (240/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.996812557 seconds)
    (241/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.83023655 seconds)
    (242/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.975575491 seconds)
    (243/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.137564207 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.754920541 seconds)
    (245/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.953767537 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.847818523 seconds)
    (247/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.931466142 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.216850913 seconds)
    (249/309) benchmarking ("sort", BigInt, false)...
    done (took 6.843389487 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.777717525 seconds)
    (251/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.934095793 seconds)
    (252/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.372341568 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.225182816 seconds)
    (254/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.525456833 seconds)
    (255/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.752489597 seconds)
    (256/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.905694944 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.941282624 seconds)
    (258/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.877129917 seconds)
    (259/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.231299803 seconds)
    (260/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.763596946 seconds)
    (261/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.238487142 seconds)
    (262/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.027177607 seconds)
    (263/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.177611867 seconds)
    (264/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.144931563 seconds)
    (265/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.983488632 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.649603241 seconds)
    (267/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.786023508 seconds)
    (268/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.363342666 seconds)
    (269/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.135206986 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.029742931 seconds)
    (271/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.98063838 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.170840129 seconds)
    (273/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.871149945 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.886121154 seconds)
    (275/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.712460392 seconds)
    (276/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.869444351 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.871172031 seconds)
    (278/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.907686445 seconds)
    (279/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.024354416 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.020763592 seconds)
    (281/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.9880459 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.932215074 seconds)
    (283/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.965713989 seconds)
    (284/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.84548486 seconds)
    (285/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.986042408 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.964954994 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.234507866 seconds)
    (288/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.351586778 seconds)
    (289/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.544707863 seconds)
    (290/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.146823006 seconds)
    (291/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.249884827 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.631093296 seconds)
    (293/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.983150088 seconds)
    (294/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.930589153 seconds)
    (295/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.042753223 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.895684969 seconds)
    (297/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.820850395 seconds)
    (298/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.196133854 seconds)
    (299/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.698253976 seconds)
    (300/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.850428645 seconds)
    (301/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.937058322 seconds)
    (302/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.931231272 seconds)
    (303/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.954954327 seconds)
    (304/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.060177201 seconds)
    (305/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.838511611 seconds)
    (306/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.627940085 seconds)
    (307/309) benchmarking ("sort", Float64, false)...
    done (took 5.671109492 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.09292758 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.923404244 seconds)
  done (took 1001.259299038 seconds)
done (took 1003.085775886 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.882298836 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.873573402 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.85961048 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.879765959 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.9691639 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.886636933 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.869691312 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.859955284 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.906177421 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.906794804 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.857440333 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.885797804 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.859029335 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.856283074 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.857007652 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.871450972 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.167179489 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.884545836 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.873482986 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.868657468 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.875306643 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.856381396 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.908004284 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.885760887 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.864026634 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.862381448 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.863230647 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.879101681 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.970945321 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.863271422 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.861854707 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.869948102 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.166494469 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.887189967 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.854086879 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.877774078 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.869670203 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.868481267 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.863288993 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.890534963 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.308459806 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.865235307 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.863574462 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.860456247 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.860495393 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.865422414 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.859124177 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.867320721 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.87322036 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.873822536 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.309283544 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.880890397 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.861766334 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.863862118 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.872731007 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.860922528 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.866170545 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.873909908 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.879177649 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.875901336 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.15777873 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.894480793 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.862681417 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.878017699 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.86815813 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.345850156 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.862131354 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.866073384 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.310933965 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.8724201 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.344050758 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.874398842 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.862747073 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.873699546 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.892081548 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.169205563 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.886540436 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.862053608 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.870530842 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.860074708 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.873141566 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.873722654 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.867365985 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.863241952 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.874061572 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.889999867 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.873042423 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.863003649 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.871061778 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.881727203 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.86928287 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.87334619 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.866561339 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.859678732 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.872335848 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.868013076 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.864743375 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.865325069 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.868574597 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.874910814 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.308626888 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.884429662 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.859820833 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.860215119 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.863138758 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.876720127 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.308699261 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.867493263 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.885946096 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.911483717 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.866643311 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.159673224 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.893253096 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.87954946 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.874137485 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.8683787 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.861486839 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.161192037 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.338208445 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.883495085 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.867190711 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.861652468 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.878543083 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.865627988 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.863328259 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.171394642 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.894143656 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.876037839 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.985059605 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.8758145 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.895817968 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.860863314 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.86963378 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.896999346 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.880571892 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.895666466 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.868310988 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.880507008 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.882339684 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.861670631 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.875219981 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.87626213 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.864816362 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.872197244 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.859250086 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.89245153 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.877335316 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.875682039 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.887438982 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.985679623 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.864050688 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.162167851 seconds)
done (took 292.804788007 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.932048586 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.852813377 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.960969442 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.860845338 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.946406938 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.949704815 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.858459249 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.857984292 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.859358665 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.239756709 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.859523853 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.868653696 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.857913968 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.861478443 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.946666008 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.861514237 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.85939194 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.202828739 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.864252712 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.932949938 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.857145088 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.859663968 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.862025761 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.248209674 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.854943483 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.856873658 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.935046051 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.863206492 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.212520888 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.85723097 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.856042452 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.213281664 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.954200798 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.883338825 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.873232497 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.870481826 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.949062439 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.869309345 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.943920121 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.946318026 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.962224494 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.903160654 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.8611817 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.856442558 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.869941669 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.865228036 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.860550102 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.890371412 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.856919995 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.863036952 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.204725834 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.874392355 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.871506931 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.861241087 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.861139628 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.886979565 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.863494049 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.866206471 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.953949121 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.86691231 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.929783112 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.25252076 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.244683301 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.86447448 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.857642483 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.862897387 seconds)
  done (took 183.899747996 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.93232148 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.940148309 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.93251585 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.869275717 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.915858078 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.379702432 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.868850681 seconds)
  done (took 15.628882291 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.873400901 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.865787998 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.9151083 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.915885164 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.866007148 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.015298101 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.865429078 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.877524522 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.863645629 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.922819701 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.866924611 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.868327997 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.872485522 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.855678244 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.914632274 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.877065858 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.981119208 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.867964896 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.868122279 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.022990682 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.873627743 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.864245945 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.921639785 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.878943051 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.86873438 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.872244813 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.448643563 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.869059858 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.864040715 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.866611053 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.863744555 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.908432419 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.86826887 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.861423074 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.865253709 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.983633096 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.865593595 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.865396564 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.866382164 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.865532407 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.86748883 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.865783632 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.867829426 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.865642336 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.868095348 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.891427102 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.869379763 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.868045735 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.869004297 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.86781038 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.916592829 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.868652194 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.865199747 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.865550148 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.923956859 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.875495237 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.86952897 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.866236406 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.868465297 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.864626713 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.024651406 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.91728445 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.867916172 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.917063012 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.867463613 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.867152891 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.867851771 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.868179071 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.922634223 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.868061909 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.916447942 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.866950874 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.026494668 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.891753743 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.870016645 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.872210808 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.871697178 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.870861207 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.870119075 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.87530454 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.865007808 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.869032956 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.876721444 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.866361415 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.867815261 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.981477638 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.978871058 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.866097819 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.880680738 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.875797856 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.865829623 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.922045791 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.870847075 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.868201215 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.920719381 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.982721413 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.92461684 seconds)
  done (took 205.59977899 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.873823307 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.878535784 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.870926845 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.886580991 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.870054387 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.871406037 seconds)
  done (took 13.046551634 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.87243004 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.87250839 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.870550375 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.871879753 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.871989757 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.870628534 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.872311806 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.872084379 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.875925925 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.871312489 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.872194815 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.873541908 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.872960028 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.872400681 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.871501304 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.871118632 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.872969847 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.867359746 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.872029264 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.872364165 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.01604662 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.872144324 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.871204685 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.874821564 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.878070017 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.871170316 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.879691001 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.873422425 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.872798942 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.882121119 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.875472017 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.874190747 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.873077065 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.878440693 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.878486869 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.873364097 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.876669872 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.874078476 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.868992261 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.87285919 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.87496456 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.872524708 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.87279946 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.875344872 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.873225493 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.878499016 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.879995232 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.881184807 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.874487259 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.875170901 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.875140589 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.87446398 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.874814901 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.876513106 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.875535911 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.878912426 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.880050196 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.875218463 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.873579947 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.874934504 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.876448918 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.872069748 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.876424837 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.880052581 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.882027689 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.874208812 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.875093892 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.879524913 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.875023542 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.874618101 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.875726549 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.870430342 seconds)
  done (took 137.903958143 seconds)
done (took 557.883542813 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.107437346 seconds)
  done (took 8.906570867 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.889863351 seconds)
  done (took 8.77213793 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.511380216 seconds)
  done (took 10.310422297 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.877907197 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.892818983 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.879073797 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.870810049 seconds)
  done (took 29.330341037 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.995256323 seconds)
  done (took 8.794305468 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.883143303 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.866966996 seconds)
  done (took 15.584483605 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.995318053 seconds)
  done (took 8.796352132 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.983015994 seconds)
  done (took 8.789116612 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.895593686 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.876684868 seconds)
  done (took 15.58828636 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.853434336 seconds)
  done (took 8.654501988 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.533331105 seconds)
  done (took 11.343033145 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.883180137 seconds)
  done (took 8.697226031 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.926875913 seconds)
  done (took 8.727321761 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.119038846 seconds)
  done (took 9.91983211 seconds)
done (took 164.012324561 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.872669583 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.867949601 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.868534734 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.869267694 seconds)
  done (took 29.277945994 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.910219852 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.908616436 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.910987526 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.918994527 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.912327835 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.909939794 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.900287637 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.900274832 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.920777791 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.913218207 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.912311232 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.912821923 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.910635648 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.90137236 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.91106813 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.910191341 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.91947578 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.91177418 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.902886469 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.912162409 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.876501847 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.920398902 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.912554538 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.877100937 seconds)
  done (took 47.598476649 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.073229239 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.949095411 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.031110394 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.930588277 seconds)
  done (took 9.785136652 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.928649884 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.928414732 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.940444556 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.981831968 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.006954321 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.938730477 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.903218672 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.897417143 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.884464378 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.929798052 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.005273268 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.948383593 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.015019655 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.876034539 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.064364507 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.877741309 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.876521337 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.929322478 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.981534928 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.994642338 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.877201547 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.929328924 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.93279904 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.946863392 seconds)
  done (took 48.397569759 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.875288717 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.884086492 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.883670633 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.878014034 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.878263778 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.875758181 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.882927193 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.876880562 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.897690795 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.878585227 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.876172824 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.874812625 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.875716033 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.877683843 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.876602918 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.890365213 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.891947902 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.87765307 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.881853999 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.885224205 seconds)
  done (took 39.423186049 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.872532086 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.807314316 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.223166692 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.128914196 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.872096131 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.87164121 seconds)
  done (took 32.578883644 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.892150609 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.883092601 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.88075695 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.936438184 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.014031034 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.884018084 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.878655048 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.889475817 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.924281758 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.939268937 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.896899196 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.905974111 seconds)
  done (took 24.729874028 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.874920614 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.874020806 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.875115127 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.889246102 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.891188414 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.885815522 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.886912145 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.873750514 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.890776269 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.896853648 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.88452121 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.892494026 seconds)
  done (took 44.424068653 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96153297 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.917833392 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.919061631 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.557602858 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.251947244 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.082811093 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.567082604 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.21925219 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.879405276 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.147623319 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.902853954 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978734163 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.133169306 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.454934118 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.910147088 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.341546614 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.166228909 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.082622667 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.898644852 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.518385175 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935762655 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.142657502 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.65363159 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.927499945 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.086798581 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.004059603 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.135533462 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.875209168 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004735859 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.90858582 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885694168 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.87504862 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.149857198 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.256751828 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978563669 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886042348 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.496289864 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.587918245 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.861643284 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.646342369 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.558709602 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.989460727 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888033127 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.875923031 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.81203756 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.111051744 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.260452206 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.882497797 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.589854965 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.878711079 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.88874212 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.971701976 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.882396209 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.693719349 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.795680122 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.876079665 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.873401544 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885137255 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.453512128 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.95894507 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.1341435 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.853688219 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.969989684 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.602506577 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.260192358 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.018770755 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.883587061 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.883197905 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.815240128 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.518908394 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.930008504 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.20845023 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.896281571 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.53093543 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.172707084 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.929200373 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.818835122 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.145579125 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.491595312 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.854165013 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.10606295 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.880295591 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.814933048 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.833200987 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.814074045 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.141832729 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915154169 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.65774114 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.916872134 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.219978896 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.8901345 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898464883 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902438943 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.102592737 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.762691823 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.879125298 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.656873637 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.025506728 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898192553 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.218771662 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.813913533 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.881271725 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.136527219 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.090903247 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.025068518 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.383292642 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.038965339 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.527519129 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.934021007 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.11409889 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.9311301 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.14320075 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.933981848 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.957606155 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931303354 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.879451983 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.17341186 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.560229131 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.018720189 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.91954562 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.006459271 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.215497735 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.905924343 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964136389 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.889709565 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.882119008 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.613970407 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.430790116 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.881194878 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.882528157 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.027735662 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.931199881 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.88196583 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.833350281 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.513440268 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.899701223 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.895514231 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.106836991 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.549879588 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.193966372 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.818665521 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.21330536 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.937065306 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.103136788 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.518441348 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.945134588 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.142270275 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.03812596 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.07279696 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.933110224 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901780562 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980754897 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906460395 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.113797324 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.180612508 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.88727895 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.886597083 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.645895175 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.913519286 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.883803909 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.888354078 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.636466141 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.149668778 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.901032691 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.886216443 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.772980075 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.901198904 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947467336 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.888673205 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.893396893 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.426887188 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.6010284 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.890004372 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.479317564 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.106749226 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.893415673 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.595199156 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.998822968 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.972014901 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.150516775 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.93818376 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.818362268 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.595977354 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.57667156 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.884874724 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.819752732 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.884969305 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893363625 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.896069267 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.083477331 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.15359857 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.922319484 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.535693513 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.924656905 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.893928313 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.888925331 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.884318723 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.398778923 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.969767157 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.150850973 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.934657305 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.029040082 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.899128398 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.817914243 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.888881797 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.890592391 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.886453578 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.886619515 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918985314 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.540072575 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.271754527 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.14708962 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.497492867 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.900118368 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.586902766 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.93975349 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.889446003 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.671551611 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.130361908 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.923177206 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916602329 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.897417505 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.611043613 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.592072791 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.45519319 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.185792534 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.179564635 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.330752362 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.176787569 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.917793349 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.228376661 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.820865546 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.443725313 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.948518976 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.236428191 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.831446246 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.977167724 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.526253245 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.2196108 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.899623461 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.113718835 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.299201141 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.616595183 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.044500499 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.098189052 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923770028 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.122412787 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.852860373 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.40937196 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.033746072 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.533254763 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.086574728 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.235210378 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.557063623 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.001541614 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.887466358 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.579993612 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.973328273 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.602038906 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.061737912 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.148367577 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.809331039 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38198423 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.894775274 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.114245324 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.232603847 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.136209593 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.021513417 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.825579322 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.900015448 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.899912645 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.889692328 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.889347804 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.759077195 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.143861394 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.900307905 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.822427497 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.080712586 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.178823142 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.785906797 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.894647058 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.888760873 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.186454517 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.51119863 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.056254499 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.055907088 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.414294998 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.896827639 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.825506925 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.824355041 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.583365677 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.896485819 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.865387481 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.094414949 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.992378125 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.845357948 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.050026851 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.973998671 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.14702849 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.905177938 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.153860511 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.160554206 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.588329296 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915469391 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.992059054 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.53577644 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.988318397 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.890864177 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.129133567 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.650380783 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.116851622 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.94002648 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.848499486 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.889551565 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.107799305 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.891161131 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.783577158 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.112191686 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.614354557 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.903204339 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.202560603 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961459192 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.793532007 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.931308686 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.983507783 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.902704194 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972366046 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.901620576 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.902624007 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.902258517 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940330549 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.806160673 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.006008856 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.908266501 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987300481 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.980666949 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.417030439 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.89754202 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.162037234 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.23958758 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.203001321 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.947116821 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.892422209 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.894038482 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.827059145 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040257819 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.119979923 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.168064376 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.025534535 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.007574962 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919566259 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.553007449 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.167593607 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.138604023 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.169171155 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.788348962 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.497045723 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.937316655 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.895490287 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.904235602 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.107153518 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.103306145 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.195349663 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.040985206 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.05303524 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.26511829 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.167438805 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.896229854 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.895584289 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.48631271 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.906371582 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.59184805 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.933393547 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.788923213 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.162766053 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.904623747 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.272668705 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.916821074 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.049609084 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.669361885 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.585360778 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.1824079 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.881724619 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.945142778 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.174416288 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.266704332 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.204428129 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962079646 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.905601529 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.005620726 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042855509 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.766136615 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.895119 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.898863956 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.947047576 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.606760052 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.904849599 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.165527308 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.202800027 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.892765616 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.77006142 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919319451 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.907083533 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.120055297 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.157582403 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.149534509 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.906484892 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.903785642 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.712633712 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.166579212 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.952725154 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.834147506 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.898907497 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993199195 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.144113413 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.920253461 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.351084948 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.609185235 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.168924738 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.898777023 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920039612 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.141033732 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.254119484 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.210233197 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.432042641 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.103389868 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.484231158 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.567952483 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.201748947 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.902237866 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.136100547 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.204845667 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.902493755 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.051459414 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.940954618 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.162790198 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.207474778 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.91178646 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.569478528 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.867998231 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.240484901 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.460355209 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.838319508 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.908913412 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.959510925 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.900718344 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.02935653 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.908611078 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.790165855 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.131394988 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.685000899 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.183994125 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.902133629 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.886748343 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.609879852 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.263204151 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934791752 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.044469867 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.901434321 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.575400672 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.253749036 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.158414463 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.063748362 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.909452611 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.903658705 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.899896076 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.890106575 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.097773071 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.098271915 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.174389013 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.08551341 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.942162818 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.906210503 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.118053772 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.113481838 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.789123151 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.029088093 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.059453942 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.945492413 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.806296306 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.411305752 seconds)
  done (took 1684.83080596 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.920752381 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.921313953 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.978508787 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.931813264 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.916999405 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.922967405 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.979924093 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.950094672 seconds)
  done (took 57.356378733 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.904205174 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.098132877 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.909273871 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.901255616 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.907706096 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.901430167 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.070081691 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.911445376 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.908395033 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.911849051 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.918843949 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.897865107 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.217185217 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.924835005 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.902401891 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.887062252 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.908123938 seconds)
  done (took 74.927536682 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.905053669 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.00509269 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.926306302 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.915329149 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.86258756 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.919220162 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.716240498 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.94841466 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.90067389 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.140023005 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.539231039 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.931400383 seconds)
  done (took 90.543725966 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.91515389 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.912000391 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.911036824 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.909591336 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.909761131 seconds)
  done (took 11.395918891 seconds)
done (took 2197.097245361 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.158516902 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.122140678 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.135947637 seconds)
  done (took 6.093824426 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.053962856 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.101014588 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.220175267 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.243258109 seconds)
  done (took 10.455774394 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.193653593 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.272958418 seconds)
  done (took 6.302152055 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.314799019 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.914870749 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.285400276 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.905315186 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.903983366 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.902797094 seconds)
  done (took 22.552757402 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.909239087 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.912209991 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.907763037 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.911045861 seconds)
  done (took 9.475895831 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.890204716 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.599253416 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.887493419 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.902841573 seconds)
  done (took 21.114839139 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.656756285 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.668773243 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.65234865 seconds)
  done (took 9.81363971 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.344473986 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.791983484 seconds)
  done (took 8.97253648 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.175744548 seconds)
  done (took 4.012360536 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.041940879 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.219190562 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.381595419 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.408579986 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.496718296 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.608194448 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.236052015 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.162248037 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.307252309 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.35076825 seconds)
  done (took 25.049364052 seconds)
done (took 139.350514862 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.293158979 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.143169003 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.1092982 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.25048135 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.151644166 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.106971521 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.122581972 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.234388215 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.754880012 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.752113218 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.244503256 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.1294976 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.069928822 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.147576187 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.071373898 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.142754014 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.129071497 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.308997848 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.945279968 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.141592694 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.125326187 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.884574561 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.091016278 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.898691325 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.220288226 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.057015424 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.464186039 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.152051899 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.097063327 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.471672195 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.062610963 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.299274998 seconds)
  done (took 173.911498047 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.825651827 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.905481314 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.90738911 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.907414555 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.379771619 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.908048416 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.907719421 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.9055606 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.181706679 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.174469512 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.918164817 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.413483984 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.919096844 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.90697638 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.913825937 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.908185 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.297330373 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.914723225 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.922420517 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.922503708 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.928418652 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.321155345 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.924116304 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.360838946 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.303483428 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.924153527 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.907617601 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.926995865 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.912374942 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.912399405 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.916678803 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.906659417 seconds)
  done (took 210.124309252 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.910605628 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.908358546 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.907381998 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.907196545 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.907882528 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.90905228 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.910948263 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.910291996 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.489052235 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.483338285 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.91612204 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.91337722 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.914879032 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.906558951 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.919352967 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.907614609 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.920006343 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.914807954 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.916347467 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.921821913 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.925380939 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.643563909 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.929299909 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.644538635 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.923351896 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.943147652 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.909647686 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.935039802 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.930651289 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.931572076 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.930244397 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.910737576 seconds)
  done (took 221.804212293 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.114950524 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.919918236 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.919569109 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.878670687 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.919546823 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.918442193 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.912682356 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.118346664 seconds)
  done (took 20.004658329 seconds)
done (took 627.697141411 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.488263279 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.249301919 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.105801271 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.944097095 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.184222254 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.980851134 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.939595594 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.009863006 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.685434151 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.011389824 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.596734983 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.957108765 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.687077664 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.963968504 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.072892029 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.994770085 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.510306701 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.598383554 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.121173848 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.002551931 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.127094762 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.934534173 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.016195475 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.708934315 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.705196347 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.94976148 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.14337671 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.516671841 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.951368919 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.105084213 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.674928015 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.346617197 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.952153101 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.935521803 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.990293916 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.971978318 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.312763562 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.948890694 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.070852044 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.687552989 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.997727277 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.560410145 seconds)
  done (took 105.556355109 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.910645827 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.909118181 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.908529055 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.910351236 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.911310127 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.909480676 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.908328275 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.907604884 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.910362081 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.908907224 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.908430939 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.911423851 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.908503337 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.910210907 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.90860085 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.910434728 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.910096738 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.91303002 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.910584358 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.908491252 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.907882172 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.909763228 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.911480639 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.910282832 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.911718956 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.913298808 seconds)
  done (took 51.517793484 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.923517955 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.068198087 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.149578505 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.940833355 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.922716984 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.92756029 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.943008392 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.926698907 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.923854888 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.924187206 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.017122139 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.928674003 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.942670995 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.160478877 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.937339082 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.923527842 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.926192273 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.923729606 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.074110405 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.941986638 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.944541686 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.925648564 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.944247773 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.937319695 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.92653267 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.924425794 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.927365139 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.36373339 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.933160266 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.017845677 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.00990956 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.945023926 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.324224664 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.163281573 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.991626495 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.930203623 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.927924006 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.024161018 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.930640642 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.92640922 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.944777925 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.928400371 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.150161759 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.422297917 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.937201527 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.925709179 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.373914018 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.02905482 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.963709777 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.93613532 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.154458148 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.941461905 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.927792726 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.927178265 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.961425378 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.935193802 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.925635736 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.240800069 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.93641992 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.946073665 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.931312054 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.925746369 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.08419632 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.932482917 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.071826469 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.934027899 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.934746908 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.927403326 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.154414082 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.942878419 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.424621933 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.94087925 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.926597009 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.01658881 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.076537362 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.398386299 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.937277324 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.087382432 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.340389398 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.948283415 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.93415273 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.354552792 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.954493705 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.936172512 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.928598324 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.92845416 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.92832779 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.971386245 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.942782941 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.356829266 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.430374432 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.253152147 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.954509337 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.944713603 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.929644781 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.244428174 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.938131918 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.929819329 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.149132495 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.43749788 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.940912793 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.93531486 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.410263986 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.9418886 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.949110466 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.938249586 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.157035417 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.94449351 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.97310693 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.928972975 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.934899728 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.930853736 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.948427616 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.93765214 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.931622595 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.40286046 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.037802682 seconds)
  done (took 238.430664153 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.923677194 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.922983854 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.92295015 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.919473547 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.9208063 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.927511985 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.922985525 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.924261923 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.930642246 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.924611095 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.922820487 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.921965055 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.924525499 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.928184757 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.962425987 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.929431843 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.534651228 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.921967375 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.923867234 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.922850995 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.572493525 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.92748264 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.921503188 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.929116443 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.92329986 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.922812621 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.931625842 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.953029621 seconds)
  done (took 169.07052902 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.931429403 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.045434891 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.945474468 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.958918111 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.942705125 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.927815207 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.954760898 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.944670643 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.933395751 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.928220515 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.929914661 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.992432535 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.941325539 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.034213927 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.960270723 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.960530188 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.035409078 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.937394897 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.929973245 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.928627528 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.959491779 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.924579881 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.991978006 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.055937873 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.94835573 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.049389953 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.933176254 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.932660714 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.93037607 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.04957813 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.943641052 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.990054278 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.956894874 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.950381891 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.048012337 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.047161372 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.036687311 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.959542872 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.935712921 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.931860816 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.930735244 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.920082243 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.051703751 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.948408116 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.932697717 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.042010517 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.948945523 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.933625871 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.940736001 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.930145906 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.944913771 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.948196944 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.997911729 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.059628427 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.962829337 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.957537247 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.957044834 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.218370122 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.940792932 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.034557836 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.925408954 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.050904718 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.951962652 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.919777683 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.93300651 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.939226098 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.961236157 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.962735683 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.037655841 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.940041159 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.035436815 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.968655506 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.939124952 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.931188469 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.93668928 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.05055875 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.052897714 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.96873889 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.971711596 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.962144703 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.928825242 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.933001909 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.922228128 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.952545664 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.939722781 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.049771642 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.053376558 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.942646889 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.934907228 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.93573812 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.935940896 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.960328559 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.056320528 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.970090518 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.036350742 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.004682614 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.009329621 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.945928922 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.947865145 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.938883703 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.998924321 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.946484804 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.94609966 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.270232006 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.006180805 seconds)
  done (took 209.203844698 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.414813374 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.987278551 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.98973354 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.216057911 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.361782994 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.758900169 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.979465315 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.983023096 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.006975072 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.141237825 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.043541374 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.000277177 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.971467681 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.956321522 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.98495956 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.003980477 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.989746975 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.289159486 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.110072403 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.119167824 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.962817085 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.289985679 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.305645605 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.374850166 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.017455829 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.308532122 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.655181688 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.22376011 seconds)
  done (took 63.312943818 seconds)
done (took 838.935774179 seconds)
SAVING RESULT...
DONE!
