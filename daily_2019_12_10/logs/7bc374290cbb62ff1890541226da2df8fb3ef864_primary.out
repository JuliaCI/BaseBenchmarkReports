cset: moving following pidspec: 24271
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.38286181 seconds)
loading group "string"... done (took 0.566865919 seconds)
loading group "linalg"... done (took 7.150782749 seconds)
loading group "parallel"... done (took 0.157519893 seconds)
loading group "find"... done (took 1.139023056 seconds)
loading group "tuple"... done (took 1.742949725 seconds)
loading group "dates"... done (took 1.230273133 seconds)
loading group "micro"... done (took 0.218351224 seconds)
loading group "io"... done (took 1.00830581 seconds)
loading group "scalar"... done (took 37.562017222 seconds)
loading group "sparse"... done (took 11.720635222 seconds)
loading group "broadcast"... done (took 0.926003041 seconds)
loading group "union"... done (took 12.29425028 seconds)
loading group "simd"... done (took 4.504176141 seconds)
loading group "random"... done (took 9.057785743 seconds)
loading group "problem"... done (took 1.718332021 seconds)
loading group "array"... done (took 20.891098975 seconds)
loading group "misc"... done (took 1.683290376 seconds)
loading group "sort"... done (took 3.351585366 seconds)
loading group "collection"... done (took 17.243598074 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.505374164 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.122660026 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.116130955 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.11706247 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.144620553 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.111488146 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.122569347 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083131398 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.799623972 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.148720227 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.115925499 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.423879451 seconds)
done (took 5.047891324 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.170280616 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.081873998 seconds)
    (2/2) benchmarking "String"...
    done (took 0.080516949 seconds)
  done (took 1.223353683 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064457942 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.121264418 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065142999 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.065768497 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065545342 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.064530222 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065062197 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.06461232 seconds)
  done (took 1.572928656 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.071188537 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067881719 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.065072831 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.066363861 seconds)
  done (took 1.332779529 seconds)
done (took 5.43479586 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.780528243 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.201540082 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.188810252 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.408862375 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.129567473 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.15701528 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.627077187 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.331131503 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.186496722 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.079286521 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.10704059 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.324379239 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.108217422 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.63392321 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.073554023 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089217848 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.136700974 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.432961366 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066330156 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.080342579 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088080731 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128269127 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.086396409 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.072692073 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.143892431 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067069097 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.135922757 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079379448 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065317617 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.209204337 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.171428965 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.653979353 seconds)
  done (took 10.145591955 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095013973 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.095957589 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067890215 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.124231941 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.095481133 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068124662 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.069674748 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.065885796 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.085373086 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.126061213 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.08655933 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.09961226 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064305834 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.067262305 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083149193 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.202686967 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081332724 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080312667 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069596447 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074960153 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.103675943 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.076543134 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.075367211 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.075429661 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128018827 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.178632925 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.097073604 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.095719132 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.065474396 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.077810376 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.113695547 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.12521572 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064793125 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.064885539 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.122129488 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093028854 seconds)
  done (took 4.45814972 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.996066844 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.1417882 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089140703 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.133068772 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.063772801 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.107090455 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.063982407 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.079722013 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.207166011 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.370929313 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.110273246 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.581148978 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109481483 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102006569 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.065912605 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067084765 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.065642295 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.466199482 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.093667334 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.106170916 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.080076141 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068545702 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.067709073 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.351698728 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066564718 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063263511 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06723191 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.056374599 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.123283308 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06683982 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.935099113 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.124751157 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065042392 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099168823 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.15977864 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087129694 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.271312508 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067966986 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.06414977 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.153179113 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.069386915 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.063680965 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.06591946 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083076752 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103003938 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.111580033 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.064661329 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.065393621 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161095261 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064142613 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.077980822 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.63413765 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.152018068 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.075027672 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.063196212 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.25302765 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.090018685 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068326543 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064232821 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.179410281 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.132610162 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.066955336 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066072273 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067129354 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063674524 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.067613992 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.371244252 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065298995 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.879566314 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.06921952 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.07478944 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068208086 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068366617 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072519174 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071498925 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.086364244 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065523125 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074053176 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.064922828 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.064755073 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.065524519 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.082548593 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.37199236 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.064953688 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06673417 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.063239906 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.087517912 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.094930205 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.067912152 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.063913774 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098311799 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.062282979 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.0661375 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.064386418 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.104823157 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.064742496 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.081676191 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068009194 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.111407386 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.064388435 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.198311548 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067172312 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.094448499 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.068753865 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09844724 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.078963221 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066811701 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.416594589 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064482587 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.063776956 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067858371 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.06444255 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067088619 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.06536638 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.07876086 seconds)
  done (took 20.747085217 seconds)
done (took 37.40811676 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.234346552 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.072887392 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.073009319 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.078701299 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.072913603 seconds)
  done (took 1.686275119 seconds)
done (took 2.818058221 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.122274332 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098542484 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064066509 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.096597895 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063080352 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100787916 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.099789801 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080639022 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100130777 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063079487 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098466473 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063188665 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063406642 seconds)
  done (took 2.268832519 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083172454 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083425235 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069200287 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082717638 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063184391 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081976471 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081281975 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088276644 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081334671 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071997877 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06274343 seconds)
  done (took 1.974547702 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081747689 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083712068 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068907839 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082013876 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063828976 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080967696 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080390239 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085127126 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081658683 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073838443 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06346183 seconds)
  done (took 1.969020321 seconds)
done (took 7.334616422 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076315407 seconds)
  done (took 1.192791104 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.583919994 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.032786908 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.079894932 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.108899287 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.186842129 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.114021079 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.258129855 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.083802726 seconds)
  done (took 8.746173002 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.08903266 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069558936 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.06809792 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.081046805 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.070579401 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.069961205 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.06767068 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.07080139 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068064199 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.069929545 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068045014 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.070578083 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.06718935 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070242004 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067182322 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.069528566 seconds)
  done (took 2.333022177 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091079848 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.090171239 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073265071 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.073650058 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.07094872 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.070012659 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.072747227 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.071583931 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.069673654 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.070619215 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.072857646 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.072114465 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.070079374 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.063085165 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.072072239 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.073760037 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.069541194 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.072058731 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.072390712 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074423016 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.073350583 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.062770978 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.06994982 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.072487105 seconds)
  done (took 2.970433712 seconds)
done (took 16.366253343 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.111802903 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070343924 seconds)
  done (took 1.307152474 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080092594 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081480872 seconds)
  done (took 1.292720405 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.081939909 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.064770815 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.088831514 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.07679623 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065358445 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065149994 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.085901354 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.064631704 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.064191306 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.064778229 seconds)
  done (took 1.854368496 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068176751 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.076365644 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.068833972 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.08000019 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.07161154 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063048078 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.070620667 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.066797457 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.075877278 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.061356676 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070390385 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.080878999 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.069426107 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083122349 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.070206851 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.066694003 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.069446221 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066025015 seconds)
  done (took 2.414427818 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.064315247 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.065511075 seconds)
  done (took 1.267245352 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.065796948 seconds)
    (2/7) benchmarking "second"...
    done (took 0.06210653 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066140092 seconds)
    (4/7) benchmarking "year"...
    done (took 0.06506896 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.062014307 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.060891612 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.06191212 seconds)
  done (took 1.579013598 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.379392219 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.111474069 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.306485359 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.069921927 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.080466806 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.255432897 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064488213 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069436907 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069411093 seconds)
  done (took 2.584785397 seconds)
done (took 13.43925806 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079047954 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085006979 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.094484814 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.371081658 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.089963218 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.064778507 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.112358003 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.187519483 seconds)
done (took 2.231293777 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.210604154 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.623001321 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.39744236 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.203210941 seconds)
  done (took 2.363084625 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.340255333 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.086615542 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.057541623 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066223056 seconds)
  done (took 1.711399525 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.064295244 seconds)
    (2/2) benchmarking "read"...
    done (took 0.067915092 seconds)
  done (took 1.277519898 seconds)
done (took 6.706011929 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065306279 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065121489 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.06289309 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065573109 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.062028685 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.062946237 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.082698617 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.064794505 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.06498433 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065825983 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.067115998 seconds)
    (12/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.062355597 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.064929439 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064817103 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062442348 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062765707 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065015283 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062676273 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06335634 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062622068 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065108001 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.062202131 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062398639 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.064985206 seconds)
  done (took 2.735921103 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.0839501 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.064850217 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070864521 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.07129947 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.06849837 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.069647067 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.069631451 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.064744184 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070346563 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067683995 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068138128 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.068706934 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.066580972 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.068218918 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067095612 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.068271562 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.069997618 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064940548 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067512226 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.068419694 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070308861 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064798298 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.068423747 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069766816 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068006757 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069872351 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067521094 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.064675975 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069567875 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068095189 seconds)
  done (took 3.216214726 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.068546414 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062138515 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063204605 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069814768 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062592132 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.063634908 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062537706 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063079024 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063100026 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062104321 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.063566358 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062092611 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.062658603 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063637628 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063286665 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066059007 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078381372 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.062522409 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062578091 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063461662 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066337486 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062684232 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.062824556 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.06236195 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062330133 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062355949 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063046464 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062393697 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.062946144 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062278122 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065248504 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.065983047 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062101649 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069088515 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.065804069 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062364962 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.06614802 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062093305 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.062500262 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.061854868 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.061941979 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062040363 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062448832 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.06890204 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.062116292 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.063750586 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.061723435 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.063826545 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.062414671 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065063265 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.061909457 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062219976 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.173644867 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.063599106 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066876752 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.061632697 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063140317 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.061639639 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.06269039 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062254314 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.06195185 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062003618 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.064706793 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063320242 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077589247 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069188731 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062340579 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.063761874 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.062859405 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.064624261 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.063900895 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076095117 seconds)
  done (took 5.887373773 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.088627079 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086090891 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064487502 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064034693 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.060608887 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.062815875 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.06853613 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063195991 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064357438 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.080759495 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062788931 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064283378 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064158979 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066251789 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063108192 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064609988 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071033536 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060447034 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.06269011 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.065957883 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063156251 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068221932 seconds)
  done (took 2.647390449 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.154493705 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068711355 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.103981926 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073790152 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068360576 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073735137 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069980297 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068561413 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068491271 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066366442 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065945993 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068455367 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069054741 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066914526 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066205566 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066359207 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068034611 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066355241 seconds)
  done (took 2.514977855 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.075597858 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.064998723 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086117534 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065834265 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065314819 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066892547 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068938272 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07309873 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067370554 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06447898 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.072854858 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067240546 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.0670695 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064667757 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067132681 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.064645585 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067091329 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064778772 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07230203 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068684689 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069009831 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07259983 seconds)
  done (took 2.678879433 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079028565 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067507902 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.079922472 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066928318 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06113875 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06318105 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.068584334 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.064384582 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069572735 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066823978 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064406764 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063645152 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.067115741 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064241932 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.067166552 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064296927 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066730188 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064264619 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066826313 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060333869 seconds)
  done (took 2.499725318 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084613333 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066233236 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066949766 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074482917 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066722251 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.065907201 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07363471 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066199043 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.065948571 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086469723 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066262271 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065650249 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073780697 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070561255 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066286495 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073140087 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07293871 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073078232 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066426617 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065786978 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087060044 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066140259 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073223008 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066075271 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065841796 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.065926825 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065783806 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07105505 seconds)
  done (took 3.13720024 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.064982925 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06567009 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.062250574 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062583918 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062455056 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.06223082 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062305891 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062380675 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064656954 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062493701 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065128626 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065073538 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064955422 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065091451 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065353836 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.064912504 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065121499 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062382075 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06234134 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062526561 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.064992591 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065328878 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065365448 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062828038 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062420157 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.064838146 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062232736 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062142441 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064990587 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06254518 seconds)
  done (took 3.082418836 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074139716 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073120142 seconds)
  done (took 1.316537412 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.061787888 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078974257 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.061732236 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068901911 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068599022 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065482561 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072417089 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068054193 seconds)
  done (took 1.711562262 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.080636044 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076440297 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.066471278 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078079773 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075442703 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.08211616 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131916989 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.065827511 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.071320459 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063161554 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.078422283 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.06461649 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071346833 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065261892 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.070773386 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071873734 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.062908626 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.070031272 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.066945757 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.063142582 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065702018 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073831659 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067803223 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.060741688 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.06605164 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.086582889 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.075808847 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.064640576 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067679395 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.0723753 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.070687191 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.05918795 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.064741321 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065530138 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063035039 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074636551 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079306783 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.067363813 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.073300892 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065947335 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.074620401 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060071059 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.069678606 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.071147963 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075363817 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.06513116 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.065117735 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060346193 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.062794937 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067216816 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060377953 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069337001 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.059418809 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071683519 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.068475027 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075405586 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.063421928 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.066226527 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.067331536 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068481631 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.0711506 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.066718916 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068379718 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.063951939 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074672901 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069312485 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072994508 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.059994507 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059690462 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063139958 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.074354175 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088239037 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071447478 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.065753685 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065799032 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.062763875 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068477183 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065861879 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070643508 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.071345109 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065004955 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06955136 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072177687 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064513867 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.066992435 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.071785756 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.062983572 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.067056098 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.06283654 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08028103 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.063080192 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.061985921 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.062231375 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.074375392 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.067109366 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.064127023 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.06206117 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071038192 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.058408726 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.064046941 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064087256 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.064700664 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.073805137 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068233092 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068139724 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.071677579 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.070712388 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064000878 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.066290767 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.060477397 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064622051 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063115253 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.070836441 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058139416 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.066722872 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.064402809 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.063905896 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.071709703 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.061724999 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.063408109 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070642718 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.192706416 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.064957436 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063051576 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.06933353 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066148018 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069008919 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074284586 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064175964 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.060750411 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.060944579 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069264237 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066053201 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069211182 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070058293 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.068162139 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.059911877 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.063728636 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.069938386 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.074353019 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.06628533 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067311509 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.071568037 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067510621 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065459531 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.071602562 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.06797259 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065172401 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071654061 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066494934 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.060940458 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.0683946 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.068032122 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.06407886 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069436708 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067805015 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068008782 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066522746 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063746746 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.072273516 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066152399 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.064961007 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065856976 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.063683464 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076441524 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067696404 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.060643316 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063319876 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.074177487 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06373797 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.064816713 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065234716 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.067904763 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066234031 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063789107 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.064824343 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.066661842 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075502839 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068835285 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066518318 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071016052 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.075942993 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.064489943 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.067725996 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.063896912 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066359443 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.065370862 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.073851331 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.070245842 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06962753 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.06797991 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.061740113 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069806479 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072932913 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.063838555 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063139394 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064298696 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069411876 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.070544158 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.068557096 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.065191554 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063622436 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066347774 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068038653 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.067562186 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.064504319 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064111955 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.070556148 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063139212 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.070992041 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.065905559 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.074686302 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068338587 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060051758 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067592588 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063485338 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.070831081 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.06025457 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063048616 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064216628 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.06477158 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.063037865 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.066985482 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.058558683 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07085483 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071683367 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.064916831 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.063218955 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.064050936 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.070466162 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.065569512 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067745157 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067388834 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.069914999 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074176405 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063344517 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.06806499 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.073810242 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.063861681 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.058237704 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.069014181 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.062091606 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.062584348 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.062649531 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.062132523 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.067180316 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071171854 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.198621307 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061433536 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069544837 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064979925 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065935522 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062231551 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071682998 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069808669 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067439259 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073495871 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067324345 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066057578 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.069842114 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.065820532 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066467182 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.066717982 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069402856 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.066411732 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.067908921 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065962757 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069200797 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.06491324 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.063552284 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068092055 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066190503 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067113316 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071252027 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065561492 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065851397 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.067975208 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.065674137 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066769418 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066426443 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.064958317 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068702307 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066725408 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066401694 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068041534 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.060623539 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073003871 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065126418 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073487351 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067103295 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062445175 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.072416779 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.06822676 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.070730932 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066357083 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067174102 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.066379423 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065376162 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069029011 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07246295 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.063531518 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076271775 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072502313 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066470127 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.06814527 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066130706 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.066903187 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.064248438 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066317492 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066171749 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.06633467 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.064118127 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.06967209 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.067417863 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.06594538 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066642097 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066258583 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.064982312 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066029435 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060279991 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.064438362 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.064955533 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065046925 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074077213 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.065503273 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.064823864 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064121351 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065899079 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.063809133 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.061943156 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.07179801 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073150711 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.065057962 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.071744146 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.063839793 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.066469664 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.075250612 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059263212 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063675825 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.062865893 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063307744 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071847214 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.065766192 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.073885027 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.06480663 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064340599 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062254805 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065197984 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.063212356 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059468939 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062766329 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067840312 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.063056463 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063153078 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064125754 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.066878737 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064724396 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073103164 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063563684 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.064906233 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064407756 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061044074 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.063428317 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.063223012 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.06620859 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.064500475 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.06190682 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.061291808 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.063066357 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.064774542 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.065170541 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.065616386 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.065221528 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070402757 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063312163 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.066158849 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065912919 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.190972518 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069357865 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066393091 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066621146 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065420807 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069745231 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069536514 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066375491 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074332413 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065420832 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066345298 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065928251 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.063848007 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065446201 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.064990429 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.065729532 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065633355 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.066655855 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074142453 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063799117 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069076716 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065720623 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066549164 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073549799 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.066403206 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068619558 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072137135 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066195472 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.067308956 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.073787256 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.069463557 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068835994 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06696013 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.066982853 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07150177 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.064806997 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072536684 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066591002 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.066719251 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.066786059 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064356398 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065126593 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.06567762 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064933676 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072055457 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.065999794 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.064957763 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065212173 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063316327 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.066319324 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069649323 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07335002 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.067974196 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069379809 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.060827395 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063203692 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066400695 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064027861 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.066924084 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068440002 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071062636 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.067800786 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.065919341 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064485104 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074361151 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071617898 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069323939 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063135006 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069452473 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.065971835 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.066868975 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066096535 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066402322 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066450022 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069042306 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.066669026 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.064378556 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071566969 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.068239954 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065549413 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.066319271 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.06595682 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.065937659 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.060373001 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.065402353 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.066887576 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069864795 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.067334529 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064884158 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075342863 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.062798527 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.065100321 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067738281 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064233729 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.06947339 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060355168 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.066824508 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066213603 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065625902 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060180294 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064510426 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06357706 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067690362 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.063939145 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.06052951 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075663065 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073678855 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067867599 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063362334 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063125394 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.059312381 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.059331032 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.063281287 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.064378361 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.065589296 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.073433588 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.063019971 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067409873 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.059014439 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064361978 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.06670062 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.066788247 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.061285591 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.059136586 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.062917979 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.066631369 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.06907728 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062345568 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.063578776 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.197453513 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.06852773 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064601942 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069295567 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063619291 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069570965 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07778767 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066191694 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067282169 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.071376687 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072851892 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066636018 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061116753 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.065669582 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.068271776 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066907136 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.066412593 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.066684437 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081017393 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068493478 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065549428 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064689625 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068903739 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065312381 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.073711843 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066571496 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066253592 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070097279 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.067463398 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07453941 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068918159 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071989885 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069262748 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068793646 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.06485472 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065641596 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.063315 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065023694 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.06667849 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066303454 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070808814 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.073565835 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065233734 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077029881 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.074335465 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068100362 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.06244411 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.064620235 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065296428 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.060545519 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066654134 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.063306464 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.063808861 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.06349335 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064409714 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.065933099 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070497676 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066915703 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066395629 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.064792669 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.059535306 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068166421 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068296104 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066184369 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062362743 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065039575 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.065768823 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069824381 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068677816 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.062789477 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.066546989 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.066761744 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066330919 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.060247712 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.071865718 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064051206 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.066472317 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.064349079 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064720184 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.065250363 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.068225712 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069148555 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065953928 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.067201815 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.068613947 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066589704 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.062197376 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062227315 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070082096 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.062789931 seconds)
  done (took 41.697934096 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099469443 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062536528 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.060969359 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061339804 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072637328 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062127809 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061348267 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062169469 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06185987 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064493571 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061094789 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060831265 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069277332 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07637973 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07191456 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066070598 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06090102 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062179147 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06144764 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062017996 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069339083 seconds)
  done (took 2.671130827 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.072612781 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.075981419 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.07376746 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.08100135 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069558661 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06928551 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074189921 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069348963 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07740509 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071629395 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077329201 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069501665 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.071306896 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.071381582 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07126755 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069696663 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076828284 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06947429 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069491423 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074140224 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069353709 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074087717 seconds)
  done (took 2.851527303 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.06549678 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.064616765 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067701521 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060590236 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065542229 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.060596003 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068290412 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063077805 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068327089 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064519009 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064276693 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064245175 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.066981039 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060559528 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065040275 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.062677545 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.105976302 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.067831506 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064665185 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.065562506 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060554009 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.066717771 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060638336 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.060667206 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064067259 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.067967517 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065961519 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063330256 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064591635 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.063942891 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.064576357 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.062760243 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066049108 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065268192 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.063815603 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.063985369 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064773751 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.064050063 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.059836121 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.062843996 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.064887674 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.060398255 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.064796765 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.065940821 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.062987729 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.062839164 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.065938458 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064521706 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.059485375 seconds)
  done (took 4.438136026 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.077309996 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.107957455 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066707403 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090815254 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.078281256 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.071447287 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068405082 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088668188 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.061862876 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063148949 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.079624949 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.077672729 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064670671 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.06894816 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072307629 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064614485 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065572884 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06360714 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068046801 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064714132 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.067644766 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.070868224 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.078373633 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.07802036 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068091044 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06355657 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063892025 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.068445122 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076265731 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.067983601 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.06890927 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069516957 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.078697851 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070120398 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063402176 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.066645276 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.079760869 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.064145101 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.066641229 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062049923 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.066577724 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.068501035 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.070848381 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.079661919 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064534209 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.069148357 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064185172 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.061546626 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.075982156 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.066234659 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.071890646 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.077344414 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.067498119 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.063948681 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068383569 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.078146381 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064163601 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.062626764 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.06690762 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.075541254 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.061688757 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068305277 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.076503686 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066146164 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.070792484 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.077216596 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.06911215 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067662802 seconds)
  done (took 6.190891663 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075018969 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094435354 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08136044 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080946668 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073797025 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.074113794 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.074163525 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073700136 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.073913732 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078927785 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073915856 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113676318 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069705889 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07655175 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074255271 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.074267646 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074113781 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074196368 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074149482 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073799116 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.074283474 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080824769 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.074149732 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.080871507 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07809424 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06947198 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073722277 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.074512048 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08147314 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.073818774 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.077951436 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073889756 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.081951969 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.08167726 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.077774691 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.073850241 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064500163 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074148459 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074765225 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.074150114 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069586754 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081229308 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073537213 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070096143 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074815963 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.073932988 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.081334734 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.077911564 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076420778 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078654333 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074260629 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081492049 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073638109 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.073960729 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.081493138 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.083939674 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080859706 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.08157791 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074009387 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.080874484 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081548542 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.084553315 seconds)
  done (took 6.057270705 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081565558 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073309144 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.080984376 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060248267 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063025386 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070597495 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063066399 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063077891 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072383305 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.07289843 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075290001 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070214692 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073929319 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07506504 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070352574 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073416804 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070379378 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070675818 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073076872 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070442856 seconds)
  done (took 2.697753624 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073996389 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08188423 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.065735489 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070944842 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.067921204 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07066829 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067491957 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068054948 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065793797 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067976579 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074694645 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074806271 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065704561 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070687809 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.074887053 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070078782 seconds)
  done (took 2.396425595 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.082501619 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071574982 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079466454 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065827495 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065859157 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.061146514 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.064836409 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060196295 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061347028 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077052811 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.064464887 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.074983624 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.064821633 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063154524 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.061844957 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.070058046 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061195747 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062065094 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.064547683 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077461288 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.068345201 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063430665 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068447903 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065295217 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.067275788 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.068794307 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064180254 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065102921 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062266355 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065532194 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.06780909 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068150291 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062174355 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.062820611 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063939264 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062229869 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064705194 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065067406 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070371876 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.064854046 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063129335 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.06705965 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.064578545 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066116927 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061137671 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.06526498 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061438823 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.066861899 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.062615102 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.06706251 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.064434483 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067299195 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065200345 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071652585 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067502881 seconds)
  done (took 4.913112503 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078193217 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069535416 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060628892 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063450692 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069585772 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.06651309 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068972856 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066412663 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066922643 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063215577 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066170416 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068104192 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066428692 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068812888 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066556 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068801315 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061126837 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066216831 seconds)
  done (took 2.483541794 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071096842 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06580894 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072559139 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065563804 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065647953 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068352905 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061140715 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063609235 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063871127 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.064749381 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065447186 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067707569 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064220583 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067588583 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065189088 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064786567 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067485052 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063626884 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06501139 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060862288 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067629835 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064133204 seconds)
  done (took 2.716682752 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.093839375 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.08238437 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.14077781 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078347451 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.083807355 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.070600221 seconds)
  done (took 1.822899318 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090774825 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101143241 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065591136 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068075209 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074317408 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068451248 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068574551 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068954157 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076780615 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074229359 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068691411 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077091545 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076902346 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076363982 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074671806 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074348203 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068939637 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069228004 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065211152 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081943672 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069451228 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077184092 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069250683 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069021515 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069152602 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076455015 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077650848 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074945892 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068822127 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077277145 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074624291 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069360967 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076832472 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074492258 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069097641 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076737538 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068811678 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082257223 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074299913 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076100761 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068152587 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074996845 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07705696 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072743888 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077054037 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069554154 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073130724 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06884191 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069404386 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084325797 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074619702 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07602115 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076420235 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077092253 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076678828 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084081743 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074259079 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075700451 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074996419 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074710394 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076034981 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07426766 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075724966 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074861485 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074470733 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076705672 seconds)
  done (took 6.193892088 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102059039 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065803041 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069314532 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075650941 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076542072 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068884886 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069559552 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069002336 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069345198 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06593707 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10736384 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069934881 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077059427 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07639467 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069057208 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069133438 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069174993 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076443096 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066203954 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084172375 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068875123 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075889177 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076205058 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076252195 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074969442 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074597212 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069871156 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069568051 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06886719 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06873368 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073749369 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069196447 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075894182 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065487653 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075982593 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069050018 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06851984 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073171282 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068696608 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074678371 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075944514 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081688819 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069083882 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068735007 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074858537 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068596764 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068708064 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065984344 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068796669 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066454991 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074750241 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075316952 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075057069 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075624983 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069142557 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069126244 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068859944 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068913512 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068736068 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074439478 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076500598 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068877931 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084229414 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068650918 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068837139 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076086419 seconds)
  done (took 6.100786331 seconds)
done (took 125.802980186 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.185292592 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.164265705 seconds)
  done (took 1.623893036 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.067421508 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097616818 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076534782 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.127389115 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066116318 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.09910324 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.097853186 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.076706075 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.064897607 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.06511969 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.064766121 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.06773059 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130608841 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065469802 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065439841 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.067554104 seconds)
  done (took 2.585388143 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.098025535 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.161682355 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.101111018 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064431126 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.098247517 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.071621265 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064109391 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.073961292 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070060296 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064201373 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.071570626 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.069836884 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064122179 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.069317654 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070015216 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.071527482 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064016375 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.071648447 seconds)
  done (took 2.706572934 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.097922876 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.090313602 seconds)
  done (took 1.478467679 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.159670574 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.1105966 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.144801689 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.349307124 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.163043649 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.147608293 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.145293205 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.144355217 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.118314852 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.138404071 seconds)
  done (took 2.908493563 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099435644 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.151853773 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.263566328 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.116562016 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071628585 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.092600615 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.117113662 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.07687159 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.079141639 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.078263656 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.078572166 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075107758 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.09874956 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072737098 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.0729974 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.074757787 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102679352 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072106378 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073818229 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075757167 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.09930905 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.064577488 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072354425 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.071756413 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076104175 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.075768134 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.064617782 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.064357372 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075044385 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073703439 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.075943037 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.091504476 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076296871 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.104519229 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069920232 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.105625917 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075079251 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.072689697 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073676752 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072362746 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077197117 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077186967 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071373083 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.07478879 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064743039 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075205403 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.064897005 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.064852274 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.076812771 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.065773285 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.076962459 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.075695962 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.10497825 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.067380754 seconds)
  done (took 5.850180569 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101365308 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105138121 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070720577 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.111254111 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10185116 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070933947 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.100942168 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094390649 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102744641 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069184992 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06794357 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069174854 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080561214 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.081279444 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.112944058 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.105418433 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072795909 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070277482 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.104749776 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.104330784 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06779139 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095838025 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.089996426 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102638283 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.06692066 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069140128 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067297639 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.06910634 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.075405653 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077209306 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068329057 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078737408 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083426593 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.076448141 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066034154 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067040105 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067571181 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078076439 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077601371 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077748579 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076204787 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066861303 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.066703401 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068751883 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069018738 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06680097 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07700447 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.07849067 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.076944223 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068798317 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068796786 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067603556 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068226211 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078316237 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.07606103 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079322736 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078367408 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067240507 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067755071 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071604469 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078635109 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.077406934 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078368481 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068728611 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.076980135 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067442899 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078911883 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082615246 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067120315 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.06858062 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067259265 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068727999 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068529938 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076155103 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.076313481 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068889433 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068570434 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06671872 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078282674 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076510595 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067040102 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.074922996 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.065833577 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066896934 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067965504 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06829597 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.075889999 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.078007322 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068119736 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066867771 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.067825264 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067053717 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.065801569 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.074330204 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.07710161 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.076116162 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076191807 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067310259 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.075697111 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075258183 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068221439 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.07616202 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066344504 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068071399 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067290934 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.075401234 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.074236296 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.203710224 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069663454 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069383009 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.077730275 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079703011 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068226693 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.07811489 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079156243 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.07888207 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.06809906 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080158902 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067686008 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078300647 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068948923 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079028595 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06781814 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079047637 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068334839 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067359131 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068851535 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.078928352 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072823442 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068314181 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069762756 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069892879 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078132536 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081249663 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07051086 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077055091 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.077764933 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.06946873 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.076706005 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06799646 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078098581 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069563654 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069087943 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067326143 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080563725 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068649882 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067706793 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068913153 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079302725 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067895597 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078947215 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077433385 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067735646 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079908897 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.08012958 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076259192 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079505116 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069932889 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067274689 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068029999 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068465938 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077220081 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078007382 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069262896 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067975062 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.07751209 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.077946131 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.066725934 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077055403 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078385703 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077888142 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067829075 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068655746 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080118179 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078709378 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.076879072 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.076663874 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07658168 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067475036 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.075735105 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076623964 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067648269 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082532985 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067269009 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081508844 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077218369 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075614383 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077207632 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.078593088 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.078404274 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.078232262 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081147582 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066925112 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.066459853 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.077250895 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.066564101 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067810765 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.075946554 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068293009 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068317853 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.08134144 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066656049 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.076819965 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066285993 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.075613217 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06510082 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067894751 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080089069 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066137775 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067080801 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07574623 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.066931285 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.074221942 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077050497 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.074618282 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066011858 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067542567 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.207868886 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.078606443 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068722962 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067860877 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070043673 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.077429064 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.076176015 seconds)
  done (took 18.296228487 seconds)
done (took 36.744539957 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.208399211 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.151149276 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.183361515 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.117518072 seconds)
  done (took 2.055306686 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.115324987 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.099830668 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.090736782 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064074275 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.097483637 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.063977409 seconds)
  done (took 1.861637217 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.308933126 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.208941969 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.186402895 seconds)
  done (took 2.030572971 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.199650584 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.18678978 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.417568487 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.260979736 seconds)
  done (took 2.501231806 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.143149315 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.086971955 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.065989101 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082395854 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.13101426 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.158302923 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.099142153 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.123594917 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077895691 seconds)
  done (took 2.348823616 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.14656115 seconds)
done (took 12.271967682 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.203368239 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.113131228 seconds)
    (3/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.094920866 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.124332225 seconds)
    (5/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070704759 seconds)
    (6/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.20748167 seconds)
    (7/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.07735591 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.114869152 seconds)
    (9/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.184722462 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.07038787 seconds)
    (11/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.173634921 seconds)
    (12/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.227602225 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077426545 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.07309322 seconds)
    (15/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.102047162 seconds)
    (16/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.154808397 seconds)
    (17/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072588679 seconds)
    (18/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.11125758 seconds)
    (19/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.071097173 seconds)
    (20/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.096352409 seconds)
    (21/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.17392303 seconds)
    (22/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.173804263 seconds)
    (23/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.184329527 seconds)
    (24/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.175669979 seconds)
    (25/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072052087 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090628625 seconds)
    (27/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.1768915 seconds)
    (28/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.08859546 seconds)
    (29/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072696438 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.100891603 seconds)
    (31/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.065615306 seconds)
    (32/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.211945005 seconds)
    (33/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.072160942 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.089200786 seconds)
    (35/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.060627864 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.107830771 seconds)
    (37/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.064005511 seconds)
    (38/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.225363172 seconds)
    (39/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.15817376 seconds)
    (40/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.077457612 seconds)
    (41/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.107597332 seconds)
    (42/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.062570066 seconds)
    (43/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.078787404 seconds)
    (44/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070727054 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090780792 seconds)
    (46/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.075127879 seconds)
    (47/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.192912346 seconds)
    (48/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.062078331 seconds)
    (49/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.148433182 seconds)
    (50/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.178863358 seconds)
    (51/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.090809083 seconds)
    (52/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.05025244 seconds)
    (53/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.146250088 seconds)
    (54/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.05033284 seconds)
    (55/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.073024882 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.064578353 seconds)
    (57/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.077296401 seconds)
    (58/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.090301493 seconds)
    (59/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.0660359 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.089444063 seconds)
    (61/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078212524 seconds)
    (62/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.159225506 seconds)
    (63/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.140311759 seconds)
    (64/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.142577165 seconds)
    (65/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.202507915 seconds)
    (66/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.089759863 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.085270156 seconds)
    (68/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072001702 seconds)
    (69/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.181710652 seconds)
    (70/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.084493226 seconds)
    (71/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.167018812 seconds)
    (72/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.062638072 seconds)
    (73/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.08694845 seconds)
    (74/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.059596874 seconds)
    (75/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067072057 seconds)
    (76/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.073211924 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.121945551 seconds)
    (78/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.069678922 seconds)
    (79/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.065376382 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.138106278 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.088076844 seconds)
    (82/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.073065884 seconds)
    (83/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.160513921 seconds)
    (84/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.048966268 seconds)
    (85/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.068960181 seconds)
    (86/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.048855894 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.107182192 seconds)
    (88/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.150672594 seconds)
    (89/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.303374807 seconds)
    (90/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066890886 seconds)
    (91/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.155254931 seconds)
    (92/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.051345087 seconds)
    (93/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073153559 seconds)
    (94/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.197625254 seconds)
    (95/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.120690232 seconds)
    (96/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.075961744 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.093187716 seconds)
    (98/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.173139476 seconds)
    (99/309) benchmarking ("sort", Int64, false)...
    done (took 0.066359877 seconds)
    (100/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.13623012 seconds)
    (101/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.071943292 seconds)
    (102/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.05118413 seconds)
    (103/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.156183845 seconds)
    (104/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.076078424 seconds)
    (105/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.095763973 seconds)
    (106/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.052819764 seconds)
    (107/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.07470103 seconds)
    (108/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.051025882 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.091881843 seconds)
    (110/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.10350618 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.091327386 seconds)
    (112/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.198923408 seconds)
    (113/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.06449668 seconds)
    (114/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.163645183 seconds)
    (115/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.154139031 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.109104573 seconds)
    (117/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067521187 seconds)
    (118/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.072489305 seconds)
    (119/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.080610438 seconds)
    (120/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.075145832 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065229922 seconds)
    (122/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.071832254 seconds)
    (123/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.175610205 seconds)
    (124/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071799958 seconds)
    (125/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.073309791 seconds)
    (126/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072008812 seconds)
    (127/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.064572476 seconds)
    (128/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.160422119 seconds)
    (129/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.140855744 seconds)
    (130/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.063679719 seconds)
    (131/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069575193 seconds)
    (132/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.050177195 seconds)
    (133/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.137737949 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.093107354 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.06371996 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.106892772 seconds)
    (137/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.108406789 seconds)
    (138/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.191586048 seconds)
    (139/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.051951773 seconds)
    (140/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.063219109 seconds)
    (141/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.141581181 seconds)
    (142/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.049474775 seconds)
    (143/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.050818708 seconds)
    (144/309) benchmarking ("sort", Bool, false)...
    done (took 0.136623213 seconds)
    (145/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072269334 seconds)
    (146/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.072284144 seconds)
    (147/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.108197426 seconds)
    (148/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071985258 seconds)
    (149/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.050689724 seconds)
    (150/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.050949292 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.069986676 seconds)
    (152/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.049369353 seconds)
    (153/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071187891 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.088555894 seconds)
    (155/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.071940816 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089397687 seconds)
    (157/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071784964 seconds)
    (158/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.078139144 seconds)
    (159/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078112891 seconds)
    (160/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.193712559 seconds)
    (161/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.075272121 seconds)
    (162/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071858869 seconds)
    (163/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.065678213 seconds)
    (164/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.063880148 seconds)
    (165/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.066394479 seconds)
    (166/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071425836 seconds)
    (167/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.061865313 seconds)
    (168/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.079710828 seconds)
    (169/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.099714097 seconds)
    (170/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.064279757 seconds)
    (171/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.288205202 seconds)
    (172/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.050444288 seconds)
    (173/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.075450676 seconds)
    (174/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072382267 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.074394569 seconds)
    (176/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.049730034 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086791067 seconds)
    (178/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.049577139 seconds)
    (179/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.074036804 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.090714157 seconds)
    (181/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.069902332 seconds)
    (182/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.062755864 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.064264527 seconds)
    (184/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.051070757 seconds)
    (185/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.049628581 seconds)
    (186/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.049484774 seconds)
    (187/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.152774309 seconds)
    (188/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.062470261 seconds)
    (189/309) benchmarking ("sort", Float64, false)...
    done (took 0.128462689 seconds)
    (190/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.050096476 seconds)
    (191/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.106923301 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.063782262 seconds)
    (193/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.050246483 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.063409084 seconds)
    (195/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.070807383 seconds)
    (196/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.064531139 seconds)
    (197/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.154406704 seconds)
    (198/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.070370139 seconds)
    (199/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.108889806 seconds)
    (200/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072945759 seconds)
    (201/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.078708789 seconds)
    (202/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.064045594 seconds)
    (203/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.064706955 seconds)
    (204/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.095456172 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.259759265 seconds)
    (206/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.076630689 seconds)
    (207/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075065775 seconds)
    (208/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.071196829 seconds)
    (209/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.051391955 seconds)
    (210/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.155467883 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.066023119 seconds)
    (212/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.063953707 seconds)
    (213/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.051923231 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.066214096 seconds)
    (215/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.072956142 seconds)
    (216/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.073693476 seconds)
    (217/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.068546701 seconds)
    (218/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.064764667 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.092021907 seconds)
    (220/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.074845975 seconds)
    (221/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.071175224 seconds)
    (222/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068787616 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.07409949 seconds)
    (224/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072693505 seconds)
    (225/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.051612391 seconds)
    (226/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.050300085 seconds)
    (227/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.192399085 seconds)
    (228/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.050785331 seconds)
    (229/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087217932 seconds)
    (230/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.065414635 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.090881334 seconds)
    (232/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.050120386 seconds)
    (233/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071696722 seconds)
    (234/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.173087528 seconds)
    (235/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.052082545 seconds)
    (236/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067748033 seconds)
    (237/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070529751 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.06357411 seconds)
    (239/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.051879533 seconds)
    (240/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080449299 seconds)
    (241/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.069491414 seconds)
    (242/309) benchmarking ("sort", Float32, false)...
    done (took 0.13222046 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.064441726 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.13398543 seconds)
    (245/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.070761349 seconds)
    (246/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.153882419 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.123104737 seconds)
    (248/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.050971022 seconds)
    (249/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072278195 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.135374249 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.123985224 seconds)
    (252/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.050933343 seconds)
    (253/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.051079021 seconds)
    (254/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.138439656 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087687963 seconds)
    (256/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.050985136 seconds)
    (257/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.06778084 seconds)
    (258/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.066477098 seconds)
    (259/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.065192238 seconds)
    (260/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.050096664 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.140050958 seconds)
    (262/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.061284596 seconds)
    (263/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061421679 seconds)
    (264/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.049640085 seconds)
    (265/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.138532925 seconds)
    (266/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064451938 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.064108884 seconds)
    (268/309) benchmarking ("sort", BigInt, false)...
    done (took 0.185290269 seconds)
    (269/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.051144872 seconds)
    (270/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.064362938 seconds)
    (271/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.064945052 seconds)
    (272/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.050491611 seconds)
    (273/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.154256043 seconds)
    (274/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.07097508 seconds)
    (275/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.051351057 seconds)
    (276/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.138561583 seconds)
    (277/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072564117 seconds)
    (278/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.050234488 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.064624111 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.064151921 seconds)
    (281/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.066225771 seconds)
    (282/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.060323386 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.101118094 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.064130722 seconds)
    (285/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.04993968 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072378113 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.062989747 seconds)
    (288/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.178825263 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063058365 seconds)
    (290/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.049943437 seconds)
    (291/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.085217431 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072066457 seconds)
    (293/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.18303895 seconds)
    (294/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.052400732 seconds)
    (295/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.050400716 seconds)
    (296/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.064263814 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.07039109 seconds)
    (298/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.071341424 seconds)
    (299/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.05010229 seconds)
    (300/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.051344606 seconds)
    (301/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.051841412 seconds)
    (302/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.050190882 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.069670433 seconds)
    (304/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.064125953 seconds)
    (305/309) benchmarking ("sort", Int8, false)...
    done (took 0.14038085 seconds)
    (306/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.066113989 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.092307255 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.08735508 seconds)
    (309/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.050629969 seconds)
  done (took 30.478357303 seconds)
done (took 31.816480355 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08197353 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091738929 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074063294 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092560479 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079286295 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.074575523 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.070967246 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077333729 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.078692668 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080377095 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.076510402 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.053051631 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.072445911 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.07280514 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073493126 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.08947958 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077425232 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.071898669 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.071923957 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.063596549 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072609806 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064399314 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066214278 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.053124273 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077332567 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.07096147 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071300115 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.072789817 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.064371063 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.064798587 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.06792396 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072672989 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.063876383 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.076954141 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.070968025 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.071567376 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.073142433 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075328747 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066296213 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.064517142 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073338554 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.064541412 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.071684719 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073219928 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071413842 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070778591 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.071839175 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077109392 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089578291 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066372299 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073451546 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075025276 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.074643159 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072210982 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068843823 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.071946507 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.069952962 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089999077 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072223294 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066505595 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07296749 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073051119 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070031558 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.071788554 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.071725275 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.07379811 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.07413093 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070217153 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073318054 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070408592 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.063786581 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.071890275 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.067721983 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064199926 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075028725 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076057188 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.06332003 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.07048011 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071363384 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.069512768 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.063366553 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06636394 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.065555793 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070785455 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066600979 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.053566633 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.06844998 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071323812 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063662516 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072250246 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070548079 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.070925612 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.06572121 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075363769 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064105656 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069935862 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064315856 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.063998409 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.065975926 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068216581 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.063603786 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065813882 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.07330958 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065658903 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071512022 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.077759332 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.063825116 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070981268 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063666413 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.063137565 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078263111 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073084415 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.063653026 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066083119 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063486971 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071455422 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063089072 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.063311396 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.063354276 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.063567443 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070013775 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.063493954 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065345807 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070955948 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076078474 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063296489 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.066850188 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.064939012 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.062715459 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069359842 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063019614 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063537361 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065649713 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.060062695 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.064757348 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.063288977 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.070332215 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065158931 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.20586726 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067562341 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073775487 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070664651 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070544305 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071315491 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.063636346 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058529926 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066938455 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066232868 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066788565 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.064406126 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066776378 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065560969 seconds)
done (took 12.203249183 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.065848627 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.138116618 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.09641059 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094697699 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.08551833 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.065522522 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.074707923 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.099838062 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.066855099 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.099991713 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.085921153 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084498549 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.11222168 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.063211454 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.064451291 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.068489707 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066255079 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.080161435 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.099997591 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085502891 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.11421093 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.063851921 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.091316061 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.088103611 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087159146 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.093221735 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.06753922 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.068952596 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068533501 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.100985263 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.087124133 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.068522021 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.065273636 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.096831062 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092741693 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082853554 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065353141 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082122386 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065160662 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.06445182 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.066773578 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097648985 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.078991584 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079772846 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.068788616 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068538324 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.06572766 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082885576 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088323931 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.077723657 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085068239 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.10024827 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.067503472 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.064605332 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.063344918 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085086266 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064453009 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068450661 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065199083 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067176332 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065270004 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068611242 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.079785527 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.079761672 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.06871791 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.078817963 seconds)
  done (took 6.669816191 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.082820848 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.090462976 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083461814 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082592869 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.064280902 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065121656 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065040704 seconds)
  done (took 1.976083842 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.06643563 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087398084 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088189281 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088468088 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.082690072 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.08620303 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074877217 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.065195876 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.086488086 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066290716 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086684891 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.099172829 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.068408236 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072922635 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.089356497 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.065481549 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089222612 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.065414762 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.06862227 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089664324 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068228271 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.09397233 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.068508276 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.06582503 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080049455 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.065314465 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.111791061 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069755193 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067108602 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068215449 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063325294 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.105102658 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079621642 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.073084402 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06530481 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.079614951 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.079498825 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.063467505 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.081832107 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.073461372 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.07942969 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.065657581 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066526094 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.063405977 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.069726508 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076360423 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.06615009 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.06640189 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.067881983 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085314595 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066437395 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079187799 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.068591445 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071137814 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067150608 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071894657 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075708628 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066108327 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085599909 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066772203 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082072923 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08160995 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079314038 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.081831795 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.067333958 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.078730948 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079258537 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068544949 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06747241 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.068559006 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.081483329 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.063718906 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067244261 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076207333 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067345075 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088779007 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.08829962 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.066958919 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.078411098 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.065749154 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.065533536 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.065928805 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.08825083 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071049262 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065646468 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.06977689 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068760063 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064042886 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.064633773 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069422044 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.063544503 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.066965332 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068291253 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068213264 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070616866 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081841502 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.0676311 seconds)
  done (took 8.646413542 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.067298039 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.066624296 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.067947723 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.066861295 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067256902 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067543476 seconds)
  done (took 1.866289088 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.091665499 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068038511 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079288441 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.070151829 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103318638 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.085481569 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.085686895 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076697062 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.081937663 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.077245528 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085642552 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.086781758 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091072842 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.071538416 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085405929 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.070508944 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086211346 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074112127 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077089087 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071520286 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.085935323 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.071535008 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071290669 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.080249429 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074545261 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.07087351 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.065825493 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.077768926 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077311592 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077098457 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.070986399 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074409966 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.069501122 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.0764851 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.085342243 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.069143146 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070210048 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076019718 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.070981939 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074190953 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.08725486 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071530034 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.072311122 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.075625463 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.076289321 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.068704731 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.07604506 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.073647396 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085213583 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.075493493 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.075478368 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.069954095 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074014586 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.075707353 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069143452 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076544865 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.075943165 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085883475 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.070954244 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069363563 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.067851678 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074204323 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076353632 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074559815 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.077422095 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.075759892 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069334132 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070724902 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071657368 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.070719447 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.075726256 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.067566869 seconds)
  done (took 6.926233289 seconds)
done (took 27.5143997 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.535944192 seconds)
  done (took 1.966091114 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.606207127 seconds)
  done (took 2.06028829 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.956881925 seconds)
  done (took 8.406308104 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.393342327 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.489978534 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.714927191 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.129317902 seconds)
  done (took 3.220553449 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.706833805 seconds)
  done (took 2.167872973 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.211000176 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.202488823 seconds)
  done (took 1.887454247 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.371116091 seconds)
  done (took 1.822069459 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.129840366 seconds)
  done (took 2.58402384 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.254520407 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.17337596 seconds)
  done (took 1.885556349 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.473702176 seconds)
  done (took 1.929538654 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.831188986 seconds)
  done (took 6.289345618 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.209635646 seconds)
  done (took 1.713195482 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.237859178 seconds)
  done (took 1.694743804 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.683003157 seconds)
  done (took 3.140356015 seconds)
done (took 42.224477451 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079849883 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.08088825 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080424766 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077304869 seconds)
  done (took 1.763066792 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076859202 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072619903 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076423564 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073205567 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076112096 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072878115 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073760226 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.07630816 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071689449 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072013606 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071792945 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072387651 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074468512 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073737735 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070793304 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074393753 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075272659 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071960818 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074664371 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072401696 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070139952 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.0742227 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074865942 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071176453 seconds)
  done (took 3.222897759 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.076731083 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072042066 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074414901 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071598017 seconds)
  done (took 1.764020114 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076989252 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.095202075 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088718211 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077507935 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092210878 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085858052 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068285364 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068262549 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.069998955 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076648348 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.06706801 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.094883294 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087473838 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076597348 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078802726 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.064921538 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067217145 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086312501 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077036122 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077327897 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.068923985 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077096983 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067645971 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087319641 seconds)
  done (took 3.345869975 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.085418409 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.104860261 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.082421001 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088905836 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090435642 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064576535 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.086741275 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.090820901 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.125869977 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064412979 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.06954186 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064551934 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072028108 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064470623 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.079745613 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.106458596 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.11011777 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067881398 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096073735 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064385472 seconds)
  done (took 3.154340721 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073012799 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069071462 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065085867 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.06828971 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076863934 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072163153 seconds)
  done (took 1.901466943 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067512846 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067554538 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066645008 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066648964 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071915251 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066574458 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065972115 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066755936 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066844971 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067211809 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065709415 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.064589446 seconds)
  done (took 2.276111019 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.20148413 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.067545441 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.067640739 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.064638712 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.069349752 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.0656326 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080009839 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.066759404 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090322582 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065500551 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065518937 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067353484 seconds)
  done (took 2.444852754 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204282913 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074936468 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236424544 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148561898 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109756101 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11412457 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111090582 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112616496 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.140029092 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099231772 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1668345 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165016905 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106281296 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135822697 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088560729 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.099821076 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152144676 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161554141 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104268689 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165402177 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144106114 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124744161 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149674558 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101394675 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104785683 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120567787 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070238115 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079036446 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168039536 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131811424 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142312535 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109706128 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091256076 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174897181 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169774064 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138913409 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145390493 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083365566 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.104390047 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.133299534 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198045678 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087323868 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158508957 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106578418 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.220111117 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134573796 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119862807 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.119865907 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.104540207 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089557424 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145110775 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182187605 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.136564061 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087047125 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123534833 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112580254 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.112826356 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112711845 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181071834 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161315497 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128228279 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070111557 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108153375 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152250114 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13218132 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.107556196 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.124076 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090950882 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134057135 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154439034 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119364279 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144063105 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.116451327 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08846739 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118805573 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138755732 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126372022 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15855066 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122985951 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071857885 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122219283 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099898889 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079330105 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.144679008 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074136629 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173829917 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.0976639 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.107703305 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123409908 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108486568 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107659454 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156710363 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141449893 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099910088 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.063630941 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24460004 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.120864325 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146870128 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086411638 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108756593 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117422332 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.076823688 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134961605 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075194899 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12316684 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.076890848 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126760775 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129683406 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.07642485 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122171575 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104341927 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100602658 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131967453 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159124148 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087952918 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080922357 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168237285 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121724169 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.101891411 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143594766 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155197243 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.101421803 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099656449 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14843983 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177829478 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08858239 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162116779 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107553827 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082858459 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.08735289 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122405967 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110886648 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.122154166 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080707433 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.116082659 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16636899 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.073645205 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09393446 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131649144 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077556243 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079569713 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103701899 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103538939 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094244517 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098402179 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.101475367 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13386162 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122005203 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104307211 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1214124 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096065353 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.312066631 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08861897 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101905032 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104599667 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069105042 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.134961644 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157132639 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078550942 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161991759 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.121884544 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115362033 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119546958 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082668984 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140840269 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078877518 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.06965507 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142598325 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110625121 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108724026 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.148972782 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114730543 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.123926579 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.118645748 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132035061 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129709079 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.130114532 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105705974 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087941933 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111626886 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126322563 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072487235 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.089759365 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079183635 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104225859 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094481222 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082177545 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139453637 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122600328 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108474343 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111541178 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095380103 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14647639 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.074795042 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125971349 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.117665121 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09416834 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.150302254 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151515674 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12986306 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097633123 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134768701 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069287876 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073004459 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.087077094 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121146393 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08115357 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08130459 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.256115607 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148617917 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129814317 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135782774 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123714297 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119306834 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156740299 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069432641 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.11783942 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146938404 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120432359 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104055565 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090025449 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098374967 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141686699 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106817446 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181324144 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116484722 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123160317 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152656869 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.100009769 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079284218 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10229278 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134606072 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102249276 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141806767 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098855337 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087673128 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109019073 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073682417 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097460513 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125116716 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117828676 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133519629 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.114269732 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130957654 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07649763 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11426644 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120005669 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119739468 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.062966338 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118575611 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160202101 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093111117 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117186441 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151244986 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077711115 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.132516749 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172661461 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142731027 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083368306 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106046278 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.262030769 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128962631 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121088749 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139593029 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107030266 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137408853 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109641231 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086199342 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087667777 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096969997 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105740247 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.09436372 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.105682385 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.112509454 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094593853 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130993745 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103276043 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110088432 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118629027 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.098359354 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.091416988 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096285021 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176480544 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119718432 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169099005 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099559958 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.142698916 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164046798 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074445653 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07778197 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077188259 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138867239 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084266669 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128566669 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.106011114 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115837715 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122606406 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141352598 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094622765 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.067438236 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108243987 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133492517 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122567031 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097023384 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.101640337 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161275511 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.09993916 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077980978 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111947079 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114278101 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101399725 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169215096 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.060535656 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104257527 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075075434 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079327446 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124942344 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.290489907 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080375668 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103615435 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119747128 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114184593 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127977322 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099842987 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108091407 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124617239 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147754744 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127437964 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089095999 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110634278 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128180766 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155932309 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105210981 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096130002 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172225084 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151584606 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.159019883 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.087161343 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114974451 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114146236 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108201589 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137057229 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082689641 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160858747 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081517853 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134500231 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102193339 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087815995 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12700709 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.107424834 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087038756 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146750735 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116398945 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082085051 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07663165 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116354482 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117849058 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104371118 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074578821 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136743701 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072769675 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130098224 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157383698 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079807497 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105780444 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09529207 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077947682 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104441213 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100361072 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086133967 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.098123433 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.318340498 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088917972 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149882336 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133631223 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112731701 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135393453 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102386433 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.638282691 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077325717 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152555013 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115406291 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172783141 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099735975 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11912265 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109837641 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122783207 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143671019 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103735938 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.182300599 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130750147 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.115143185 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079622276 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101389065 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103359797 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087789109 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107292638 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113168627 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115196656 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092726563 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.114032915 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12370009 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081040162 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095102454 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155356411 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115234202 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141931349 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139508993 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08487626 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116676988 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136052766 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079152327 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.118487437 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1489404 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104424212 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097466053 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.079365512 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.09859261 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156482055 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072327121 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15549207 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11559055 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.249964654 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115055316 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.112412313 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130258115 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106995223 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120855444 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091658179 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.109400163 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112583576 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081481438 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076359559 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105099765 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11044972 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.098473266 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096594173 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.0980344 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152457771 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071594447 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098032859 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114021932 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143088069 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173928428 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.089000701 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082204382 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117843431 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112822958 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.111983401 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120337774 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078053392 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080552214 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.079484902 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076827106 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.108019712 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11175945 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113286328 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1097294 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161794509 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082262704 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.231184621 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09473103 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104049843 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069367803 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.07731066 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095191939 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097006788 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105913047 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109024052 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157402047 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.096782901 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.088566811 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089664754 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072744818 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081859963 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126712526 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107927189 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116141135 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096966202 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.061393495 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105693811 seconds)
  done (took 58.372728054 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.108682747 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.083310807 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096464762 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.143854473 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122278568 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.201499481 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.152547643 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.187401429 seconds)
  done (took 2.698447324 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.067015619 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094931075 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.10284721 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.084526872 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066175357 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069703848 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.230016879 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081828088 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065279155 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.097517113 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079041797 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069344297 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.425237844 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065279208 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068399588 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062918519 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066627301 seconds)
  done (took 3.368763559 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.386767809 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.612309055 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.381984533 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072750228 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.425343916 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.087999136 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.114851036 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.130688745 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.072696862 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.534030987 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.700687195 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.123350781 seconds)
  done (took 18.223834485 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.074507118 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.068918152 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.082941858 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.082425692 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072917376 seconds)
  done (took 1.957968389 seconds)
done (took 106.011008373 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080089963 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.603290371 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.052246405 seconds)
  done (took 2.259568948 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.08216363 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.08546561 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.084315165 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082253722 seconds)
  done (took 1.918768333 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.073198562 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.07527275 seconds)
  done (took 1.726096625 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.23262216 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.166364773 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.095140951 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082221154 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078801935 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079371755 seconds)
  done (took 1.824005717 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072061501 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.07469011 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072450343 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076700374 seconds)
  done (took 1.875571794 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.07636013 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.051795023 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054288975 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.05734645 seconds)
  done (took 1.820652077 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.086630128 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078808225 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.077595847 seconds)
  done (took 1.824556489 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.101781108 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.084798552 seconds)
  done (took 1.767432175 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.080939905 seconds)
  done (took 1.662092947 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.099919383 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.100814758 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.131882481 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.110775189 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.138721414 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.108311932 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.083544815 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.084504899 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076056411 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.08563578 seconds)
  done (took 2.601151798 seconds)
done (took 21.427401352 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07876812 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.453141105 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360526173 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089260618 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.666398368 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355757913 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.001499654 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092028737 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.113935002 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066835189 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083732493 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.646786842 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.955791364 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.413708115 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.945929718 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.409238032 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.647978627 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067560146 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066841824 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067318344 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.983788917 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066210541 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066930338 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067177746 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.647805454 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371141465 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.066968022 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.407959226 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066557357 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068619068 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.353446986 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067193239 seconds)
  done (took 16.383382999 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070202695 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.119040831 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072541824 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083726547 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.069280776 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.0691303 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.070512318 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068203921 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120957745 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066712523 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083885698 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.066775366 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.070669425 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067935035 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087029448 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.08315615 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067937106 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067336111 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067096415 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06728784 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085836009 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066285369 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067244573 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069584516 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067253033 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079289911 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067558465 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.066983229 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067306804 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068842442 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.06990692 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06799354 seconds)
  done (took 3.975174444 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117412017 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.127167019 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073217961 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103954637 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113227485 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069050076 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.146169189 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092138311 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128394356 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066641906 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083760617 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.066654831 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100931779 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068310068 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087308368 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067998613 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068303924 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067637665 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067352962 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067668895 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086831701 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067430956 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.0676412 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067923988 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067813163 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081163785 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067811828 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068197039 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067532381 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069481004 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070997346 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068204044 seconds)
  done (took 4.226933066 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072058911 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.07505381 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083216717 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084612956 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068468703 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071852476 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072141563 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.068602701 seconds)
  done (took 2.191343407 seconds)
done (took 28.364191882 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078876541 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068315746 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.071727543 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080833643 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.07246374 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.07803949 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066475771 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074938443 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.07143622 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072641147 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074433669 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.066973216 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070628651 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066676822 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073272098 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.0677715 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.078784248 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.0714389 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.0780237 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.078429723 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069954501 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.07322424 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074697212 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078131052 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.07799777 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078574343 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077104059 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072191745 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068624149 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.0703897 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076761966 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083831597 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.067981292 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079060099 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.066946904 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067348147 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.07143393 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067135694 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079070108 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076166016 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069406561 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076033003 seconds)
  done (took 4.659497825 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087306572 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092166514 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.08432488 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061160734 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067093132 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065001051 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087797412 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059079528 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.058726927 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.08747909 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.054588365 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058482905 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062132369 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.05277419 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.061122472 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.05598847 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061181897 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.054677634 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059292062 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.058555666 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.088422357 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.052550482 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.076361203 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062477415 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055514391 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.060950415 seconds)
  done (took 3.330853052 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074365426 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086813347 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.089409153 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.129551973 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.105442484 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.07919985 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.080562088 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.094632162 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.088155805 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066349005 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070605947 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092875249 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090540416 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073383013 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.066752916 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085663512 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.09470029 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.06854582 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.07264633 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096368491 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.08657732 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086335909 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.098274312 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.082635969 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066386896 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.068886732 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070979723 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082068176 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071827676 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076035931 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070978384 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.07023836 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068489209 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078014724 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070582225 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069004692 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.091272991 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076503002 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077437887 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.066940704 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.069513693 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.067519272 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.092212401 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.13135475 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.065898076 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.072925179 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074146436 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076369492 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.066361144 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086456379 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07800513 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066167659 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.069485185 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.065502997 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.066016968 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079458209 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068089941 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.068656275 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.075571745 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.069821054 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.090975882 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071109249 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082576257 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066131476 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074376779 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.065276607 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067155663 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.065401932 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.094538924 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068232641 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.110628466 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.067195962 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067703372 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075189104 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074377159 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.072268095 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.066719532 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081921759 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076719253 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.069917858 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075275705 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071008707 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.0693046 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.090561101 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.068874391 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.067914812 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067762394 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.072501289 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069130572 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.067788407 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079302511 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066354087 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.068994879 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083194296 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.065781799 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.067431608 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.071918959 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.070950607 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.065722252 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.07735417 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.0710438 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.066701095 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.075582568 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.06593287 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.069311335 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079172528 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.072229801 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.064713906 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.069843542 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.071476752 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.066610164 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.067536519 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.068841669 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.067829679 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.074812271 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.072705784 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.070205652 seconds)
  done (took 10.494754495 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.165196568 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.156533421 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070048016 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.147522752 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.07577321 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078463613 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.149417007 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.09424918 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.066978311 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.067930384 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068026262 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.1097548 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106899573 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.115176114 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.077825629 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.066756482 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083435407 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.113284074 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.151149523 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.145559209 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.0841131 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076500553 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.068891152 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.067882053 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.069726687 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.077438843 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.08503945 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.075996004 seconds)
  done (took 4.351612994 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.080064071 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.101055222 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073537291 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090141393 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090717176 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.066804931 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069310167 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.068993905 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080739425 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.076944907 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066759983 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.072255681 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073727148 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.070493746 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.067380327 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.073777874 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074134505 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068839898 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070992942 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072740268 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077248458 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.09076997 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071178682 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066296957 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.071805157 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066297007 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.062442504 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.083848936 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067841849 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.09482143 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.06540527 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074719354 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.080751294 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.067798507 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.066905287 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.066865721 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067081056 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.06647926 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068609933 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065645285 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065662149 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.056219907 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.065901372 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.078176372 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.07332939 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.055205531 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071289538 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.071716446 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072163141 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.063921934 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.069335633 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.069371241 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.069640738 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.073869475 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.071468457 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072378487 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.067893782 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.073657959 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075527383 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066323169 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06382232 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065042845 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071699958 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.06411983 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.07560179 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071572472 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065047605 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066988692 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.068138086 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.0735739 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066592724 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070199543 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064109843 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069037511 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071207148 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068413629 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.067705599 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065243584 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066427557 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.066742433 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.054071702 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.066937735 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.052352391 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.069646733 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.064662856 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065146377 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067193748 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071299291 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.078480974 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068275372 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072253972 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.067476979 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.065401657 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.069599238 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059020185 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069293001 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082517146 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.08120928 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068111129 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.064548333 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081469319 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071403084 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.065762282 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.054847711 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074448036 seconds)
  done (took 9.030456302 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.090176166 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069802131 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086052445 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.092798259 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.08651933 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075323355 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076929698 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068698426 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.082604402 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073916197 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076141385 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067291263 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077913227 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076450298 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069558808 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077247104 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071304376 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084250303 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083006474 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067628983 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075004519 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079380554 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.08944959 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.081043916 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.079935531 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.081865457 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089403937 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.071776504 seconds)
  done (took 3.844792637 seconds)
done (took 37.30130548 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.686735575 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.853362859 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.670611706 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.035757663 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.783946966 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.678608196 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.851153149 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.668041604 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.929284132 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.708709354 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.906195094 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.770171353 seconds)
done (took 64.153755392 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.701781236 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.811130621 seconds)
    (2/2) benchmarking "String"...
    done (took 1.937736303 seconds)
  done (took 5.360453384 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.984301044 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.228373388 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.920079957 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.666135304 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.672438273 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.00917481 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.470626756 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.212003372 seconds)
  done (took 29.788633252 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.779858822 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.896662449 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.340560284 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.373268692 seconds)
  done (took 15.049046278 seconds)
done (took 61.579406124 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.687472649 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.664834619 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.691160722 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.649021169 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.723187212 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.671877931 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.180526752 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.70429465 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.667962753 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.657225493 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.666287749 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.104967609 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.677563659 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.214207241 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.66696723 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.666299561 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.67889811 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.256760671 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.823511672 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.675353589 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.665013693 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.694572674 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.669013907 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.667562202 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.688687242 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.663523935 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.089450213 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.674050494 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.27343498 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.668000937 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.692080581 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.23111172 seconds)
  done (took 201.014187833 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.663956301 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.521292745 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.583900865 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.713475737 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.057751062 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.844297453 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.783985644 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.080722747 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.665566961 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.693072388 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.800868689 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.667495286 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.831407151 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.634998943 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.693692726 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.775374684 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.856042212 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.853166752 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.698013959 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.838937587 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.680305344 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.775739808 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.671567044 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.786779766 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.675081268 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.682733494 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.845212528 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.682364254 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.860549634 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.806771266 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.685837475 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.683170397 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.889961841 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.543804669 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.682669377 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.678542859 seconds)
  done (took 165.497367559 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.04680063 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.669434676 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.668197532 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.668347182 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.683186037 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.668305655 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.790570056 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.79495605 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.270750835 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.221582657 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.672896131 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.720095774 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.509678506 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.669616188 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.73645676 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.684069522 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.670953097 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.684531756 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.695152666 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.670322411 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.669702747 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.794591477 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.68270612 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.14761888 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.676984625 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.672421211 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.675270937 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.04169021 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.670280423 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.676173422 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.926562282 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.67236154 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.670660998 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.569131788 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.330528608 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.753468196 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.67257029 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.676157466 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.67083354 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.890823016 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.671294466 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.671390749 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.671512118 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.673124528 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.843261858 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.672611577 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.792834063 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.672887587 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.185430911 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.673625155 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.672461403 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.342189867 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.374461632 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.672678794 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.670444132 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.673678389 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.671863399 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.67144119 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.676756741 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.357470592 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.744801914 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.672630816 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.675556392 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.67701192 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.672126872 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.670824018 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.842944407 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.674108529 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.737575638 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.731442269 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.796110905 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.792866608 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.673746044 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.740115032 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.766171601 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.671384075 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.672330541 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.67180401 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.671673088 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.753330273 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.672156159 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.809128496 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.679526014 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.674785492 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.722506917 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.740646853 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.673276377 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.564593589 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.674571677 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.672640856 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.00402408 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.671987193 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.739228155 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.672675847 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.672067894 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.672133677 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.803646727 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.795443381 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.451436572 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.676644578 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.511031026 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.677262838 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.865203613 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.679521752 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.861970891 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.675719035 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.755458475 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.680628304 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.673763062 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.672956088 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.704943639 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.674915994 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.732213264 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.681002304 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.04785166 seconds)
  done (took 390.873285524 seconds)
done (took 761.097623054 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.360132608 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.315206007 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.415707565 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.32997108 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.305047393 seconds)
  done (took 13.342168366 seconds)
done (took 14.958990239 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.760061491 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.764193378 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.697151219 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.763810639 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.694413138 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.765106774 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.744051271 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.699601315 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.730210902 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.699614497 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.732787836 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.705433722 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.687246187 seconds)
  done (took 24.063081906 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.907968698 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.916070472 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.750757826 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.907297553 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.723165899 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.907678768 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.84222746 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.828263243 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.839492041 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.6912221 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.689585087 seconds)
  done (took 21.622600522 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.915860042 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.920202337 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.75694606 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.915160313 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.727081977 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.915930146 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.842545392 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.835576169 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.831477743 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.692266517 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.688743333 seconds)
  done (took 21.660198196 seconds)
done (took 68.961971044 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.68567053 seconds)
  done (took 3.303439627 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.709161047 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.866200576 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.689628796 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.688456453 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.684898726 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.68434733 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.687016561 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.684584464 seconds)
  done (took 15.314502595 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.683881137 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.680903459 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.681098853 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.684129236 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.68513594 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.684197586 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.684098733 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.684779153 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.681713151 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.684463896 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.682426014 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.684229595 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.6832073 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.68462483 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.68126072 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.684400904 seconds)
  done (took 28.554630277 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.683850756 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.683935867 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.681473508 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.68239346 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.681531007 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.682695508 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.683359301 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.683911101 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.681986044 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.682660544 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.683304276 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.683296212 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.682815459 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.685441262 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.682426635 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.68358378 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.68249748 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.683223882 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.687064188 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.684782659 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.683485058 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.682827753 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.684428634 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.684579823 seconds)
  done (took 42.024623567 seconds)
done (took 90.81517676 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.564951486 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.074870933 seconds)
  done (took 8.263797209 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.690105131 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.685999726 seconds)
  done (took 5.035889342 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.687153484 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.68634967 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.685509672 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.687269476 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.685785839 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.686021487 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.685605971 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.686822104 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.687001856 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.689073223 seconds)
  done (took 18.486793675 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.685924398 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.686810813 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.683896382 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.68620579 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.68862739 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.684471688 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.686819264 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.685802074 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.687696442 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.68399518 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.688567792 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.684655026 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.686801652 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.684214108 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.687987796 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.683973822 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.685608899 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.68462449 seconds)
  done (took 31.96935681 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.687277462 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.687406975 seconds)
  done (took 4.997511847 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.689302922 seconds)
    (2/7) benchmarking "second"...
    done (took 1.684838924 seconds)
    (3/7) benchmarking "month"...
    done (took 1.685574149 seconds)
    (4/7) benchmarking "year"...
    done (took 1.685179021 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.685726013 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.685368775 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.688783888 seconds)
  done (took 13.42774574 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.687552867 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.84533252 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.912406566 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.343786087 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.689321672 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.690923608 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.652766202 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.691675322 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.692717718 seconds)
  done (took 18.828826807 seconds)
done (took 102.630778711 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.500903331 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.681312974 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.045745311 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.775882636 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.698696354 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.024137652 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.711593526 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.991406332 seconds)
done (took 42.054485545 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.688921974 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.251217078 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.286519284 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.182793201 seconds)
  done (took 12.340872468 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.665423042 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.206043029 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.721263425 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.27929959 seconds)
  done (took 19.514809426 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.051664175 seconds)
    (2/2) benchmarking "read"...
    done (took 2.036005168 seconds)
  done (took 5.71299791 seconds)
done (took 45.879011215 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.68738608 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.686829373 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.683778455 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.686752454 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.685059012 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.685978009 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.684442838 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.687838825 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.687838588 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.687169073 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.686579184 seconds)
    (12/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.687823586 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.688074913 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.686690918 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.684765316 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.685117768 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.688036615 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.686888531 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.685635825 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.684258355 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.688533618 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.68555274 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.684130277 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.691025699 seconds)
  done (took 42.100484818 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.686835802 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.685638303 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.687236048 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.686972435 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.686299121 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.688636535 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.688526539 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.685318435 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.688919971 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.688771882 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.686345799 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.685311248 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.687787834 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.685314387 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.688283819 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.685671345 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.689294517 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.686160257 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.689751667 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.686026821 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.688719071 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.686227706 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.68724803 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.689011761 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.686616691 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.687916959 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.688288616 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.689147791 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.690073843 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.687080371 seconds)
  done (took 52.246371283 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.694409747 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.696286381 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.69096708 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.689907867 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.689441132 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.689578027 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.68999344 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.689794548 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.690818665 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.688620346 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.689379465 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.689064852 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.690099441 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.689538631 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.691427791 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.690367073 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.690529472 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.690433984 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.690528445 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.690180989 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.690796251 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.691145499 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.690760221 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.690336576 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.691132736 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.690776711 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.692649584 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.691036865 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.690841191 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.690262331 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.691021721 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.6909017 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.691955981 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.691563086 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.69062606 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.691340327 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.694762482 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.697520635 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.693747182 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.691121588 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.691070237 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.692400385 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.691096949 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.690808805 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.692577034 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.691223321 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.691374076 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.691706039 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.691802517 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.692147395 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.692016754 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.691500372 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.692508331 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.692133796 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.692077707 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.693216669 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.691535437 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.692085139 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.692797709 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.692629679 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.692324965 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.692279395 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.692484762 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.692180888 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.694169155 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.694003092 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.692505446 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.695074401 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.692528728 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.694112455 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.69190786 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.692794212 seconds)
  done (took 123.428585595 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.693769541 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.691288366 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.689666914 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.690894011 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.68954924 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.692810488 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.691678557 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.692878 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.690664937 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.693372569 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.693469963 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.691192555 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.693760263 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.69366344 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.694489105 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.69186924 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.694110862 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.690753402 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.695113842 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.693639504 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.693300038 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.690769396 seconds)
  done (took 38.860773335 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.694072905 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.696596567 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.69120386 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.694117135 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.691863675 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.694882752 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.694376344 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.695737156 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.694154419 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.693097966 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.692281042 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.695037047 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.693341388 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.694305511 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.693603419 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.692248593 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.695132905 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.691994525 seconds)
  done (took 32.116830873 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.695025978 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.692569333 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.694600683 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.692262415 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.692797974 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.69525267 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.693399198 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.696144292 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.695661088 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.693758504 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.695910878 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.698561008 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.695697426 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.693047554 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.696222419 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.692896265 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.695623486 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.696408341 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.696021647 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.693635032 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.693982251 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.696278276 seconds)
  done (took 38.91597666 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.696340828 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.696102916 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.69420213 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.693644654 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.69420351 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.696589957 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.69705583 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.694641604 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.696503966 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.696633199 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.694072591 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.696533434 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.69478803 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.695244301 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.694472295 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.693792442 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.696761477 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.694653509 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.69730079 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.693598872 seconds)
  done (took 35.5386948 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.697681326 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.697038024 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.69738711 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.699096133 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.697096435 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.696618813 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.697008788 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.697395475 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.698365189 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.698116 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.698332583 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.697712353 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.698119434 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.697607045 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.697199203 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.699307065 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.698147373 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.697651574 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.697864006 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.697568341 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.698115611 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.699181435 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.698439586 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.698778315 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.698440396 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.698418813 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.699537334 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.699046083 seconds)
  done (took 49.177619902 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.698402483 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.698608735 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.695602928 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.697065028 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.696154489 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.696562424 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.696950499 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.696313941 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.699071389 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.696596536 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.699360972 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.698907476 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.699354087 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.699988281 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.699550251 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.700091737 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.699725898 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.696863562 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.695929982 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.696257016 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.699013062 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.699462535 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.700429654 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.69678177 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.696767731 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.699685297 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.696902362 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.696916507 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.699963678 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.696200185 seconds)
  done (took 52.574275968 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.717870017 seconds)
    (2/2) benchmarking "in"...
    done (took 1.718139467 seconds)
  done (took 5.070423692 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.696508427 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.700779113 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.699296272 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.697976553 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.697116536 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.701351183 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.70012305 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.697729041 seconds)
  done (took 15.225608921 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.701710528 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.700905873 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.700950071 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.699995776 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.701421041 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.701982384 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.70777558 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.70073911 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.702176397 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.702095774 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.708845685 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.708837601 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.704200424 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.700589492 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.70062977 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.702924184 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.70237305 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.701337804 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.701021015 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.701373179 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.702500733 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.702755301 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.702323285 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.699324832 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.703042725 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.710755324 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.70453455 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.702334141 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.701388682 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.70500617 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.700354423 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.699118409 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.702231447 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.701225577 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.702872471 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.702722692 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.710609613 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.702708203 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.705980164 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.702067224 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.702521594 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.699683266 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.703400667 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.703705008 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.703131933 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.702622741 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.703021856 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.699869677 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.702307083 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.70680202 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.707776964 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.702581116 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.699884622 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.706204283 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.703458026 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.709134846 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.703213776 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.705400683 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.711067356 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.71145636 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.715054435 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.708813775 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.703794451 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.70437021 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.713232635 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.724958044 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.71067674 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.701210146 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.700479221 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.704011668 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.708686005 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.715492828 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.712883224 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.703095821 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.704641072 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.70417115 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.703464859 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.704005361 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.710554886 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.706014806 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.704022881 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.704332716 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.713285804 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.724544479 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.703565289 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.704128804 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.704295802 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.704836176 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.705969033 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.715374103 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.706235681 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.703840906 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.704139905 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.704455293 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.705792285 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.704836668 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.704354761 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.706111202 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.702112606 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.70431676 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.704710909 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.707870423 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.712565254 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.705513513 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.705508997 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.710883254 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.705542182 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.706220314 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.710982562 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.704903644 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.705961948 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.707342684 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.71156688 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.703427023 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.708839528 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.713295678 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.705092168 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.708008812 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.704691229 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.706776386 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.714707133 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.730067487 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.70831428 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.706445341 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.71114025 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.71719891 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.706494726 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.709035395 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.706810295 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.705471407 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.704617189 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.708575297 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.706267795 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.708260427 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.707603577 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.708814719 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.704314562 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.707421322 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.707363927 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.708583247 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.708176066 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.707142265 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.709036971 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.708452693 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.708588186 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.709194268 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.712701503 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.70753492 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.709918699 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.709257343 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.706241642 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.709155716 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.708865802 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.707422338 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.709417185 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.707582004 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.708268245 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.707615843 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.707102735 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.708355153 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.708916736 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.709339216 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.711433274 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.708792434 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.711256031 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.707015434 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.706382663 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.708512379 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.709221795 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.70929973 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.708834214 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.707252867 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.712747577 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.716179774 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.709038969 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.709167887 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.711202249 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.710463038 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.710323484 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.709357206 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.713061117 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.716323717 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.709734784 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.716370503 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.710379511 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.710153531 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.710157534 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.710946626 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.709194544 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.711797783 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.713825005 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.71791596 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.722263941 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.717851457 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.710955529 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.713670425 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.710848545 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.713902652 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.714704447 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.710203691 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.710054077 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.710186798 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.709424187 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.71085759 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.711543018 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.71078196 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.710601355 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.712604618 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.71087067 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.71114216 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.712111574 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.711452162 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.712356864 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.708372846 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.711696974 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.711086494 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.711258004 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.708874769 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.711105418 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.711922764 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.71175123 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.711432274 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.717487625 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.709195032 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.713090336 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.712820533 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.712343078 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.7112606 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.712985614 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.714742048 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.713041946 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.718050892 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.713618292 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.713725745 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.718856028 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.712027083 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.7120044 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.714556009 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.712601884 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.7111234 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.716904203 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.72053138 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.714541624 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.712864321 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.713503136 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.713643834 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.715175771 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.718153247 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.710899389 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.714313692 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.714122287 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.714887638 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.711151445 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.714527437 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.714005583 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.714618664 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.716110731 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.715119601 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.714774259 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.71566916 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.713149601 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.713199425 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.713779926 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.716982299 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.72145428 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.718641061 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.714190995 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.71573039 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.715135173 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.718049323 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.714396385 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.714977365 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.714166421 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.726781913 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.722473981 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.72015855 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.715930317 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.716534295 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.719463901 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.715768365 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.719759342 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.715177356 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.715555721 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.714623662 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.715025257 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.71272931 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.715728343 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.714702749 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.717394632 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.716713588 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.71845706 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.715290867 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.715148865 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.715853203 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.71541409 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.715873439 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.714929215 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.716178975 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.718197321 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.71690188 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.715897485 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.716642575 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.721422164 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.716633232 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.717883172 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.715734306 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.716829838 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.715672726 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.717004544 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.717324327 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.718498815 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.724949365 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.720470643 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.724814735 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.717822328 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.723706049 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.717309921 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.721938072 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.723633353 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.714575321 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.715828971 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.716622414 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.717200178 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.723644298 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.716713149 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.717583309 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.720151583 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.716728014 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.71790001 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.718501391 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.71703449 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.718076919 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.71632369 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.724736739 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.717696604 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.722294898 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.720159684 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.714672819 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.717912391 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.717340578 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.716430632 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.721404984 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.717535654 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.717977802 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.71828844 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.718259735 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.718211036 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.719103792 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.718011725 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.716013554 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.71858475 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.724393451 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.720295343 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.721604293 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.719213541 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.723995692 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.717978244 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.724927044 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.719736001 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.719239139 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.718304147 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.718476894 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.719335345 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.718193371 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.720709502 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.719334222 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.720419575 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.722188248 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.720094835 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.720644537 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.719651661 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.719161329 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.719205749 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.729887376 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.740737142 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.720845148 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.724093123 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.716354659 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.722005512 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.723167223 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.719833404 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.720392287 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.721721096 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.72930692 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.727442814 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.720179651 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.720577784 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.721674965 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.719179187 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.720442863 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.719994181 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.72083865 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.721176838 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.721550481 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.720745026 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.724608157 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.719915855 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.720949975 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.720684193 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.721591855 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.729385013 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.720238381 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.721485669 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.721152348 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.72118578 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.720951797 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.721861478 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.721050828 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.721576282 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.7212777 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.722616573 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.727202209 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.726710167 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.723267886 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.721542228 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.722524056 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.721770114 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.720885218 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.721989671 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.722271535 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.721146206 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.721716107 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.720971385 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.722460739 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.720449522 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.722096677 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.722575278 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.722778984 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.725552956 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.729408068 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.721421929 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.719372125 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.721062301 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.722075643 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.721815844 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.722969649 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.72908164 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.724865631 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.732106349 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.730411504 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.726544296 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.723176538 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.725534641 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.73106686 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.722323776 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.723500971 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.722866549 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.723581165 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.724591745 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.725954416 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.72352668 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.729503559 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.723520474 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.722698042 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.731194997 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.724648036 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.723107337 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.725211786 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.726300931 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.723111013 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.720962675 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.724324309 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.723722361 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.730246705 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.725269814 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.723794543 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.725642532 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.723692008 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.726555542 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.726635311 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.724581085 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.725201216 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.721493475 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.72529886 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.72353472 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.725024207 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.723273527 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.724988646 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.724892569 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.728189128 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.730629701 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.723246268 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.726557665 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.725655513 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.725741915 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.724329743 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.725605178 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.722098385 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.722867083 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.725861484 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.724855299 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.72495556 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.728969819 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.724831711 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.727217616 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.72585983 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.725516215 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.729647014 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.734636112 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.731980516 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.723346759 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.726411082 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.726799647 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.729620543 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.725655208 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.725174747 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.726366239 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.726870752 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.726266691 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.72636441 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.727013168 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.728947132 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.742442006 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.725975974 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.726107117 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.726939115 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.729926119 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.726840035 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.724497429 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.727468812 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.728672233 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.730044432 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.73348848 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.727104764 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.733151753 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.727339221 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.72840455 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.730564186 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.73073792 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.734860757 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.72998307 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.72755885 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.727576821 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.732222905 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.74150627 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.72777378 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.737115234 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.754597724 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.729586403 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.729098251 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.728143163 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.727260951 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.727865246 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.729937937 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.728137566 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.729108061 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.727415724 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.727761218 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.729012503 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.734004933 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.730226501 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.728598208 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.727869447 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.727946328 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.730550592 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.726279804 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.728977256 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.728837613 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.728338874 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.729054062 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.729020524 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.729308249 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.741218524 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.739141615 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.729366627 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.729416507 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.726927035 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.733018293 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.731551954 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.738955014 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.736453849 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.729497886 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.729325627 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.730828587 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.729774066 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.726446709 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.729750388 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.729304579 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.729933275 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.727892663 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.742753154 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.736825524 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.733961046 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.730834889 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.730715599 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.730092877 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.73190138 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.729651129 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.730912383 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.73198796 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.732006717 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.734421474 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.731718047 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.730846862 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.733184337 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.739218657 seconds)
  done (took 1025.139300504 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.728119741 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.728296852 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.729202907 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.729024993 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.728249157 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.728826861 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.729439016 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.72874695 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.728641522 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.727807042 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.728753815 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.728218196 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.729031903 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.728962641 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.728516354 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.729107707 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.729160077 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.728606961 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.729036496 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.729105147 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.729063189 seconds)
  done (took 37.970553541 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.732408994 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.729366975 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.72982837 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.731673614 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.728676843 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.731528061 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.729943673 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.731859827 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.731849243 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.729802289 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.733846299 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.732863289 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.729621939 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.729826007 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.729617002 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.732457532 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.731787691 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.729801613 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.733204595 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.730709552 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.732054804 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.730415868 seconds)
  done (took 39.749089332 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.733912174 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.73197782 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.732483312 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.731017656 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.733010112 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.73104034 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.734519003 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.733124348 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.734072845 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.73465816 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.733011835 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.733932197 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.741281565 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.737990708 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.734438805 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.733690455 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.878303902 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.733437353 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.733022356 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.733742444 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.731835582 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.738468385 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.732300182 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.732461932 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.733339413 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.733509569 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.735150613 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.734877234 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.733638757 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.736786474 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.739005986 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.73431265 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.734162371 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.736062379 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.734228184 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.735080768 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.738008917 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.73450227 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.733443473 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.735892856 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.74520529 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.753860983 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.733951534 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.740141624 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.734877566 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.736229801 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.738886628 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.744973068 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.732771519 seconds)
  done (took 86.849121939 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.735689829 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.735608053 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.733028904 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.734759565 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.735466067 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.736403513 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.737006621 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.736726588 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.733133445 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.733265647 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.737260234 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.733625054 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.733990855 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.735861731 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.736439581 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.733823618 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.734858705 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.734285218 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.732930824 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.734924782 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.736242857 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.736179342 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.736161872 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.734785602 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.737479453 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.735407931 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.734248643 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.737963057 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.734512663 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.7347369 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.737400508 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.73797773 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.738096733 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.735894617 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.734632649 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.737375112 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.738195205 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.735652023 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.73732369 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.734902382 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.737887849 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.739227553 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.738673108 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.738795055 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.735545309 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.735765369 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.735396355 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.735485889 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.737900194 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.738490573 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.738732046 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.735750602 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.739086469 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.735530165 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.73865862 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.738351513 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.736484374 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.736190374 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.738562928 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.737360867 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.73593663 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.738695844 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.736495179 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.740302161 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.739896028 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.737973083 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.737898262 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.739420277 seconds)
  done (took 119.750196087 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.739973743 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.739530859 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.740907188 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.740025246 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.739135588 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.740275692 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.740193321 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.739651701 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.73999493 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.738659223 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.739088959 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.740150049 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.739505582 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.739896335 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.73911405 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.738767941 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.739038421 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.739451065 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.739488289 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.740400373 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.73993332 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.73818974 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.739811958 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.740108909 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.739959805 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.74084317 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.738819197 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.739733482 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.740008454 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.740239639 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.740388607 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.741561772 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.740159174 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.739804979 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.740916772 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.739797643 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.74141927 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.739929177 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.74106442 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.739721962 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.740853209 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.740933274 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.742711156 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.740488158 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.740264464 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.740199899 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.74131642 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.741165714 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.742528713 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.741032929 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.740748901 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.740673058 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.740480797 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.741124982 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.743244741 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.742663183 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.741092109 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.741348453 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.742048149 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.74303478 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.741000654 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.742476962 seconds)
  done (took 109.582394413 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.74329804 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.74239118 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.739074019 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.740246473 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.741438054 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.739368637 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.742604922 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.742182405 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.743489719 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.742842259 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.741283494 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.739622208 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.741072366 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.741181678 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.741108675 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.740892252 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.739549936 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.740727851 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.742938993 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.740370911 seconds)
  done (took 36.501893827 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.739392327 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.742570958 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.740636289 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.741277024 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.742928022 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.740926749 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.743576707 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.742622368 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.739809699 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.742523557 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.743965262 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.743409552 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.7406811 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.740282349 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.743969743 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.741118916 seconds)
  done (took 29.546278635 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.741008061 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.743948645 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.743323736 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.743632982 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.742891461 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.741437755 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.743682075 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.740954155 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.740776803 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.744063526 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.744767212 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.745068392 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.744221345 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.744205341 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.742273928 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.746120025 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.742202092 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.742196779 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.745326615 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.743876307 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.742432752 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.742058401 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.746401425 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.745044647 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.743347268 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.742458274 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.742288281 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.743080066 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.742350981 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.744264314 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.743840185 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.742854572 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.741912102 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.743369106 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.74549562 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.742530575 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.74517329 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.746041328 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.745888065 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.74697519 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.744976311 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.743048889 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.745587867 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.745571104 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.743567654 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.747570858 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.743476535 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.744020328 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.743710508 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.743480084 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.746503257 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.74615911 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.746007447 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.74684387 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.746261028 seconds)
  done (took 97.59939942 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.746579414 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.746497858 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.744778468 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.746115985 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.74685146 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.744845788 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.748053152 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.743385778 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.744214373 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.747790011 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.745078212 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.746039088 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.744067397 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.747791745 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.745598339 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.747594324 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.744314058 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.746400337 seconds)
  done (took 33.106030418 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.74515116 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.744787765 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.747235642 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.745319362 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.744917793 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.748133336 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.746289491 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.747955163 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.748115854 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.746276176 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.74564001 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.74882166 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.749230062 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.7498785 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.746417056 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.746174889 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.749674529 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.748560714 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.745865374 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.745649277 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.749251719 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.749731713 seconds)
  done (took 40.120869302 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.74769368 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.747991243 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.763597431 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.766885199 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.769490726 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.779340823 seconds)
  done (took 12.257356183 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.746164527 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.748953557 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.746700186 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.750750692 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.75005795 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.747290921 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.746434637 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.74826028 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.751058166 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.747371124 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.747616821 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.748988169 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.750901433 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.748137327 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.750531534 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.749918127 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.747751935 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.747470173 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.748026365 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.750657745 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.74873841 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.751945049 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.748551308 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.747654452 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.747865737 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.74814339 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.751763956 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.749247564 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.748981554 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.751132042 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.751636544 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.749040995 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.751331654 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.749646674 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.751188902 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.750848251 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.74908993 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.751829703 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.75150431 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.748999833 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.752518112 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.752000746 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.751696019 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.750495249 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.752093716 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.748744105 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.749287025 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.749250117 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.749752244 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.753365368 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.752829532 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.749411943 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.752024692 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.751667403 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.751978717 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.752030015 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.749831192 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.749459183 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.751938073 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.749656615 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.750000215 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.752471135 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.748690798 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.75117431 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.752916844 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.749866303 seconds)
  done (took 117.181734159 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.749625472 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.75020593 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.750428588 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.750145634 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.749729913 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.750453141 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.749757443 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.750331949 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.750270503 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.750615463 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.754009707 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.750497117 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.750568739 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.751197665 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.752280127 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.750813318 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.751359923 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.751175888 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.750423688 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.753845415 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.751773872 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.752660507 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.751703148 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.751834975 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.751306052 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.754528048 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.750526347 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.751767183 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.75182486 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.7519635 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.751028402 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.751825876 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.750530561 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.751940881 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.751189508 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.752476645 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.751476082 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.751661647 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.752414663 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.754969236 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.752517466 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.755732712 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.752468356 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.752102016 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.75245554 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.752515444 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.752629956 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.753479543 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.752292593 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.752019557 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.75293563 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.752893066 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.752932136 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.75309673 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.752360263 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.752487105 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.752674438 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.753081639 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.753101833 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.756128737 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.753213518 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.752690677 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.756376764 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.753898178 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.752600456 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.753621796 seconds)
  done (took 117.326788019 seconds)
done (took 2389.559029521 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.836609591 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.897096071 seconds)
  done (took 15.42291578 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.919991337 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.869656173 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.754794346 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.796803084 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.753821259 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.776693047 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.770397469 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.753971553 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.75457043 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.75490502 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.754297797 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.941442927 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.750183693 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.755039621 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.753878902 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.847858162 seconds)
  done (took 50.400807174 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.757774585 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.758328272 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.769702148 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.761220151 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.757120581 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.777557469 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.79237164 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.761325294 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.817633575 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.771132557 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.881104064 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.770719931 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.757074 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.808228085 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.775100278 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.772184572 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.85131568 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.836686122 seconds)
  done (took 33.866203971 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.836802576 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.75808814 seconds)
  done (took 10.292346604 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.77942258 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.766364151 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.776786211 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.779650148 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.754451827 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.752304977 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.758190026 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.752568138 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.767777167 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.791299919 seconds)
  done (took 69.371481999 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.763301614 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.759252948 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.758532404 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.758218316 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.751251009 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.755513237 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.758686785 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.755642859 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.452838417 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.796117516 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.767171568 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.763872506 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.759012539 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.761286783 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.756953424 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.783155449 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.878694662 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.75703658 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.756059228 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.763824006 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.759732257 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.842716068 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.773370415 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.760685507 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.788911814 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.454940147 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.767327464 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.765026732 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.878566386 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.757249156 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.75998466 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.760209021 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.761342928 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.146931131 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.05179265 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.761213026 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.767520451 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.767138204 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.756528597 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.899875744 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.7602926 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.765972328 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.676860444 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.039667382 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.87450014 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.803022201 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.152941187 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.763490018 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.760627352 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.790011328 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.762906109 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.761138834 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.773594969 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.271881063 seconds)
  done (took 126.689446647 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.75556708 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.018752007 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.91210556 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.75674031 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.046243677 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.969615682 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.760701024 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.806277955 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.758412087 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.988545222 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.923501072 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.870635773 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.757455497 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.75555274 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.754258644 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.753826512 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.918910503 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.834722568 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.757382476 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.7541475 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.790782886 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.004600125 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.887062969 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.761311033 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.777544111 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.969978153 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.885473985 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.869340104 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.040551053 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.756726825 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.82441382 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.759108635 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.755322735 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.755386438 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.915237407 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.856400879 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.849319061 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.75871591 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.756014433 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.75728537 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.431667201 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.953896147 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.857918635 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.90353946 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.01655631 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.965256651 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.547320519 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.756291014 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.497487318 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.918777819 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.993272314 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.992507292 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.886101976 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.76168848 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.021421814 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.756732645 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.757326991 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.9949131 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.987805235 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.864356707 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.761770183 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.759312198 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.757040115 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.007059423 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.760201436 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.854987226 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.760341905 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.761034036 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.855718823 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.865394959 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.98895811 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.975922048 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.794605714 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.052299703 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.225477924 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.009074731 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.830473422 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.99436076 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.762082383 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.757493964 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.844954508 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.604602614 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.918010695 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.011997933 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.015836157 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.799103494 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.489509333 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.759058152 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.989214335 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.985460515 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.017296172 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.999207643 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.912367324 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 4.962092745 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.758773622 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.758549351 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.017602551 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.899884344 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.763561232 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.122714953 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.996254917 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.33100196 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.791386323 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.071923958 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.895902754 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.763038163 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.402556973 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.758770593 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.989560164 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.803880973 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.762435866 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.758227375 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.984158133 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.751356448 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.761107989 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.595005696 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.825102108 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.763437744 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.998551552 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.762815779 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.030345904 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.762691914 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.000772558 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.926124055 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.796178728 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.934573212 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.004390421 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.763397981 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.023472 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.009722389 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.88072562 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.037645474 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.690789632 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.760092473 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.053163866 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.764068159 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.760699705 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.934581634 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.762161617 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.910780241 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.764680768 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.052351099 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.788594042 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.919875416 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.765448989 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.022202957 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.800238361 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.817343912 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.765722804 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.89112893 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.764886322 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.637465598 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.916596178 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.764049693 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.761161254 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.308611619 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.764469098 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.921025592 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.997008653 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.789736578 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.839165888 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.439621408 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.762906427 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.852617055 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.790975803 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.115813675 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.762604807 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.920113798 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.765296916 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.307045143 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.763724834 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.006878054 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.00034786 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.766999482 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.762286269 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.680864751 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.762540377 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.762807574 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.926064878 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.585749763 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.761880302 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.968380839 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.766614926 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.898524188 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.768460915 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.839413373 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.115999211 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.764537429 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.764720795 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.764188745 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.764332077 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.762761147 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.973520962 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.7980753 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.289487244 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.904598857 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.038362126 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.085349505 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.016715859 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.813764399 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.768730199 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.013681935 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.765638898 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.83052497 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.766141041 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.787688382 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.997204031 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.764828802 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.972931973 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.042726398 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.684625265 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.810980176 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.761822286 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.758397225 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.676467024 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.90763123 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.84891878 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.758142865 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.752785589 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.872949648 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.881859263 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.968601988 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.753820869 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.808016978 seconds)
  done (took 878.491803659 seconds)
done (took 1186.224189794 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.749587343 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.75117149 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.732965686 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.752838974 seconds)
  done (took 28.676549244 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.755147207 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.752870466 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.754074558 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.751302941 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.753055534 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.751268705 seconds)
  done (took 12.204108403 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.776009958 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.747142358 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.746280686 seconds)
  done (took 20.955548713 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.818781146 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.165400522 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.860735029 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.225666819 seconds)
  done (took 9.754201164 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.750301447 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.746714559 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.747293153 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.749075394 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.749783867 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.750252167 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.748845621 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.747503478 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.750168888 seconds)
  done (took 17.42313612 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.095518563 seconds)
done (took 94.798329687 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.324826814 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.449820912 seconds)
    (3/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.242747356 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.161756515 seconds)
    (5/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.856114224 seconds)
    (6/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.920274887 seconds)
    (7/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.793781135 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.819147315 seconds)
    (9/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.970626517 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.897825843 seconds)
    (11/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.772159808 seconds)
    (12/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.380466884 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.814473791 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.79648958 seconds)
    (15/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.768739042 seconds)
    (16/309) benchmarking ("map", abs, Float32, false)...
    done (took 3.581207096 seconds)
    (17/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.799653681 seconds)
    (18/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.278883279 seconds)
    (19/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.029477945 seconds)
    (20/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.772206953 seconds)
    (21/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.080448057 seconds)
    (22/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.700525098 seconds)
    (23/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.134119594 seconds)
    (24/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.049077865 seconds)
    (25/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.796849583 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.748344159 seconds)
    (27/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.778786291 seconds)
    (28/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.779017796 seconds)
    (29/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.790143508 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.673508088 seconds)
    (31/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.776889524 seconds)
    (32/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 3.721478904 seconds)
    (33/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.784014587 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.094872462 seconds)
    (35/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.021182963 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.33944943 seconds)
    (37/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.185927338 seconds)
    (38/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.761477433 seconds)
    (39/309) benchmarking ("map", identity, Bool, true)...
    done (took 3.666446063 seconds)
    (40/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.78078531 seconds)
    (41/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.873336105 seconds)
    (42/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.575305523 seconds)
    (43/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.998053906 seconds)
    (44/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.876545818 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.563248617 seconds)
    (46/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.869706127 seconds)
    (47/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.953846493 seconds)
    (48/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.94444892 seconds)
    (49/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.824970548 seconds)
    (50/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.078090002 seconds)
    (51/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.781306159 seconds)
    (52/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.212575254 seconds)
    (53/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.964866664 seconds)
    (54/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.945042354 seconds)
    (55/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.884038314 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.071941905 seconds)
    (57/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.863750207 seconds)
    (58/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.801415453 seconds)
    (59/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.772642871 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.683837973 seconds)
    (61/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.471553183 seconds)
    (62/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.260280981 seconds)
    (63/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.924522137 seconds)
    (64/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.1091932 seconds)
    (65/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.76335377 seconds)
    (66/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.868251245 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.693028906 seconds)
    (68/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.898014417 seconds)
    (69/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.775226209 seconds)
    (70/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.039692346 seconds)
    (71/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.811946385 seconds)
    (72/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.795987299 seconds)
    (73/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.367787856 seconds)
    (74/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.366768867 seconds)
    (75/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.841990063 seconds)
    (76/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.861031326 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.851286662 seconds)
    (78/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.864373532 seconds)
    (79/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.839765024 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.896371783 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.069565462 seconds)
    (82/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.886299987 seconds)
    (83/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.268310223 seconds)
    (84/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.413790543 seconds)
    (85/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.994249661 seconds)
    (86/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.148167254 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.364589584 seconds)
    (88/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.955242357 seconds)
    (89/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.338934212 seconds)
    (90/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.779346797 seconds)
    (91/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.9743561 seconds)
    (92/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.886561671 seconds)
    (93/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.807021831 seconds)
    (94/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.124027299 seconds)
    (95/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.781213473 seconds)
    (96/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.775123812 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.901238924 seconds)
    (98/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.775014171 seconds)
    (99/309) benchmarking ("sort", Int64, false)...
    done (took 5.461535836 seconds)
    (100/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.776503754 seconds)
    (101/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.186038975 seconds)
    (102/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.757487398 seconds)
    (103/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.637882034 seconds)
    (104/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.860977763 seconds)
    (105/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.850962444 seconds)
    (106/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.766372766 seconds)
    (107/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 3.51836458 seconds)
    (108/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.582990211 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.562822008 seconds)
    (110/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.761107613 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 4.398438921 seconds)
    (112/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.97874216 seconds)
    (113/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.175930951 seconds)
    (114/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.954181696 seconds)
    (115/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.877973026 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.760915369 seconds)
    (117/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.930874461 seconds)
    (118/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.902754552 seconds)
    (119/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.694172123 seconds)
    (120/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.1781363 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.162120785 seconds)
    (122/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.979601391 seconds)
    (123/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.78261665 seconds)
    (124/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.809194069 seconds)
    (125/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.904848146 seconds)
    (126/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.989304622 seconds)
    (127/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.777208035 seconds)
    (128/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.407743696 seconds)
    (129/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.777080512 seconds)
    (130/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.722352154 seconds)
    (131/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.79361705 seconds)
    (132/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.075242668 seconds)
    (133/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.780785492 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.839720999 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.898464552 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.76422331 seconds)
    (137/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.081024528 seconds)
    (138/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.755761406 seconds)
    (139/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 9.54480718 seconds)
    (140/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.946802439 seconds)
    (141/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.091266897 seconds)
    (142/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.128957989 seconds)
    (143/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.129902605 seconds)
    (144/309) benchmarking ("sort", Bool, false)...
    done (took 2.213595754 seconds)
    (145/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.787739192 seconds)
    (146/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.781944962 seconds)
    (147/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.274946485 seconds)
    (148/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.03227852 seconds)
    (149/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.974804915 seconds)
    (150/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.151549804 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.985340845 seconds)
    (152/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.958894076 seconds)
    (153/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.033062207 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.136903678 seconds)
    (155/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.306720462 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.990853416 seconds)
    (157/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.878447492 seconds)
    (158/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.329932482 seconds)
    (159/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.466537463 seconds)
    (160/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.750819862 seconds)
    (161/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.847989692 seconds)
    (162/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.785506078 seconds)
    (163/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.84134778 seconds)
    (164/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.981597274 seconds)
    (165/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.13562162 seconds)
    (166/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.950419003 seconds)
    (167/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.936139452 seconds)
    (168/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.300636201 seconds)
    (169/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.941018973 seconds)
    (170/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.212387461 seconds)
    (171/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.003908423 seconds)
    (172/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.700898457 seconds)
    (173/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.793648343 seconds)
    (174/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.801425636 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.081411192 seconds)
    (176/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.163753166 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.768078605 seconds)
    (178/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.987333174 seconds)
    (179/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.786470762 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.633179841 seconds)
    (181/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.810354728 seconds)
    (182/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.865497949 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.169121153 seconds)
    (184/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.770573766 seconds)
    (185/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.184959146 seconds)
    (186/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.017214893 seconds)
    (187/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.774764125 seconds)
    (188/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.07975379 seconds)
    (189/309) benchmarking ("sort", Float64, false)...
    done (took 5.658426971 seconds)
    (190/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.771131797 seconds)
    (191/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.995841567 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.031073715 seconds)
    (193/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.934328857 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.17067905 seconds)
    (195/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.81284071 seconds)
    (196/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.783332735 seconds)
    (197/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.322083432 seconds)
    (198/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.057724919 seconds)
    (199/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.994263136 seconds)
    (200/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.828653049 seconds)
    (201/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.611738741 seconds)
    (202/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.791663098 seconds)
    (203/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.974101996 seconds)
    (204/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.912327408 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.860926689 seconds)
    (206/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.869770599 seconds)
    (207/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.794057962 seconds)
    (208/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.254098868 seconds)
    (209/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.890279527 seconds)
    (210/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.879244184 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.082913873 seconds)
    (212/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.848005532 seconds)
    (213/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.919158987 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.133689744 seconds)
    (215/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.873386314 seconds)
    (216/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.257309804 seconds)
    (217/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.050919091 seconds)
    (218/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.785209433 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.462305214 seconds)
    (220/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.782916178 seconds)
    (221/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.893556323 seconds)
    (222/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.848367528 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.415314476 seconds)
    (224/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.990527845 seconds)
    (225/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.773024866 seconds)
    (226/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.955940299 seconds)
    (227/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.079880459 seconds)
    (228/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.492479041 seconds)
    (229/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.699296978 seconds)
    (230/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.271310341 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.303342924 seconds)
    (232/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.077216734 seconds)
    (233/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.818371934 seconds)
    (234/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.018191021 seconds)
    (235/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.266274579 seconds)
    (236/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.858483886 seconds)
    (237/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.804116142 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.826994458 seconds)
    (239/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.360822009 seconds)
    (240/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.613135636 seconds)
    (241/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.905298164 seconds)
    (242/309) benchmarking ("sort", Float32, false)...
    done (took 5.504425189 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.484608874 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.898509708 seconds)
    (245/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.808046416 seconds)
    (246/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.885376381 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.909832134 seconds)
    (248/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.272507161 seconds)
    (249/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.824194798 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.663655995 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.822582135 seconds)
    (252/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.098761615 seconds)
    (253/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.350153758 seconds)
    (254/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.788382694 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.015890611 seconds)
    (256/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.13417065 seconds)
    (257/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.854689052 seconds)
    (258/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.785091539 seconds)
    (259/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 3.464436995 seconds)
    (260/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.031195617 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.894705674 seconds)
    (262/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.122489481 seconds)
    (263/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.07663983 seconds)
    (264/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.097709411 seconds)
    (265/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.808659955 seconds)
    (266/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.876176424 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.12711032 seconds)
    (268/309) benchmarking ("sort", BigInt, false)...
    done (took 6.792048808 seconds)
    (269/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.135839011 seconds)
    (270/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.02268153 seconds)
    (271/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.438129963 seconds)
    (272/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.037895089 seconds)
    (273/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.062249714 seconds)
    (274/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.816226737 seconds)
    (275/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.122055675 seconds)
    (276/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.792179183 seconds)
    (277/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.156916078 seconds)
    (278/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.891194953 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.181450503 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.428918307 seconds)
    (281/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.892261838 seconds)
    (282/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.958919752 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.873408497 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.121400652 seconds)
    (285/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.902899569 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.877032836 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.870605801 seconds)
    (288/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.788363728 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.930709729 seconds)
    (290/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.866566576 seconds)
    (291/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.808288201 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.51669467 seconds)
    (293/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.78953695 seconds)
    (294/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.784600012 seconds)
    (295/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.002048368 seconds)
    (296/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.137395431 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.822813155 seconds)
    (298/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.81270987 seconds)
    (299/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.974348627 seconds)
    (300/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.247019496 seconds)
    (301/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.773293366 seconds)
    (302/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.176221106 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.810640511 seconds)
    (304/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.924690617 seconds)
    (305/309) benchmarking ("sort", Int8, false)...
    done (took 4.752441208 seconds)
    (306/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.889136489 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.798261884 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.010380952 seconds)
    (309/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.213118287 seconds)
  done (took 986.478691595 seconds)
done (took 988.259539503 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.839769522 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.808526346 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.791194945 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.812277364 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.903793648 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.820344306 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.801068911 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.794099185 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.838175216 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.841518754 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.790714171 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.819595791 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.793483061 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.793486782 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.791130843 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.805925752 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.102845915 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.824694912 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.809480061 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.80102076 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.809798973 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.791811545 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.841045282 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.820426008 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.794579843 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.79446408 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.795928824 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.81222711 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.904739263 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.796525459 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.795642959 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.803716524 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.104497984 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.822129585 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.788325584 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.813290991 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.805191013 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.803818646 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.797437072 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.825611878 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.252552858 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.801247773 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.795718695 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.794596839 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.794226865 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.797329631 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.79611314 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.801279684 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.806699666 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.808004575 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.248329509 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.816306294 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.797787332 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.794052142 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.804328164 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.794687423 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.80159896 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.810460494 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.814362254 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.811225082 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.096139373 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.827060308 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.797457851 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.812302719 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.803073892 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.28333171 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.797731968 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.798014465 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.25213944 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.806261711 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.284122624 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.810327681 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.796789956 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.80956994 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.827088455 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.104471798 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.81888514 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.795345431 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.802533167 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.794747059 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.804908169 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.80918846 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.800393432 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.797097049 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.810169753 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.825576478 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.806299474 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.798400937 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.80601552 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.816102516 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.80400545 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.807990254 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.799512136 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.790969355 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.804833986 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.803348765 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.79927523 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.799525187 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.801672421 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.805724237 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.253704001 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.820519592 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.793452977 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.793135886 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.795634036 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.811896405 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.253565833 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.806059407 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.817457845 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.843734733 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.800121947 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.098932544 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.829886958 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.813922226 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.805667801 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.802726695 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.791986564 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.097945154 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.279273429 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.820394761 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.798929232 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.797927117 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.814243452 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.80094196 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.794417722 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.109162601 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.828435306 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.811999866 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.919060459 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.808578516 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.830302789 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.796562492 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.800980786 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.827915595 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.815864223 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.83146092 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.802190736 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.815381856 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.815665111 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.795645006 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.810021955 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.809218372 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.80041411 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.806612524 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.793566754 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.828863227 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.813230207 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.812357891 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.82101276 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.922219509 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.796844312 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.100323831 seconds)
done (took 282.915438876 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.869484896 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.790336932 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.901091421 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.796619669 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.879456037 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.883737001 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.7931502 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.793985287 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.794477502 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.167409146 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.795176348 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.79620002 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.792843912 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.794251513 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.880443769 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.797202654 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.79443741 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.132336611 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.79773349 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.870517162 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.796706173 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.795106125 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.798328193 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.168658821 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.794394768 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.799385436 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.870833258 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.797772249 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.13401354 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.797181377 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.793329119 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.135167258 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.890255859 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.816581306 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.808296555 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.805448662 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.880650685 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.803269929 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.879075483 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.879434357 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.90019361 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.838991034 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.794765077 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.798849222 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.803101059 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.799324002 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.796349548 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.82715021 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.796379054 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.796457288 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.133710613 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.809025875 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.797958777 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.79731378 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.796642476 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.829617701 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.797023619 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.798989051 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.891782879 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.801350063 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.861049977 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.172073277 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.17033947 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.798657226 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.793407228 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.795996297 seconds)
  done (took 179.492038097 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.862965308 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.8673857 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.862975296 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.800666891 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.843035464 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.862730213 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.79729766 seconds)
  done (took 14.62502823 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.799069366 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.794484102 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.84188545 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.841862381 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.792270933 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.966677263 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.792209152 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.803372175 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.787472035 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.843329484 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.790963345 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.789834392 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.797610097 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.78576594 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.834714818 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.798764352 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.899219746 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.785989176 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.784251443 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.935668022 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.783683345 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.788254302 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.834601499 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.794272006 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.782485952 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.787239157 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.468901698 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.778585379 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.776107034 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.777988967 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.777969482 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.822982553 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.774607685 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.768134477 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.772056448 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.935077213 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.772881609 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.770047492 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.772453476 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.772159899 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.76941377 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.769761646 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.771545776 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.763874471 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.76957487 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.792053733 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.76965483 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.766972227 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.76818994 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.76411274 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.815700071 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.764470872 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.761461281 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.760560024 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.81721888 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.766927333 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.760331721 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.755626885 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.761458707 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.759871231 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.908578085 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.805881801 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.75740103 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.805770506 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.757926417 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.758298077 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.756979926 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.756946399 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.852488299 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.756527647 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.804598546 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.754938489 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.918614841 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.781711572 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.758713004 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.760764278 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.760554175 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.758047871 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.751419327 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.764285474 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.754840138 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.757916891 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.763968669 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.754388688 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.755292087 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.910880723 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.894297506 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.755134241 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.772228184 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.765273518 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.756336076 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.813708708 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.758732932 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.755829824 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.81280037 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.874107235 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.813481852 seconds)
  done (took 196.332737302 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.76310246 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.766860796 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.759692128 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.774613206 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.759412605 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.758434984 seconds)
  done (took 12.272560342 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.761303533 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.762158315 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.759536175 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.759158445 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.7587587 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.759778307 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.759493755 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.76143719 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.76344084 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.76018445 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.762016481 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.761670702 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.762076232 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.760292544 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.76138516 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.760308721 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.760593425 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.757889898 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.759885184 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.761087125 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.924969071 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.760956738 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.76243458 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.763765226 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.76586729 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.761073795 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.768079846 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.761868138 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.761729212 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.769798106 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.764333587 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.761422111 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.762908419 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.768061168 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.767379489 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.762748134 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.765735083 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.764056567 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.758987552 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.763305827 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.765307534 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.761682295 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.763398641 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.764230358 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.763991367 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.765312277 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.768568587 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.772336022 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.764398597 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.763865059 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.76231952 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.764147468 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.76360422 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.763367614 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.765005478 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.768536052 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.768248229 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.764136249 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.76493514 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.765812922 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.764755207 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.764090389 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.763487514 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.767142373 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.760719056 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.764919857 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.765382853 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.767506412 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.762715471 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.763187467 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.763737214 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.760608836 seconds)
  done (took 129.817770913 seconds)
done (took 534.285809706 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.863211423 seconds)
  done (took 8.558581351 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.921492783 seconds)
  done (took 8.717726281 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.380714176 seconds)
  done (took 10.076653539 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.770337844 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.781108961 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.774735408 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.763925898 seconds)
  done (took 28.797140293 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.892353627 seconds)
  done (took 8.589436094 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.772199879 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.756873545 seconds)
  done (took 15.262053381 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.820322308 seconds)
  done (took 8.516325393 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.267241075 seconds)
  done (took 8.970003101 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.783661933 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.799418508 seconds)
  done (took 15.300361542 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.744590124 seconds)
  done (took 8.442036135 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.394049451 seconds)
  done (took 11.100759725 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.761612931 seconds)
  done (took 8.47826631 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.832232103 seconds)
  done (took 8.529434534 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.039025294 seconds)
  done (took 9.733360619 seconds)
done (took 160.76717745 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.755867338 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.751403382 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.747411353 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.748129026 seconds)
  done (took 28.695340034 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.787076588 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.786770029 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.788063803 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.796907794 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.789916639 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.786954004 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.779325761 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.782058352 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.793767799 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.787445618 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.786967822 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.786986726 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.784126693 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.780808862 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.785800982 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.785543559 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.794498295 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.783667524 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.780488145 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.782833948 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.747375041 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.791002609 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.782757414 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.747432579 seconds)
  done (took 44.48526009 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.943350162 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.816110972 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.897273061 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.796693403 seconds)
  done (took 9.13637775 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.795411628 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.797223423 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.810151406 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.848427756 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.870428707 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.807090836 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.771110488 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.766087393 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.751870039 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.797722343 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.872543123 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.792448379 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.889500011 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.744566134 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.931318536 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.744481332 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.745396047 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.796824624 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.848072962 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.863139414 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.744693588 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.795715716 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.80061609 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.793419737 seconds)
  done (took 45.059953897 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.742520592 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.751216626 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.7518082 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.74404054 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.744176676 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.744896881 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.750480967 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.745704571 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.768605693 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.745615148 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.743874762 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.744964172 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.744372327 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.745279935 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.744349921 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.756873108 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.758124594 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.744584576 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.748382953 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.752356146 seconds)
  done (took 36.650287147 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.739342802 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.59316825 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.090640174 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.995331059 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.739316484 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.741621711 seconds)
  done (took 30.578545396 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.759476059 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.751799914 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.74629148 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.802715563 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.886232556 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.755711382 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.746413598 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.75738959 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.792329115 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.813170465 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.766782671 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.775883263 seconds)
  done (took 23.033474806 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.750687328 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.741989421 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.74235856 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.758734271 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.758663469 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.754620323 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.752577013 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.739348842 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.760104254 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.765999576 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.755338307 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.759319791 seconds)
  done (took 42.723679043 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.832216744 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.631171141 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.761953999 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.470944853 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.216238355 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.949613547 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.253504937 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.072564215 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.738395242 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.008756952 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.856724887 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.84156451 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.988447166 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.734927136 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.748264028 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.218019801 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.036035635 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.970983884 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.764044883 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.553756073 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.786208488 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.348021331 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.630320334 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.795297564 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.946917371 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.867441724 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.996301155 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.694257789 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.872922045 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.773463176 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.74732495 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.732269052 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.005341139 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.109697655 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.835730277 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.740370578 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.385770222 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.451700994 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.719899157 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.5559305 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.597326501 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.865523203 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.738474287 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.731000219 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.665719043 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.296923349 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.11473015 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.736270096 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.443026846 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.731596791 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.742770756 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.819923964 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.735117875 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.547079794 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.686055565 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.011685628 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.729821694 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.73835047 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.301335525 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.906021203 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.337819421 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.712584836 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.923417407 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.591908187 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.146199658 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.884693715 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.735495142 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.7366043 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.667096492 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.55821814 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.785582076 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.878396485 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.753405529 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.382840291 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.058508101 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.919432234 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.676313785 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.024586307 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 7.056556311 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.713996222 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.960915968 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.689970515 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.667757883 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.591186866 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.667479439 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.016817708 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.774959446 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.369222899 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.780461977 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.065794249 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.744459699 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.750644991 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.739893158 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.957957908 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.614945403 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.734907843 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.630475024 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.886901007 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.756234548 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.071191134 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.66924139 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.738621256 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.990058154 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.945629475 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.04963726 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.262288073 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.900409763 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.734392836 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.815670585 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.733626506 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.78928084 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.011781844 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.797328721 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.908078562 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.796732636 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.693448236 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.038038692 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.76729315 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.900811007 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.90496589 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.863864321 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.071711863 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.033206005 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.799521157 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.745614619 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.735203024 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.568396434 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.29122397 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.00203918 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.736089567 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.307857289 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.78959262 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.735532016 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.670690753 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.366174497 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.849460413 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.716044079 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.960619483 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.736167557 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.050969005 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.671367302 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.882211135 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.851473373 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.958592221 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.387724642 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.819851326 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.992776876 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.308475693 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.099235836 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.791020008 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.755794954 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.854863554 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.75892345 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.246326542 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.036066801 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.740710608 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.741625009 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.575949846 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.736095497 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.737708893 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.742247439 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.538395733 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.034315417 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.764969029 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.74169676 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.626623736 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.751852611 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.804718919 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.7433178 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.748102931 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.308489601 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.504370253 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.749756714 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.367919924 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.964964555 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.748537675 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.560548165 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.852168039 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.820687067 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.025950985 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.801685416 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.672833324 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.450191054 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.432234012 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.739237543 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.675491745 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.739738665 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.749236487 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.751023963 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.119188233 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.023881358 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.788892989 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.574930935 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.784911476 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.751584445 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.744950284 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.739974339 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.28494402 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.922462951 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.353712104 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.79122079 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.876820838 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.754312595 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.674585891 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.74332124 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.744549706 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.739879563 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.702320059 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.793395968 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.564315221 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.119021421 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.997294962 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.433066445 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.758607838 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.60551732 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.801013765 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.811764335 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.652717364 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.755849905 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.891863478 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.752643282 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.752997689 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.580501921 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.450749177 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.31102569 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.065271891 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.073146363 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.193963737 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.308786097 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.051600565 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.075411642 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.977118889 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.271258274 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.803170906 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.084442211 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.686602222 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.825788547 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.393243931 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.10233452 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.757371544 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.969664855 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.136885836 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.604918271 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.89583771 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.95386044 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.777392923 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.742873085 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.710043341 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.949103475 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.885056759 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.576752628 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.954425165 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.072843597 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.525452684 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.843987501 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.740998199 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.428584661 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835377337 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.453587555 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.105069352 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.363167165 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.827814766 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.22703562 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.746975235 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.189078159 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.098781922 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.145850058 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.872342843 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.679622102 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.754467052 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.755394632 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.744220819 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.74241468 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.608065834 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.997858732 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.755607232 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.979266626 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.105130233 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.050950863 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.653229765 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.749820354 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.745254187 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05778739 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.61157375 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922220859 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.278035299 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.276631721 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.749687291 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.679432592 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.679059886 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.437347729 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.753529874 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.720222537 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.990826481 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.936839128 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.699712163 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.339715342 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.99415017 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.99997861 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.759030174 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.03203731 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.023794584 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.489450502 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.774564441 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.845976788 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.506921965 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.86428999 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.014731437 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.982875689 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.548951317 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.977898835 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.772282524 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.547987219 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.74632899 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.961287157 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.015681107 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.746805403 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989329141 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.469672199 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.752560282 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.199666655 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.808429377 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.728660933 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.910008541 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.940343326 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.756548145 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.830996813 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.756050737 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.759050152 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.758039717 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.794038488 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.740238905 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.882730524 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.761204333 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.836155635 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.930873821 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.278569856 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.754205838 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.036680985 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.130289388 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.08681266 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.810701873 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.748472248 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.747511389 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.681870098 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.884030943 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.193796072 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.021702525 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.878568379 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.046924967 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.774427429 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.533097106 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.220387011 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.995861314 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.0230816 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.643317591 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.74868801 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.767280116 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.014880347 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.758814132 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.959595954 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.002062507 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.089398388 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.222886078 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.072770405 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.118947049 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.023896935 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.117796846 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.750337287 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.33835588 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.758623823 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.558091168 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.798134514 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.750817644 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.024670809 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.760310736 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.137518083 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.773043003 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.946613593 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.266609821 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.58092462 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.039440999 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.745793251 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.815146501 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.039757051 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.158383521 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.064565682 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.822289528 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.762290922 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.461649125 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.888606906 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.613464738 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.02334619 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.751717107 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.961938189 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.461140753 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.761346289 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.032971077 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.063259623 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.748303573 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.615706595 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.762981956 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.760978959 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.974676575 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.022535725 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.008261462 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.761883024 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.75984598 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.571447073 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.031112096 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.814574326 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.685734893 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.755598664 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.85333969 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.000322622 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.772002013 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.44164066 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.463734397 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.054812526 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.674840947 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.774490585 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.329325095 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.129764149 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.085687645 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.297930816 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.98569084 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.315261324 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.753375623 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.055865913 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.758260872 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.330686661 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.064323159 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.758010623 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.484255715 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.798436975 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.039695353 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.076636573 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.907798652 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.59982238 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.724436675 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.977480984 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.348403881 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.698153865 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.75439588 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.816977373 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.754581115 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.882248364 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.765431039 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.645354564 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.754381814 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.503696315 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.246979379 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.760173879 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.739604076 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.557560058 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.460436625 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.795227459 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.911379666 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.762732475 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.467688806 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.047523054 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.01003707 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.442483462 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.766184844 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.758289007 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.754778057 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.683166826 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.951067723 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.135725843 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.071014519 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.289939777 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.797994324 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.758204358 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.969881069 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.966389056 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.714267802 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.901317757 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.328690732 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.799645864 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.48599186 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.435307079 seconds)
  done (took 1631.224501243 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.758015935 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.786820252 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.791658869 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.794123471 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.801035245 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.835803973 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.78759065 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.815883232 seconds)
  done (took 56.065929915 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.754895637 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.957194468 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.766067378 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.757108455 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.765245553 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.757142672 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.928169096 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.773476621 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.767788933 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.76697671 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.757237795 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.757572517 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.06948915 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.783221317 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.757268674 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.742665265 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.765446232 seconds)
  done (took 72.353332287 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.758556041 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.978353902 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.798068408 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.776367328 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.69961879 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.773553744 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.723831046 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.779205289 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.762092403 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.988528942 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.392030771 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.779902309 seconds)
  done (took 88.907802958 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.767408885 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.766151675 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.764384587 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.763787688 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.764645313 seconds)
  done (took 10.527430404 seconds)
done (took 2121.161816855 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.037986285 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.991732748 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.998775456 seconds)
  done (took 5.687659264 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.90891658 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.955894699 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.077154071 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.082839394 seconds)
  done (took 9.727880085 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.054422412 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.132221149 seconds)
  done (took 5.885211307 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.177516418 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.774737073 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.161649873 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.761200381 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.762362439 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.763506429 seconds)
  done (took 21.991660207 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.764248481 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.768499478 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.764407159 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.767347587 seconds)
  done (took 8.763387346 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.744125492 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.43315386 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.745367127 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.758062473 seconds)
  done (took 20.380188993 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.513261254 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.195243425 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.508410353 seconds)
  done (took 8.916681234 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.290160206 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.660531692 seconds)
  done (took 8.650173503 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.028212501 seconds)
  done (took 3.728635438 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.792575331 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.035487596 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.289749654 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.298748051 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.41085932 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.644865929 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.097334033 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.020692429 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.18004253 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.219389655 seconds)
  done (took 23.689695249 seconds)
done (took 132.269629114 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.142707968 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.133365587 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.96362939 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.15161067 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.984093314 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.963282812 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.170340514 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.138801315 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.608799454 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.605457325 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.150803021 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.985078749 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.924798875 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.12965011 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.93020066 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.129907875 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.984126657 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.152312106 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.848532855 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.001602206 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.18051956 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.736876115 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.990332004 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.750516805 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.984534883 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.915983146 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.312800717 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.133322558 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.002859957 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.32270708 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.917661182 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.160919148 seconds)
  done (took 166.209045224 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.502659556 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.764126901 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.76314754 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.76394104 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.221296261 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.765342678 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.765018417 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.763335081 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.894979176 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.88610181 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.764659054 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.235756796 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.773615296 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.764990932 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.772123426 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.764174048 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.055283725 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.587634515 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.783653013 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.78730602 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.793461642 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.169252854 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.79071605 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.220829406 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.066205592 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.78760399 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.756662344 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.785781615 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.770535713 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.74478818 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.774595152 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.764884751 seconds)
  done (took 204.50827108 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.764665149 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.766403358 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.765096483 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.76617831 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.784546144 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.76877437 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.766359162 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.765938922 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.436557777 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.430993194 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.772314833 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.771135123 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.770203058 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.771098349 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.774619488 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.765802933 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.773161568 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.773075676 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.770422899 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.772406289 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.773091275 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.569503995 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.77297761 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.583905925 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.772495226 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.771816075 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.767211101 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.774723288 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.778436568 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.777443565 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.775796151 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.767090802 seconds)
  done (took 217.331470771 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.969344975 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.773910421 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.77435251 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.713869278 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.775227189 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.773297926 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.712371955 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.971031447 seconds)
  done (took 18.189713278 seconds)
done (took 607.953253752 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.207521435 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.058624596 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.950922694 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.799210909 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.0334137 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.835582104 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.792637907 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.857426272 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.52102449 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.86296744 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.47873325 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.814278485 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.569805633 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.820115386 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.919318936 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.853690886 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.375484864 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.471121988 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.974385119 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.847527218 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.970976395 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.751031715 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.873121918 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.546699836 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.592191045 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.795893199 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.967781345 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.382890228 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.807693709 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.95626006 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.528073497 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.192724795 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.808457345 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.792733083 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.848962249 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.828216529 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.126828791 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.805997775 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.913692419 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.560903122 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.859471579 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.411213834 seconds)
  done (took 99.07292465 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.763491519 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.762532635 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.761859918 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.763375107 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.764185976 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.763172082 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.76195849 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.762129025 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.763149155 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.762569791 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.764155809 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.764449661 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.763054447 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.764269632 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.763122751 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.763078933 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.763708125 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.765741019 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.763409956 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.762684061 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.763686036 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.763269149 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.776760894 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.763028496 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.764213202 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.764202008 seconds)
  done (took 47.580112237 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.777427078 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.941137384 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.029165186 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.796698172 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.776678202 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.780241582 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.79601375 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.783520879 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.779189857 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.780077992 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.870175529 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.785330526 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.796305134 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.029134154 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.793796219 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.778449371 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.786603224 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.777814515 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.949037965 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.793886855 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.79816216 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.785068725 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.797438978 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.793220937 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.779839249 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.778393128 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.782318099 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.229074963 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.787784278 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.871754096 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.822409748 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.801478502 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.20113283 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.040473665 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.83473394 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.785563497 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.77962247 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.876143074 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.786039767 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.780335533 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.798096235 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.78471617 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.029670299 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.263519749 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.79472164 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.780666843 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.23832749 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.883407965 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.821939977 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.792905172 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.033263267 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.797175391 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.782221045 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.781398225 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.816806248 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.792263218 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.780276567 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.121073736 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.792112085 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.799898115 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.786459159 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.781339292 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.956520281 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.789635085 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.94376135 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.790295644 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.787551184 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.782505868 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.032534385 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.797570567 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.271219582 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.794207704 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.781657907 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.873132275 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.949502126 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.26434707 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.795091862 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.958840964 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.21785746 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.80647615 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.788729026 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.219674638 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.809823964 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.789566279 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.783646121 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.783649998 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.783355279 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.828156955 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.798554642 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.200449673 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.276372234 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.136572415 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.809581555 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.797688538 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.782339133 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.122488304 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.791757542 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.783611572 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.024566248 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.279922832 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.796522975 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.789953051 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.255548447 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.798191961 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.801489957 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.791549303 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.038707366 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.79885061 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.828177377 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.783741083 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.789136202 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.786059198 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.803053709 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.79001004 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.784025003 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.24644993 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.8924631 seconds)
  done (took 221.634558246 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.777770042 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.779030691 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.776691224 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.777412232 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.777054554 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.783462614 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.777191513 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.776970936 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.783052959 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.77732616 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.776408549 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.777257779 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.777297641 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.782199948 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.242083959 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.785837749 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.434939709 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.780103419 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.778713571 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.779057359 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.459012632 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.78676773 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.779085608 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.78980962 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.78087342 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.780235644 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.787323612 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.81296227 seconds)
  done (took 165.395042213 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.786262721 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.965307662 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.802254899 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.823184365 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.797338063 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.783353076 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.810520209 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.806252522 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.791022932 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.784101196 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.784227174 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.846883687 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.800292472 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.916724585 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.81822278 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.818182237 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.891573341 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.795198181 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.7847173 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.784923539 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.815345496 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.780968949 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.847806844 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.916999837 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.806924064 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.901774571 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.790936065 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.787647742 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.787081579 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.904335468 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.803803973 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.847109747 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.816333777 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.805483195 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.909608174 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.903459031 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.894225426 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.817015303 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.791603004 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.785322218 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.785854408 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.774559463 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.903851086 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.808018576 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.787629293 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.89542027 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.805997497 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.788679793 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.797104576 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.785717129 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.800665773 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.805334638 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.854516759 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.922084572 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.82151121 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.813597674 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.812405442 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.066049501 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.797093379 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.88864736 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.781376121 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.907481747 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.808957795 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.776271206 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.787488115 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.793561664 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.816828751 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.820217549 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.894860648 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.79660747 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.889800773 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.823426781 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.796220045 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.788069887 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.790771505 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.907101053 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.910281906 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.824553503 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.827921578 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.820152376 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.78318602 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.789444243 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.776414491 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.806553571 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.792810609 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.905062749 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.907742758 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.796834648 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.791042035 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.791272406 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.791406927 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.814604618 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.914192159 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.825803477 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.887559212 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.859064347 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.863946266 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.804320561 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.802088362 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.793350655 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.852868847 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.804971356 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.801133078 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.11346887 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.861751318 seconds)
  done (took 194.033809351 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.250705221 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.846078067 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.845743828 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.096012476 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.217965699 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.610947694 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.837834947 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.839826035 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.864917358 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.031440965 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.908959648 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.856952716 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.827416981 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.812987749 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.838679164 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.862737662 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.849534015 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.186091197 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.956484924 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.931134466 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.824140702 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.135898803 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.156476027 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.225928565 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.877237888 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.173438558 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.515995606 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.093342836 seconds)
  done (took 59.204192262 seconds)
done (took 788.626507275 seconds)
SAVING RESULT...
DONE!
