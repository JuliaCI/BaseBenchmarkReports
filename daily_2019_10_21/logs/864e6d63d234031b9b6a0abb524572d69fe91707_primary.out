cset: moving following pidspec: 30905
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.343722856 seconds)
loading group "string"... done (took 0.546256223 seconds)
loading group "linalg"... done (took 7.050968559 seconds)
loading group "parallel"... done (took 0.164879478 seconds)
loading group "find"... done (took 1.080003084 seconds)
loading group "tuple"... done (took 1.810119311 seconds)
loading group "dates"... done (took 1.164796849 seconds)
loading group "micro"... done (took 0.227794979 seconds)
loading group "io"... done (took 0.905574167 seconds)
loading group "scalar"... done (took 36.030984382 seconds)
loading group "sparse"... done (took 11.107425314 seconds)
loading group "broadcast"... done (took 0.898437586 seconds)
loading group "union"... done (took 11.579124033 seconds)
loading group "simd"... done (took 4.089081792 seconds)
loading group "random"... done (took 8.619858135 seconds)
loading group "problem"... done (took 1.864392553 seconds)
loading group "array"... done (took 19.721513185 seconds)
loading group "misc"... done (took 1.622608195 seconds)
loading group "sort"... done (took 3.17538597 seconds)
loading group "collection"... done (took 16.263009495 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.481256026 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123877294 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.11312554 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.117482169 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.145071481 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.114034404 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.122258258 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083821976 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.834414577 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.145288351 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117222432 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.410618198 seconds)
done (took 5.130579607 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.170314853 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082297919 seconds)
    (2/2) benchmarking "String"...
    done (took 0.0808982 seconds)
  done (took 1.32037823 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065171759 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.12055783 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066547541 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.06678621 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066336397 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065674818 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065816919 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065742475 seconds)
  done (took 1.675740445 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072864921 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069191638 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068135271 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067601294 seconds)
  done (took 1.437002961 seconds)
done (took 5.837332945 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.763279389 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.200296717 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.183016163 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.39513991 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.128379005 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.153985697 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.633270586 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.293771557 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.187103652 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081450575 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.10389648 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.316727459 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107443008 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.641727267 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076159736 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089919562 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.137103164 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.428003212 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067116736 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081396918 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.091843628 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128013919 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.085410281 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.07402793 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.141891 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067797239 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.13322978 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080477957 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066095884 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.206779694 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.17248104 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.643517202 seconds)
  done (took 10.157162607 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095637595 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.097801011 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068323405 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136346539 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.096032842 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069351989 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.07079992 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067127455 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086492151 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127607926 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088707233 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.100945875 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065121031 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.06861621 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084230154 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.202342362 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079031762 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080628643 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070531277 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074670068 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.118001011 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.07729225 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077313066 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076986237 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127744608 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.17857954 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095186685 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.09705384 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066378626 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080258441 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114711426 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125094197 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065160732 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.06579492 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123828051 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093862105 seconds)
  done (took 4.606581108 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.286521602 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.139084309 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089989364 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.131571822 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064660169 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.106289871 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065349627 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080059607 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.1986774 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.294898024 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.57672503 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110462748 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103466439 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067543245 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068227361 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066594453 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.348965479 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.108031096 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104435279 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081109044 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070040244 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068764481 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.355424719 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069672748 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064786436 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068105073 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057966129 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.123445763 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068337546 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.924874597 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.124275456 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066240978 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099687726 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.160929297 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086836175 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.274690102 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068052542 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064369314 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.149668685 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.069947152 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065770907 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083479228 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103438337 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112698272 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065551445 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066719617 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161724775 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064843777 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.07896688 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.005133954 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.151768521 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.09438591 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.063818417 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.244453629 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085318163 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069092367 seconds)
    (56/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.091010084 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064385388 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.202814786 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.136406806 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067122549 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066090142 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067690219 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069102175 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.350386942 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065912647 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.989898859 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.067750912 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075808832 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.06876623 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069853591 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072757794 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072282334 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.087104264 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.06647344 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075465065 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.06561282 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065409398 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.06639974 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083699741 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.358344318 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066088933 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.0683172 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064354788 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.08545273 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096458238 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.065936848 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064955628 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099956639 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067500034 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.065835168 seconds)
    (91/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.208469407 seconds)
    (92/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066651318 seconds)
    (93/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084496002 seconds)
    (94/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069400634 seconds)
    (95/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112388287 seconds)
    (96/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.06687082 seconds)
    (97/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064871119 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.091272836 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067180274 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065023289 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.100368361 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069541441 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098825835 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.08056458 seconds)
    (105/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064371651 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068652742 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.396910676 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.06545734 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065268807 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068300317 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066262179 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.06750057 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066224311 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079642582 seconds)
  done (took 21.164034675 seconds)
done (took 38.373078424 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.233236713 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.074914929 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.07552428 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075131594 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075216294 seconds)
  done (took 1.783582076 seconds)
done (took 3.015045573 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119487963 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098090737 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063566618 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.094730154 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063971837 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099924063 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.099243496 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080455286 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098850443 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064027545 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095141615 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063775237 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06403125 seconds)
  done (took 2.354359831 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082204583 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083428575 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069566305 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082295522 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064026084 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081951331 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080234865 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.08745947 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080319967 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071710438 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063424907 seconds)
  done (took 2.073219119 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081052085 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082975334 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.06902975 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080882534 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065585355 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080407845 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08053087 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084897949 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080931026 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072929575 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063486584 seconds)
  done (took 2.065122246 seconds)
done (took 7.712463548 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076652697 seconds)
  done (took 1.290270707 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.58495865 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.075918599 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080951295 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111739732 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.183053268 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.118858201 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.279571531 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086822687 seconds)
  done (took 8.914686911 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.087695884 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.082131702 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069051307 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071768781 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071609616 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070815101 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068466421 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068125081 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071046301 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072162389 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.06920663 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069694054 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.06874412 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.06866688 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070431869 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070543989 seconds)
  done (took 2.432917805 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091940388 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.090297051 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073102166 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074346006 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.07158445 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071718449 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074823358 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072761093 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070069058 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071654273 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074230457 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073243726 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071065212 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064637591 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074342952 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075011427 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070787573 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.07371557 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074071214 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.07448127 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.073978884 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064188656 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071112474 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073802378 seconds)
  done (took 3.089066282 seconds)
done (took 16.95041733 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.113519225 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071741201 seconds)
  done (took 1.403573013 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.0810522 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083028329 seconds)
  done (took 1.389423216 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.08433983 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.066279999 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091739503 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078406108 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065930541 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065453197 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.089197244 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.06601644 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065960034 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065833554 seconds)
  done (took 1.964427865 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068735559 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077859638 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070741033 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080911281 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073716454 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064258428 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072425198 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067896125 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078030571 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062797367 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071500996 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082280743 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071222371 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084364511 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072429961 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068518826 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070933896 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068047068 seconds)
  done (took 2.536358822 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065136715 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066647046 seconds)
  done (took 1.366143851 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066932841 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063617021 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067314854 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066643478 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063748407 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062158115 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063499333 seconds)
  done (took 1.684019415 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.37925704 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110019347 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.29740111 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070283501 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081123464 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.248186511 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065444226 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070155027 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069902399 seconds)
  done (took 2.664879305 seconds)
done (took 14.242018174 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078717217 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085747582 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.094865596 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.360090991 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091446746 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065670976 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.11342219 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.193419911 seconds)
done (took 2.328942065 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.216077901 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.6088099 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.386154285 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.196032948 seconds)
  done (took 2.427541871 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.328487615 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.086067091 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058753153 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066005765 seconds)
  done (took 1.782670479 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065405866 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068669089 seconds)
  done (took 1.375673464 seconds)
done (took 7.047340941 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065954692 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065561992 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.084415391 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.063124496 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065996549 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.062891495 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.062940128 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065313621 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065898429 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.065535674 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.067786502 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06549769 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063191236 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063340741 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065487507 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063277239 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06305764 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063276662 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065761464 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063064125 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065517608 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063053234 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063348315 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063315713 seconds)
  done (took 2.84404151 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.083308826 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066497412 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071132219 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070728757 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069599306 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.072889207 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070691097 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065873645 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071061036 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067660844 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069411745 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069524564 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.06743902 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069997208 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067737161 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069846294 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070797523 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065842117 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067677141 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.06939238 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070860415 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066575484 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069488692 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070993277 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069188324 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070888292 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067684909 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065821929 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070800578 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069453861 seconds)
  done (took 3.339669022 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069707232 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062762482 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.06432158 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.07006983 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064330077 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.06426652 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063640326 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063555395 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064128067 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062929629 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064628941 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063175286 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063396533 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.06401916 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064399764 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066664168 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078939689 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063759117 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063214905 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064052765 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066367377 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063016977 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064155856 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063086782 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063272849 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063196556 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064131182 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062875637 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063945504 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062837194 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.173394623 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066545543 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063071774 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070169702 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.06719627 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062915954 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067181317 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062932036 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066399637 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.06306312 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062676612 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063268334 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063462468 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069718146 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063585003 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.065104386 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063102533 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064265361 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063445268 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065712738 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062593934 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062949607 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.06599159 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064180304 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066860241 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062907981 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063761974 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062321161 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063708566 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062587321 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.06268397 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062766098 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065310724 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063351935 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077233856 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069096434 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062833871 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065142474 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063762528 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.06536189 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064596817 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075962106 seconds)
  done (took 6.038180803 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090534578 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086705694 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065176497 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064725731 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061541431 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064025835 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067058464 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063788453 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065513212 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.06943653 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063794674 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064779237 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06483511 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076698134 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064480613 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065054293 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070033008 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061471753 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063789236 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066853422 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064060701 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066909838 seconds)
  done (took 2.756988235 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.153693184 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069958593 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105013665 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072623733 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06738578 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072625117 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069412575 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069406754 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069826241 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068111901 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067663301 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069346662 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067257676 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067533297 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067604271 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067681077 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069588684 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067852136 seconds)
  done (took 2.619150872 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076288813 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065937614 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085501936 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066354623 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065579193 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067952923 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070693044 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073705208 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067937128 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065672202 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074230946 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068097322 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067877448 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065798599 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0677819 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065696264 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069194567 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065515341 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073789847 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070761111 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070745691 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074161761 seconds)
  done (took 2.798184249 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07955001 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067759446 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082254992 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068341371 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062081686 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064311277 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069653009 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065717315 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069732636 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.06731363 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066063746 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064302871 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069244256 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065548793 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068718703 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065559033 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067293397 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065663115 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067847911 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061893146 seconds)
  done (took 2.61954981 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086823005 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067278025 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067329866 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076306779 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067291663 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067177056 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074938563 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066990767 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067038333 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086960143 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066738161 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066721244 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074707515 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071791019 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066967648 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07454608 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074261168 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074863482 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066658858 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06676895 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086562466 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066947417 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07478631 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066444355 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066760005 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067026846 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066425845 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071792364 seconds)
  done (took 3.26127472 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066459933 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065432558 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.06337177 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062548954 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063677391 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063106505 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063064035 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063076352 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065904922 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063024064 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065311649 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065558967 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065861479 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065199895 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065490638 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.06594235 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065748399 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063275006 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062867712 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063182651 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065407892 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065445247 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065568841 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062946221 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063329359 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.06525691 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062991285 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063256282 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065281038 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062740903 seconds)
  done (took 3.197887498 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074950046 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072832161 seconds)
  done (took 1.416912927 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062546789 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07987171 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062651194 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069707175 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069975818 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065972386 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072850515 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069155622 seconds)
  done (took 1.817260883 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.080834077 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077131938 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067165048 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079881822 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075967296 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.08213865 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131271129 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066743964 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072455364 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064158447 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079570415 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065488704 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072171235 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066126513 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071382219 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071977262 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063449024 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072436695 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068007324 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064917656 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067203606 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074698125 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068374895 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.06144502 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067466221 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087464691 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076837387 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065591909 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068914083 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073613846 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071302133 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060195499 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065849262 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066519436 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063508546 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075352278 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080876389 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068797909 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074115785 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066669907 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076961126 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060724658 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070093604 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072495731 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07536436 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066029726 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066397102 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061462142 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064027718 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067765935 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060999404 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066145396 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060540329 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074775136 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069452075 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076234585 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064833497 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067403989 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068725634 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069193894 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073125458 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067852715 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068985811 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065983319 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075682354 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070447249 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074747453 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061473552 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060745843 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063829945 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075613277 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087936107 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071796849 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066845318 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066606291 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.0638662 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068942012 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066895636 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071521119 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072114039 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065961021 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071560134 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073350353 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066104829 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068540233 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074739462 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064035429 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068749161 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063840895 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082203718 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064667702 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064520073 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064143109 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076483363 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.06905027 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066163905 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063950011 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073215789 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.0607981 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066921711 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067166838 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066472093 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076281303 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070647783 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072143384 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.074354277 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072460405 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065285291 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067420613 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062027925 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06527304 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063894374 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071639937 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059043271 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067312717 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066153777 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065513909 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.202843575 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064666558 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067132244 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074383311 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071569924 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.06535699 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.062899011 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069600892 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066644969 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06938761 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074562241 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065372519 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062721923 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061731757 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070445498 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.065777475 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069647066 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071576872 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069170007 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061225956 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064539676 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072021083 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075023335 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067151935 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067595528 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072792568 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068160789 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066542901 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073338685 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069193907 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065289859 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071298345 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067433354 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061827149 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069341039 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.06926001 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064993283 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069838509 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069578126 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.06804772 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066723009 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064497736 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073486981 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.0674021 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065439677 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065960892 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064408591 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076492243 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068342378 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061285572 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063651282 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075237603 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064259386 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066560909 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.06520567 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068684261 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067260288 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064309932 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.06622172 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.067945807 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076076332 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070429747 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067702775 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071989667 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077312954 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065661756 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069146311 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065700303 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066804695 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067018277 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074299337 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071274143 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071142203 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068614214 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062711781 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071762952 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073189537 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065195689 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063932926 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.06489611 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070328473 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071676398 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069939339 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066515019 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064350232 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066479641 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068973493 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068290825 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065656216 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064673439 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072551541 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064076726 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073295804 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066712865 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075743824 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069327154 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061447034 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069307457 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064075996 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071775027 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061337156 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064136041 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065305018 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067031916 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064990738 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068404133 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060357495 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073454229 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073740598 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066599563 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.06581429 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065488314 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072062125 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.06722426 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068857946 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068000556 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070645098 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075122515 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064352643 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068229522 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.205934516 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.066735337 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060735875 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072752743 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065459499 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.066039219 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065493506 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.06507111 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068834421 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074981483 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073652476 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060953096 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069009158 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065189025 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065333068 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062058204 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071079668 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070639971 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068165543 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073244869 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067895517 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067293143 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07003757 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066606453 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067458474 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067789157 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07056757 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067847027 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068429176 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065696059 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069674762 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065919001 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.0643013 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.06853586 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.067011539 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.06664931 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071850358 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065756027 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066731253 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068589402 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.06740234 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067138059 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066777572 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.06616031 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069238337 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067343202 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066775007 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068538877 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061520926 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073196928 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066288271 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074125321 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066665364 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063091649 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073502959 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068352737 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071906153 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067003558 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067202833 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068072132 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066250451 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.068716366 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072857326 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064301047 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076578923 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073778406 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067640119 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069386226 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066051423 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067221911 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065348351 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067199531 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.06673004 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066646999 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066316248 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070520484 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068531497 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.06601124 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067885768 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067216504 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066248828 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066934392 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060450508 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065229484 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065479756 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066038585 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075670683 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066950751 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065904568 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.06550463 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06762377 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065533515 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063110407 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074288218 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075451645 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.06699252 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073967508 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065754495 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068025109 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076842106 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060763689 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064476434 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.06458412 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063994035 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07366757 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066802364 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075831579 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066577928 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066016676 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063669379 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.067522704 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065057599 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060942658 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.064180277 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069974211 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.0648993 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064656702 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065950376 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067557808 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066037391 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07420124 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064142577 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066327042 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065110205 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.197465164 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.065920156 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.06612874 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.06955384 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067376119 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065141172 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064685988 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066098714 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067218596 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068118995 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066719801 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068544509 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.0755956 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067440391 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069987758 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070421243 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061632074 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069446392 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066995864 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066605179 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065999 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070346762 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070482162 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068272388 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075259113 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066820536 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067677573 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066451739 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064328609 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066372437 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.06691506 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066526031 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066241675 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067458736 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07436324 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064571702 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069646278 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066277734 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.06709323 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073310723 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067984381 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069878079 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073588739 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066539739 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068278879 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074519841 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071524477 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070062759 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067720697 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067699789 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072797957 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066082367 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072173427 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067004341 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067820039 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068067685 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064353548 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065954516 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066084027 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065852891 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072805483 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067772932 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065876671 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065718217 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.065096261 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067579029 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070615334 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074295485 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068423876 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069831786 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061303993 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063910273 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067671631 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064030614 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068025879 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068192945 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072099128 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068512397 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066996421 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065137395 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074792675 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071587047 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069610521 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.06400326 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069686373 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066709345 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068163251 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067383076 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066232873 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067456471 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070262342 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068177486 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065696773 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073255519 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.06978204 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067416496 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067938373 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066987982 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066961785 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061554338 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066772648 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067872608 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071330488 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068300106 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066325297 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076759757 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.06386865 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.06634382 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069635671 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065291586 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070721759 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061494459 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067491974 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066947639 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066899665 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060819806 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064898962 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063859916 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067644879 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064254215 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060344795 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075105578 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073289678 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067808189 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063883133 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.198528317 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.061948091 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062352774 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066276395 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067195651 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.06878416 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076593251 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065542373 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065520227 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061503377 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066993737 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070107792 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069667132 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064282375 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062429962 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066436193 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069512594 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072762449 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065241859 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.06641801 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069869374 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069138559 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064666772 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069502893 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064271361 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070864432 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078858122 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067041875 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067474152 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073133 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074687511 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067232361 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062057162 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.06860059 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069822295 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067184312 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067228901 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067397915 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081592626 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070183491 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066117347 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065333798 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069409969 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066575139 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074464082 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067399279 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067641426 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070952423 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068686439 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075521822 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068906383 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074523587 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069735041 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.07004407 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.066339958 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066759281 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064712654 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066445974 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067480164 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067584516 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072109587 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075919373 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066416999 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077120965 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075331955 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068268526 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063233523 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065718088 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066339533 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061705817 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067470761 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064195984 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064483758 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064683301 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064923351 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067567385 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.0712839 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066851205 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.06693747 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065736435 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.06104955 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.06832882 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068357354 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066923349 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.06305134 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066498035 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066621302 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070498406 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069152134 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.06353239 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.06744855 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067655362 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067027079 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061229964 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072599717 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065155416 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068091449 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065879147 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06626391 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067395953 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.06981912 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071340581 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067209367 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068892918 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069883366 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068414169 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063807084 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063669116 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071284166 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064165168 seconds)
  done (took 42.514109836 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099515067 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063205944 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061666122 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062510281 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073924474 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062614117 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062141497 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063283875 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062714678 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06516812 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061496795 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061725853 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070979404 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077937368 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073633294 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066642748 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061632294 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063316759 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06166209 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062587173 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070837062 seconds)
  done (took 2.766514744 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073619946 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.069785444 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072333692 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07569958 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067025859 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.071059488 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072320151 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070613642 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076044362 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068290788 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075632608 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070405949 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.06723249 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.066912203 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066873338 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070511728 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075773929 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067542184 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070514506 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072524108 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070464778 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072154075 seconds)
  done (took 2.896287896 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066057128 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065200017 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067752177 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060769252 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065647385 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.068889565 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069426859 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063647156 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.06870446 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065490713 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064781696 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064629782 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067329296 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061029391 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065433632 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063394793 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107594357 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068575074 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065150345 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.0663918 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061486247 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067328226 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061385992 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062235706 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064437471 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.0689812 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066463196 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064299889 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065330548 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064344384 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065761998 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063587789 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067234894 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066207199 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065226916 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064717555 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065463526 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065402149 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061404481 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063872576 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065894077 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061902203 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066017513 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066844315 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063496452 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063189963 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067044172 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065021219 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060609455 seconds)
  done (took 4.565183845 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080193599 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108315147 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067128949 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088015367 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.07955124 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.074681873 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069012164 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088959889 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.06327388 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064477421 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081609326 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.07914941 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065508697 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070608446 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071806893 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065472126 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066530871 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064831938 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069400636 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065073271 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069503238 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072312463 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079650625 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078470449 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069009235 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064461662 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064801276 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069911998 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078131501 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069837582 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070027604 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070880761 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.08029622 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.07054296 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064802066 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067902827 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081451715 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066201521 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067746625 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063465756 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067833551 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069650651 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.073163261 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.082014624 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065600335 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.07037422 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065456977 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062676859 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078267181 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.06801186 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073144572 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.07978113 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069252574 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065796557 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06969588 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.08055831 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065534473 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064485984 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068417645 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077919291 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063256981 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069283877 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078853824 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067400504 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072366211 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079722385 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070842296 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069349521 seconds)
  done (took 6.357914129 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075632379 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.071781456 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081367638 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079721696 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072022541 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072602151 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072071233 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072175698 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07171929 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077090829 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072088949 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.09296309 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.06763904 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074740701 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072458139 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072409477 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072362208 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072625115 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072121616 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.0726606 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072172663 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080237865 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071973073 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079695629 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.097990892 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067396555 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071840496 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071797965 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080368659 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072286426 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079472505 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072222646 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072250274 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079938806 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079070766 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.072073356 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065278656 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071817607 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071953518 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071931856 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067193064 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079655338 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071606398 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066950362 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07192308 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071571602 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079501718 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078778405 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074270389 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076567169 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071913665 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079493216 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071464791 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071794577 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079606395 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.104060826 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079772189 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079562143 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071511929 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079308443 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079496155 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085804227 seconds)
  done (took 6.031833052 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083845805 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074889289 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.07718892 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061366728 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063763773 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069592061 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063612711 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064543117 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074321392 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074199282 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076675504 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07090579 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072537593 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076800541 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069332908 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072381949 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069325375 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069331338 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073774996 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069504759 seconds)
  done (took 2.777991238 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074431143 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082878139 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067089334 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071898189 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068450566 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071526116 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068209127 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068485066 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06672555 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068798851 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076197139 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075745048 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067178315 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071662072 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.07566544 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071339363 seconds)
  done (took 2.485017739 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.074788784 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071813921 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079624419 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066326312 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064659453 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062228348 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066105393 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061415166 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062698986 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077926886 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065756447 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068106729 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065422189 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064341499 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062950731 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068590877 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062362755 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063463136 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065660917 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077814884 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076373069 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064459571 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066633002 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.06570394 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065949708 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071189765 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065443475 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063604271 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063470984 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065971855 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066056888 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069426943 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.06300029 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064014325 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064660832 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.06354337 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065930506 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066184441 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068217044 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.06565512 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.064106054 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065959048 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.06631263 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066554049 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062111864 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066080586 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062055569 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067592555 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064318914 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.066296814 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065373947 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068338545 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066692991 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072521042 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068880063 seconds)
  done (took 5.01073683 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079108835 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069503811 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062063839 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063939377 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068543374 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067861235 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069379759 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067788061 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069830623 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064173132 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067628894 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069289082 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067833537 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069525677 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067370384 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069384443 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061599322 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068231318 seconds)
  done (took 2.575091552 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071095098 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065840986 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073814991 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066155482 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066559683 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06859032 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062261094 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064571746 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064861936 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065717905 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065898261 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067798757 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06436298 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068191515 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066282675 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066115312 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068141882 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064831998 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06631977 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061910117 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068218864 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064686161 seconds)
  done (took 2.807203676 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.092562356 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.081738346 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.137878506 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078782008 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.08332749 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.072086048 seconds)
  done (took 1.891833859 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089844927 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079165376 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067272722 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087662176 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073781351 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067526233 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067453569 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067525282 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075900194 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076316008 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06756461 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076048584 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07607093 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07541547 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072800005 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072997821 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067513381 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067345905 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065677436 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083722062 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067079231 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07628593 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067011087 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066895585 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067237318 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075003233 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075427243 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075524261 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066699649 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075440152 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072668025 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066863488 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075828997 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076220128 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068927988 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076058109 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067516107 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084274424 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073057297 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075273744 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068999651 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073179233 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075960071 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072194045 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076317078 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067486851 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071933025 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067021414 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067299186 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085627179 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073200135 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075022838 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073287195 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075705325 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076025429 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08585417 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076051749 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075160141 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073362316 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077968371 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075206783 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07315251 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074841284 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075692699 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073209845 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075311042 seconds)
  done (took 6.213150991 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081424205 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085138701 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067798206 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075887839 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075246757 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067116007 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06750758 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067481513 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067292566 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066890096 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106842092 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067554396 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075106105 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075661723 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068092257 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067406208 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068001017 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075023007 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06707739 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085949513 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067166618 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075221331 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075172336 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075567902 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075997471 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073061444 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067268344 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067311116 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067785991 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067282861 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072342471 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067522012 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075727517 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066806231 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075125057 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067619084 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067283976 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072389311 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067387268 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07308465 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075199301 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083725422 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067393168 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067237524 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075933504 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06722643 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067371075 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066650201 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067027278 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066772062 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075790513 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075523691 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075705577 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075236966 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06743099 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067498264 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067318571 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06773819 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067297807 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072928522 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074896821 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067085914 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085992052 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067400527 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067493676 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075361519 seconds)
  done (took 6.117819362 seconds)
done (took 128.959311421 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.182488788 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.164840599 seconds)
  done (took 1.691530914 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068772807 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097279737 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076384963 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.127757602 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066575432 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099808256 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.09949479 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077486042 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.06651906 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066045413 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.06633569 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068053986 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130816563 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066081435 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065819479 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068843364 seconds)
  done (took 2.670137312 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.097390997 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.156518027 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099540237 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064377493 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096657701 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072643139 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.065058067 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.07491219 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070561374 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064877953 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072587574 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070614066 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064487924 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070173159 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070850968 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072610984 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064515926 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072758153 seconds)
  done (took 2.781431669 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100405114 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091288967 seconds)
  done (took 1.552661151 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.154278831 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.110358761 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.149313462 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.345111429 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.167927808 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.229135166 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.126571621 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.126846988 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.117807787 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123443305 seconds)
  done (took 3.009254971 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.097468995 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.152391472 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.25474429 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115333683 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072207347 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.09520098 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.115804194 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077192221 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.08025136 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080300162 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079975426 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076231661 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.09868343 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073347861 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072667927 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075952449 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.101995786 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.071795556 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073754026 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076825773 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.098924117 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066115601 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073541397 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072096922 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077488441 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077622132 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065169225 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065238883 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076780843 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074174263 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076922275 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093684574 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076941591 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106684999 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070150528 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107968709 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076749422 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073928339 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073872478 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073885882 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078550762 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078539618 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071832547 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076039816 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065425766 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076668312 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065277544 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065457523 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077975678 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.06711638 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.07790308 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076799343 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106894142 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.067016448 seconds)
  done (took 5.955689366 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101240305 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.103275141 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071109971 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.110126325 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099759627 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071889009 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.101437906 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09283168 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102895619 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070171514 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068217061 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070427327 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082915589 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082776077 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.112129958 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.104374296 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073358594 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071275906 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.103423391 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.102037374 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068838865 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096083635 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.089490512 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101296871 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067140102 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07066356 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067844068 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07072456 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076823685 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078166305 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069676777 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080469255 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084933677 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078500072 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066960264 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067784303 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06812966 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079769535 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079257381 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078967791 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077736921 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067314313 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069393801 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069189782 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070226701 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06775221 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07947998 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080647707 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078805512 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069326801 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069791834 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067899736 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069609977 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080030575 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077900357 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080888464 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079914008 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068314975 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068310593 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072157545 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080331417 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079431826 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.0794622 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069400925 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078882325 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068367628 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.07997901 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084211661 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068986364 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07009789 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06861507 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069484392 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069824744 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078176995 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077979546 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069462136 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069156047 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067906407 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079893959 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079221002 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068612585 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077153623 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067180287 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06839514 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069546741 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069361304 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.078080226 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080434163 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070013909 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067902773 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069509731 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068317779 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067482622 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076903853 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080381894 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079087251 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.079160723 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068698746 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077806304 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077477032 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069095339 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078146206 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067371129 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.200368001 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069437898 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079237058 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.07787209 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079367755 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069495948 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068835559 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078590954 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081329177 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069011613 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078254784 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080662106 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080322825 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068880924 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08173726 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068595518 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.08018712 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070142702 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080396658 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069280068 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080176896 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068960549 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068357499 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068658643 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079708186 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071331039 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068613638 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070052385 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07016416 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080209866 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082909445 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070380996 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081456595 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078680558 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070903727 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079651805 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068317634 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080008325 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069623775 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06926078 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068289866 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082306103 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068211483 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067850773 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069074195 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080745849 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068089837 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080701022 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079249617 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.0681964 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081972056 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081298897 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077689107 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080359533 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070385884 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068392186 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068425855 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068978427 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078451065 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079615633 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070452803 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068589304 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.079383869 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.078964248 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067653905 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078313982 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078225834 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078774632 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068585969 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069274338 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080417781 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080595054 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078410502 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078114559 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078030887 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068606317 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077905286 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078082868 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068274279 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084038801 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067941434 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082767116 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079537418 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077042438 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079167178 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.081010685 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.081104016 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080281765 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.08321917 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06810311 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068171974 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.08058015 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068579015 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069710361 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078684182 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069603312 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069792343 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083559798 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068612358 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079522669 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066805551 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077572309 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065898141 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068818304 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081976516 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.201203721 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070430036 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.081166493 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070809509 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078122282 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08128001 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079087778 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06870073 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071470227 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.079581157 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079653056 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069016086 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069152806 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071449296 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078772507 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077679994 seconds)
  done (took 18.668057971 seconds)
done (took 37.697570592 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.208058359 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.149945157 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.200373127 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.11811833 seconds)
  done (took 2.138898402 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.121673763 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100541257 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094828158 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.0649563 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.10144177 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064888763 seconds)
  done (took 1.947782523 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.311757346 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.210530653 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.18225386 seconds)
  done (took 2.09974477 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.197651395 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.187122576 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.391245394 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.252068374 seconds)
  done (took 2.529656456 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.142662515 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.088734042 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066918237 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083022015 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.134613591 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.160381796 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101621942 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125939401 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077232617 seconds)
  done (took 2.428347992 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.146702873 seconds)
done (took 12.691251046 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.166969608 seconds)
    (2/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.121415675 seconds)
    (3/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.098884092 seconds)
    (4/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.208283856 seconds)
    (5/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.216071989 seconds)
    (6/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.202813326 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.100456273 seconds)
    (8/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.216854086 seconds)
    (9/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.172333651 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.109175184 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077196959 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.171260879 seconds)
    (13/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.208396326 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073407461 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.089290577 seconds)
    (16/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.207760107 seconds)
    (17/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.181928573 seconds)
    (18/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.16175183 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.089941164 seconds)
    (20/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.197425513 seconds)
    (21/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.076504946 seconds)
    (22/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.075569644 seconds)
    (23/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.075489584 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.094754157 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.122279375 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.110506493 seconds)
    (27/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.070714351 seconds)
    (28/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.109665435 seconds)
    (29/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.071091574 seconds)
    (30/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.072285367 seconds)
    (31/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.065766139 seconds)
    (32/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.131986018 seconds)
    (33/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.072377773 seconds)
    (34/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.160443105 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071307136 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.089198711 seconds)
    (37/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.137431435 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.089352088 seconds)
    (39/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.088362071 seconds)
    (40/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069106792 seconds)
    (41/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.076936022 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.102718066 seconds)
    (43/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.073716704 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.138463866 seconds)
    (45/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.073804888 seconds)
    (46/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073062003 seconds)
    (47/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.0511102 seconds)
    (48/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.107002606 seconds)
    (49/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.135113023 seconds)
    (50/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.1052836 seconds)
    (51/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.077633599 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072246386 seconds)
    (53/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051128382 seconds)
    (54/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.150682466 seconds)
    (55/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.126114438 seconds)
    (56/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.070469762 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.071509595 seconds)
    (58/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.061697182 seconds)
    (59/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.154047923 seconds)
    (60/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.116661925 seconds)
    (61/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.195031028 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.065118202 seconds)
    (63/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066615832 seconds)
    (64/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.186860312 seconds)
    (65/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.174339265 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065072529 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.090742893 seconds)
    (68/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.088261831 seconds)
    (69/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.074859138 seconds)
    (70/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.062573721 seconds)
    (71/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.070215388 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.08924939 seconds)
    (73/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.082254149 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.100231488 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.089173925 seconds)
    (76/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.065229979 seconds)
    (77/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.050798826 seconds)
    (78/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068593662 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.088200384 seconds)
    (80/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052013326 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.115319059 seconds)
    (82/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.072014772 seconds)
    (83/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.1082429 seconds)
    (84/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065348499 seconds)
    (85/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.217030347 seconds)
    (86/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.076636624 seconds)
    (87/309) benchmarking ("sort", Int64, false)...
    done (took 0.208623896 seconds)
    (88/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.066062945 seconds)
    (89/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.062650964 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.088566966 seconds)
    (91/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.052072475 seconds)
    (92/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.177031452 seconds)
    (93/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068395955 seconds)
    (94/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073044767 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.127520184 seconds)
    (96/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.27778324 seconds)
    (97/309) benchmarking ("sort", Float64, false)...
    done (took 0.124976826 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.131025171 seconds)
    (99/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.07661054 seconds)
    (100/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072350042 seconds)
    (101/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051249955 seconds)
    (102/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.071714795 seconds)
    (103/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.178921934 seconds)
    (104/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.065296573 seconds)
    (105/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.166194424 seconds)
    (106/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.074956568 seconds)
    (107/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072571053 seconds)
    (108/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.072019645 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.138723483 seconds)
    (110/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.097061978 seconds)
    (111/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.051866583 seconds)
    (112/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.152919931 seconds)
    (113/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087354577 seconds)
    (114/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.156279583 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065330329 seconds)
    (116/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.174342755 seconds)
    (117/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.065118668 seconds)
    (118/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.051267139 seconds)
    (119/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.07150313 seconds)
    (120/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.072162089 seconds)
    (121/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.075728963 seconds)
    (122/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.065296708 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.135598799 seconds)
    (124/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072895343 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087392945 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065371241 seconds)
    (127/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.051792121 seconds)
    (128/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.151839299 seconds)
    (129/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.158822893 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.088014341 seconds)
    (131/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.075621064 seconds)
    (132/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052616549 seconds)
    (133/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.15776075 seconds)
    (134/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066183698 seconds)
    (135/309) benchmarking ("sort", Bool, false)...
    done (took 0.142317122 seconds)
    (136/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072765294 seconds)
    (137/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071654925 seconds)
    (138/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.148797309 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.105769298 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070122459 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071495583 seconds)
    (142/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073068541 seconds)
    (143/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.051840161 seconds)
    (144/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.142121829 seconds)
    (145/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.108396331 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.090785561 seconds)
    (147/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.147900808 seconds)
    (148/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.050726052 seconds)
    (149/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.053480192 seconds)
    (150/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.052097384 seconds)
    (151/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.052394134 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.119427252 seconds)
    (153/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071467852 seconds)
    (154/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.05119528 seconds)
    (155/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073097748 seconds)
    (156/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.150296683 seconds)
    (157/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.15062583 seconds)
    (158/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080526286 seconds)
    (159/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.114142188 seconds)
    (160/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064452942 seconds)
    (161/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071318756 seconds)
    (162/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071779963 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088168477 seconds)
    (164/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051215188 seconds)
    (165/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.184270907 seconds)
    (166/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.069008562 seconds)
    (167/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.070851321 seconds)
    (168/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.07287375 seconds)
    (169/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.061805418 seconds)
    (170/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.172700757 seconds)
    (171/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.106221263 seconds)
    (172/309) benchmarking ("sort", Float32, false)...
    done (took 0.126009511 seconds)
    (173/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.052371355 seconds)
    (174/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.054410302 seconds)
    (175/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071121673 seconds)
    (176/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.074194479 seconds)
    (177/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.073636675 seconds)
    (178/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.10658442 seconds)
    (179/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.066691575 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065050217 seconds)
    (181/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.091568928 seconds)
    (182/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.134000222 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065227858 seconds)
    (184/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.062191263 seconds)
    (185/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.106013666 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.100796219 seconds)
    (187/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.05143528 seconds)
    (188/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.148948752 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071285237 seconds)
    (190/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.073343403 seconds)
    (191/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072810392 seconds)
    (192/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.10871385 seconds)
    (193/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.168886225 seconds)
    (194/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.053283091 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.219911875 seconds)
    (196/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.075704118 seconds)
    (197/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.052095414 seconds)
    (198/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.052632986 seconds)
    (199/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.167829102 seconds)
    (200/309) benchmarking ("sort", BigInt, false)...
    done (took 0.184777693 seconds)
    (201/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.082403198 seconds)
    (202/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.066089646 seconds)
    (203/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.052295172 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.063680758 seconds)
    (205/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.051389698 seconds)
    (206/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.109536565 seconds)
    (207/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.196371152 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065385046 seconds)
    (209/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.051199597 seconds)
    (210/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.065573161 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.09273259 seconds)
    (212/309) benchmarking ("sort", Int8, false)...
    done (took 0.139397687 seconds)
    (213/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.087079984 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.120358365 seconds)
    (215/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.051588726 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.073633871 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065900484 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089029695 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072767216 seconds)
    (220/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079202643 seconds)
    (221/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.073253086 seconds)
    (222/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.051939602 seconds)
    (223/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.054022044 seconds)
    (224/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.070958249 seconds)
    (225/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.051871816 seconds)
    (226/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.065226193 seconds)
    (227/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067232966 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071442818 seconds)
    (229/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052793316 seconds)
    (230/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052086794 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064046561 seconds)
    (232/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.078755136 seconds)
    (233/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051314262 seconds)
    (234/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.05265578 seconds)
    (235/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.185426478 seconds)
    (236/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051312587 seconds)
    (237/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.066941419 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.13087864 seconds)
    (239/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.051185977 seconds)
    (240/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.052402875 seconds)
    (241/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.070783023 seconds)
    (242/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072854141 seconds)
    (243/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.064232734 seconds)
    (244/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052278588 seconds)
    (245/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.05146307 seconds)
    (246/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.077773321 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.089230529 seconds)
    (248/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.164044184 seconds)
    (249/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066863545 seconds)
    (250/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.051981192 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065188056 seconds)
    (252/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.051588657 seconds)
    (253/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079490793 seconds)
    (254/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.052359505 seconds)
    (255/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.116348382 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089729777 seconds)
    (257/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066181273 seconds)
    (258/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.080412988 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065276751 seconds)
    (260/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.067009856 seconds)
    (261/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.06470999 seconds)
    (262/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.051747444 seconds)
    (263/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.087443319 seconds)
    (264/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.086422423 seconds)
    (265/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.051231497 seconds)
    (266/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.063411412 seconds)
    (267/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.162872394 seconds)
    (268/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.051024606 seconds)
    (269/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.065335871 seconds)
    (270/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.079173014 seconds)
    (271/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.064787931 seconds)
    (272/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071442201 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.089228517 seconds)
    (274/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.064411302 seconds)
    (275/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072328441 seconds)
    (276/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.067439049 seconds)
    (277/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052105143 seconds)
    (278/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.071212929 seconds)
    (279/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.08681721 seconds)
    (280/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.183830674 seconds)
    (281/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.05094073 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.106597696 seconds)
    (283/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.050913915 seconds)
    (284/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.064535729 seconds)
    (285/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.062572067 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072140863 seconds)
    (287/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.069926994 seconds)
    (288/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.060323795 seconds)
    (289/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.053194176 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065122914 seconds)
    (291/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063474117 seconds)
    (292/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052335682 seconds)
    (293/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.06591031 seconds)
    (294/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063586894 seconds)
    (295/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.066195374 seconds)
    (296/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072857927 seconds)
    (297/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.071954341 seconds)
    (298/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.052414879 seconds)
    (299/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.051793088 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070669885 seconds)
    (301/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.069083543 seconds)
    (302/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051143796 seconds)
    (303/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066072852 seconds)
    (304/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.086914864 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070441097 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.089298317 seconds)
    (307/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067795888 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.087767732 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.093511956 seconds)
  done (took 30.296566569 seconds)
done (took 31.703550875 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084347922 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091698245 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074366588 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.09153385 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079925861 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075557233 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071893417 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077644844 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079047846 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080821478 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077585516 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054522394 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073180019 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073015974 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073639755 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090276794 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077203463 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072467505 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072370249 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064106488 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072448823 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065169896 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066731097 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054433565 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.076924586 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071376955 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072061747 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073325732 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065205242 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065356179 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068467662 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073016965 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065093678 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077080376 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071464656 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072263701 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074308145 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075801274 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066965153 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065189433 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073549282 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065427907 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072274762 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.07256084 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.070926749 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070491692 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.07235794 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.07726113 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090903969 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067672572 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073797613 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.074976341 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075786906 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071724448 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068934254 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072348486 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070064912 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090386584 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072412252 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067561925 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073031508 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073327061 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070226444 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072114983 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.07280672 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074420698 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074718582 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070575436 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073928958 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070335806 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064948682 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072290034 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068073073 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065573127 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074989284 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075860124 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063832924 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070374087 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071987453 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070489063 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064044319 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06724003 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066764843 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070712059 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06652432 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.053991206 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068080786 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.07062223 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064131124 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072602061 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071121872 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071479288 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066136236 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074090523 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.063987504 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069521756 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064943746 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065011467 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066340781 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068588796 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064650008 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066751696 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073413424 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066317061 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070792471 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078180003 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064665852 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071316649 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064233263 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064206529 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078830061 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074220702 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065251032 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067771584 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064264964 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.07193005 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064894448 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065069749 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065063271 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064852564 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070317564 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064804691 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069458146 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071630873 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.075836968 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063687993 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067067224 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065946321 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064048612 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069020126 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064136373 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.200710365 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.067388353 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062235175 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067932853 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065221482 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071977368 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.0673643 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.071911011 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066732876 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073289173 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070269189 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070713444 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070478348 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064333705 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058367875 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067551622 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067761439 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067025176 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065614738 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066206911 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065344835 seconds)
done (took 12.360237827 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.065879575 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.142403664 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098972764 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094850071 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085556155 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.065923719 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075775946 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101724884 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067432361 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101922376 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086673129 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084453892 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.111817525 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064347677 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065480462 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069722829 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067117126 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081423577 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100089253 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086559314 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115363846 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064804265 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093602695 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089786588 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.08677888 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.101073283 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066481986 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069427659 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069052749 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.090547937 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.085881765 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069198543 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066227416 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.09986521 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.091746213 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083109524 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066037102 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.081566948 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066356325 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065734181 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.066744982 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097623871 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079686506 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079638962 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069244109 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069038024 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066413371 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082982559 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088466545 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078051076 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086297779 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102254039 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068203352 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065306695 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064175219 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085115587 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065018585 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067957282 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065860025 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068083423 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066555607 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068833897 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080657667 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.0811289 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069056691 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079863968 seconds)
  done (took 6.763985526 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.082405353 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.090147639 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082488917 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082557451 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065292089 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066050119 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065705641 seconds)
  done (took 2.03248707 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067057033 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088051854 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088654582 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088846886 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084639446 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.08724747 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075448723 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066188371 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.079984676 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.06713674 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086611286 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101370731 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067158291 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.07262792 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.089878716 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.065816852 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089442369 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.065982285 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068875814 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089006173 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068180836 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081523606 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069935116 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.06625236 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080027892 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066295156 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112794429 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070121964 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067581997 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069137134 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064469116 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106213575 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079824369 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074877345 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066035476 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080223755 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.079935616 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064356548 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.08231482 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071235465 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079735441 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066300323 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066850745 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.063948542 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070119939 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076395357 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066773221 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066390043 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068439663 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085087128 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066590634 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079132866 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069341423 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068506536 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067531397 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070081616 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075495043 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066781746 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085856963 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067758983 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.0830977 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082445966 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079758793 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082568516 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068517124 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.07933239 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079376399 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068195896 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067571708 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069138055 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.081969051 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064689699 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067539833 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076465047 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067505696 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088596681 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088806897 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067300271 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075189545 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.06668829 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067429734 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066115748 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088559079 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068210228 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065551383 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070624868 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069055374 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064741125 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065466706 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.0696886 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064251611 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067694702 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069058497 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068915021 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069142392 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083131373 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068962483 seconds)
  done (took 8.717897412 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068075251 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067918142 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069743428 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067313444 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067934721 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068496165 seconds)
  done (took 1.928822118 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.092865255 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069458998 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080122385 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072570739 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103943118 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.085959931 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.08624551 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078817042 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083677225 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078190629 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086040769 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.08853959 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.0924801 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072449889 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.08588337 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.0717104 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086842805 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075525172 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078564274 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07269713 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086277256 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072057117 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072633502 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.08124497 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075291385 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071825473 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066732445 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078415123 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078203996 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078633241 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072362693 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075589737 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070476383 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.0781712 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086500519 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070714708 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071486902 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077003271 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071888401 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075681493 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087262724 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072691323 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074520877 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076904561 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078711644 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070352303 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076467545 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075696971 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085573163 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076791118 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076316055 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071103664 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074886216 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076625124 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070150693 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078237419 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.07630473 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085755848 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071990968 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070161925 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068699229 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074802394 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077746439 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074525218 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078269145 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076206786 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070378642 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.0719812 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072468423 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.072068496 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.080671191 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.06897014 seconds)
  done (took 7.061719926 seconds)
done (took 27.986904604 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.544175724 seconds)
  done (took 2.026369664 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.596907726 seconds)
  done (took 2.108334529 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.117157851 seconds)
  done (took 8.621971218 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.401111017 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.482367398 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.688971723 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130815637 seconds)
  done (took 3.258515432 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.678724286 seconds)
  done (took 2.194192182 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.208314207 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.196259553 seconds)
  done (took 1.934817389 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.376816874 seconds)
  done (took 1.883248927 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.093642907 seconds)
  done (took 2.600602171 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.264213418 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.16377416 seconds)
  done (took 1.943671257 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.460957022 seconds)
  done (took 1.974794181 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.793108009 seconds)
  done (took 6.309001269 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.206059736 seconds)
  done (took 1.766276717 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.239664861 seconds)
  done (took 1.753088689 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.689881461 seconds)
  done (took 3.202900819 seconds)
done (took 43.090380623 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079754276 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081229839 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080583166 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077555194 seconds)
  done (took 1.818400712 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.075772757 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072399073 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075669951 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071521058 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076038112 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072063567 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.07389097 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076154347 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071665521 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072048864 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072027276 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072175282 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074111786 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073921061 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070768856 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074223656 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075353156 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072003331 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075467414 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072041567 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071050208 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.0741146 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074223415 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071375168 seconds)
  done (took 3.273100965 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.07675249 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.07202386 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074692492 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071485503 seconds)
  done (took 1.815190109 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077038975 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091420066 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088337855 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077271574 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091146313 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085639091 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068459509 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068044229 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072059366 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076443141 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067910875 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095382563 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087356507 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.075960975 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078304738 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065299265 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067795147 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.085710024 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076753823 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.076656331 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069531426 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076054732 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067454558 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087232834 seconds)
  done (took 3.388394132 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.076696831 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.102715784 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077087844 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087693854 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.088985767 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064693286 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074034251 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089089617 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.121577582 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064932364 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069418144 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064618068 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071999488 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065006445 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.07571939 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.103849655 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.107102385 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068224121 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.094975448 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065240517 seconds)
  done (took 3.158508249 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072611259 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069326737 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.06522282 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070403368 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076311112 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072533959 seconds)
  done (took 1.952305905 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067780985 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067485808 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067329154 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066950217 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071190863 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.06672063 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066224287 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067118576 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067125684 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066644331 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.06618112 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065405127 seconds)
  done (took 2.326036073 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.170604844 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.067732999 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068833664 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065440581 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070950173 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065723374 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079142881 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067628272 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.08973791 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065965587 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066323261 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068237851 seconds)
  done (took 2.469505063 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205746781 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075967305 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235788396 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136675021 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110858854 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11501349 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103555477 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112591286 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.143012971 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101594184 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167772653 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165125101 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106734617 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136700835 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088213559 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.097125457 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155363346 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161446758 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102868082 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164842674 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143630145 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124070078 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146107547 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10031549 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105654032 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121414387 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070646535 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080707747 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170180826 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131252734 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146084152 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110155789 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093012339 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176501111 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171255074 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142239302 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133724792 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083889344 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.101613441 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.132602278 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198562766 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088323376 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162374827 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247481637 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081341477 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133222975 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120180532 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.119704534 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106810414 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089916207 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14585977 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182025899 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.138809602 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086682086 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111548492 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114994291 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.115306423 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103663382 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182012767 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160189397 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126677936 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070650196 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098637617 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153636681 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131590052 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108509153 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.127164731 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092896455 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132379122 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153673694 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118499131 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143027901 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.128261423 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088214101 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118315243 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138538979 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127977227 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169653689 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123643462 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072029702 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124690121 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102955342 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080896307 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.141394083 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074357383 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175351376 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098028582 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.105912739 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112473492 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108151703 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108334829 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161472118 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.286977353 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104452856 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065357839 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103860442 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.120049558 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147888265 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086374257 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108837996 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116658325 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077895708 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139408374 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.07415446 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121970589 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.074711323 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124355222 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132398386 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.074939336 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120772261 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100362184 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099998632 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132951499 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159844542 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088678079 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082170974 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166626496 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121551309 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103058245 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143355162 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155316929 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.098455199 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101815921 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148938174 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179495473 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088909621 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161916437 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107250623 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082630029 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.086876584 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123054337 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111663962 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.121528972 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08143068 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.11802932 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167969878 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074429048 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094813828 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132711362 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0783565 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080355323 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103447529 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099930392 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094343365 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099656824 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104283661 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137823875 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122425205 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.248581031 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12620088 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098139072 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169718682 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089384575 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.10016369 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103915993 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069691819 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.135787484 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156562715 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.07942868 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163717631 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.123785485 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104676611 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11816 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081601789 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139769544 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077920023 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069218768 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143339137 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109760066 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10942641 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.150493817 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104550759 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.126183391 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119270643 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135756538 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132036959 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.127693732 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10469267 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087165236 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111200144 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124943953 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072166861 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090713811 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079528545 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103589813 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09481633 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082583624 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141994381 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124215184 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09973699 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110830831 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096347632 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146173615 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075925416 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12960794 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.118482032 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09413452 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.151181802 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151666198 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130355726 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098472546 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144172236 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069698635 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.218024446 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.090694976 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124737664 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082877993 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083530713 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117261478 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146486852 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128740067 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138045267 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11147947 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120821896 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153815869 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069587078 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.115229995 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14833496 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120659071 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.103742428 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089731568 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.097941305 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141217453 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107794859 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18083627 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112787181 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124796619 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153063904 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.098864847 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078974209 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102087664 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135449357 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103506074 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143710369 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098512105 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087360882 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109665346 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073925916 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100072869 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126628131 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119593502 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138305101 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.114022718 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132812001 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076358938 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116506645 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120257328 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122625108 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063557674 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12043505 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161012308 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093255589 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118118729 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152750196 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078916788 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.12298125 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.322104097 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147595967 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084934194 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109397362 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117938797 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127435162 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120307638 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139851832 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108098007 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134464833 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108594932 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084787077 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087227982 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095980347 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104928894 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.093981453 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.107466565 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.113568866 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094113817 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131303729 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102995636 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108538768 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117338821 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097588217 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.088762456 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096656765 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172767286 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118881392 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170959557 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098085784 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.144428805 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163899821 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073970754 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078459396 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.0774941 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139070316 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083298715 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13019537 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.097484803 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105089621 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12329629 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141681372 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094696906 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068106191 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107923125 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13454833 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111752784 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097427307 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104007341 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162106433 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.0994191 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078564896 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112885137 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103932461 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101764985 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.317911622 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061463537 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098013147 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075839328 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080811469 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127738382 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153482031 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080177752 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.10217041 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117981447 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110519677 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127247966 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10187068 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098337747 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113552822 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148149891 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128166605 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089191092 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111537279 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128825305 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156201086 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107779409 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.095157083 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171593393 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151702633 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.159785826 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.08880743 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113739423 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113155993 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107331547 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138379007 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083214854 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163635894 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081653189 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136188102 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103546216 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089942455 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129484195 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.113322792 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087900515 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147677022 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117324147 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081701591 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076975529 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117494959 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120097795 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106339533 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075220178 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138407397 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.071965867 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131655005 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167950022 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226255592 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10495786 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09762743 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079693572 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108208287 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101747861 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088555575 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.098717609 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1722464 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087949397 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150027328 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140796272 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112940497 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137257907 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099047539 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.635491205 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077243398 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151097568 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116329172 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172123867 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096638389 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117086153 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109390848 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122444457 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144389878 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10422444 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.176177632 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132412949 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.115361242 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079227228 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101721073 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101788529 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088364917 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104529819 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112465948 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115676546 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092951318 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.115308472 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122932679 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081641702 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095262508 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156595311 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116383065 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144243771 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139837499 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084153089 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117687637 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138281729 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079412845 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.121872527 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151823215 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104992568 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243417668 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080383247 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.102965632 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170341861 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072973236 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162995545 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120148984 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109309366 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112260596 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.114378138 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130809083 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108432903 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120372389 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09304153 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110420653 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112991045 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081195656 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076481487 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103202613 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112249444 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.096724111 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099649574 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097309559 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150545648 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070312352 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095109532 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102300949 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144472513 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175033811 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087546993 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082245708 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118794927 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112930835 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.112759619 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119447716 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078291142 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081770408 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081411907 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076570488 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.107539256 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111202781 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103650815 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110910203 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164537147 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082164643 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.223534096 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094785104 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103905505 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069139248 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078111453 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094977664 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097474616 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107689423 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100273932 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169041235 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.093626368 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089114965 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092119373 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.217046566 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082722311 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128699578 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110534564 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119197902 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097781934 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062024305 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109046146 seconds)
  done (took 58.654131717 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.103269365 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.081649401 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096480442 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149547119 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122381862 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.211437956 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.156547469 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199111406 seconds)
  done (took 2.743907015 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.067457562 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.092801336 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.09992167 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.08218226 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.065996783 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067836801 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.223877391 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079806402 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.06565229 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.0878666 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.077846765 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068111722 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.41578515 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065309651 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.066508949 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.06128888 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066607242 seconds)
  done (took 3.369601413 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.363534102 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.600594087 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.3708129 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.07239286 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.824078996 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.092614887 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.022835343 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.128406185 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.072412533 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.53646855 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.703633693 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.123232257 seconds)
  done (took 18.534878143 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075554125 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070989547 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.082648664 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.08284759 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071269259 seconds)
  done (took 2.005231213 seconds)
done (took 107.058422952 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.079811847 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.391341325 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053720844 seconds)
  done (took 2.096393232 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.081945347 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.083626599 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.083933512 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082047792 seconds)
  done (took 1.962780809 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.07446051 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.075757835 seconds)
  done (took 1.774964333 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.223144587 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.156375788 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.085935842 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082037838 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077892265 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.077990861 seconds)
  done (took 1.865720037 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.071472255 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.073898153 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.071910974 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075259726 seconds)
  done (took 1.916558132 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.075335588 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052269042 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055007297 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055450548 seconds)
  done (took 1.862272651 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.085816372 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.077640272 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.077572829 seconds)
  done (took 1.86599189 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.100843879 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085174221 seconds)
  done (took 1.810720363 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.080729052 seconds)
  done (took 1.705593676 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.097442204 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.112292859 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.130038044 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.1093931 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.136921388 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.10797604 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084738491 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086252085 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076106018 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086773987 seconds)
  done (took 2.651887541 seconds)
done (took 21.679566011 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077454897 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.353832683 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.359958501 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088790581 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.667175323 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355683285 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.967405517 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091568461 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112401709 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06710478 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08324492 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.647611844 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.957116313 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.317860326 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.945542378 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.318382311 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.647331872 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067685768 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067106291 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067194144 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.952183715 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067181706 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067124392 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067610545 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.648842826 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370105662 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067556625 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.317720156 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067047403 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.06898134 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354087482 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067120801 seconds)
  done (took 15.985038286 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070352967 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.117230637 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072797049 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083109555 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070412322 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068852178 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.070894921 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068262449 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.11824391 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067259428 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084221195 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067457483 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071228941 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067976828 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08610995 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.06754769 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067753382 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067544561 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067687567 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068119351 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085555251 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06723535 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067419915 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06746113 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067210083 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.078618279 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068107253 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067408809 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067630295 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069201369 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070360225 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068700548 seconds)
  done (took 4.005114611 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11478922 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124068836 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073537413 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102423837 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111541356 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069735793 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.141786463 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092278208 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.12642266 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067822464 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083863774 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067524924 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.099698402 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067960974 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087000417 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067952954 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068825789 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068284004 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067860108 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067889672 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086219138 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06739643 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068286469 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067955601 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067853845 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080646563 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067924522 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068065476 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067822498 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.06976972 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071057662 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068198694 seconds)
  done (took 4.260733667 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071825118 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074206958 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.081840333 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082902355 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069371957 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071806056 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072078189 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070216901 seconds)
  done (took 2.23601281 seconds)
done (took 28.117455686 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.077473292 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068230549 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.071783513 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.079784169 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.07271115 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078002801 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066679642 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.073798745 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071350021 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.071965681 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074257923 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.066594378 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070266358 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066786348 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.072939385 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067248883 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.078302612 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071167518 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078450515 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.078302425 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069057097 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072401595 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073579177 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078528989 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.078766848 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078134026 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076648359 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.07187269 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068481669 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.069657757 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076179014 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083107006 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068020573 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.078446383 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067612217 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.066915715 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071111349 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067554791 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.078411016 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.075974452 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069236831 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075387381 seconds)
  done (took 4.689358307 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.086647644 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089835943 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084185718 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.060913203 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066208696 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065543034 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087776538 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.05905941 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.058953729 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087052656 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.05551352 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058899257 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.061570586 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053521156 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.05872825 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056367005 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.06114324 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055261047 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.058605509 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.058518855 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.05740611 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053802967 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.059382062 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.061875275 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.057889991 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061321038 seconds)
  done (took 3.323776474 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073874211 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083898757 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.088105035 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.125684353 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.103811857 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.075974907 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.076983109 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.091734547 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.084197689 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066315676 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070553657 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.091927086 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086576512 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073039486 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067247295 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.083646469 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.08095891 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068589361 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.072879947 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.089725712 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.0829562 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.082395884 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.091013531 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.079997781 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066074602 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.068648759 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070184083 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.080037531 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.070867746 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.075422717 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070517085 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.06975813 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068392311 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.077517099 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070070538 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068250877 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089123211 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076201284 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.076590631 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.06714674 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.069953167 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068075762 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.08812334 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.121178787 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.06664839 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.085549641 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074464127 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.075852811 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067273684 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085101707 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077500512 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066571155 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.069799998 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066106369 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067062223 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.07962662 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068896377 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069611475 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.075856826 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.069996419 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085102479 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071173971 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081806178 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066512629 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074691259 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.06608365 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067778417 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.065961564 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.091446101 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068790192 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.107228068 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068315122 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067638516 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075632851 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074066358 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.0724894 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067398499 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081829073 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077100253 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070749638 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076135169 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070368038 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.069964135 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.086776805 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069097551 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068305061 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.06795605 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073693671 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069825421 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068440292 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079495604 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.06680205 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070122157 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083371162 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066808634 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068209832 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072981247 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071451558 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066382065 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.07827274 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072023279 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067735087 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076059656 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067258926 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070292726 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077343158 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073068464 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066164307 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071416052 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072963113 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067851851 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068711236 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.06993608 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069399195 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076821493 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073193984 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071284228 seconds)
  done (took 10.480100533 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.15883974 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.152160915 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069555906 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.143880603 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075758112 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078583008 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.147023694 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.093707522 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067316421 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068220128 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068327271 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.10869675 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.104689367 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.114115323 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078590966 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067752264 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.082618507 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.112959727 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.14777379 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.141380819 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.082807772 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076295265 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069804734 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068789587 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.069809277 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.077418378 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.084539728 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.07593571 seconds)
  done (took 4.369129827 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.080219237 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.095705426 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073513366 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089108827 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090439344 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067295865 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069505306 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.068916756 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080122262 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078547417 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067148907 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.07297261 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073901498 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.07058473 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068272518 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.073750841 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074141783 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069073936 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070792225 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072346864 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.07702952 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.079909351 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071049627 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066300292 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073449549 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066652238 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.063880878 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.083992981 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067600478 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.088941353 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.064992368 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074400719 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.080490153 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.067750747 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067035615 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067546586 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067101995 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.066935625 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.06947589 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065493063 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065966217 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.05707468 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066735937 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.078953551 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073214247 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056376043 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072025516 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072077578 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072473585 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064802374 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.069916285 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.069822938 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.07079391 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074497695 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072094697 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.071819579 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.06816869 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.073052323 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074752749 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066758051 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.063966346 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065335846 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071039841 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065546623 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.074672799 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071322926 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065814848 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066511839 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.068598247 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.072824549 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066513506 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.06995986 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064298622 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068746685 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071335384 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069194927 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.067637345 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065405117 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066915622 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067436923 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.054766045 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.066747818 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053343662 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070317459 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.064975146 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065679972 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067139953 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071573192 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079061712 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068282158 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072744204 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.067936787 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066036665 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070247835 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059912595 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069758309 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082159015 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082136876 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.066633844 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065159721 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081613955 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071403367 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.065865952 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056012947 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074301369 seconds)
  done (took 9.078813195 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.087580152 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069753975 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08358586 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.090766959 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.085899056 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074322502 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.075633184 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068886218 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.081723545 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073218935 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.07554296 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067677638 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076639338 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076360626 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.06951437 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076208174 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071356967 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082452039 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081399656 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067738201 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075972827 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079567197 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.088347932 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.079127903 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.077401501 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.079724652 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.088840819 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.071761672 seconds)
  done (took 3.867230837 seconds)
done (took 37.443179676 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.725260804 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.900826096 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.718842026 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.056572207 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.797080383 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.840935995 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.783657122 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.711830442 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.895779486 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.759767133 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.984236955 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.749960764 seconds)
done (took 64.58116886 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.748397063 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.854037397 seconds)
    (2/2) benchmarking "String"...
    done (took 1.987567841 seconds)
  done (took 5.495137585 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.009557811 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.25088017 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.957622633 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.710884239 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.715809542 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.018409876 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.512058262 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.250950058 seconds)
  done (took 30.067925598 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.791780228 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.950477677 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.372818638 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.413696177 seconds)
  done (took 15.238412931 seconds)
done (took 62.298369665 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.718060492 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.770313949 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.719636241 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.695766116 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.766992772 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.721246048 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.051710932 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.80334374 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.710500256 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.697598416 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.711645905 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.13949775 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.72086045 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.203394209 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.71118332 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.715946279 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.747052152 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.194555558 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.86765142 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.724956458 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.734523272 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.888972478 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.71979692 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.724406183 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.767230864 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.717893907 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.159666741 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.71634555 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.325572399 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.721312661 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.747297566 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.225644873 seconds)
  done (took 202.492274414 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.715106425 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.582255226 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.636970334 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.759822114 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.041813842 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.899799726 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.809107376 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.169886978 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.718276914 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.737674254 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.912837737 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.716906734 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.901589383 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.664593987 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.746649961 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.788177367 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.888917082 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.940191928 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.751805659 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.847612597 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.719412522 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.705709433 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.654774716 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.92387472 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.749810004 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.765081659 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.720403389 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.727818173 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.908267166 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.855098199 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.731155496 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.722587896 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.902161591 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.591463794 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.725086104 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.739366449 seconds)
  done (took 167.031665994 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.879601521 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.718321556 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.716950807 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.717908889 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.724443332 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.717799897 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.841441001 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.840604353 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.17094256 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.007929535 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.768696762 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.549302474 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.717889122 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.785462872 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.730234807 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.720836938 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.734643427 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.744217324 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.721408558 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.718966992 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.840395998 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.733206059 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.088570199 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.72577968 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.719133909 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.725108545 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.090504566 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.719465892 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.723395573 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.960318595 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.719509564 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.719470014 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.604720395 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.522355862 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.811607096 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.721063535 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.72685394 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.71904195 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.940140156 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.721185297 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.720392876 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.723028722 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.892838671 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.719577488 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.84400586 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.720047678 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.218112921 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.720896255 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.719295572 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.664546881 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.378515204 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.723367939 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.721247622 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.724146511 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.722418841 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.721496768 seconds)
    (56/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.721817097 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.726557193 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.565223175 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.794000886 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.720895748 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.725671475 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.726784539 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.72110203 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.773461922 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.723527651 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.107684382 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.780779626 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.832997242 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.839758452 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.722255787 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.788165552 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.816715015 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.720138217 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.720884405 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.720991458 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.719304941 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.80108932 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.721545824 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.838442009 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.729171028 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.721434529 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.773919897 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.789563036 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.72127229 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.596454794 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.724222761 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.721060228 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.021659419 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.788173809 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.722329202 seconds)
    (91/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.721803715 seconds)
    (92/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.722040727 seconds)
    (93/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.837775291 seconds)
    (94/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.842514337 seconds)
    (95/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.494400029 seconds)
    (96/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.72526571 seconds)
    (97/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.722133886 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.530287049 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.911798984 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.722890528 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.924445695 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.724373158 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.998535207 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.726431367 seconds)
    (105/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.725096977 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.815937202 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.72975512 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.723942392 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.723600002 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.757661925 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.725630448 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.783129623 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.723544515 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.094889975 seconds)
  done (took 396.833650262 seconds)
done (took 769.953356322 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.376892896 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.336798136 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.450948296 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.358390892 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.331573486 seconds)
  done (took 13.51948998 seconds)
done (took 15.185372281 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.819961494 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.819139765 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.750083615 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.817720205 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.745522475 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.816328486 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.797326953 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.751229949 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.783443482 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.750038788 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.783815012 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.749812656 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.738952034 seconds)
  done (took 24.789238668 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.963109759 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.958687524 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.797420723 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.95443799 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.772910298 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.961125943 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.889836389 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.887977823 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.879460217 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.742156982 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.739631834 seconds)
  done (took 22.212540807 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.959582352 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.966388808 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.801237251 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.958483146 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.776107719 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.969032063 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.890112443 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.876553957 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.878600441 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.744558096 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.739188558 seconds)
  done (took 22.225592859 seconds)
done (took 70.893493304 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.734955809 seconds)
  done (took 3.401646787 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.758513136 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.893511071 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.741167412 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.738494135 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.734264365 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.736001383 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.740550121 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.734065939 seconds)
  done (took 15.744431444 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.732925798 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.73530618 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.732017341 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.735188386 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.736522201 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.735171851 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.733384531 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.732228008 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.736661462 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.735542076 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.733585704 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.733123479 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.732602961 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.73346317 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.737094386 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.73636598 seconds)
  done (took 29.417998957 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.73544993 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.733119359 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.733144253 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.734509133 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.732446641 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.733557697 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.734850691 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.732939505 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.732889352 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.73337766 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.735136014 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.732636048 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.734523337 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.734493717 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.734732812 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.733054075 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.733899545 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.732695151 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.738886204 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.733639392 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.735649077 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.733626579 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.734121365 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.734054511 seconds)
  done (took 43.288729812 seconds)
done (took 93.519640795 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.657338138 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.170583421 seconds)
  done (took 8.497480432 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.738345972 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.737665883 seconds)
  done (took 5.185044724 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.737253987 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.736853553 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.735059088 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.736746537 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.737045819 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.736175793 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.735041986 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.736658367 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.736647063 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.73680699 seconds)
  done (took 19.033307192 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.737554136 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.737582783 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.733968553 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.737817523 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.738525198 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.734904352 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.738000896 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.739235906 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.738580495 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.736191071 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.737721165 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.736000639 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.737553288 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.737427773 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.737298058 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.734670658 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.736949112 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.735934961 seconds)
  done (took 32.936737704 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.737858284 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.738699487 seconds)
  done (took 5.148235206 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.73532357 seconds)
    (2/7) benchmarking "second"...
    done (took 1.736726462 seconds)
    (3/7) benchmarking "month"...
    done (took 1.735561016 seconds)
    (4/7) benchmarking "year"...
    done (took 1.736738195 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.735890058 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.73569306 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.735416428 seconds)
  done (took 13.822550717 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.739762164 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.907547785 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.981304333 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.418889883 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.740595124 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.742585914 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.673023106 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.741921663 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.743491383 seconds)
  done (took 19.359444615 seconds)
done (took 105.652243306 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.554604569 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.73668317 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.072061017 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.791532222 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.794389239 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.076433502 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.746594636 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.961851368 seconds)
done (took 42.405902234 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.788245135 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.303519917 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.337411671 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.025683862 seconds)
  done (took 12.340543074 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.718740114 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.261532537 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.77911453 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.333311735 seconds)
  done (took 19.779679299 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.11588699 seconds)
    (2/2) benchmarking "read"...
    done (took 2.101340821 seconds)
  done (took 5.894410257 seconds)
done (took 46.476893749 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.739812583 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.740582393 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.739517156 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.739085704 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.741235841 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.738637319 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.738324092 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.741108347 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.742303831 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.740947783 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.740869121 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.740170372 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.737594315 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.73734423 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.739976956 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.738946995 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.738829789 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.738488565 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.740973461 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.738660636 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.741310854 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.73817504 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.738851322 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.737304492 seconds)
  done (took 43.422740113 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.741399191 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.740475004 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.742541014 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.742201545 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.739017326 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.741040661 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.741488095 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.740447114 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.742092189 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.742595042 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.738086122 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.739784397 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.742880753 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.740275265 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.741975927 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.739827584 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.742335251 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.739355277 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.743269548 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.740478194 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.743506536 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.739734205 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.740276191 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.743574874 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.741750093 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.742333368 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.743113967 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.741712647 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.743511584 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.740309665 seconds)
  done (took 53.915904004 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.747971624 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.751103931 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.743377723 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.743787359 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.743006204 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.744928589 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.742219603 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.742912646 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.743728669 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.743470517 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.74314529 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.742918935 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.743297959 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.744705541 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.743255255 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.744090605 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.745573964 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.743519591 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.743545309 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.743176138 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.744539703 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.745120491 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.745427469 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.744677766 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.744896546 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.744369977 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.745044098 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.745374099 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.745552065 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.744241658 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.745639514 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.744576602 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.745107071 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.746052838 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.745701769 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.744419459 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.751783539 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.754790116 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.747913719 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.748146079 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.746859656 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.74755151 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.747090782 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.747438596 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.746268482 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.746349222 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.746056378 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.745018986 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.744521061 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.746055137 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.746236065 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.74719105 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.745495521 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.745984174 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.745429709 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.745318369 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.746411163 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.745187685 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.745227079 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.745387234 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.746743384 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.746229689 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.74759019 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.748107414 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.749137771 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.747417499 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.747964222 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.747116167 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.746462142 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.747823556 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.746768421 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.747196242 seconds)
  done (took 127.376583084 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.747116064 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.743607313 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.743093121 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.74377632 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.742789206 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.746622059 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.745054313 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.746973383 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.744917061 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.746746878 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.747182061 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.744974745 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.74551355 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.748021463 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.747207138 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.744880749 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.746970101 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.744621084 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.747739513 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.74752718 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.74684984 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.745231123 seconds)
  done (took 40.087140757 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.747400528 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.747512346 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.745328806 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.747364946 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.745099031 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.747641041 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.748418532 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.747274056 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.747424178 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.745256509 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.745604412 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.748069847 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.746853173 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.745804664 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.746009957 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.745218563 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.7483016 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.745916492 seconds)
  done (took 33.121179593 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.746375931 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.746050257 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.748456295 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.74565171 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.747018671 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.748992891 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.7460632 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.749525031 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.749174845 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.746439248 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.750113029 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.748390384 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.750042098 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.746760608 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.749690365 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.747305545 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.749751717 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.746176391 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.749381014 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.746938276 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.74727917 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.749333578 seconds)
  done (took 40.138208381 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.749385549 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.750508873 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.746862216 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.74749915 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.747982873 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.750533103 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.749792132 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.748747627 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.750448972 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.750893219 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.747896324 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.751162913 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.748699229 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.750169034 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.748034335 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.748230569 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.751156958 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.749282606 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.750269003 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.747900386 seconds)
  done (took 36.668221888 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.750309911 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.751564784 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.752015262 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.75207141 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.75195473 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.750692212 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.752265294 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.750510066 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.7521338 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.75118405 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.751310426 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.752563715 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.751715666 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.750730384 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.751937893 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.751926055 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.751475664 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.751859909 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.753171509 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.751952804 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.752689075 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.751891211 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.752831849 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.75206926 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.752926222 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.753758658 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.752902074 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.752086377 seconds)
  done (took 50.73858302 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.75208082 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.752483197 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.749569977 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.750349998 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.749935998 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.750655519 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.749903321 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.751375123 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.752433258 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.749223898 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.753832534 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.751865264 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.752963866 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.754190415 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.753475034 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.752582421 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.753103855 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.752125022 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.750170005 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.751099465 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.7532499 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.754156888 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.753616731 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.751493876 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.751202409 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.753395544 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.751654097 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.75131576 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.753686875 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.751329085 seconds)
  done (took 54.24327308 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.771745214 seconds)
    (2/2) benchmarking "in"...
    done (took 1.772692655 seconds)
  done (took 5.230719732 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.751290316 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.752826743 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.754066903 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.752304735 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.751528262 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.754878458 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.753569068 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.752126546 seconds)
  done (took 15.708326163 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.755556984 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.756562135 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.7554354 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.755074228 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.754618686 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.75411395 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.759697518 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.755577593 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.755688148 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.755817935 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.761154336 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.761092806 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.75784324 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.754813568 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.755611762 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.756257627 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.753919414 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.756426025 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.755417223 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.755801671 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.757130131 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.757122159 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.757959462 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.754065566 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.756610079 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.765244087 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.760183832 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.756426807 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.756090644 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.759810692 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.755692 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.754270386 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.756949838 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.756366523 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.75628098 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.756704268 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.764806835 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.757965402 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.761862709 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.757705044 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.756675868 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.753736413 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.758735842 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.760032811 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.759300831 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.759463031 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.75822328 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.754403988 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.756121597 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.760445527 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.761624629 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.756648396 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.75415753 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.760864881 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.757648868 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.763529299 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.759261363 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.761146259 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.767174221 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.766419456 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.770815685 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.763299886 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.758938368 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.756662837 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.766882261 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.780243528 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.763148197 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.756265672 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.754984552 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.75864952 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.764760279 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.77278955 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.766111273 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.75898403 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.75880788 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.759017512 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.759416157 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.759848129 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.765481323 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.762550596 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.75891966 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.759253027 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.769394507 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.780380571 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.758497537 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.759838405 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.760028764 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.760160795 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.760312835 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.770900386 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.76016878 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.759509727 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.76016055 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.760520875 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.763869921 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.760598824 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.758560337 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.760693045 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.756904786 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.76033048 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.759807276 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.763194984 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.769138823 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.760408782 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.760751047 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.766418022 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.759838835 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.759232736 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.766511641 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.759608192 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.760516239 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.761707214 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.766828103 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.757117849 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.763242468 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.768980481 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.760884981 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.763189677 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.761207273 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.760923837 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.768970794 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.784806891 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.761775787 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.7606986 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.765810476 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.771702652 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.762401793 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.763201177 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.761607555 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.75832681 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.759074785 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.763461456 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.76176067 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.76332699 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.76109976 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.762404146 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.759773615 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.762816212 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.762769752 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.764286655 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.763661539 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.763476421 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.763844968 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.764476549 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.762717643 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.763783588 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.768600477 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.761636671 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.762593262 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.763682179 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.76072418 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.76230122 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.763842518 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.763779253 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.76277844 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.76272874 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.762802056 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.763672948 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.763370537 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.763455826 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.762375849 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.763647826 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.76809093 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.76370576 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.766383432 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.761748955 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.760867543 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.764121411 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.76251864 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.763770184 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.763793781 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.762595043 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.766473469 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.773609145 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.763797271 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.763545826 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.766459085 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.76450901 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.764156245 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.765078492 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.766196379 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.770870158 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.764640307 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.769555402 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.765123789 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.764902187 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.764228977 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.765127452 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.763515497 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.765150988 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.768543169 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.772263656 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.777898929 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.772885984 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.766244683 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.769580819 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.766293948 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.769374059 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.768478646 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.764425739 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.764696064 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.766866249 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.76372327 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.765599532 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.76632953 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.765236135 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.764885972 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.766050954 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.766016838 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.766880583 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.766123359 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.765101479 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.766944488 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.763259795 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.766431487 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.765368887 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.764418571 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.763196731 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.764869036 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.765695656 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.765816502 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.765437233 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.771751758 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.764313246 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.766704976 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.767075183 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.766924929 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.766069777 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.766336695 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.767585632 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.767712712 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.771737956 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.766766913 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.766978532 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.772138731 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.766374726 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.766396529 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.769601679 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.766482594 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.764674441 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.769575411 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.774461803 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.767076711 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.767764184 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.767015064 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.767333046 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.768124908 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.773236454 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.76478904 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.766962179 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.767581906 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.769333875 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.765559919 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.768222324 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.768336899 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.768571352 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.769132113 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.767922883 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.768424696 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.769945195 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.767814216 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.769301926 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.768774117 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.770649615 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.776940966 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.773033854 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.768769445 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.768994244 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.769711184 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.773367139 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.767569666 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.769814883 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.767782327 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.782415022 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.776531791 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.775342567 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.768679224 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.770356473 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.773444881 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.76996492 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.772392569 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.768253761 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.769333253 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.769189061 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.76822568 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.7658973 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.771687615 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.77023345 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.769944325 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.771226663 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.773003664 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.769683693 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.769849769 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.770647154 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.770087204 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.768878896 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.769527186 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.770350344 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.773911027 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.772729567 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.772119326 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.771979876 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.77559942 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.772052326 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.772275294 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.771292848 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.7703153 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.769490137 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.771873204 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.771811351 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.772787062 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.776462518 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.773359644 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.778602696 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.771947612 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.779111742 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.771995591 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.773936238 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.779044858 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.768874924 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.77083009 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.772021798 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.772919118 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.778680023 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.772950935 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.772698159 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.776596857 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.77291247 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.772186376 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.771537405 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.772230418 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.77345788 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.771617044 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.77936666 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.773476508 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.775271357 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.774391048 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.768043105 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.773569168 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.772214574 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.772751947 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.77551927 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.772286808 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.775158379 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.772614971 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.77362427 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.771612003 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.77306879 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.772530677 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.770172016 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.773044018 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.778124083 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.77325365 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.776889615 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.77333007 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.780499268 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.77419188 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.778823459 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.773944639 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.774042528 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.773968691 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.77306409 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.77615117 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.773320938 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.775896432 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.774844697 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.775330313 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.777619617 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.773155906 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.775557951 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.774551317 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.774283637 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.774049665 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.782853173 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.79754052 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.777277944 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.778346517 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.772257141 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.777064094 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.779190801 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.775720532 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.773525356 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.77800848 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.785402164 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.782286439 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.773920864 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.775064325 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.775228371 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.776494728 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.775444515 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.774931279 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.774610538 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.775243562 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.776097938 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.776230483 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.779045111 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.775782191 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.775512236 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.776481837 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.77696891 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.785621741 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.775790925 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.77592735 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.776407928 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.775228157 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.776979853 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.777012532 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.777250491 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.776267326 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.7752797 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.778103807 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.781833537 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.782231329 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.77979526 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.776105632 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.776799491 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.776940452 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.776375134 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.77743886 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.778276408 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.777991405 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.777924394 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.778303848 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.779423313 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.780388595 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.780211944 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.778556413 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.777058667 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.779689388 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.784011844 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.776500239 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.773968658 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.776662607 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.777921629 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.776156762 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.777481292 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.785637304 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.780910987 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.788277249 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.785539482 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.781381198 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.777456929 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.78117438 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.785095916 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.778159312 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.778495883 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.779494476 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.778937368 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.779480471 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.780865676 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.778441671 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.784530968 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.778466136 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.778110002 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.784282068 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.780215774 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.778543403 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.779640777 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.783415339 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.778750549 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.776249295 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.781039042 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.777989366 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.785304661 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.781114835 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.779648088 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.781879561 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.778122665 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.781103795 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.784531492 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.780133598 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.780602407 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.778400962 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.779742853 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.779409156 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.779633885 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.776105411 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.779028115 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.780434069 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.782748649 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.785971176 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.77849654 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.781765532 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.782192497 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.781076797 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.781029221 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.78099708 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.777887107 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.778358317 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.780661975 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.78121462 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.780283185 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.782483083 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.780900706 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.782795667 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.781876997 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.78129723 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.782661793 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.791702623 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.787767362 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.778309955 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.780256168 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.781707889 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.783595166 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.78180955 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.781907432 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.781490018 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.782629865 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.782118677 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.781630462 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.781261321 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.784596582 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.796087662 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.781905929 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.783056594 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.781671304 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.784438721 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.782012967 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.778975657 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.781525098 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.783456348 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.785090648 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.789928775 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.783021884 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.787971375 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.782020656 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.784056212 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.786348683 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.785636594 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.790078835 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.785277614 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.783910702 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.783810438 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.787294554 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.798599389 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.78405141 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.792194355 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.808755969 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.78505195 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.785346995 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.783920328 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.782477811 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.78346055 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.784360628 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.78482485 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.784239293 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.783278263 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.783847272 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.785238206 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.790804136 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.78617945 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.78345268 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.783960288 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.783487332 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.785212473 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.781053881 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.784892695 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.783830084 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.78535597 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.784475729 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.784345741 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.784888045 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.798572596 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.793959265 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.783826978 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.785432246 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.782513983 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.788704397 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.787583974 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.794548449 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.793282853 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.78521494 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.786046924 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.786954226 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.785181207 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.781319146 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.785244086 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.784944065 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.784382009 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.782448881 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.798102085 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.793381874 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.790008404 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.78636693 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.786655916 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.786065133 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.786521984 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.786546109 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.786398853 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.787458631 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.788032409 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.790980017 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.78589676 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.786420942 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.79027021 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.793207766 seconds)
  done (took 1057.918340999 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.785056645 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.782981978 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.783545957 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.783669647 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.784467139 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.782807171 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.784205831 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.783780398 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.783907067 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.783968071 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.784030805 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.782928029 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.784539382 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.784911389 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.784474935 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.7841317 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.784329633 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.784109102 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.784376283 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.783439205 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.784281977 seconds)
  done (took 39.181004104 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.786934291 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.784972491 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.784619476 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.787388626 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.785684131 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.787110503 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.784217252 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.787050954 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.78589336 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.784455834 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.787459133 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.787730672 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.785346702 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.786235246 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.784364972 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.786519957 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.788725417 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.785137447 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.788073179 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.78559166 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.787077271 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.78537139 seconds)
  done (took 41.015300533 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.788641178 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.788483722 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.787382572 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.786170257 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.790333463 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.786434251 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.789548207 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.789503971 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.788920498 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.789104841 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.787923178 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.78972595 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.795056673 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.794125047 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.791030843 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.791015933 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.932035875 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.789469035 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.789795267 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.789820493 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.787063829 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.794303013 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.787208216 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.78722512 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.789030046 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.790355921 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.79078767 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.789756221 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.789547236 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.789894053 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.794611041 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.790070761 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.790071706 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.791417413 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.789268763 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.790663649 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.79476384 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.792170789 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.787543684 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.790766642 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.798910001 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.809314334 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.791212424 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.797879748 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.790866793 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.791737252 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.794100398 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.798215552 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.788761928 seconds)
  done (took 89.62213028 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.791337993 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.790274308 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.788243606 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.790931548 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.790727305 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.790143324 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.791437937 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.791118762 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.788578807 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.789580359 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.792303201 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.789067419 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.7898264 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.791408301 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.792360014 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.789972234 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.789980824 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.789091839 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.788684284 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.789875295 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.789601667 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.792362044 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.791949706 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.789270917 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.791513984 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.789569946 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.789630018 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.792362043 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.790324045 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.789251313 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.791357526 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.791921847 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.792155468 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.78951577 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.790311542 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.792052337 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.791407373 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.790370933 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.793215337 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.791511175 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.791428375 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.792951736 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.793361893 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.794871201 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.790116672 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.791325655 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.790356983 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.790242471 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.791243982 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.795240624 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.792958437 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.791890242 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.79346937 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.791045646 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.794974331 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.793992765 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.791284264 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.791220362 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.794439356 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.792616843 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.792643987 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.795561733 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.792007939 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.794315178 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.794554901 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.794012551 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.792202687 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.795273974 seconds)
  done (took 123.548450328 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.795269772 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.794568081 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.797267225 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.794505168 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.796790977 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.795752458 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.795975336 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.794959746 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.796658476 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.796409655 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.796139399 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.794365531 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.795381298 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.796215471 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.795195357 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.79597371 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.795205861 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.795643607 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.794965304 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.797008048 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.794597917 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.795541118 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.795362331 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.796032078 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.797605694 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.796191092 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.79591187 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.796264766 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.795178282 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.795638185 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.79610197 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.796238586 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.795256938 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.796392043 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.796264913 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.796285219 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.795321985 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.796890468 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.796793356 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.797218133 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.796473621 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.796963738 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.796758732 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.797111695 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.796277711 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.796957458 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.796204671 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.797349113 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.795741632 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.79778235 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.797490681 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.798452754 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.797506985 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.796613535 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.797385002 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.797483395 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.797255976 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.797582805 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.798011566 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.799092515 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.797912236 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.797440092 seconds)
  done (took 113.103763894 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.797292546 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.796940055 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.794453137 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.794221463 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.797033889 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.7952858 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.797279538 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.797599084 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.79715184 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.79807553 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.797445433 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.795807773 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.794426464 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.797741181 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.795049437 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.795508726 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.796056295 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.796414556 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.798976838 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.796837488 seconds)
  done (took 37.65795359 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.796035626 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.798513903 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.796570314 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.796074124 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.798148591 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.796620884 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.798318576 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.7995554 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.795255962 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.799054131 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.798078357 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.798393881 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.796549779 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.796201099 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.798512815 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.797005052 seconds)
  done (took 30.488572311 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.796182814 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.799307677 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.799243136 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.799572362 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.796325224 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.796660826 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.799722027 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.797894627 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.797572017 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.79909795 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.799743951 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.800314805 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.801527297 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.800461104 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.796630413 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.800439443 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.79758255 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.796879529 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.800522511 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.800046778 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.799651051 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.798260609 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.799635365 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.800332129 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.797972104 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.799080608 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.797519706 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.79849085 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.79867836 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.801097701 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.798187872 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.79883903 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.798712537 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.798401344 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.801134956 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.798490267 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.800534631 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.800470537 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.801235793 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.801004675 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.803085003 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.798786379 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.803039187 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.801476342 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.799021459 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.802278751 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.79890671 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.799264041 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.799341845 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.798439149 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.801773978 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.802018814 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.801457684 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.803040599 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.801725966 seconds)
  done (took 100.708135784 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.80196904 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.802190509 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.798824849 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.801685902 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.802945142 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.799869153 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.804017278 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.799783495 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.799616596 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.802631471 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.801129182 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.803370622 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.801859305 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.803430702 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.801723665 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.803794575 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.800789024 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.800688963 seconds)
  done (took 34.163835953 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.800574388 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.801957153 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.804777387 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.801092007 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.802991723 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.804718568 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.802183688 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.803608777 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.803457339 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.800909858 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.801807104 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.804560184 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.803037243 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.803459215 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.802053642 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.801727123 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.803411775 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.803147372 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.801579846 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.801836548 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.804564408 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.804280706 seconds)
  done (took 41.397011631 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.803984236 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.804169846 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.819080188 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.822951449 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.825155577 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.835709661 seconds)
  done (took 12.646637617 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.802012053 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.804414322 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.802264425 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.805464842 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.804983201 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.802756086 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.80297025 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.801444603 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.805740131 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.802751822 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.802135845 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.805407936 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.806371398 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.802987471 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.80506065 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.806495355 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.804234419 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.804383032 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.803841537 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.80624128 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.802780908 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.807139068 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.803402654 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.803679543 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.803777785 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.804126745 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.806656647 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.804108159 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.803986846 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.806144492 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.806129172 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.803800669 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.805544659 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.804349938 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.806521254 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.8066426 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.80381126 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.807544963 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.805953055 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.80484383 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.80727047 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.806982436 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.806482169 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.804579844 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.807954796 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.805199994 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.804611556 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.804793019 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.805564554 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.808515094 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.80732731 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.804704756 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.807416003 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.808059249 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.80807391 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.809087699 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.806395003 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.805925912 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.808051666 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.806025371 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.806067092 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.807961937 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.805034379 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.805743543 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.809526435 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.80650054 seconds)
  done (took 120.894782593 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.80574588 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.805623522 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.804760262 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.806918497 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.806485219 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.806248125 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.805686409 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.806442825 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.805550185 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.806640645 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.809190442 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.805898327 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.807148035 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.806155229 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.805910974 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.806729991 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.807080482 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.806749016 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.806976383 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.808997555 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.807407465 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.808092527 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.805929402 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.807049854 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.808239895 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.810406586 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.806753632 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.80667495 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.807503481 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.807120138 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.807408354 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.807186306 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.80663135 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.806816787 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.807394068 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.806887614 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.807039441 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.807085663 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.808095557 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.81100105 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.807255705 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.80988914 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.8077517 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.807496525 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.809223953 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.807439809 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.808009884 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.808012261 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.808731156 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.808531641 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.808585909 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.808811816 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.808422832 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.808398947 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.80798054 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.8085091 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.808066392 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.809877315 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.809636282 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.812075903 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.809264099 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.808322628 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.812325922 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.810306932 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.809433365 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.809235718 seconds)
  done (took 121.054325301 seconds)
done (took 2465.724669879 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.87548327 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.806496375 seconds)
  done (took 15.423894803 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.972939156 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.925018192 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.810375683 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.81332609 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.808368901 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.82891429 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.809966813 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.809826693 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.810566394 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.809878754 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.808879983 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.001049588 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.810659538 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.810088879 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.810219965 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.904063863 seconds)
  done (took 51.295404369 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.814132706 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.814309402 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.823951569 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.813908268 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.811671539 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.823145658 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.845954042 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.815165379 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.848441397 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.827286971 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.880830085 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.826220507 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.812538419 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.862589734 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.827202542 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.827564496 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.902228958 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.888967946 seconds)
  done (took 34.808859746 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.888860813 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.823390787 seconds)
  done (took 10.460320634 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.809027736 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.836370233 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.815455695 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.828874825 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.810996495 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.846150138 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.827425495 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.830657515 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.820248491 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.822605933 seconds)
  done (took 70.011701655 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.819305022 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.815948604 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.814701054 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.811783705 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.807241046 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.809964525 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.814626154 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.811598959 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.492446486 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.850153838 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.821784283 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.818520829 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.814543588 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.815027287 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.812302623 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.83543806 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.945107156 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.811316013 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.811144874 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.819409214 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.814094228 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.865759509 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.827719483 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.814141035 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.843197635 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.498488323 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.824467743 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.819149252 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.934091548 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.811025886 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.812996527 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.814383126 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.815351072 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.188479573 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.108474277 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.816210735 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.823404212 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.823130614 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.811299243 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.937425352 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.815789261 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.819718106 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.808031405 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.093739311 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.919479734 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.859349059 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.227613227 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.82210123 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.817154754 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.845487931 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.818366601 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.81567663 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.829091075 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.329766196 seconds)
  done (took 129.723531525 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.810247626 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.115625236 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.964545375 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.808200676 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.085575972 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.019169066 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.812958457 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.8585272 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.81355619 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.016311118 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.976088111 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.921172326 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.814676762 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.809178723 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.811414256 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.809177451 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.970858272 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.88173903 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.81525813 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.810404845 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.841945834 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.022045287 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.941602273 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.814478344 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.832557532 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.022582232 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.937234644 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.923266402 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.107143895 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.808280118 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.876891391 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.814182823 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.810337275 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.810911352 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.966658503 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.912442333 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.904429414 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.816089857 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.809281414 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.809419802 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.472914352 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.008881915 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.913260317 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.957684317 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.011492626 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.020669511 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.459129655 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.810950437 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.456527869 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.975693032 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.02736453 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.026427018 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.936792928 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.815834565 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.052108254 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.81035844 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.810808347 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.050312865 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.9582798 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.921775698 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.81648966 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.811809895 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.811606018 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.057813843 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.8141859 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.911681152 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.816156215 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.81479339 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.915780825 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.924162577 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.954785489 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.028981505 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.848357458 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.713194791 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.319487987 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.029459145 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.882144751 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.053303908 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.817588921 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.81236576 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.898828782 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.567753629 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.972565253 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.06683446 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.036944058 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.850051515 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.423933808 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.812859134 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.009785269 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.002713796 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.009009336 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.022880989 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.967062244 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.019303236 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.815702595 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.815667263 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.019917066 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.952414593 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.81729499 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.171006293 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.049554671 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.438874108 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.837749502 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.109510079 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.947422427 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.245334972 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.440967091 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.813121889 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.982884364 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.854607022 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.817708951 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.818089645 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.008452903 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.624096194 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.814012603 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.352479182 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.880287231 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.820075131 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.021235144 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.818100865 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.025195445 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.816473774 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.05211239 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.886053021 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.850901863 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.990920939 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.022872214 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.606278626 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.06883225 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.062811671 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.937833004 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.038680688 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.417525363 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.819362861 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.092496295 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.819644583 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.81702945 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.986622776 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.816337618 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.966027491 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.818747316 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.045799803 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.845006401 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.972211717 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.819731 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.053326805 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.853006948 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.86968597 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.821047041 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.949686202 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.821200611 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.708469727 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.971837321 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.819728292 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.81723001 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.269244204 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.81579289 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.966216351 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.053459175 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.843706612 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.88873614 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.343490847 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.818313068 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.903883669 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.846520721 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.227959612 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.817894281 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.977290587 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.785087979 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.259583449 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.819081317 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.060487762 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.004878604 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.820843402 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.81894898 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.561063229 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.525959117 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.817661422 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.980711067 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.493651176 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.467245033 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.024361164 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.822805384 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.947397052 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.823729466 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.896478996 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.167786711 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.818095149 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.819293256 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.817641397 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.820301969 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.818507772 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.031719924 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.853021888 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.32100455 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.958641296 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.039430733 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.134458823 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.043497104 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.86832014 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.828101291 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.083271878 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.824630977 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.887364278 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.824278709 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.844981914 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.054204 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.827617939 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.052168507 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.076849118 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.725454756 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.872808082 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.824355236 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.822885813 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.819297903 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.967747312 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.919154769 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.824215429 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.820167815 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.93265894 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.949564598 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.01218591 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.409314263 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.995899547 seconds)
  done (took 885.758968747 seconds)
done (took 1199.225936298 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.822955249 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.822654351 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.810949729 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.81915105 seconds)
  done (took 29.031558355 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.826766533 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.824068812 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.825503162 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.823915802 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.826768248 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.823348557 seconds)
  done (took 12.705639673 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.876055468 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.819221926 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.819715667 seconds)
  done (took 21.268646357 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.892561075 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.23098764 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.930790481 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.267614707 seconds)
  done (took 10.077023001 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.825530293 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.825070066 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.825878273 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.826977241 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.826692793 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.828013644 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.826313357 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.82758944 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.828668342 seconds)
  done (took 18.196486221 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.18417963 seconds)
done (took 97.220650248 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.825389344 seconds)
    (2/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.819796607 seconds)
    (3/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.490131955 seconds)
    (4/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.932874924 seconds)
    (5/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.306442725 seconds)
    (6/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.188263027 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.952881105 seconds)
    (8/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.020800442 seconds)
    (9/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.118558233 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.789214297 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.872151747 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.839359442 seconds)
    (13/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.804022988 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.848671895 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.116941368 seconds)
    (16/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.142241979 seconds)
    (17/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.024379537 seconds)
    (18/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.830930576 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.050696318 seconds)
    (20/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.336149244 seconds)
    (21/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.911376159 seconds)
    (22/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.941232391 seconds)
    (23/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.307160314 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.909476838 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.902258211 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.893189532 seconds)
    (27/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.921967209 seconds)
    (28/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.020189474 seconds)
    (29/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.160119337 seconds)
    (30/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.88475957 seconds)
    (31/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.821432901 seconds)
    (32/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.823105347 seconds)
    (33/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.247162543 seconds)
    (34/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.002284415 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.953683246 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.11881402 seconds)
    (37/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.824199291 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.150051559 seconds)
    (39/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.836091223 seconds)
    (40/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.883719629 seconds)
    (41/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.906177882 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.479292532 seconds)
    (43/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.920049407 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.917220479 seconds)
    (45/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.870742728 seconds)
    (46/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.846870648 seconds)
    (47/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.001887048 seconds)
    (48/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.02151187 seconds)
    (49/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.046736336 seconds)
    (50/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.989333456 seconds)
    (51/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.93394514 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.935214972 seconds)
    (53/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.191678424 seconds)
    (54/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.990947788 seconds)
    (55/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.756204526 seconds)
    (56/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.965552555 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.082452637 seconds)
    (58/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.446996823 seconds)
    (59/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.123774315 seconds)
    (60/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.105241547 seconds)
    (61/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.807833028 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.432435395 seconds)
    (63/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.879430151 seconds)
    (64/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.116374052 seconds)
    (65/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.825263841 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.119111773 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.198723556 seconds)
    (68/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.845329516 seconds)
    (69/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.823251758 seconds)
    (70/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.408699955 seconds)
    (71/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.920644595 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.211375817 seconds)
    (73/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.159871006 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.735141164 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.619823223 seconds)
    (76/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.440425957 seconds)
    (77/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.012522247 seconds)
    (78/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.891426147 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.149004358 seconds)
    (80/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.170630526 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.928499521 seconds)
    (82/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.414545075 seconds)
    (83/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.251135178 seconds)
    (84/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.828585421 seconds)
    (85/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.881092818 seconds)
    (86/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 3.60149255 seconds)
    (87/309) benchmarking ("sort", Int64, false)...
    done (took 5.522737741 seconds)
    (88/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.093028855 seconds)
    (89/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.991396656 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.795570453 seconds)
    (91/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.979319999 seconds)
    (92/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.20205926 seconds)
    (93/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.892023701 seconds)
    (94/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.850215034 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.919224759 seconds)
    (96/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.908240686 seconds)
    (97/309) benchmarking ("sort", Float64, false)...
    done (took 5.637277644 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.939688267 seconds)
    (99/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.83501029 seconds)
    (100/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.851831183 seconds)
    (101/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.002956378 seconds)
    (102/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.855580484 seconds)
    (103/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.21594641 seconds)
    (104/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.077536064 seconds)
    (105/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.262170172 seconds)
    (106/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.827355672 seconds)
    (107/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.921654153 seconds)
    (108/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.224251004 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.824661171 seconds)
    (110/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.878184462 seconds)
    (111/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.963935592 seconds)
    (112/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.46172709 seconds)
    (113/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.844207452 seconds)
    (114/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.304933764 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.213055711 seconds)
    (116/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.833067785 seconds)
    (117/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.993686232 seconds)
    (118/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.01229574 seconds)
    (119/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.065193141 seconds)
    (120/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.911545576 seconds)
    (121/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.968630556 seconds)
    (122/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.82783263 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.918886621 seconds)
    (124/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.860311643 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.726910978 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.0767627 seconds)
    (127/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.9894413 seconds)
    (128/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.926935074 seconds)
    (129/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.418538562 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.726052362 seconds)
    (131/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.835680814 seconds)
    (132/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.282479153 seconds)
    (133/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.031928772 seconds)
    (134/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.891422963 seconds)
    (135/309) benchmarking ("sort", Bool, false)...
    done (took 2.280118075 seconds)
    (136/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.856621311 seconds)
    (137/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.106246472 seconds)
    (138/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.130763816 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.590190538 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.132278983 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.096844963 seconds)
    (142/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.855664281 seconds)
    (143/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.430074488 seconds)
    (144/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.816114876 seconds)
    (145/309) benchmarking ("map", identity, Int64, true)...
    done (took 4.197363673 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.882517312 seconds)
    (147/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.021566744 seconds)
    (148/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.102216607 seconds)
    (149/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.817785121 seconds)
    (150/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.313743528 seconds)
    (151/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.324592351 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.820874267 seconds)
    (153/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.024620956 seconds)
    (154/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.015403804 seconds)
    (155/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.863574199 seconds)
    (156/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.05061026 seconds)
    (157/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.047599786 seconds)
    (158/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.353248487 seconds)
    (159/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.887105852 seconds)
    (160/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.05466652 seconds)
    (161/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.860489298 seconds)
    (162/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.857063671 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.738015958 seconds)
    (164/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.208280537 seconds)
    (165/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.181151654 seconds)
    (166/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.437264867 seconds)
    (167/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.975771533 seconds)
    (168/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.857564306 seconds)
    (169/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.431435486 seconds)
    (170/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.832982078 seconds)
    (171/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.335918352 seconds)
    (172/309) benchmarking ("sort", Float32, false)...
    done (took 5.598439606 seconds)
    (173/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.767980712 seconds)
    (174/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.524359115 seconds)
    (175/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.86126065 seconds)
    (176/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.315306182 seconds)
    (177/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.155268338 seconds)
    (178/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.961655081 seconds)
    (179/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.918274333 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.220754641 seconds)
    (181/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.835061819 seconds)
    (182/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 8.428759228 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.170109434 seconds)
    (184/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.819995795 seconds)
    (185/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.373018327 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.909084591 seconds)
    (187/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.717720456 seconds)
    (188/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.852741535 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.948656308 seconds)
    (190/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.958578231 seconds)
    (191/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.876066013 seconds)
    (192/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.060206393 seconds)
    (193/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.838637135 seconds)
    (194/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.867184606 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.264212448 seconds)
    (196/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.921200526 seconds)
    (197/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.993461525 seconds)
    (198/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.178360191 seconds)
    (199/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.836621022 seconds)
    (200/309) benchmarking ("sort", BigInt, false)...
    done (took 6.835878126 seconds)
    (201/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.682286426 seconds)
    (202/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.842219771 seconds)
    (203/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.017253124 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.895671986 seconds)
    (205/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.119958657 seconds)
    (206/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.142658272 seconds)
    (207/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.821203663 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.500722203 seconds)
    (209/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.912533691 seconds)
    (210/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.836127513 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.546484911 seconds)
    (212/309) benchmarking ("sort", Int8, false)...
    done (took 4.804484872 seconds)
    (213/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.854819971 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.859726765 seconds)
    (215/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.121453913 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.465907601 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.080749712 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.990620551 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.052052201 seconds)
    (220/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.515272779 seconds)
    (221/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.959884326 seconds)
    (222/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.180412706 seconds)
    (223/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.824476253 seconds)
    (224/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.135751213 seconds)
    (225/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.826584357 seconds)
    (226/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.285138067 seconds)
    (227/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.940142553 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.858289771 seconds)
    (229/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.347679579 seconds)
    (230/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.815446632 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.967888423 seconds)
    (232/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.960801899 seconds)
    (233/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.147897119 seconds)
    (234/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.047303518 seconds)
    (235/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.267618089 seconds)
    (236/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.246110376 seconds)
    (237/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.942977074 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.731985098 seconds)
    (239/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.938318185 seconds)
    (240/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.975198877 seconds)
    (241/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.868409007 seconds)
    (242/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.844926081 seconds)
    (243/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.917698695 seconds)
    (244/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.821810435 seconds)
    (245/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.011196657 seconds)
    (246/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.350229063 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.644682844 seconds)
    (248/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.841502247 seconds)
    (249/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.924586 seconds)
    (250/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.0043356 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.217606901 seconds)
    (252/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.975260058 seconds)
    (253/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.411115641 seconds)
    (254/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.227512305 seconds)
    (255/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.840020199 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.103602836 seconds)
    (257/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.840767887 seconds)
    (258/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.499135203 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.139561101 seconds)
    (260/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.986595041 seconds)
    (261/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.933663317 seconds)
    (262/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.970851999 seconds)
    (263/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.55270196 seconds)
    (264/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 2.015328336 seconds)
    (265/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.13719215 seconds)
    (266/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.925823465 seconds)
    (267/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.797529767 seconds)
    (268/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.9033235 seconds)
    (269/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.59509055 seconds)
    (270/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.792385824 seconds)
    (271/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.037754551 seconds)
    (272/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.868540834 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.528679708 seconds)
    (274/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.79194146 seconds)
    (275/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.232059529 seconds)
    (276/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.3782046 seconds)
    (277/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.945243984 seconds)
    (278/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.035771977 seconds)
    (279/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.8662345 seconds)
    (280/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.444710934 seconds)
    (281/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.916939481 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.833278764 seconds)
    (283/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.30920451 seconds)
    (284/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.061824119 seconds)
    (285/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.210906138 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.052428904 seconds)
    (287/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.855160191 seconds)
    (288/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.011393135 seconds)
    (289/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.828962418 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 3.7888647 seconds)
    (291/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.924123057 seconds)
    (292/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.259041868 seconds)
    (293/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.469084513 seconds)
    (294/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.07297309 seconds)
    (295/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.948246983 seconds)
    (296/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.848993621 seconds)
    (297/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.619519305 seconds)
    (298/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.824283732 seconds)
    (299/309) benchmarking ("map", identity, Int64, false)...
    done (took 3.937492666 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.886598218 seconds)
    (301/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.967158546 seconds)
    (302/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.72355921 seconds)
    (303/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.838233577 seconds)
    (304/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 8.410564473 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.888492727 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.484952751 seconds)
    (307/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.913234852 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.886147301 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.82640571 seconds)
  done (took 1005.487199055 seconds)
done (took 1007.31100831 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.873278226 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.869290544 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.8516809 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.873103577 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.966047349 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.89049212 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.863195661 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.855139292 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.901353609 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.901954245 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.853072319 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.887352367 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.854289126 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.853641839 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.852485138 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.867207822 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.16025744 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.878434021 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.869730763 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.863147972 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.869600597 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.851940587 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.901761167 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.886154312 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.85759306 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.85560375 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.855309218 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.872262297 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.965424131 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.857157301 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.85590403 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.864187639 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.160714976 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.877249548 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.84815236 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.87513102 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.867520185 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.864262835 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.855972054 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.886333737 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.295088471 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.859083965 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.856988697 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.854962185 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.852667598 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.858072213 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.855788167 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.86090815 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.867548863 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.869263719 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.296097268 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.874032558 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.857033703 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.856043601 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.864920695 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.85532623 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.858653536 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.872718078 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.873713843 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.871746172 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.151213701 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.884586002 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.857075278 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.872857425 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.862757079 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.332159163 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.857267986 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.859615382 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.295924982 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.86555572 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.33294177 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.86912497 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.857281373 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.868703241 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.888351664 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.160688795 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.875962173 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.855483028 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.865808459 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.854297402 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.866530882 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.868707974 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.86091755 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.856710906 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.870121734 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.893264469 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.867343213 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.859137574 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.865605773 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.876719299 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.864617909 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.869555237 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.860281084 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.853189504 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.867755869 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.859884635 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.859639115 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.860314828 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.860538775 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.866558527 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.29560939 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.879189219 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.854018586 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.853064134 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.85642025 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.87108924 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.29864865 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.865558643 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.880459525 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.905511264 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.8600669 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.153632718 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.886844485 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.874592271 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.872770474 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.861418724 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.852903451 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.154123509 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.323125901 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.877893783 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.859928945 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.857843955 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.874718521 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.861313 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.855071394 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.164201858 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.883194978 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.871445721 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.97905712 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.869069052 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.890928157 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.859137959 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.863240893 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.893834513 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.874384102 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.892420053 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.862187815 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.875976033 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.876005199 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.855471856 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.870868222 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.869637263 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.860607364 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.865264818 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.854122893 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.89459966 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.873405039 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.871386495 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.881110264 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.981349232 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.85831384 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.155118947 seconds)
done (took 291.966121215 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.927544572 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.857009198 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.957558561 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.856698355 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.940294933 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.942746009 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.854075855 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.854303804 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.853557653 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.23590263 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.853615257 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.854650525 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.849296567 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.853821523 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.937610126 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.857443245 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.853637435 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.199391771 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.858395619 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.928586846 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.856762488 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.85397738 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.857200017 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.23729517 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.849954766 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.856340586 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.928569999 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.855814495 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.201781313 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.855513166 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.851446661 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.20254864 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.947994532 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.874827361 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.867843728 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.864907752 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.943203849 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.861193471 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.938338208 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.937774725 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.958367618 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.896674356 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.851769735 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.852284204 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.861108702 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.859359268 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.856553802 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.887119405 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.85291847 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.857015526 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.200322966 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.869366495 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.856464436 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.855601726 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.856102683 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.889127176 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.857128247 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.860850056 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.947803182 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.859471188 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.922226852 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.237445202 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.238584959 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.859230491 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.860138267 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.856410407 seconds)
  done (took 183.513220047 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.92469525 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.931802574 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.928140371 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.862343006 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.909916621 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.931596893 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.864783598 seconds)
  done (took 15.138504485 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.865766407 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.859924613 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.909903671 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.910149022 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.85986545 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.010283665 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.859477533 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.870817065 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 2.296539387 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.913668869 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.860721306 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.861309587 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.866611893 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.856550424 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.908325927 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.872117673 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.975948578 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.862477831 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.862301451 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.010211032 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.859247792 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.868020425 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.914389367 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.873310503 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.860243287 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.867093757 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.442967872 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.861296766 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.85934497 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.859550299 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.859036891 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.905609195 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.860085559 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.857446636 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.859348951 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.975769573 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.861136313 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.859913079 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.861621234 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.857846781 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.861383588 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.862873648 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.861995903 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.857465232 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.860285648 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.886462417 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.860526474 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.862643617 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.864374817 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.860479394 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.912160599 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.861431832 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.858907184 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.862630565 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.917632321 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.871073682 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.863978818 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.859962909 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.863060284 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.860361843 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.012265413 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.910125242 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.863013684 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.909410848 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.862275216 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.864286822 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.863195569 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.863979122 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.91965845 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.863553959 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.912623484 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.861339121 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.021969472 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.886372402 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.863630555 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.86670313 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.864707673 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.862251978 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.864556485 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.870248283 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.86010999 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.86425819 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.867021222 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.86114107 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.862955874 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.977587298 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.973373965 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.861886916 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.878227672 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.87136037 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.862683295 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.916855914 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.864080959 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.861710109 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.916126926 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.978531507 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.920982493 seconds)
  done (took 205.480587788 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.868757834 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.873214418 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.866515369 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.879135654 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.865039716 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.864191866 seconds)
  done (took 13.008361271 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.867131281 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.865196281 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.86535791 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.86505337 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.86495916 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.86665705 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.865136907 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.867986432 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.870248387 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.864180286 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.867169435 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.865938775 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.867463165 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.867905899 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.866780213 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.865511615 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.868739593 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.864767753 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.863415356 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.866579734 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.019007715 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.865968135 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.868465599 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.867652781 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.87143642 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.864530308 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.875778722 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.868065735 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.866776691 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.873956596 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.868410156 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.868078066 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.866623626 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.872354434 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.871637355 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.868571097 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.87207278 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.869224698 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.864812729 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.867886091 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.866681242 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.867336053 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.867534772 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.867199407 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.870195283 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.872941151 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.871531268 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.87575105 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.868902861 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.869293532 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.868476166 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.867184568 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.868833022 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.868895083 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.870693274 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.873708322 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.873037325 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.869364828 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.870601078 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.869996178 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.869977522 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.868835536 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.870656608 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.873881721 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.865300848 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.869271922 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.870628906 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.872610851 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.869586907 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.867287992 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.870645864 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.865415139 seconds)
  done (took 137.485774824 seconds)
done (took 556.426777386 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.147905176 seconds)
  done (took 8.940889523 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.872062335 seconds)
  done (took 8.762439843 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.404713089 seconds)
  done (took 10.198813498 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.875074525 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.880642337 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.872151552 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.860315325 seconds)
  done (took 29.294777651 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.950666145 seconds)
  done (took 8.747536014 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.878633233 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.861422611 seconds)
  done (took 15.574624093 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.952505964 seconds)
  done (took 8.75070747 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.977260606 seconds)
  done (took 8.778017492 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.864498461 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.884261295 seconds)
  done (took 15.560174909 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.848176512 seconds)
  done (took 8.644671419 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.541924878 seconds)
  done (took 11.348900917 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.870129002 seconds)
  done (took 8.680889081 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.865895604 seconds)
  done (took 8.662130633 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.018269235 seconds)
  done (took 9.814927306 seconds)
done (took 163.555737738 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.865328523 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.862257931 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.864813639 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.866025242 seconds)
  done (took 29.253411811 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.905438225 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.904706913 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.905046298 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.91357332 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.905610601 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.903033644 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.898245754 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.899112108 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.914657536 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.906038023 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.905497112 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.907646704 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.904075285 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.896983584 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.904811798 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.905298494 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.914301383 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.905101099 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.896085868 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.906683409 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.874035282 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.914623857 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.906876808 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.871427119 seconds)
  done (took 47.468370466 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.070973473 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.942810669 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.02401921 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.922700468 seconds)
  done (took 9.756745304 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.924518847 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.926383183 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.934442706 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.977797012 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.002695162 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.932147239 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.898280395 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.892650642 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.879004685 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.926582063 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.000347677 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.939589123 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.006291652 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.872443042 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.059493594 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.87177118 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.87333971 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.922992579 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.975065937 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.988985011 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.871682834 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.924376096 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.927700845 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.940921217 seconds)
  done (took 48.265168111 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.870025318 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.879097481 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.875434063 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.872288374 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.870695475 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.872604759 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.878898979 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.873365546 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.893238279 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.874052427 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.871953751 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.872127766 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.872981794 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.871055438 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.870680903 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.885052392 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.884756725 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.870206442 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.87666796 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.880181208 seconds)
  done (took 39.314624122 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.865572896 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.722912316 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.21915431 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.122547686 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.865141783 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.867787722 seconds)
  done (took 31.463549009 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.886642056 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.879801498 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.871537329 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.929972354 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.010386031 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.880633992 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.87392653 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.883657916 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.919646015 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.938869797 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.893926264 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.900891481 seconds)
  done (took 24.671685285 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.88035079 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.869028444 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.869599102 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.884540433 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.885360185 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.882919634 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.881364024 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.867297439 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.884895596 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.894009502 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.88348767 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.885303635 seconds)
  done (took 44.373922837 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957091876 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.129591935 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.935506243 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.5603509 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.245950748 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.077863886 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.51823614 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.201896346 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.873606873 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.142590119 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.961444146 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.974619158 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.125407854 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.351586987 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.900910161 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.333818972 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.172187843 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.086315229 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.898780425 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.574975807 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937297707 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.034510998 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.638799154 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.930737095 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.081337829 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.002997462 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.13198841 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.869264134 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009127697 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.909653859 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882115629 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.870240497 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.145328196 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.252497202 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975508973 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882605811 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.485278727 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.588827646 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.862691906 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.642755855 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.628300054 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.00091532 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88077679 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.871206459 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.804656622 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.000503699 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.251800364 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.876999739 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.582251258 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.872116061 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.882329363 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966365161 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.872532789 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.686385619 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.82079657 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.872790385 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.86756708 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876955755 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.439717174 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.013541573 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.040696802 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.84481025 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.964252351 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.575791613 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.267278851 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.022794443 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.877196296 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.874555982 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.807211942 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.651292633 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.930667526 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.200803298 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.896168144 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.522706334 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.189721407 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.03528531 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.816047376 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.151907568 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.399598075 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.845964095 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.100620615 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.873863291 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.808924939 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.813738716 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.808349143 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.147978989 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914158707 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.638978386 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.916820194 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.201752242 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.884519757 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892004218 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898367553 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.098355059 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.759802551 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.874675666 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.69509929 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.026147903 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895738146 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.208395857 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.810893903 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.8777037 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.130705923 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.086335004 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.915623783 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.378386922 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.037492278 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.423603167 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.926120023 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.993331316 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.922811792 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.148587918 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.936905659 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.007025119 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932172145 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.875243701 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.180525065 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.461905246 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.012300829 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.939268943 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.003223616 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.202420096 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.905461587 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958444123 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.878908552 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.876138279 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.674940133 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.433429732 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.877637344 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.877432535 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.916775242 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.922355123 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.875694275 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.826406751 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.505761593 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.925807563 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.892849772 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.100660241 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.430056811 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.188891084 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.809977653 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.226454655 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.967741386 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.09856036 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.52512622 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.955224246 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.138695158 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.919131881 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.951483276 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.925015745 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895733435 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97653261 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899536132 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 4.993444241 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.171023641 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.882673734 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.879839593 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.676235263 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.91592628 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.8840288 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.881890652 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.630969047 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.157847137 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.903286659 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.885874256 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.76656317 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.890721776 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941618615 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.882179501 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.887346977 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.419730811 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.588855244 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.886680653 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.468865057 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.104769198 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.889130757 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.624157081 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.998096733 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.961386901 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.156703833 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.941162201 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.813837691 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.58866887 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.572376896 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.878642866 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.814373191 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.880338313 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887695266 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.891228093 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.07589598 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.158177226 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.926374728 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.584515033 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.922457795 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.889471129 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.884443386 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.880467246 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.392219814 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.018174189 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.041576943 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.925794555 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023834292 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.894817685 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.814507352 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.883765881 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.883983707 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.879813972 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.881482418 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913544661 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.589782437 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.262557549 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.142698284 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.491821386 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.897070326 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.646311169 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.941419595 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.880933929 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.726587719 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.027577862 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.920807552 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896589623 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.892210902 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.655284862 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.590290311 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.447485046 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.203885349 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.198987416 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.333803517 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.073668345 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.909561393 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.224192432 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.816809046 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.43944296 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.94398054 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.222100649 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.827242235 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.967698154 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.532693546 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.227884316 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.898335286 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.111268021 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.289631771 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.647162913 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.051345216 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.094285464 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917397679 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.015502613 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.844198059 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.180592189 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.023603004 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.610558376 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.092064022 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.214767672 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.612926417 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.012276785 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.880741612 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.572337872 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.974630058 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.593457579 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.057575941 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.040512426 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.886247906 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357380923 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.891754433 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.109013745 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.237707591 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.008769324 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.006225424 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.819141756 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.895180184 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.897107852 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.886135288 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.885241445 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.752419535 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.140431886 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.896325805 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.821297936 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.960793212 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.181132928 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.794019171 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.888795027 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.883901538 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.192552067 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.407997854 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.054360814 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.965213705 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.407536899 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.894087429 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.820746298 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.820628474 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.57706795 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.893611251 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.860597068 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.10162753 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.990299541 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.842420297 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.928530749 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.967157475 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.142954066 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.901619509 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.160851214 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.163382892 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.587669379 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908965688 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.989056585 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.580125851 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.998369529 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.887059612 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.121509016 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.637927859 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.112294766 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.922631795 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.844713836 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.886026407 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.101070118 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.88697222 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.855659586 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.123284998 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.611675814 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.913541315 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.206941328 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.965402563 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.809985506 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.937515438 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.978491013 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.897102206 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966732381 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.897139304 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.899182901 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.899582849 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934376473 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.833761628 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.017134054 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.901286353 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982033301 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.024581257 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.416679799 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.895732388 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.165062938 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.255225411 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.217827865 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.95031353 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.890052859 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.889710721 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.822680648 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.036474426 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.113574263 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.162548627 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.018363507 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.003703465 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912194958 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.593269293 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.068229906 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.130972664 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.165639273 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.786124207 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.372090909 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.930791796 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.8912308 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.900270609 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.102762052 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.109179872 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.20239797 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.039349914 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.934371373 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.25696448 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.163985107 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.891500549 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.891285687 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.479339187 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.923487149 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.592679835 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.936453901 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.854837961 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.171395959 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.900638182 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.277011266 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.914326386 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.050562157 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.665322333 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.597259369 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.184702966 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.880124395 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.955275428 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.17135197 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.29014133 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.20408447 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958420555 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.901798417 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.003078611 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.03808418 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.759386757 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.894336641 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.890527107 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.938252798 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.600895439 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.901782767 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.169987891 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.20609591 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.888123753 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.760236926 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916335404 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.901415907 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.115014466 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.16590649 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.14574575 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.900371038 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.898524064 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.708147826 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.172286903 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.957180977 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.826455577 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.896255416 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992305186 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.14166354 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.913924923 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.345462733 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.603955876 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.168622593 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.895204197 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914329597 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.024338133 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.26736312 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.223461115 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.437445853 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.109027081 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.48529842 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.460818356 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.196261489 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.898818866 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.019258036 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.197189639 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.896796178 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.943584816 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.933060615 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.167550677 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.209340167 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.906061482 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.601184764 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.867009817 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.236106224 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.456202498 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.834355026 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.904063663 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.955867835 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.895827145 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.025179137 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.906048628 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.770481178 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.027737919 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.655084649 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.16793521 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.899400479 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.884382886 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.648712787 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.156914825 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928562252 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.036097959 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.902756397 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.566080632 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.244687958 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.152606916 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.942219877 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.903528115 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.900316306 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.895999646 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.883601815 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.090867885 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.093347852 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.177669026 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.968630663 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.934377799 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.899720196 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.112614448 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.109490643 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.822997532 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.040714132 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.942029457 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.938364677 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.809123184 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.397995648 seconds)
  done (took 1681.217068852 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.977800905 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.91618179 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.964572436 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.929082353 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.007382463 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.0023602 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.076496388 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.95555861 seconds)
  done (took 57.660156885 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.89747066 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.092853112 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.909061861 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.899567996 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.906771303 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.89965436 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.064579078 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.909946611 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.906745706 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.906784675 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.899486133 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.898214434 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.213877876 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.92113659 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.898309554 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.884079 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.905844155 seconds)
  done (took 74.86737737 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.932353217 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.971274 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.936356126 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.914821014 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.86280258 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.910039198 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.707491971 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.927724805 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.899481961 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.130029942 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.532979015 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.916541644 seconds)
  done (took 90.473994081 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.908986308 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.906694071 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.905564711 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.906337807 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.905578624 seconds)
  done (took 11.370942417 seconds)
done (took 2191.982367406 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.151873754 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.119442071 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.126924788 seconds)
  done (took 6.078652092 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.04821987 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.094678044 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.215219857 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.236138274 seconds)
  done (took 10.428705516 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.182963158 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.271975501 seconds)
  done (took 6.285520193 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.299655725 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.916179069 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.278903117 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.899302599 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.89928752 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.901071018 seconds)
  done (took 22.536835965 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.903141057 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.905548789 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.902399093 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.905547524 seconds)
  done (took 9.449321519 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.883233261 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.601965356 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.887020618 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.902509035 seconds)
  done (took 21.106146138 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.650152605 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.66119642 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.646712988 seconds)
  done (took 9.789257393 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.365663721 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.128851065 seconds)
  done (took 9.326403518 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.170665501 seconds)
  done (took 4.004364625 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.03596328 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.217741813 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.43961572 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.464889466 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.559167904 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.890508116 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.278585942 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.163988303 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.310280821 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.376523394 seconds)
  done (took 25.572106334 seconds)
done (took 140.056127863 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.443874297 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.913877593 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.108183195 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.271318443 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.136674827 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.107390174 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.117101782 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.276090978 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.791255081 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.763294852 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.258527889 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.137261693 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.065603704 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.900698126 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.067185279 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.152365677 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.136543471 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.332923631 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.969106572 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.175182779 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.124961276 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.896785774 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.106419867 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.934074206 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.137360061 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.059033488 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.478537639 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.90427937 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.11188753 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.491285292 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.061662033 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.313732122 seconds)
  done (took 170.580579095 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.688065607 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.905928929 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.904748123 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.906213522 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.515945871 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.90454435 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.906794307 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.903454296 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.195601724 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.177154531 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.904671214 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.503344272 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.906151893 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.905667774 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.905374623 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.905096014 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.290238087 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.724912679 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.905439318 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.906132888 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.906370164 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.411089557 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.905126709 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.435513262 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.263224561 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.912224789 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.905494285 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.915577093 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.912013348 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.914190522 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.916310003 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.906422296 seconds)
  done (took 210.009509505 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.906234909 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.907789017 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.90666282 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.907566424 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.907512748 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.913703069 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.907768011 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.905859517 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.498659672 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.484570872 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.914488021 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.913254196 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.912106613 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.90611113 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.913967778 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.907179705 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.915159184 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.914355485 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.91535002 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.915458298 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.917559683 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.735041509 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.918701212 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.738400615 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.914223003 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.913117623 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.908178955 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.91390255 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.915638846 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.917764339 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.917541969 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.907360471 seconds)
  done (took 221.845044047 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.110108061 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.914120851 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.915873249 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.864473545 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.914641302 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.914299255 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.907912736 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.110904944 seconds)
  done (took 19.506877172 seconds)
done (took 623.794147726 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.349605517 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.199013839 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.092100741 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.934989915 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.176630549 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.975063449 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.934043426 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.999175883 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.665508463 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.008608362 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.622449516 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.954689978 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.712849845 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.961438727 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.064795562 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.99026039 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.467259247 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.560606444 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.124330266 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.999215904 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.109218717 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.869375074 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.013782607 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.684006546 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.734206239 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.921809057 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.113712198 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.478952121 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.948525416 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.104460276 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.665511769 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.324515347 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.949213486 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.934754403 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.988812521 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.969480207 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.281766127 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.948103097 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.06032678 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.674851602 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.001124822 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.559704416 seconds)
  done (took 104.970496432 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.906011817 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.904599782 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.904338078 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.904717339 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.906291195 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.90423931 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.903625948 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.902996776 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.905140372 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.904136799 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.904262442 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.906236622 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.903678218 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.905922403 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.904725039 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.904970599 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.906192551 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.90679282 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.90449698 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.904601123 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.906003165 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.903890233 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.905562261 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.905093515 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.905313613 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.905457647 seconds)
  done (took 51.384468704 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.917413574 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.062529928 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.145878685 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.938933445 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.918171882 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.921799794 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.938602312 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.923674261 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.920317691 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.920139685 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.013050389 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.925066902 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.938549985 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.14229322 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.933934746 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.91894404 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.919473432 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.917612579 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.066326258 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.935448323 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.939416758 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.924014086 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.937987431 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.932800276 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.921134743 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.918362429 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.921797448 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.357332626 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.927614707 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.014140207 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.978857933 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.941483641 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.317745682 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.149287828 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.972433991 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.926869168 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.919269026 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.019180139 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.925644205 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.919753591 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.939425322 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.924229695 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.141930336 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.42415149 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.93442084 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.930177967 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.367231743 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.026797532 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.961440267 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.931559234 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.149090372 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.935912637 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.923009056 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.920223951 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.957555238 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.931642721 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.919332585 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.235327916 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.933338972 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.938430663 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.925901091 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.920842482 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.074460317 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.930150516 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.063394505 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.929541722 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.929047489 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.92090514 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.146088052 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.937655899 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.422852687 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.934445923 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.921564703 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.014897466 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.069151793 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.395492725 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.93366824 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.077286435 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.328568673 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.945855263 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.927507865 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.352830355 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.950318438 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.928944419 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.92286293 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.922635032 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.921476919 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.965634165 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.938259679 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.358251085 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.432802605 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.250625433 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.949462158 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.938386912 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.922544999 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.240942686 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.930352849 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.922511548 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.140095971 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.443215249 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.935895197 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.930311947 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.412417381 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.938048548 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.942689922 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.932113155 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.151095329 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.938408766 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.966303341 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.923797475 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.930902934 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.926757388 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.941385168 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.931089715 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.923016913 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.401100264 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.037344276 seconds)
  done (took 237.80058508 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.919744449 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.91844265 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.916624609 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.918046672 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.916668729 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.923414364 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.916845365 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.916314311 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.922127144 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.917136046 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.916910925 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.919941846 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.920691742 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.918274697 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.956902937 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.923825058 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.53175375 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.917985201 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.917370223 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.917627986 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.564443523 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.925428042 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.919582418 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.923082915 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.919394646 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.918249955 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.927053634 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.950336647 seconds)
  done (took 168.928238856 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.925392418 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.041286495 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.94359209 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.953094253 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.933313894 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.922729469 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.948225671 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.940470726 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.93228357 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.923223367 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.92404152 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.98706851 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.937318616 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.026109698 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.959569372 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.956708825 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.031006303 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.934453768 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.924091651 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.923764988 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.954863172 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.920729765 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.986969373 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.055391848 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.944721088 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.043546488 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.930540146 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.926605304 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.925826211 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.044013999 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.941639524 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.987901261 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.95531794 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.944477984 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.046985212 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.044360714 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.034642231 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.958177435 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.929649724 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.924579134 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.924937159 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.914679774 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.043070725 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.945742065 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.928936811 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.034733466 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.945874393 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.928248964 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.934811806 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.924710998 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.939672555 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.944996949 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.995357226 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.061328081 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.962834762 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.953054259 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.952524411 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.209463684 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.936675977 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.028845625 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.923655711 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.046667469 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.949188309 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.916281229 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.926697478 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.932570296 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.95600483 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.959082817 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.034347644 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.937277062 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.029218439 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.965067532 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.934068743 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.927872437 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.92966029 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.045424961 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.050455154 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.965692089 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.966821809 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.959552462 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.92465233 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.928263177 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.917335197 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.946623976 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.933002199 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.045857433 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.050776411 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.940115718 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.930929001 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.930094465 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.93135816 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.954384073 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.055913312 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.967430518 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.027686907 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.001218889 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.007216734 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.944007534 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.941620162 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.931862544 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.99463945 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.94493521 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.940193516 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.258710824 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.000267085 seconds)
  done (took 208.739355672 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.407190987 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.988433655 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.986760969 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.2070939 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.348034547 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.806125364 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.977221955 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.980762896 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.003400903 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.143267666 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.039609734 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.990515889 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.965118293 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.953343364 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.978112538 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.000115789 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.981791511 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.279193599 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.097818958 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.064350206 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.960287271 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.276942916 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.301917249 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.350523432 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.012592785 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.297934524 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.654668653 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.221031472 seconds)
  done (took 63.137983079 seconds)
done (took 836.800557193 seconds)
SAVING RESULT...
DONE!
