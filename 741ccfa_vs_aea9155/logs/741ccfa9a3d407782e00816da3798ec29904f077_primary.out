cset: moving following pidspec: 15086
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.267896785 seconds)
loading group "string"... done (took 0.515396939 seconds)
loading group "linalg"... done (took 8.627721443 seconds)
loading group "parallel"... done (took 0.17065474 seconds)
loading group "find"... done (took 2.46505575 seconds)
loading group "tuple"... done (took 1.913817102 seconds)
loading group "dates"... done (took 1.352009578 seconds)
loading group "micro"... done (took 0.979729036 seconds)
loading group "io"... done (took 0.463052581 seconds)
loading group "scalar"... done (took 47.087168563 seconds)
loading group "sparse"... done (took 13.370412488 seconds)
loading group "broadcast"... done (took 1.277772549 seconds)
loading group "union"... done (took 2.538114791 seconds)
loading group "simd"... done (took 3.030938844 seconds)
loading group "random"... done (took 11.698896328 seconds)
loading group "problem"... done (took 2.355610396 seconds)
loading group "array"... done (took 23.357360161 seconds)
loading group "misc"... done (took 1.048989333 seconds)
loading group "sort"... done (took 3.709925372 seconds)
loading group "collection"... done (took 17.697039603 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.751141621 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.156305908 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.235885007 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 1.212627208 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.293089141 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.202469187 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.195923183 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.158606175 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.75152556 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.227367776 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.188412283 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.397303504 seconds)
done (took 7.674331284 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.323011199 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.090265456 seconds)
    (2/2) benchmarking "String"...
    done (took 0.20625759 seconds)
  done (took 1.011117146 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.105025719 seconds)
    (2/2) benchmarking "String"...
    done (took 0.140213829 seconds)
  done (took 0.956705199 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.130350743 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.164073536 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.140675781 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.126713838 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.143083853 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.125172532 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.142765491 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.141695724 seconds)
  done (took 1.695589813 seconds)
done (took 4.828955741 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.515334542 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.942560555 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.523082227 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.197677231 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.337438602 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.304884024 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.305696937 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.248782339 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.145428254 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.097880414 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.215522364 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.453438355 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.44200004 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.949997338 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.094983826 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.149931008 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.181086838 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.805740003 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.118820708 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.153894036 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.625165387 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.23545137 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.154142792 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.149503713 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.222246939 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.164167434 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.168590984 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.144695607 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.751231306 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.171638078 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.24468812 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.120143998 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.167502876 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.206560033 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.272638469 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.14749262 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.793294678 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.240292176 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.124067692 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.139219872 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.752551437 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.161359727 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.230879645 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.143294047 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.112226445 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.185703969 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.140588582 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.11529869 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.160057437 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.137864124 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.218331585 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.549912771 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.146073226 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.219996334 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.147600369 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.789168267 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.134546443 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.310523925 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.16242599 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.146403021 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.130534661 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.125180168 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.219577454 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.13492745 seconds)
  done (took 22.73917055 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.198239758 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.211722378 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.133787143 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.179578909 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.177190905 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.133626865 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.124975463 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.133427654 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.147484748 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.226803614 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.17303878 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.220073275 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.114092835 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.126750095 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.172098063 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.283660019 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.140999995 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.15767165 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.143324916 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.138249187 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.17825033 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.130617474 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.147521886 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.130708288 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.205428793 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.245535709 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.159865334 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.161774302 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.141313774 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.13505307 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.18206621 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.198641234 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.114759566 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.141427038 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.20503825 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.161732888 seconds)
  done (took 6.731177847 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.253206819 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.140222152 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.264213222 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.220708113 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.225119342 seconds)
    (6/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.140142591 seconds)
    (7/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.185355239 seconds)
    (8/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.211240078 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.200909441 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.304603544 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.366611569 seconds)
    (12/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 0.238937727 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.200837935 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.16630235 seconds)
    (15/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.13456336 seconds)
    (16/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.130989797 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.118886832 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.114611643 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.858235229 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.207951281 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.195272288 seconds)
    (22/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.119071439 seconds)
    (23/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.205974909 seconds)
    (24/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.150964561 seconds)
    (25/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.135559989 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.122111958 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.139580441 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.131145688 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.164608413 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.687054774 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.255869308 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.13043432 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.505726757 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.138885473 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.133528422 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.168088727 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.240848436 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.155860072 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.174853171 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.130912754 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.139782936 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.246689164 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.137042876 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.133383103 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.115411858 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.170466443 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.168207561 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.143724559 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.143363537 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.172806683 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.139916587 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.144709421 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.906189534 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.228714527 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.171773267 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.139895705 seconds)
    (57/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.119144872 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.310458129 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.161612523 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.151519185 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.128358403 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.267463358 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.157507776 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.135192457 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.11548545 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.147538655 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.132753139 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.140315329 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.278131345 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.120090281 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.195095698 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.146656098 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.137974518 seconds)
    (74/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 0.744012285 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.142343715 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.124677188 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.15970506 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.122904885 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.133757733 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.121954596 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.135302265 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.125481451 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.135183329 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.123713372 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.135183545 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.185262831 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.148426065 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.143070269 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.163603215 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.144217644 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.124253709 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.167442917 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.136086147 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.126081483 seconds)
    (95/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.210654699 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.151167516 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.118985986 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.151300585 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.18410202 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.142864197 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.253163144 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.134877909 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.144861184 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.138762453 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.167739724 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.152347718 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.119497504 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.140850657 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.117490258 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.138026698 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.185727294 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.142195614 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.119566297 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.143005335 seconds)
  done (took 27.348100727 seconds)
done (took 57.527383261 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.391960143 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.108335769 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.105531127 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.12658488 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.107558742 seconds)
  done (took 1.631630787 seconds)
done (took 2.403678985 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.229479673 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 0.321428079 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 0.241212305 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 0.141142366 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.209137653 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.2105873 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.195376596 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.207467745 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.212130192 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 0.20491709 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 0.140807537 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 0.229923823 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 0.221932625 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 0.19459697 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 0.140912482 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 0.247491949 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 0.2031788 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.187241225 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 0.247301644 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.142850505 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.140159004 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.160891432 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.139730359 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.144637083 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.139866285 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.159683795 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.138835367 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.159334227 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.135539685 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.145211723 seconds)
  done (took 2.391100788 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 0.17025011 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.141565655 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.157473568 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.133171965 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.139025112 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.144670317 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.139071535 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.158363499 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.143675995 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.157690962 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.13565901 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.145399522 seconds)
  done (took 2.381716298 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 0.118271825 seconds)
done (took 9.849239951 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.088002891 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.994949925 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.190849969 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.2702908 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.367608926 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.294344898 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.625029374 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.233540014 seconds)
  done (took 14.981900644 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.160777572 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.202519307 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.13361778 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.158073332 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.13255734 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.158926581 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.133966985 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.152299432 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.133098989 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.155652422 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.139981002 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.150593307 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.137530463 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.150849969 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.137894928 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.150364262 seconds)
  done (took 3.224507715 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.160250349 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.177319675 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.139886107 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.16196635 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.137042647 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.157317949 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.140616931 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.160697476 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.135122049 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.156364705 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.141412183 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.159143896 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.139627944 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.155585369 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.139957465 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.164165562 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.135351375 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.159829786 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.141349887 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.161626512 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.160465998 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.140134855 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.156972974 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.141756442 seconds)
  done (took 4.475691868 seconds)
done (took 23.4676687 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.195275499 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.146218152 seconds)
  done (took 1.13418287 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.193279731 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.214493105 seconds)
  done (took 1.205957823 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.155160715 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.150237619 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.16363774 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.164280212 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.133663309 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.153646038 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.158719247 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.151928854 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.135013945 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.154181647 seconds)
  done (took 2.32250847 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.137374755 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.153938468 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.150046684 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.202226708 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.142160058 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.155476805 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.137154696 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.156553484 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.138203658 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.151815783 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.137466938 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.16906064 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.154761352 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.153559935 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.156346889 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.139853097 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.16072101 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.13769784 seconds)
  done (took 3.538599567 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.135560089 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.134223504 seconds)
  done (took 1.07564323 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.136521783 seconds)
    (2/7) benchmarking "second"...
    done (took 0.132875569 seconds)
    (3/7) benchmarking "month"...
    done (took 0.152796834 seconds)
    (4/7) benchmarking "year"...
    done (took 0.15058214 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.134251525 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.133665327 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.15176978 seconds)
  done (took 1.798812233 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.618615654 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.268620077 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.416676476 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.122925455 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.134961079 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.363611056 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.156467057 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.103864782 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.123824374 seconds)
  done (took 3.143448733 seconds)
done (took 15.017438848 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.134657663 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.219316255 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.723068305 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.155730392 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.151792042 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.197819219 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.341776817 seconds)
done (took 2.736078508 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.368780651 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.178804919 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.118877232 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.139158665 seconds)
  done (took 1.612851037 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.126887397 seconds)
    (2/2) benchmarking "read"...
    done (took 0.141952257 seconds)
  done (took 1.08502198 seconds)
done (took 3.515338648 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.155496392 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.15217138 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.136914556 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.157239608 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.136954916 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.154777811 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.136247319 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.153099111 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.136060923 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.151054415 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.135814607 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.155423065 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.134290436 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.155190878 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.133716985 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.155432367 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.135820618 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.152148277 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.133347222 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.154873491 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.136965595 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.151082609 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.136367562 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.153707137 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.135703012 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.15571667 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.132934592 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.15355771 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.135210294 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.1540732 seconds)
  done (took 5.171773136 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.160713916 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.12763617 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.152554972 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.142001563 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.146954573 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.131893433 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.149357477 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.133034249 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.152985709 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.13181465 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.153690459 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.132103513 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.271839199 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.134936335 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.152562205 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.157444126 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.161737583 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.133505312 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.150634652 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.135920358 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.134228524 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.153088088 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.132302671 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.15238862 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.132082511 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.149230895 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.13281439 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.151970908 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.133805781 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.151920024 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.136023708 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.153417258 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.134344767 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.161958994 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.136876759 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.152794214 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.139389761 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.148749471 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.134576804 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.12847383 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.149934008 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.133803024 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.152315114 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.138357024 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.152676447 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.133704554 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.152413236 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.134340063 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.153591027 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.135329487 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.149054561 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.133075951 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.154494403 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.134388787 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.15317368 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.132007918 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.133921102 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.149394838 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.133537886 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.152087974 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.130838952 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.149880832 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.137482184 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.154503408 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.14803587 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.159956303 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.134012987 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.154387889 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.136013801 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.158022025 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.13711461 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.162845765 seconds)
  done (took 11.309582452 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.135814244 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.133422385 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.153120591 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.133875013 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.152580743 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.134341441 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.153216639 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.134329386 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.153358056 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.134812349 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.152485045 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.135357087 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.150908477 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.135709018 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.132644576 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.151725234 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.134479453 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.152870913 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.133423288 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.152970819 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.133361356 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.152861751 seconds)
  done (took 3.96853115 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.279186344 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.139877235 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.202046452 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.146026236 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.170977339 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.165410068 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.138351687 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.158679825 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.138304611 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.160947384 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.143201423 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.159414894 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.151060732 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.162332323 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.161114569 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.147290267 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.157760571 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.145279043 seconds)
  done (took 3.761332613 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.13554353 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.131751815 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.154539431 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.133649815 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.152880554 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.133949175 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.154140511 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.134610698 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.153568188 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.134716819 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.154505626 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.135957227 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.154692011 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.13703413 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.133336382 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.155978772 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.134067151 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.153313079 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.134463161 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.154497206 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.133886259 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.153437793 seconds)
  done (took 3.992881447 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.149148826 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.156639707 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.155452116 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.158544766 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.13592952 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.154709033 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.142016505 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.154999661 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.143012629 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.156034104 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.136003455 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.154469262 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.151132742 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.154488017 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.142315466 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.154609938 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.138216421 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.15449836 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.13714385 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.136411932 seconds)
  done (took 3.806698347 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.225336661 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.172130407 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.171867085 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.161065023 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.172029338 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.153359323 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.179773348 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.151935112 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.173239322 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.162566417 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.172739291 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.17095866 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.160359297 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.175326334 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.151850603 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.179910675 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.159400947 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.180189406 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.172083407 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.153808828 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.182188279 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.152459146 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.18107467 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.152491314 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.173557768 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.152114194 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.170990003 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.175674801 seconds)
  done (took 5.585227435 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.148953893 seconds)
    (2/2) benchmarking "in"...
    done (took 0.164146607 seconds)
  done (took 1.157664911 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.139202202 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.136176855 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.157109372 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.136761971 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.15821906 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.136451663 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.158241949 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.137198949 seconds)
  done (took 2.004631635 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.195003237 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.218849437 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.161696078 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.145875694 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.218893848 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.211225384 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.214859295 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.143367831 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.154768715 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.12932905 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.212667632 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.129652619 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.157449647 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.133053353 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.157293923 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.140785617 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.157050769 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.14560687 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.163211058 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.138491592 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.162139664 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.140236426 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.157573723 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.144722937 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.15332624 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.139372303 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.160329925 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.147054928 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.154213447 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.139805744 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.155861221 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.137231648 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.161791213 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.141925875 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.158161261 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.221318293 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.1452952 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.154411013 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.139117096 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.164020669 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.168571523 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.158694919 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.140552846 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.156287667 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.139655962 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.163481029 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.141682245 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.157555056 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.138652641 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.152547272 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.139019004 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.151900093 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.137637384 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.157747127 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.139398368 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.162398339 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.140777466 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.153508515 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.135027382 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.152839647 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.136963858 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.153020204 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.139473414 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.160974667 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.13917483 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.157765613 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.136683584 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.157987437 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.139538142 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.158741887 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.137814806 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.194209345 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.139964074 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.162263954 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.142912555 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.158944069 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.134628101 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.163449101 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.137463913 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.157398305 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.142311581 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.184534304 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.139347892 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.153009069 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.1340355 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.164372241 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.140396534 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.159673087 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.131285069 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.16526742 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.141327075 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.159712985 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.131400532 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.156175091 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.135033674 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.160592354 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.132200643 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.157310483 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.139472085 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.142166458 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.165840567 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.1354982 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.160259035 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.162890464 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.145740686 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.137103355 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.203058204 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.15607326 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.135422401 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.159785061 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.145266261 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.152929798 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.138907008 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.156234339 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.135847312 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.154200144 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.143967774 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.157900792 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.141356513 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.161599751 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.141945584 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.160374731 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.140654753 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.157208861 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.135767175 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.163050421 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.148130242 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.158965862 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.142236093 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.138853899 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.160315705 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.137265559 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.162671818 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.135624534 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.165062089 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.135317878 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.160051614 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.140336548 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.164303748 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.13910952 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.156261538 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.137133847 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.160108911 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.13773407 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.163861121 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.138962996 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.155528906 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.132472367 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.159565352 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.135400504 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.160716892 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.147422903 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.155469213 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.142812015 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.156463804 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.147279718 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.156238516 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.144722999 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.162874006 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.144434337 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.167008399 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.132220908 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.157654383 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.142579437 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.162438657 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.135259986 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.16088419 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.1399792 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.177749598 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.133567791 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.163374501 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.132319898 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.156423338 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.144224969 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.162046463 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.145141821 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.154776167 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.177438702 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.171229413 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.145559634 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.158186886 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.138848457 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.165323988 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.138374409 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.164346685 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.14647562 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.164852328 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.137716979 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.158662312 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.146204529 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.156359107 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.142695839 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.158513712 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.141851881 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.151982935 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.143603898 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.15090883 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.146057946 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.160430731 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.146930915 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.145301706 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.164076841 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.137505039 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.170074548 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.136328952 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.163958958 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.132169379 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.166535394 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.149638701 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.167892245 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.146186223 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.162219023 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.136784424 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.162382163 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.147538661 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.164351154 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.139644693 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.162508561 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.134344147 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.155707061 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.145586178 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.165027075 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.136556077 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.162023593 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.14088127 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.162476613 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.136245835 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.154595797 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.144581197 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.163966583 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.136330584 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.160555277 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.137947499 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.159497113 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.146396541 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.154661211 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.137126228 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.163225726 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.145124907 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.161277411 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.141107248 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.163138938 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.14795873 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.163715958 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.144242728 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.158275667 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.149524252 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.159001248 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.142120653 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.156840616 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.144911977 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.133956548 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.16480091 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.140132436 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.160304013 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.137881443 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.164251193 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.145984628 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.167457784 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.138618854 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.165843438 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.145233419 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.16610604 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.138231874 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.167732963 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.13595321 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.155312736 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.13710475 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.154634235 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.143113392 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.156470529 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.145321374 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.160077812 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.139849982 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.165473562 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.142587101 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.158721751 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.145659374 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.17129651 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.135044265 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.155161755 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.138312423 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.161079279 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.138125462 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.158115172 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.142506249 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.16418256 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.144360471 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.16516424 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.136322283 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.162078557 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.145834257 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.158653496 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.147270778 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.168402377 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.146508216 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.16077012 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.145272162 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.159752499 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.144079801 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.155352139 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.139780314 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.161615068 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.140642278 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.159139659 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.139194421 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.158642371 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.135411686 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.158853359 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.147515257 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.16154614 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.146288324 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.161066297 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.139024554 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.158125651 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.13769238 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.168494927 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.14116993 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.169551398 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.143197961 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.155367835 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.135963636 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.165863158 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.142106183 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.16616013 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.137811544 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.143233925 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.169900751 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.144917911 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.162951411 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.150437105 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.171883813 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.146427972 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.167072964 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.13452078 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.161163944 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.144951583 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.163505495 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.144209497 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.166523046 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.135820765 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.166301323 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.147733142 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.165092898 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.140143786 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.157912235 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.142254211 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.16959045 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.145153029 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.165356487 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.144959597 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.164555977 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.137797785 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.169202212 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.148110217 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.1633147 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.151087707 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.16231791 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.146822163 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.159770538 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.148504821 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.163665249 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.138232196 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.154301758 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.140358926 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.168490305 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.138007801 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.146752192 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.168482326 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.138870553 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.16181611 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.146549062 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.160341276 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.144117606 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.169808639 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.140358448 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.174057811 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.143240827 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.161619183 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.146852002 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.170123878 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.136303241 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.163091247 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.141642894 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.171571522 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.141166298 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.169077819 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.142560554 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.171128818 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.145792082 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.168547423 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.148540085 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.169691251 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.136559156 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.170359906 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.1464694 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.165722945 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.140687644 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.163469877 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.138981882 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.162333271 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.149462525 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.16075981 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.15101453 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.167932072 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.14034638 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.162121819 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.148830864 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.162864001 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.150529156 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.160871304 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.145446871 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.157179519 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.144811197 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.162858868 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.149723109 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.16045685 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.138459758 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.167017189 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.148407009 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.16668107 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.148209379 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.169217447 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.139498564 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.136129891 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.167109551 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.140149274 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.174435862 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.144947703 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.163083418 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.141094896 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.167454204 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.14448575 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.171649266 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.137158178 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.162458988 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.143302617 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.16739977 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.14200443 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.16053627 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.147790511 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.165295589 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.145216086 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.165690358 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.13786633 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.164228846 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.149892785 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.164325166 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.139885577 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.162041864 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.151808146 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.164806762 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.140908092 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.159428213 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.148366048 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.168072789 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.149439773 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.162207314 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.142967801 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.162540031 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.145950566 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.172952645 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.14247721 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.166838274 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.142268508 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.171933573 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.148287002 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.15768631 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.141107634 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.17558434 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.148642088 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.166372959 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.145562339 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.164039242 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.151863371 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.172697926 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.146262593 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.160080552 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.139284976 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.164926128 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.138933325 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.16743301 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.149053835 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.164836638 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.142639557 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.168813324 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.148600748 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.168252484 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.148696618 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.138052792 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.172515498 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.14061688 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.168221307 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.138378233 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.16048147 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.147486795 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.173078373 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.143232262 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.167587921 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.146103787 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.169543119 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.140032842 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.165799653 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.148033762 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.17101299 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.14963048 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.16623253 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.142697734 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.169565722 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.154509664 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.168134964 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.143958378 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.173340755 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.151936203 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.166195023 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.145783012 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.171280039 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.152104856 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.170728193 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.152348309 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.164524963 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.143831806 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.174795106 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.152045526 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.177093048 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.143776119 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.161822908 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.14917092 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.164677865 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.13950036 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.169061959 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.153070978 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.173236436 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.145155657 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.163820877 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.155136134 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.171126711 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.145949088 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.164054652 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.142473185 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.170961007 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.14276905 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.170146179 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.141654424 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.173119996 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.152101872 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.173000555 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.156202701 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.16059287 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.151014305 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.169188247 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.155033195 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.167234392 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.140234669 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.138878843 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.170741429 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.152331665 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.173762953 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.148808352 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.172357916 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.149200854 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.168239297 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.146008757 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.165510291 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.152628167 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.1729064 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.146458758 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.170546629 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.145100898 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.168814232 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.147439871 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.174295196 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.151734997 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.168420058 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.155447429 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.171978847 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.14436154 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.165625557 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.146697801 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.170643217 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.147644273 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.171711325 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.14428342 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.162051628 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.151843242 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.175037452 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.146776679 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.173902795 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.153763342 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.164599374 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.148939571 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.174453714 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.151084635 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.168570267 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.148325043 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.169864834 seconds)
  done (took 92.582287443 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.195758708 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.177858408 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.148982122 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.171733427 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.165561205 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.173665463 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.149435537 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.173149192 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.151585067 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.179369573 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.149256193 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.171559811 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.164655994 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.191086461 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.186911581 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.159213115 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.171068457 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.150591805 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.171003518 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.151852864 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.186168656 seconds)
  done (took 4.480672978 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.149528113 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.147466864 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.172424193 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.147925178 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.172582642 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.148590374 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.1715595 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.148681532 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.170529944 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.148761145 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.1696925 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.150557178 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.147574984 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.171752321 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.148282206 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.173067656 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.149558691 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.172239807 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.149363302 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.171497523 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.148978524 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.171947247 seconds)
  done (took 4.446206233 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.178572755 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.151184304 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.169827896 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.14826052 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.175254442 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.149243395 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.176545346 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.150538579 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.182119753 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.143021397 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.164453869 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.142876186 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.169255921 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.149190611 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.16613794 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.150138547 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.181302263 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.153366776 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.175807338 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.150297034 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.162563523 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.150806121 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.151118935 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.164210163 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.154804784 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.178185879 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.152722598 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.175433527 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.140454113 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.17573185 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.150052297 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.165745944 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.142233073 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.164346362 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.141256079 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.175828361 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.153716269 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.171200848 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.152885663 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.139923388 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.17450696 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.153426213 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.164895828 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.152171898 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.174351326 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.144243512 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.177743575 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.149590985 seconds)
  done (took 8.630571561 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.177079514 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.209378293 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.153241786 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.203520706 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.185905175 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.161105678 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.177123567 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.179123999 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.176421048 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.154445585 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.189045806 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.163206853 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.179372559 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.156707149 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.178841738 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.15373425 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.177583323 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.152980562 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.181861955 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.176460163 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.160883005 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.176949921 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.165176028 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.185838968 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.157001873 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.176830213 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.154412935 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.180017204 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.16288811 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.18214757 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.158631072 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.181562296 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.185456701 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.156850721 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.175774753 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.155806167 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.186720715 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.156195249 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.180279618 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.152188773 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.178167465 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.157639328 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.17932235 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.164566825 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.179241496 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.156943547 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.179010161 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.151826189 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.18711055 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.156338417 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.183970786 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.186389913 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.159584993 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.176724971 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.159028076 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.185934956 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.1560705 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.177128622 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.157002675 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.1865643 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.153877219 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.181665789 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.165323948 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.178044383 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.159926628 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.187236504 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.157540339 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.18091256 seconds)
  done (took 12.703003604 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.186358123 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.182093278 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.166783826 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.189697727 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.160007115 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.184037103 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.159038601 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.182799703 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.157605558 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.185875115 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.179350081 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.288107874 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.162230106 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.186824943 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.15994359 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.183691712 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.160166871 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.181894149 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.15876861 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.181959543 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.158848204 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.190721289 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.158230819 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.189812304 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.192011999 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.157826997 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.183560582 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.159967708 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.191692656 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.159738394 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.19299506 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.160204662 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.432406862 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.188902827 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.171203642 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.183248178 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.155166732 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.183316579 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.160283104 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.184781778 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.156033182 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.191052955 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.159032874 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.180156432 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.159419775 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.182521882 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.166741071 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.191188325 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.186914229 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.165872527 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.184532156 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.16731991 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.183647922 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.160180035 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.18999595 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.195282552 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.168237616 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.190204915 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.16106881 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.19119817 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.166297031 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.197033852 seconds)
  done (took 12.214904803 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.15676605 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.153998309 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.178437178 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.153489871 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.179132054 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.154657747 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.177900868 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.154468201 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.177726472 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.155247115 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.178054791 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.155234263 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.177046688 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.156571357 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.154128875 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.179753388 seconds)
  done (took 3.618542476 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.17322366 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.194749485 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.253811023 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.158535751 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.178718674 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.163051107 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.179395937 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.160297061 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.152934799 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.183850996 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.157868484 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.180728859 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.194570799 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.158085971 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.154345103 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.181261401 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.153040786 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.183624477 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.155453908 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.25516204 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.184222178 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.156435024 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.182542867 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.160103455 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.182312774 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.159432924 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.185804674 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.155293346 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.182068716 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.157411658 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.180849607 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.160603727 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.178605612 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.160146068 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.181791202 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.156539184 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.180302369 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.156220016 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.182499638 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.155819671 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.18176991 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.156343163 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.180021137 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.157954784 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.178190902 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.157636042 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.177862776 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.162498954 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.18047298 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.157555742 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.180097918 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.162044937 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.184010749 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.164598545 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.186958743 seconds)
  done (took 10.520476981 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.168201574 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.179524849 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.168329676 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.176940649 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.157577107 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.17959163 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.15816707 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.15721278 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.181637929 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.153576329 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.182551374 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.157495272 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.18310876 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.158279969 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.182206569 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.1568233 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.178808041 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.157341172 seconds)
  done (took 4.024855022 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.156470337 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.15407125 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.178307016 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.153905027 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.179084156 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.154487347 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.1783054 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.154960531 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.178631569 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.155882889 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.178680453 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.156045721 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.153263664 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.178822376 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.154079431 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.179254502 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.154556113 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.180590723 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.155116123 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.179288238 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.155192853 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.178575744 seconds)
  done (took 4.640795262 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.166759203 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.253787882 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.185222417 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.235838154 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.177737591 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.150371932 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.187250798 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.176525983 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.168691152 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.176359957 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.152881377 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.175255474 seconds)
  done (took 3.19911448 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.183467191 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.217822914 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.158172069 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.182634279 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.166538143 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.184970565 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.16070684 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.185863235 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.167536433 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.195470959 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.18493649 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.170692589 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.191158851 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.168800085 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.189247774 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.165800205 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.186575907 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.162296359 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.181788771 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.198608639 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.164394905 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.193136431 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.162918064 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.18618901 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.16232358 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.194226989 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.169215887 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.196693417 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.184031245 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.170017493 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.189149327 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.163503418 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.194327181 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.172807693 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.183412709 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.168454447 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.187918713 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.199863641 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.166458529 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.194581123 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.157876416 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.190476212 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.169263711 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.191792905 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.19190797 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.163334913 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.19166744 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.162002043 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.186570756 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.181690912 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.190034396 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.192306165 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.168115309 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.192913716 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.17003242 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.206334472 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.194541812 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.169499104 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.190795484 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.172821775 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.193874829 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.189324345 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.170598844 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.196502391 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.166803371 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.19527336 seconds)
  done (took 12.95093237 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.196406132 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.182876441 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.163797464 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.197805054 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.170278175 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.188287054 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1627155 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.18698646 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.162910195 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.184256107 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.227802048 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.163728849 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.195188457 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.169395873 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.18771322 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.163064115 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.187649351 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.193560871 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.162299842 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.205535189 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.163766908 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.195823572 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.170883923 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.194550589 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.197737755 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.168540971 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.188999628 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.164690881 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.189098351 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.162958291 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.193487171 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.163096884 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.194653627 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.159900015 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.194903209 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.186170762 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.164873177 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.193058831 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.162850398 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.192198607 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.171082032 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.202214484 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.163386694 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.187877253 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.198087693 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.164428015 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.188053845 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.160826895 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.187703267 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.160076985 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.198178313 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.174858032 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.199619239 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.197297141 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.16425705 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.18885712 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.163543142 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.187518744 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.162237918 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.191788586 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.17054769 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.189139239 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.206959653 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.164172549 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.187485518 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.171418811 seconds)
  done (took 12.963324668 seconds)
done (took 228.549497598 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.302508327 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.331118402 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.151150951 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 9.370702287 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.151423054 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 4.85554048 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 4.732160307 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.241560406 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.175222192 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.150034876 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.175438157 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.16765303 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 9.526881945 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.149976497 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.174505032 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.167043787 seconds)
  done (took 31.829906596 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.339308019 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.387285022 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.165264857 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.179642793 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.157210872 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.181563479 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.154092344 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.180960788 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.154375937 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.186599886 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.156308775 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.176129998 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.160322976 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.176141308 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.155848751 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.180963057 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.160665163 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.181015564 seconds)
  done (took 4.455638675 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.174523497 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.229699591 seconds)
  done (took 1.425852021 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.185830014 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.27549597 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.377982887 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.228958549 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.175975332 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.197510958 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.203602277 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.192900331 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.269544444 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.165996194 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.193296452 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.176590044 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.182452113 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.184929963 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.172065693 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.178551427 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.184162384 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.194055662 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.170076129 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.181459436 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.180109062 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.181647436 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.159995519 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.195234825 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.259124756 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.166858969 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.183397963 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.156653445 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.181666186 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.170051103 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.187044612 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.170404675 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.192530324 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.236286517 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.15813498 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.232066176 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.185688279 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.157392285 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.194848744 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.156444428 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.184129606 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.158975826 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.192600392 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.17774591 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.156454393 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.183981968 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.155837311 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.180566712 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.164622348 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.183125974 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.164880466 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.187482926 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.230857846 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.159462676 seconds)
  done (took 11.296525164 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.988171214 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.203613074 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.182237934 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.134926914 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.202192316 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.169525678 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.006295965 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.183484925 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.308390933 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.066911767 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.171499929 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.191142274 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.296518532 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.336898606 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.352347308 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.411977355 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.841151513 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.166275258 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.21311457 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.224275501 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.162434914 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.199778964 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.171935456 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.505158439 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.183771521 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.156403 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.187092833 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.163834169 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.234953999 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.181558424 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.16067271 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.255774706 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.351075275 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.265661344 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.1830153 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.1547052 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.181710979 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.245445294 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.324055072 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.273680193 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.248594384 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.176988544 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.158353247 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.184741172 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.171331204 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.178295946 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.239410357 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.249283812 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.251361119 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.160600743 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.190152348 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.1644441 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.184839865 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.235814061 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.155868017 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.439883321 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.421819482 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.155630483 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.190101475 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.194839609 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.323777529 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.158133525 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.316955622 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.179681599 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.27097561 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.181012554 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.861986071 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.247583703 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.156311085 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.187046796 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.186336291 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.163330477 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.185463059 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.216380233 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.479130964 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.190107069 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.163853476 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.181062275 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.301404396 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.15822124 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.18257927 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.238091046 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.158150299 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.187825229 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.164950836 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.189214205 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.248388314 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.33126049 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.163236219 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.188789369 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.162239541 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.192940892 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.158741476 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.289371715 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.308933364 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.234979162 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.28794294 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.163955434 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.242402969 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.245970275 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.162299197 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.249263936 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.187540761 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.193150835 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.162547319 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.281328019 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.218169702 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.184347711 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.162830031 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.188556916 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.194902788 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.186925135 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.163403154 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.246334849 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.534896028 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.243925327 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.181105642 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.161859685 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.190717629 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.238995664 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.163794718 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.341972875 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.165819543 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.248205294 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.187491425 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.156674548 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.18712323 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.241230305 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.166481344 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.189575486 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.163843602 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.193156599 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.336410962 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.278862942 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.16672606 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.328255321 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.228879953 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.188793684 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.253428596 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.163584543 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.245702022 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.193109479 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.162704858 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.185517405 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.864812662 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.196130429 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.163849527 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.188767593 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.263458649 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.159814115 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.18545905 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.159784878 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.155522298 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.877713157 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.162471654 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.182147813 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.161749326 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.188588817 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.165741396 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.189708159 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.16312317 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.240073882 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.327379567 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.167682809 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.188039419 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.158401074 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.23753983 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.184443859 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.160181921 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.183894421 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.16060004 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.190762164 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.165036902 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.186755416 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.249272326 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.21185365 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.314541569 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.625835369 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.157721326 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.185913655 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.299484661 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.184049939 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.382902583 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.190604222 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.293788625 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.245255936 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.156012901 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.44191406 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.245862454 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.261898263 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.162869193 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.252533578 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.174923384 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.190186476 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.240077153 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.157645752 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.191408064 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.238488969 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.167823101 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.192380018 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.310184993 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.185370516 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.306852187 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.156509724 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.252536636 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.186071717 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.16649037 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.384570661 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.185400201 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.195872079 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.214990751 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.189000937 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.16002271 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.967461235 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.161134166 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.19200033 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.165622365 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.315620585 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.217110948 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.191195337 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.190458069 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.16961183 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.243434219 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.289185982 seconds)
  done (took 60.900406751 seconds)
done (took 110.927065621 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.315311681 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.248572141 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.395499484 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.231848754 seconds)
  done (took 2.309036954 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.337574554 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.199058873 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.297766307 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.18285634 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.278062436 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.184599184 seconds)
  done (took 2.547842981 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.228424603 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.226654326 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.2253249 seconds)
  done (took 1.753848874 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.267233235 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.268309686 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.408320865 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.322565799 seconds)
  done (took 2.399609537 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.331402139 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.174973571 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.214769647 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.28237741 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.298986481 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.268242064 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.181719887 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.236376056 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.215454355 seconds)
  done (took 3.307960718 seconds)
done (took 13.387695834 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 0.197948685 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 0.214793067 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.180357318 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 0.199625912 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 0.187600603 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 0.216137251 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 0.187752367 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 0.212401397 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 0.186260087 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 0.199721283 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 0.184587074 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.196875452 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 0.275511238 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 0.195855022 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 0.196919864 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 0.184802419 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.197892908 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.19765234 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 0.213035982 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 0.169586797 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 0.21332197 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 0.170338349 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.198416378 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.178222876 seconds)
  done (took 5.820170834 seconds)
done (took 6.895206518 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.260131946 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.18056726 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.16693949 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.195755613 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.269453123 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.17538394 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.212447728 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.170083908 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.206722502 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.170040803 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.185625414 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.185291129 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.19468045 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.240641903 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.198513196 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.18611007 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.161704711 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.206763536 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.187820869 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.211061815 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.244116295 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.19077496 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.17891077 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.188644379 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.272076041 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.162996817 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.195168236 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.170596521 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.210060266 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.170976607 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.196687109 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.160680617 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.212471237 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.185131991 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.185714346 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.170379326 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.186016141 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.135413611 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.169821102 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.196911968 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.182594365 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.198320861 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.168268034 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.187478138 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.17030242 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.19723779 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.160401086 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.199870178 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.159052806 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.19760448 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.162215715 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.213212522 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.169001813 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.187249012 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.159417246 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.189059255 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.181615346 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.188864425 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.183227848 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.188611305 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.161397575 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.187445854 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.172790401 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.188973598 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.17083847 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.188705272 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.172656208 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.199274864 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.169951313 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.189321568 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.162048239 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.195274896 seconds)
done (took 14.639312404 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.165100072 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.229997761 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.268458932 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.246919286 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.216224019 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.203305678 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.175308244 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.21105963 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.174436294 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.20478843 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.195611333 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.22028231 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.277606768 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.177776447 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.204266812 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.172714902 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.200856334 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.16884786 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.274896319 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.214169594 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.186165184 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.206877968 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.186886169 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.207315984 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.164555809 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.222401231 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.195616746 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.175151294 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.190609827 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.174371771 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.211646912 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.166768895 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.196328167 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.18375432 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.208046972 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.177012022 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.204141634 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.173925017 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.192735371 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.165755907 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.199656298 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.180623683 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.192629225 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.176220391 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.200892388 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.179552564 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.198849054 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.177261011 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.194881593 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.172644745 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.193570724 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.190105634 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.204853315 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.205440255 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.180334879 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.204074086 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.18013037 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.205034475 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.17018841 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.204574597 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.16551823 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.191125201 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.167375964 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.210749409 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.168924277 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.205020517 seconds)
  done (took 14.00012706 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.183636679 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.223229695 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.175735746 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.204301193 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.175881894 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.187325844 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.160018282 seconds)
  done (took 2.414064159 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.16223707 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.283320238 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.280199076 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.283209306 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.275861408 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.288425506 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.18503284 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.189969862 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.219249286 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.199934442 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.28155989 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.307724485 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.17231848 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.204053957 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.282625234 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.162438102 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.284744101 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.265848206 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.175800026 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.281698088 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.207739275 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.196433356 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.203063392 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.161844836 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.277803915 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.190853476 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.331979886 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.181112445 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.201527861 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.176522315 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.208003548 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.265765876 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.278808652 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.176960594 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.196930493 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.251474907 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.277270315 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.205658325 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.294567243 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.166961056 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.278345139 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.207189727 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.179577477 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.205948205 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.178716395 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.267750203 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.210622922 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.179133588 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.203808361 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.258748943 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.201846136 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.282057731 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.174313007 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.206107958 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.1715037 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.208668899 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.184146276 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.206172917 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.289729757 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.179923535 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.2794823 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.281767779 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.28475502 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.283572351 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.185888973 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.282526083 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.273724038 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.205136403 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.279889504 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.179748506 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.28374262 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.204290776 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.174840326 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.274286176 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.180366226 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.285736082 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.285031407 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.204811961 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.176220649 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.195411133 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.176096493 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.192091094 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.286025011 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.17827657 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.205540834 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.182416887 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.206520642 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.178664926 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.276777366 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.215330988 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.17804961 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.205031744 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.182916117 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.207745503 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.179077409 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.286053982 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.203605729 seconds)
  done (took 22.967587567 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.167606878 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.164090576 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.197574907 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.164752884 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.19314962 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.165612521 seconds)
  done (took 2.191503016 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.202643 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.206552511 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.188519925 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.206518056 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.226524218 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.290163274 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.298442233 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.201697235 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.199044742 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.221128101 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.295083413 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.294768556 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.292776574 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.182159538 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.297429132 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.210953863 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.270868801 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.207975392 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.186158182 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.205895973 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.204779086 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.183675663 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.203354915 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.25437913 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.209258863 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.17984249 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.201439863 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.217464388 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.187170071 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.200699591 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.183748436 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.207508402 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.171153988 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.200724078 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.297979224 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.172134949 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.20367712 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.182380964 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.211229143 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.180597487 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.295495679 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.206118849 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.187193823 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.211011022 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.173355012 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.200984747 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.181990792 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.201484678 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.300500717 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.183207649 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.212067745 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.180611339 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.211050025 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.182663895 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.199678809 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.173353692 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.209848292 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.301314813 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.18367235 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.202658673 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.179920548 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.211514752 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.200664466 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.186785196 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.208422723 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.183475657 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.198464408 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.182196948 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.205446381 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.181221898 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.209253208 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.181259428 seconds)
  done (took 16.409201611 seconds)
done (took 59.080208363 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.738171841 seconds)
  done (took 2.878845494 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.178482649 seconds)
  done (took 2.319864595 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.35636149 seconds)
  done (took 19.531438381 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.488204868 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.41387071 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.106514386 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.238539653 seconds)
  done (took 3.393106855 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.161869639 seconds)
  done (took 2.321595119 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.464655579 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.341317131 seconds)
  done (took 1.95470628 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.828406707 seconds)
  done (took 1.99202401 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.810115695 seconds)
  done (took 2.960434015 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.356929568 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.28003257 seconds)
  done (took 1.795460358 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.679687761 seconds)
  done (took 1.84642583 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 13.732918755 seconds)
  done (took 14.899748837 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.314128223 seconds)
  done (took 1.479839576 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.35128682 seconds)
  done (took 1.521423445 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.756335397 seconds)
  done (took 4.927622067 seconds)
done (took 64.977204807 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.179742475 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.209203507 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.184011846 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.207669281 seconds)
  done (took 1.935242188 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.185250298 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.204975892 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.184583212 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.177479755 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.187158087 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.207694361 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.180714151 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.210192736 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.180760687 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.17998264 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.208286025 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.177710295 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.210888844 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.177858964 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.206582048 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.180952762 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.212354854 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.179901209 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.209569403 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.181422822 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.210404278 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.181023828 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.212951101 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.182594541 seconds)
  done (took 5.822727337 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.176859599 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.168979058 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.20115982 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.167956485 seconds)
  done (took 1.895384763 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.192147693 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.22105273 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.193210523 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.217505048 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.196487693 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.221446388 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.1812139 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.20560408 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.17969164 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.219359089 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.195864154 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.223781053 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.19361483 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.214444808 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.190402444 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.203807654 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.185182237 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.222230756 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.188703303 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.227985139 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.183549673 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.219579808 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.179580565 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.220646631 seconds)
  done (took 6.060163438 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.256158565 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.219911603 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.206424976 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 0.239522015 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.178363068 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.237751812 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 0.2544225 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 0.187043336 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.213862117 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 0.186398766 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 0.209111223 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 0.18286097 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.25457044 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.185917883 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.211199769 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.180337764 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.212669277 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.184397207 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.263381243 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.212030964 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.18761167 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.219371811 seconds)
  done (took 5.869490224 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.269581595 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.200434737 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.169195158 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.200045854 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.181456025 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.205345684 seconds)
  done (took 2.404332976 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.171044311 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.165163493 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.197582669 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.166203209 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.198963142 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.166299439 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.194374241 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.166359923 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.196074552 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.166841382 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.194687729 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.168104116 seconds)
  done (took 3.337275152 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.322458536 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.213204923 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.343222063 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.461218616 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.257997548 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.251202184 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.372629765 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.222263663 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.269736777 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.227426448 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270635104 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224360355 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.246767731 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.29845766 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.20478407 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.241694331 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235234323 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.324594513 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235210873 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.326198149 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249275531 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.239095493 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.283085612 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.240177512 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.229488272 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224796724 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.211051543 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191200504 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256889109 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.257011422 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.26555728 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21358563 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.233652959 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.277788196 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.306702863 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.266829519 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.35366654 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.224738706 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.224624213 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.286124322 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.32191366 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.233151589 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.283009464 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214379611 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.224725353 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.307827224 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243514968 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.247786057 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.227834038 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.20542959 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.272459487 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273798596 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.262457798 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.229248577 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.395896664 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199182159 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.23464558 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.268963796 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25036807 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.294582342 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.276221674 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.213790798 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.264314776 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.255069933 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.307608081 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.234745451 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.25709847 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.187330165 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.255336132 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.300545477 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.277977431 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220266851 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.280424467 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226061452 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.265896501 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.227687764 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247069564 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.299825295 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.264609453 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.184294256 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24415782 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225981831 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191664255 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.282393768 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185162957 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.309122958 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224251697 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.238246146 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26935253 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.245652588 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.252565781 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223209374 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.255326524 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.239864011 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.157384351 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205515521 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.250810921 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.249642841 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190591721 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.245455682 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232643282 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.191121522 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.243914035 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.185226261 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.263426342 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.218221599 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222276979 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.264317977 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.22456218 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.242834674 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.241458132 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.255846247 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229282451 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.286277442 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224069887 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195793419 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.313331833 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.264105848 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.229712277 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.234476863 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.289628044 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.236192112 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196457767 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258687071 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.28599195 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.236431583 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.293964669 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201942862 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.228358545 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.192336831 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.270156503 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.25348153 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.222909843 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221010303 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.261294403 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.280018607 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.190494846 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.233018738 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.274590128 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.197390023 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217244706 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200251148 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229756791 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.205231771 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.24501076 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.230183058 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21802897 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.262132054 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.259638689 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21997469 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227238717 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2668509 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19373522 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.263949646 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.241979696 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.185240037 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.267016879 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.294986998 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.193353154 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274002591 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.253091227 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270779272 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269080891 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193754338 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.275129257 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.191078262 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.215647839 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2554548 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.233515016 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.256047517 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.284890647 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271005849 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.261585996 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.256805431 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212194791 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.26291126 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.281008573 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249115707 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.203881779 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.267172349 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.262649304 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.184822141 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.216442481 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.192711458 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231831539 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193129674 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.232063513 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.27256839 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225687689 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.270455502 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.264515911 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231914064 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.286579716 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.190018711 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.254798465 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.270395847 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202959109 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.284850415 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.286739146 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.273763728 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205056451 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257145797 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.184747221 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.221170258 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.228931953 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.224094526 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.232080978 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19911786 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236440243 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.288081096 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.262165725 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212574391 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.281138982 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.259149017 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.297502988 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.215294349 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.226204065 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.260788068 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.262923432 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.251845064 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228510398 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.223530675 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.290183431 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236765692 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.287234454 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234122038 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.274911373 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.287109932 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.260508178 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196138292 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.240164007 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.253946205 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202858518 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.256663902 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.206136918 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22571089 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.241688912 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.20218622 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.236672389 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.282574554 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207078028 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.269707497 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.25050098 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.264234459 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190807518 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236403733 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.272285886 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209633251 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.189940289 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229828145 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.284885743 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243663801 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215516255 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.26579188 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.225573738 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.385238189 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.27702877 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.265662521 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.231762494 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202668454 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.269928243 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.252712709 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223561628 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.278704282 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235821113 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.30269915 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.236022811 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.235349526 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194424962 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.241335313 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.245258399 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.193762305 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.24768685 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.260772935 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.208854147 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283353665 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233011531 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.266255324 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241916347 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.242213307 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.212625824 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234954092 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.323629003 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.266070417 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266236558 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.232410272 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.260801246 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279492463 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189768405 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224672771 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.197080388 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.279320202 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224826637 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244248945 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.261179299 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277877246 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.274126433 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.258762716 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205606032 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.224693875 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.232565254 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246113004 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279693486 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231564044 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.202189797 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.281962253 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.213672181 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197042372 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.255488799 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.383176026 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.212030246 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266548467 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.162765407 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.383549605 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.227406232 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.197151683 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.255995513 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265964189 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.197572833 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.282857102 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.274393838 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206241244 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.255550287 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201554149 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.271493979 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.27711314 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263022744 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.272378091 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.208987251 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.258786366 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.253156218 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266734668 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211359797 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.244835549 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223530871 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.292463482 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.271802912 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.230017257 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236457464 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268127023 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.269056905 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.26768332 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.20594381 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27894829 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193557118 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263083112 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235363207 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189512714 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.256576866 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.259829079 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196389755 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269743956 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.270353088 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196541833 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.223825737 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244540598 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234395682 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23728637 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.195808243 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.281220306 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.227471266 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.280188416 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.307602145 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196884869 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.265852573 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.207664148 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.229240915 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234227463 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211492032 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227466059 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.245246337 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2740863 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.195097646 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270037039 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262484142 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.260360208 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217151637 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.240550314 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.365422604 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.194379566 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.290745919 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.248185493 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.312891462 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.216703235 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.27581316 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.267873396 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216883911 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263342662 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24319303 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.287124989 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263688202 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.265981477 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.197314823 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241885121 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202771898 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.231369631 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.24912633 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238119058 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239399463 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.233318426 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.236534574 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244049169 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.211956339 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.241158514 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.30121368 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.247190183 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.254233765 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.285195544 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.238163634 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.272908708 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240278805 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229332606 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.262085454 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237932602 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.241944617 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250638694 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.20196107 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.236094286 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.313582646 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.192260793 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.259169375 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.272348937 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.237963434 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.273221037 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.232020051 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246626382 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238822508 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.275194343 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.194394769 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.249781781 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.267779431 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.202335414 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.226258854 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.239188853 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.258117594 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.264545334 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.209359887 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.278729119 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.297455401 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.192636529 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232951628 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.385693519 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227650561 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.293043381 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.221057998 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205039917 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245734228 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225475931 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.265546781 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272173845 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.198169657 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229439092 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.241992255 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.220087016 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.227559223 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.239737028 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.282280085 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.256526427 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.28281152 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.204000613 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.354399586 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.208965719 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.27299582 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.173746684 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.228028515 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238949659 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203111794 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242072059 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.277535407 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.316490067 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.23301055 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.247265765 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.20218367 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.228243587 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196665997 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.259476665 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250458363 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268024917 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216116403 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.161395451 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.240071032 seconds)
  done (took 119.680513518 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.245847249 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.240107177 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.258722148 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.308939068 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.286630498 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.382598199 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.3168337 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.337661301 seconds)
  done (took 3.681859186 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.187996124 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.257464956 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.240960392 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.185385529 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.209862231 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.529467473 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.234474503 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.187635385 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.261711452 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.222507251 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.180780462 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.634902707 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.219013941 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.217341754 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.219205239 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.179132507 seconds)
  done (took 5.466274046 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.193826661 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.63992338 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.22608396 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.367552879 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.337569075 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.284774367 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.90365722 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.266951539 seconds)
  done (took 13.532583873 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.24187427 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.274688489 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.448281687 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.375896015 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.289566371 seconds)
  done (took 2.948081639 seconds)
done (took 173.7901279 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.194088982 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.193169419 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.227805397 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.194754929 seconds)
  done (took 2.110721326 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.244047444 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.151682273 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.186298119 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.151599124 seconds)
  done (took 2.055695015 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.528403957 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.150582215 seconds)
  done (took 2.018750878 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.214794692 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.235333565 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.20645301 seconds)
  done (took 1.987379881 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.206124596 seconds)
  done (took 1.531067498 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.189480833 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.187536931 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.312496146 seconds)
  done (took 2.013378585 seconds)
done (took 13.036904806 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.287935344 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.102370275 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.593994555 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.253093613 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.797275847 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.50470587 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.513741381 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.251653098 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.292013749 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.18272582 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.255055652 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.762747959 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.53928448 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.952066527 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.532664387 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.947815801 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.797950199 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.180557028 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.214705679 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.182817941 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.531712012 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.18101194 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.215539679 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.181178495 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.797848753 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.498768045 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.214263478 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.94944301 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.214737457 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.192949163 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.502954805 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.183238992 seconds)
  done (took 24.114075081 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.214004593 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.308137329 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.220811198 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.225575658 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.196662544 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.217917535 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.192094639 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.224224486 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.299474179 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.183809825 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.245326096 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.181923764 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.227786432 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.183663848 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.246994625 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.182754186 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.215042603 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.182790395 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.214742274 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.184614288 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.24160384 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.181283661 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.21487798 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.183451221 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.213498736 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.209185678 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.213718304 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.183487779 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.214770773 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.194660356 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.216017188 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.184834464 seconds)
  done (took 8.132521292 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.254027701 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.315247692 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.253488574 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.229817258 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.27704504 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.185736066 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.297431065 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.217478316 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.309084384 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.215441755 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.214376173 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.215013031 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.232345931 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.217660719 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.216751026 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.217580039 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.183852238 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.217467674 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.182964678 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.21803679 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.211273071 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.216434802 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.183294104 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.216787215 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.184280414 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.244969951 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.183107823 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.217016778 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.183852046 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.227392969 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.185536508 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.217529752 seconds)
  done (took 8.481963428 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.197682799 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.19671015 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.253726162 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.250176096 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.194598761 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.227374538 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.197691905 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.191519073 seconds)
  done (took 3.050326124 seconds)
done (took 45.104748988 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.206052245 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.229736953 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.205660485 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.196760154 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.304580891 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.224110588 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.200065349 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.22391799 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.196391527 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.238521089 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.180986283 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.223288059 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.203250446 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.227337435 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.273535101 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.23355604 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.311732884 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.309060089 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.190994679 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.232814767 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.191695122 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.31158631 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.22920813 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.192908302 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.291008089 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.187550372 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.298768581 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.226379072 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.19565315 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.181314574 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.309843011 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.229590574 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.190310551 seconds)
  done (took 8.976438831 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.29139253 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.226647174 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.191061723 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.22739652 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.193461707 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.226432631 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.330511541 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.192850359 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.754149624 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.19228969 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.190054357 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.311367125 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.232646068 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.187226235 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.228468896 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.172570359 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.329893132 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.192605826 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.220175327 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.156094484 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.220998938 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.193644406 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.341851323 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.186809784 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.227220887 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.19123188 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.227919745 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.196712042 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.227181196 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.194290155 seconds)
  done (took 8.612509883 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.198738381 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.204701469 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.247326452 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.293658847 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.222619532 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.238884633 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.208392622 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.237357951 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.212632034 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.221144162 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.202070323 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.256328234 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.202098277 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.231706002 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.184867079 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.235263821 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.200784907 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.220471102 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.194101956 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.238559375 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.204122216 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.236927816 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.20771627 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.228454458 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.183655555 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.227559908 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.195989012 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.230796957 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.193680618 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.235792998 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.186813158 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.220730843 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.188770206 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.253917056 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.187382147 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.233711804 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.205832223 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.235823784 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.199388461 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.254895681 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.187510115 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.22313336 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.213380489 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.27885686 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.187549201 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.229953244 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.187152444 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.23624862 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.185858273 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.239442683 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.22798831 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.221727649 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.239119358 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.187841062 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.182860119 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.229186652 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.186043758 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.224760197 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.201436091 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.221490416 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.206909169 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.229164522 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.197841755 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.223322056 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.198088103 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.218954794 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.186642399 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.225602558 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.213364776 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.229232543 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.225296594 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.220876701 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.198072942 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.235636221 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.199357718 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.232946254 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.185310336 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.234580293 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.198638258 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.224983346 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.199804138 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.222422953 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.188554269 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.236933732 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.207270846 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.235210922 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.197955818 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.231742537 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.188385444 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.222139789 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.203366869 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.223343154 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.190881553 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.234833963 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.18688636 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.223982778 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.19803215 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.229878535 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.185976031 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.246375393 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.191154084 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.218441314 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.214732335 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.221823901 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.191406975 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.229686534 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.230514908 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.219695254 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.196618567 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.230285265 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.189298216 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.226819597 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.190109014 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.184529511 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.235944988 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.202000856 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.229200078 seconds)
  done (took 26.561269526 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.406021182 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.399064386 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.288097398 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.444349202 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.236739864 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.32095381 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.398045008 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.400900988 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.187365208 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.257605339 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.277769066 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.362717851 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.188067867 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.251560258 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.401878099 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.480994633 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.219120407 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.262352765 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.257609143 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.201024793 seconds)
  done (took 7.621630179 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.197323756 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.251459275 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.207286011 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.240331061 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.199582069 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.234383292 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.18940767 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.242142964 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.200028169 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.227821815 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.192261325 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.194839153 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.235094524 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.20187404 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.234678556 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.246225345 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.194889191 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.220865671 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.211532958 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.22167614 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.208382961 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.246334809 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.196289326 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.240307284 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.204528329 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.233497802 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.187226051 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.223231009 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.196726637 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.230378008 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.189352333 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.229881142 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.196930744 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.165616037 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.235415333 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.203583336 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.228775589 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.191624162 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.227266837 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.191065247 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.234134749 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.201703252 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.22954125 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.203420458 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.206092297 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.207926085 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.19970397 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.232039135 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.171836056 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.208420265 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.235489868 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.198170837 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.231384856 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.206555418 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.230807289 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.204232326 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.232590188 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.198733175 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.225590095 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.187510246 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.221455595 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.191707877 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.230624774 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.200060961 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.234797086 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.198024513 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.22980891 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.190825588 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.22173284 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.192779241 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.190076484 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.236285724 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.242074211 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.199322243 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.195491582 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.234746339 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.196549555 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.193461794 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.196603474 seconds)
  done (took 18.207783462 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.214770469 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.233143297 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.208286334 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.253567699 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.20221759 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.227916221 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.201274754 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.206204421 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.235074967 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.206346756 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.235979144 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.203193299 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.246877008 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.232700043 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.20089281 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.237810867 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.203001241 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.259679583 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.202388594 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.247941098 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.201927064 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.227285268 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.204282332 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.233966178 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.215032097 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.233954548 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.213683962 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.234632083 seconds)
  done (took 7.627419044 seconds)
done (took 78.952425911 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.571636784 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.744463217 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.493015129 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.506959994 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.532413884 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.532158184 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.499965595 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.516593093 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 4.212658272 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.467218302 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.49279949 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.500577833 seconds)
done (took 32.512874827 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.573571715 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 2.175783136 seconds)
    (2/2) benchmarking "String"...
    done (took 2.189650613 seconds)
  done (took 5.756396471 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 2.166571972 seconds)
    (2/2) benchmarking "String"...
    done (took 2.181005008 seconds)
  done (took 5.72800885 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.483269865 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.488087463 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.87420352 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.484914442 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.481825403 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.484260236 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.496645842 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.489098709 seconds)
  done (took 18.181432529 seconds)
done (took 36.105111718 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.511413262 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.791152864 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.76303705 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.467850621 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.504197885 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.500109015 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.485232633 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.536054425 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.487796072 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.469524573 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.933084148 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.777102487 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.487388713 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.90728264 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.469404692 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.516964746 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.501114419 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.788577338 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.486024866 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.529201809 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.486338936 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.470361618 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.492583681 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.494381067 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.498238982 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.487323816 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.503451538 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.487128306 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.788016634 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.521600443 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.531652746 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.488603461 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.507031158 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.493074842 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.486794361 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.497128801 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.779853269 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.502298054 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.488272389 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.491713344 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.775867177 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.498171876 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.495529174 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.491007838 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.471329884 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.528059846 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.479075035 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.609316247 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.506392582 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.492416492 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.544213961 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.92272658 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.494001693 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.501999336 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.504204089 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.826527102 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.487359014 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.622072353 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.513143087 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.502643079 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.496304472 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.487260554 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.544780326 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.492038995 seconds)
  done (took 163.080383326 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.488979576 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.491018637 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.492152064 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.497138813 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.489685185 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.491941723 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.487731118 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.488367952 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.493625053 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.491570487 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.489413187 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.490710644 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.490872009 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.439731112 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.499603743 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.512697023 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.493000405 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.49017844 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.501413219 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.490482538 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.492722585 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.492411992 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.49036004 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.48922565 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.502088302 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.584305289 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.509553199 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.502281133 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.498830927 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.491087136 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.502036914 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.539395879 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.192194125 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.359093707 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.507843868 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.538049775 seconds)
  done (took 90.889347682 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.490135816 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.489618671 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.48985937 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.49018135 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.526474182 seconds)
    (6/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.489733937 seconds)
    (7/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.491994528 seconds)
    (8/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.12066436 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.120915641 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.541642159 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.968150278 seconds)
    (12/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 1.896253421 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 8.120498839 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.783343039 seconds)
    (15/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.489488051 seconds)
    (16/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.586317953 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.505061616 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.493188345 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.59006161 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.518987173 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.495305692 seconds)
    (22/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.493544672 seconds)
    (23/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.491595846 seconds)
    (24/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.124446147 seconds)
    (25/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.506232677 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.682091592 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.492275588 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.52874198 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.894251501 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.984732529 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.493435868 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.529297477 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.837532314 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.531122302 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.494678948 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.917540266 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.662132434 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.607765175 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.496798751 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.530724149 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.493584361 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.786092592 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.494672478 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.495789609 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.496292998 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.22710511 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.49660001 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.12523096 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.495499017 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.509561371 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.494546414 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.49488451 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.055178271 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.231417924 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.495292125 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.49519606 seconds)
    (57/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.494457882 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.497739063 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.494546861 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.494677687 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.531968411 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.200774459 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.426747997 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.495971371 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.49943839 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.533491227 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.494951171 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.494260131 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.677904615 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.557870738 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.758048998 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.128101345 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.495040293 seconds)
    (74/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 21.825687058 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.59686235 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.616365828 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.495901519 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.495404803 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.496375568 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.49772558 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.610937433 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.496475623 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.961658737 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.684727791 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.49612804 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 8.135853036 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.600011637 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.495836936 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.933165377 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.500944432 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.495993345 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.263810645 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.596138598 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.496967229 seconds)
    (95/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.497421523 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.497841946 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.961667636 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.132643601 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.840072027 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.500001727 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.56346039 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.502040602 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.975432141 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 2.124848378 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.191224194 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.497342745 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.614212644 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.689215188 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.500944965 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.499201002 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 8.155122024 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.500846077 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.560113582 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.498211493 seconds)
  done (took 405.649099234 seconds)
done (took 661.0006157 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.483908632 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.483704512 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.483155694 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.484208975 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.482479553 seconds)
  done (took 13.812653578 seconds)
done (took 15.207608317 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.498457724 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 2.501618875 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 2.499993571 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 2.238701811 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.501276907 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.500719883 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.500233078 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.49989864 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.499896169 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 2.501223637 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 2.237111369 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 2.503104717 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 2.500235116 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 2.407413443 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 2.21261719 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 2.503756943 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 2.331241002 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.501224641 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 2.499939421 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.819500573 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.864585201 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.566812348 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.806763288 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.544753413 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.87197555 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.862417641 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.734307223 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.694248207 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.528587809 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.522624896 seconds)
  done (took 20.213300851 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 2.319887233 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.834206791 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.857216822 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.56820981 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.837629024 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.546951725 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.825347299 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.857300927 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.720956222 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.687019134 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.530802858 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.524426733 seconds)
  done (took 20.187335706 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 2.175877265 seconds)
done (took 92.731286172 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.541846986 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.611363361 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.540462009 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.522061018 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.519688812 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.518984093 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.520465252 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.519762075 seconds)
  done (took 13.691133206 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.520572182 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.519887751 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.519458609 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.519179124 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.518434993 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.518929224 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.519896783 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.520726929 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.519397672 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.519675379 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.520342205 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.52092924 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.519535978 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.519621654 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.521183532 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.520852993 seconds)
  done (took 25.718468694 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.522219132 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.519892939 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.521603407 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.519814838 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.521252364 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.521792984 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.522580953 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.520333766 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.521835594 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.522752126 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.521895887 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.520074677 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.522038786 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.519559555 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.521906079 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.52174885 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.522345723 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.521798889 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.524032728 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.520199209 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.519636499 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.519641746 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.521865668 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.520005468 seconds)
  done (took 37.909909438 seconds)
done (took 78.717539718 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.504864754 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.544757135 seconds)
  done (took 6.45025188 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.580144015 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.580669787 seconds)
  done (took 4.5626637 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.520789843 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.521227397 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.523940128 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.522231935 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.521100355 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.522522995 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.522918466 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.522712678 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.522615421 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.522221512 seconds)
  done (took 16.624043043 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.522064758 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.522792203 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.522194829 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.522387087 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.523167608 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.522472516 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.520907499 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.522576422 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.5236219 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.522669309 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.524508599 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.523198782 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.521929657 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.523565915 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.522763976 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.524208688 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.523193063 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.523207459 seconds)
  done (took 28.812169057 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.536474174 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.541935754 seconds)
  done (took 4.481643376 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.65104328 seconds)
    (2/7) benchmarking "second"...
    done (took 1.564738464 seconds)
    (3/7) benchmarking "month"...
    done (took 1.628414607 seconds)
    (4/7) benchmarking "year"...
    done (took 1.618796123 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.566086495 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.54585372 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.565168733 seconds)
  done (took 12.542599411 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.517636756 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.837900072 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.021237994 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.679424711 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.507421037 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.528743667 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.494162577 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.528125518 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.528534867 seconds)
  done (took 17.046350282 seconds)
done (took 91.920617342 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.508141922 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.538011097 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.504654826 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.527663571 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.820420596 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.512929193 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.513660298 seconds)
done (took 18.329449376 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.50539534 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.497946794 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.503261803 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.519764833 seconds)
  done (took 11.430923513 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.510525118 seconds)
    (2/2) benchmarking "read"...
    done (took 1.839060437 seconds)
  done (took 5.751976416 seconds)
done (took 18.587498121 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.527667802 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.525085606 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.526231771 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.527488963 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.528750322 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.52720976 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.526691614 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.525481124 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.526676678 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.528110078 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.525689327 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.527250262 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.526964908 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.527974973 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.527200273 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.527630104 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.528223392 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.526981052 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.527174052 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.526415245 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.528618202 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.527823563 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.528967861 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.529722616 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.527501567 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.528350979 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.527768249 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.52912143 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.527512604 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.5282277 seconds)
  done (took 47.230040712 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.533499121 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.533502265 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.529465328 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.528119325 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.529876411 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.528331659 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.529868804 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.528631586 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.5289066 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.528563095 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.529871434 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.529330477 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.528864629 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.529210724 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.529807441 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.529901059 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.529610465 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.529855757 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.530450175 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.531374296 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.530350546 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.529676984 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.52905982 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.529254441 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.530398583 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.529492595 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.529915697 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.530900147 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.52994865 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.528219313 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.532326537 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.531078741 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.530700177 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.53103129 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.530070067 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.530667914 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.5368133 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.536320278 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.533417703 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.531561876 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.531700624 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.532162668 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.531887818 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.533123225 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.533457651 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.532667597 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.53166913 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.532405019 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.531789518 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.53307742 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.533024373 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.533813473 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.532903929 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.532642659 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.53311812 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.534012206 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.533756118 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.533198973 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.532790245 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.534423484 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.533691977 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.533105672 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.533543496 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.531689372 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.534724953 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.532581078 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.531746936 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.532423979 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.533103186 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.534549408 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.531831875 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.532998441 seconds)
  done (took 111.681237454 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.533878764 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.533724691 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.532410391 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.533563504 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.534003795 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.53324702 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.533188404 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.533794924 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.534185277 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.534234416 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.534869055 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.535475793 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.534657087 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.534377155 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.533591519 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.534390075 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.534036479 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.535531828 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.535646352 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.535114476 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.534578014 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.533597296 seconds)
  done (took 35.162366419 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.535440901 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.535365197 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.534508679 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.536224992 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.537212242 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.537194274 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.53497449 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.539312793 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.535582895 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.534895284 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.535287163 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.536150191 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.538014529 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.53440991 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.535510553 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.538533456 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.534555549 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.538424261 seconds)
  done (took 29.064008203 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.536483546 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.536764814 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.536738993 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.53618567 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.536950701 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.53879422 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.536446948 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.537117264 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.537118626 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.537224512 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.536530885 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.537541302 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.537716022 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.537496489 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.537170772 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.538584642 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.537195827 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.538365627 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.536815201 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.537942448 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.536541545 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.537652516 seconds)
  done (took 35.232314019 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.537532618 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.537125898 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.53780192 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.536303292 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.538748626 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.537687986 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.537304811 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.538168985 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.538519188 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.537884299 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.538280751 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.539321894 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.539885142 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.53819659 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.538142096 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.538877553 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.538973709 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.538630304 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.539065301 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.538611545 seconds)
  done (took 32.180475625 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.544054012 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.543739787 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.543464992 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.54303316 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.543788839 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.54270387 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.545079316 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.54425111 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.543870907 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.546374993 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.54408542 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.545071692 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.54330165 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.545458598 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.545436942 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.546137831 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.545209479 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.546935735 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.544961638 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.545493445 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.54693722 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.546392759 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.546295119 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.547396603 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.545359827 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.546213999 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.548850822 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.545608547 seconds)
  done (took 44.682976498 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.558867813 seconds)
    (2/2) benchmarking "in"...
    done (took 1.560239456 seconds)
  done (took 4.536977462 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.54200488 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.540317083 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.542716003 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.542867143 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.539926073 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.541112237 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.542171327 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.541832799 seconds)
  done (took 13.752038817 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.536770886 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.541419358 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.543253868 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.542092038 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.542485465 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.534875255 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.541936229 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.546074898 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.537630569 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.536255225 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.540385789 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.538768959 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.537760584 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.535987768 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.535840583 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.5409454 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.545571587 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.543729719 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.545379385 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.542858457 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.542718456 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.53734693 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.539522437 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.545989029 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.535172125 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.546625249 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.545131542 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.54596753 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.537395027 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.542165621 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.538681322 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.546959799 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.54383967 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.542835711 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.544227467 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.544683618 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.544617951 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.543449205 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.54429393 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.550189559 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.54512307 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.545462338 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.54009181 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.542455361 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.541539065 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.550016194 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.547552369 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.547044871 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.538597384 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.54082296 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.549051821 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.538053528 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.547851227 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.544983626 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.544825953 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.547964187 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.55252694 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.540131774 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.544603993 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.547776679 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.556786033 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.55182942 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.547886911 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.550945197 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.544463848 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.549963649 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.549003946 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.552617405 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.548968396 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.546613988 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.547579125 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.562616019 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.556314935 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.551947061 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.547483144 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.546633112 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.541231875 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.549552487 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.548356558 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.549502464 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.55143247 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.547953886 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.544515983 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.549419528 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.543933748 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.551854274 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.545738122 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.548516718 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.542834788 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.554135888 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.556151695 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.548905098 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.542254504 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.543361405 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.548272298 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.551197901 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.541959938 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.547453478 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.5523559 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.549687873 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.549011309 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.54396263 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.552090444 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.556128626 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.549671367 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.553226432 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.558230316 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.543944836 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.555389859 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.556028626 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.550161717 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.543883904 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.5495334 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.553348706 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.544602148 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.550440565 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.557486763 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.546131756 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.556088605 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.550854405 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.54927196 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.559599077 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.555561123 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.551522118 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.545558923 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.556339184 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.553142803 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.548975623 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.556586845 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.550867522 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.552013825 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.547486243 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.5568464 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.544411969 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.554880524 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.546931399 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.556580251 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.551729483 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.55452965 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.548780996 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.55163216 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.548728102 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.551213234 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.55518056 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.556965083 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.550101947 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.558238931 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.551759043 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.550654543 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.553245673 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.557979891 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.552913064 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.546855001 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.557728074 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.545833039 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.554556424 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.544815962 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.557144219 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.554210121 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.555142575 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.552312864 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.546140584 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.549596169 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.557484159 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.553166599 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.555094003 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.557872547 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.555398425 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.554147534 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.546672537 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.557822127 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.545421292 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.550126132 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.560820149 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.554845133 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.556097795 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.55198643 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.559849502 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.555588375 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.554943239 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.550386094 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.554029866 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.559941694 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.556767023 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.562901871 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.556700042 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.555690029 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.549727939 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.55132242 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.557980226 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.550710049 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.562028946 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.56578016 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.568435896 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.552760026 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.558906813 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.549927401 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.559803911 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.554837523 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.564246954 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.55649544 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.556834419 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.55030933 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.560324095 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.551824423 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.560895166 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.549181014 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.559333878 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.559600419 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.558158094 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.55735239 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.552150178 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.558572694 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.561366584 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.555879991 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.558690003 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.551100838 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.559722022 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.550102566 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.553504411 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.561638468 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.557616937 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.560640494 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.564196911 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.555817344 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.562168651 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.558282105 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.555442629 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.561318683 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.555912357 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.559827252 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.563157139 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.560330334 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.555850805 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.564240641 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.559964584 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.552561381 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.559766257 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.56638362 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.560866428 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.554058353 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.565268718 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.56094986 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.560974891 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.559420013 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.553745913 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.564616791 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.562064803 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.56683693 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.552881978 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.563651809 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.555519579 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.564318399 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.556964679 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.56292911 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.560661716 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.562834465 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.567673845 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.559696094 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.555770415 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.564680889 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.561556006 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.559905497 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.555375831 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.56611164 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.560695242 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.563244539 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.55813008 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.558512907 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.564735432 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.554208524 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.562832517 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.556652795 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.575657542 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.579806098 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.568758541 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.565899035 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.566041434 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.562804106 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.564378119 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.558327762 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.557592366 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.561003651 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.559497777 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.557874019 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.566991375 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.556929599 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.568775128 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.560835674 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.563212314 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.566269307 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.563811002 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.557640013 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.566760369 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.56249944 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.563866952 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.556418955 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.567420297 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.561926211 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.56523013 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.563736253 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.559862049 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.570090944 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.568368701 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.563498772 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.562916382 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.560412227 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.556588036 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.560946288 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.570467267 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.560229939 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.569019573 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.558164717 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.56484873 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.561995062 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.569327442 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.574716738 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.559190313 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.570885425 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.566004906 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.557165297 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.559026349 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.569279445 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.568832752 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.57597754 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.559437863 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.568285188 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.566649689 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.567867058 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.56583711 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.566783201 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.566213547 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.566348497 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.570639655 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.568935297 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.564758935 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.567230731 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.575153242 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.567832726 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.567484638 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.558461838 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.572076101 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.576614396 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.563591508 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.567600767 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.563189399 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.569003986 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.566261316 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.567920908 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.567221507 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.566669699 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.569793541 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.571961034 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.571125915 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.56796278 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.571760659 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.576592294 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.571639484 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.578918522 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.561839133 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.573908986 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.569533433 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.563094308 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.56520951 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.567612549 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.573111651 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.560564815 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.576115696 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.569252249 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.564794333 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.571872301 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.576623224 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.562703916 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.570281491 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.58083399 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.564327003 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.572376977 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.571554634 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.562841153 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.575776782 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.570169515 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.561972572 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.564680623 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.569522037 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.5773815 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.56500023 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.575174081 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.565626755 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.573890941 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.571601148 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.570521073 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.571203061 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.569852055 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.565081639 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.571900129 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.571595251 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.577924407 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.565270723 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.571647302 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.567506954 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.577455443 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.581967126 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.567310801 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.577022658 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.57299565 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.568012357 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.569237321 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.57803911 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.566726791 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.575554827 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.564230296 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.569885966 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.570448848 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.57507136 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.576313398 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.576526637 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.567688204 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.566958588 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.573278727 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.574111493 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.573534059 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.568328361 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.581019457 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.568347474 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.567716554 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.574369357 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.569615899 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.578581922 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.567924573 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.572419315 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.569948676 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.577941437 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.574510643 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.573822072 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.569500019 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.570371514 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.580140329 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.577426553 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.573413798 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.571274672 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.578951402 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.568705363 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.571649933 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.576052361 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.570037192 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.571371344 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.578179308 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.571471311 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.571286467 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.572096756 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.576651888 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.57849556 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.577540573 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.572032456 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.581976357 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.581385103 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.582952569 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.567425451 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.572386072 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.571618676 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.576438474 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.576278737 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.569231632 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.582617162 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.581464517 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.579973268 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.574213844 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.576193467 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.569846522 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.580155287 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.576360531 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.57405551 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.583563086 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.574476247 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.58396309 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.577378261 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.577701857 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.568402095 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.573185586 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.573335622 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.575894328 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.579303457 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.57589801 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.579490271 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.575675866 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.585035384 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.579000454 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.578796567 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.577635373 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.571325655 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.581443894 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.572416691 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.579636049 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.578121075 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.572380472 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.582156151 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.581094416 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.573502366 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.578366809 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.586195991 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.578891811 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.573596425 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.577799577 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.584734202 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.58810522 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.580269444 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.574919574 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.58045388 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.584066681 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.578460543 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.579376818 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.575068104 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.59192109 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.591350071 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.574144712 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.580253573 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.584559428 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.588249537 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.580163617 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.581540471 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.576690048 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.581732959 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.585606386 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.5813501 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.586468518 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.584534436 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.578126495 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.585298453 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.576304941 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.581039524 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.582733218 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.590259892 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.580945636 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.575860406 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.592306026 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.590363446 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.581269365 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.594850773 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.585550007 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.582194677 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.588229742 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.573375031 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.585032428 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.577727187 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.587653115 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.583454369 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.586785685 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.582918727 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.5756251 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.583911893 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.587946477 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.59340384 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.583550032 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.577860366 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.578307816 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.586160761 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.583709177 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.585396022 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.585006026 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.584640908 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.583361747 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.579669472 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.599259139 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.600001544 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.589451884 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.585821853 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.585021942 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.585772819 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.588912851 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.584174321 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.591676502 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.585864811 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.585014818 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.583344115 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.593134588 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.585395428 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.579602594 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.580893282 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.581085904 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.588578333 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.595400488 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.604956357 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.586322746 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.587994104 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.587947217 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.585600822 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.579755098 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.590365037 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.584980369 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.582824909 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.583035526 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.591478265 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.588685571 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.586465917 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.582097048 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.591847903 seconds)
  done (took 933.763226089 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.586980144 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.588015849 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.588145777 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.587308497 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.586905253 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.587050337 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.587082684 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.587781011 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.587917932 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.588870098 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.586808431 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.588126675 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.587379865 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.586892117 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.588689783 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.587513039 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.587350271 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.588050058 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.587925224 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.587604501 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.589140291 seconds)
  done (took 34.798412088 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.588386917 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.588498854 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.588174296 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.588924222 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.589210446 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.589160083 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.58948289 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.589488886 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.589616059 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.590238261 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.590171571 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.590789527 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.590381958 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.589751896 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.589257168 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.589035818 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.5910531 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.58992251 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.590203301 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.59167625 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.591050663 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.589413647 seconds)
  done (took 36.432531494 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.590126865 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.589248763 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.585171311 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.594224712 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.590524757 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.589483194 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.590120011 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.589402349 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.590543844 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.585717692 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.583692278 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.584772034 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.587240975 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.595812984 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.587922839 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.597942039 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.59197952 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.591920291 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.591006171 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.59060535 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.594336405 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.600791438 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.590269143 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.583553006 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.594008038 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.592865029 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.590208442 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.592356767 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.58401748 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.596663751 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.593282327 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.585343802 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.593585605 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.593366338 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.586005415 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.594561177 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.594070947 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.593568798 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.595688524 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.591841522 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.603625818 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.594445223 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.599538599 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.603669232 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.591824026 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.587120774 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.597606659 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.59287934 seconds)
  done (took 77.869905983 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.593756534 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.594023821 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.592836306 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.594884319 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.595678597 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.597148637 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.59377736 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.595002459 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.593625177 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.593313298 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.594711715 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.595212669 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.595075716 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.595666719 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.595748143 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.595521677 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.593707451 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.594243301 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.594099491 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.596231287 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.595496584 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.596622559 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.595128979 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.593480242 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.595710693 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.595961928 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.595459535 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.593463689 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.59787619 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.597434778 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.595586324 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.597028199 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.597534834 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.596778607 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.596488864 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.59559174 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.597256475 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.596691656 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.594412944 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.594156706 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.597821099 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.596926009 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.596459663 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.597989819 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.597528413 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.597179655 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.598709287 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.596218581 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.596716343 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.597359824 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.599179946 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.599018186 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.59822477 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.597416216 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.597910692 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.5991181 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.599403202 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.598777066 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.600510089 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.598904519 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.599693144 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.598700427 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.598653988 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.599309462 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.59778109 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.59795452 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.599654671 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.598098019 seconds)
  done (took 110.027875685 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.599132613 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.599939306 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.600675579 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.59925234 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.599947289 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.599767502 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.599854751 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.600336074 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.599214844 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.600118681 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.598808867 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.599202151 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.600190214 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.59957612 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.601835852 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.600840191 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.601798328 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.600664537 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.601118232 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.599481388 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.600353329 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.600963146 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.599317146 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.602010465 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.602106945 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.599676097 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.600563852 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.600557977 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.601227767 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.601383693 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.602755887 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.601888706 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.601978188 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.602628855 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.603295179 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.602404667 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.600681966 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.600830674 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.601887561 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.601405423 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.602046313 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.601552739 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.602169259 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.603554589 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.601820307 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.602836515 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.603071787 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.604645879 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.604205589 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.603847746 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.603099975 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.605891905 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.603525816 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.604962224 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.604277145 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.605297945 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.603176278 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.604794316 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.60435622 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.604391837 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.602979099 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.604412576 seconds)
  done (took 100.779596018 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.602292074 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.602503329 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.603625075 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.604719862 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.601649031 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.602967965 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.602470337 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.602300537 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.605043121 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.604507004 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.603068604 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.605154748 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.604501155 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.605284405 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.604928411 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.604619207 seconds)
  done (took 27.130453482 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.604110266 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.606175228 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.605527146 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.606101938 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.604122982 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.604064714 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.606042595 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.60507926 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.607293006 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.607209286 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.604593688 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.606256952 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.603664721 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.606721916 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.604091325 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.605946969 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.60643779 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.604815387 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.606275458 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.605541862 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.607312197 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.605124273 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.606646956 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.606651295 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.60475439 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.606281649 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.606155905 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.606798512 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.606991702 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.606376989 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.607916101 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.60789393 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.608445448 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.606433315 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.607540669 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.606988592 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.608185298 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.608080133 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.607228166 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.609440436 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.608162978 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.608161865 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.607924438 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.608300011 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.609908316 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.608263555 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.606894945 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.60791858 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.609594443 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.608239943 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.609568524 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.608422455 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.607667662 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.60842802 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.60763308 seconds)
  done (took 89.849185558 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.607310209 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.609735565 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.60723625 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.609852949 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.609830561 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.608835511 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.608208048 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.610954647 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.609345066 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.609160155 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.61178947 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.610408636 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.609594054 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.609403581 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.609618776 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.610392322 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.608176178 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.609746586 seconds)
  done (took 30.443538452 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.609914957 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.610266227 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.610365044 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.60910458 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.609327551 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.610689851 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.610420689 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.61020619 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.610200276 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.610749789 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.610630104 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.610135581 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.607957149 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.611740185 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.612019202 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.609578157 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.611506244 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.611461537 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.610660728 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.611894171 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.612457534 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.612358536 seconds)
  done (took 36.909708728 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.602659989 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.601166635 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.60097922 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.617099107 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.612285139 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.600709634 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.603046607 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.603385595 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.62078648 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.625605616 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.626056749 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.612796947 seconds)
  done (took 20.804869345 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.611764874 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.615062824 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.613647544 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.613957933 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.613746193 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.613751544 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.612410925 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.61260424 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.613026816 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.612087024 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.612744609 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.612919615 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.614099664 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.61380871 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.613202051 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.613575151 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.613786157 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.614230908 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.615378701 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.613165937 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.611509321 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.615154229 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.61363119 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.613229837 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.614320845 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.613253643 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.613667481 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.614917702 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.615516682 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.616253704 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.615138143 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.615624058 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.616146347 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.613362339 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.614308873 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.615299405 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.613428213 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.616996454 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.614096793 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.614218619 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.61442199 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.614720495 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.614605832 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.614746105 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.616566722 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.614889818 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.615627358 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.616017877 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.616618526 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.616486186 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.616946548 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.615597475 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.61655544 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.615567569 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.616978146 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.618515897 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.616621928 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.61762069 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.617533773 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.616700787 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.61718272 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.617494969 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.61662449 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.618468605 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.616944147 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.618470481 seconds)
  done (took 108.068666895 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.617359827 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.616373433 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.617754923 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.617739413 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.617538979 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.61601106 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.615487748 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.616404614 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.617367779 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.618613011 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.61700511 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.616599895 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.617366258 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.617804548 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.617284076 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.617122208 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.616786663 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.619956982 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.61777415 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.617463621 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.616762536 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.618169874 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.620786378 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.620168275 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.618694397 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.618612823 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.61874606 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.618363087 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.619992414 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.620144773 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.619189447 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.619400659 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.620158487 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.62006376 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.620715068 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.620164412 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.618378475 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.620818634 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.621886615 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.619673213 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.620590297 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.620277653 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.619682153 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.620147546 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.623518611 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.619431373 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.621580091 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.622230741 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.621669825 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.621456039 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.621510236 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.62279392 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.621932202 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.621079451 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.619386137 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.621138474 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.619469255 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.620438399 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.622296109 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.622020211 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.655322411 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.62229832 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.622575235 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.622116412 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.621632334 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.622789738 seconds)
  done (took 108.408699372 seconds)
done (took 2070.214603395 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.60764726 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.60668482 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.611254365 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 10.770327166 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.613162729 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.274854793 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.17641145 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.613192144 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.612758962 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.613232332 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.613417579 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.608437022 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 11.772321147 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.612388339 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.613270022 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.606882739 seconds)
  done (took 59.812174257 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.644204366 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.622217123 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.753631857 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.617965936 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.645652624 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.833025272 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.683857234 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.618007998 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.823802196 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.620523875 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.607609833 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.642726961 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.618778239 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.623656272 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.640010692 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.84041704 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.913634295 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.610156558 seconds)
  done (took 34.848289599 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.158984833 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.637659549 seconds)
  done (took 6.286578321 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.641811689 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.6197599 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.620585104 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.617363449 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.609441676 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.611878144 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.618341204 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.61113099 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.622159175 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.767221155 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.620888147 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.632928381 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.618741064 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.619763671 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.626701615 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.668411256 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.751992048 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.630581137 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.627229678 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.624798017 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.617348736 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.795514432 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.669164332 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.629375151 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.769073189 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.624456451 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.623701403 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.632329149 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.774337477 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.629583815 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.620992469 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.620579811 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.62231596 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.612201122 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.189525258 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.625884756 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.655320406 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.629445816 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.62808935 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.772353527 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.623573351 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.628687563 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.612483927 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.18671836 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.747020361 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.864327496 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.613833984 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.621528789 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.623411031 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.778209577 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.623243598 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.623465547 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.684448246 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.614005976 seconds)
  done (took 101.847420834 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.650742792 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.613044861 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.800848435 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.637235238 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.61385183 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.612510184 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.637377119 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.959486519 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.673644764 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.61609252 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.964088441 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.310744425 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.61873477 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.666610663 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.65928365 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.639914375 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.615915164 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.61486354 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.615283834 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.617954911 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.223344836 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.63337513 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.616732637 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.771761248 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.659753286 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.226764746 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.616173436 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.636752855 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.640732489 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.615704893 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.27765461 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.627644804 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.67392205 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.616900999 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.934542809 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.078374304 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.03366591 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.617977839 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.615568992 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.619060951 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.616368737 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.225184004 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.053847911 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.617886672 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.620251272 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.22810015 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.614561874 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.629761871 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.619726356 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.895795457 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.615531008 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.618446823 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.616994719 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.636744985 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.617067782 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.674682259 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.670240511 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.228141083 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.617892151 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.61882729 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.663351669 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.621097035 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.622167427 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.61964586 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.620576269 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.060220984 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.804323196 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.624384066 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.059936837 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.276323267 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.618912305 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.355689238 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.618489453 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.622261658 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.697384939 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.634744445 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.61883335 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.221714452 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.641748651 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.620062054 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.037637517 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.622720746 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.953274766 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.640215324 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.621037548 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.257829272 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.623666895 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.678549047 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.621944622 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.625035821 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.620366235 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.622981006 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.94270372 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.644364346 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.622540044 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.621191525 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.665349504 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.623737464 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.62199069 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.628384468 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.360947006 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.622431706 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.621569777 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.624562433 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.621998886 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.621285758 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.621167959 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.622443006 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.910119173 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.622772626 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.628710521 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.624262418 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.622013693 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.628314935 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.775108608 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.624970997 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.994399905 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.623576108 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.632251104 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.624736885 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.62389195 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.62598949 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.630260391 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.625770806 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.604236056 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.943330695 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.644041112 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.642744524 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.625789283 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.625740612 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.62361236 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.624083744 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.653906467 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.631033896 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.487791601 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.645814549 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.651753401 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.623049761 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.639298768 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.626095232 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.625731635 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.62460051 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.959332206 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.943618567 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.828516939 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.628265552 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.624359395 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.496637747 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.669397613 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.814819383 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.646431561 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.625742656 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.931160532 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.821551954 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.627956966 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.62626587 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.626752706 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.918579268 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.626902393 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.965022732 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.304870113 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.628936715 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.625323206 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.481066911 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.392825546 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.627145266 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.627787078 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.954879718 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.646764405 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.62685603 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.626008324 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.628356843 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.6253995 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.631537675 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.634456604 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.627063696 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.628891022 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.701343569 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.827876352 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.648003886 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.632402826 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.234416632 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.631116141 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.628299756 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.62950095 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.632555226 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.627276794 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.666204729 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.628082074 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.681123373 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.63074977 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.629579237 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.267592112 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.629208414 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.630781935 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.828339846 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.443978147 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.628033122 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.625922532 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.628411577 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.658519525 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.263733321 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.691872469 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.002592114 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.63399196 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.674592528 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.629990261 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.669627617 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.266820763 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.631829048 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.628284705 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.428500102 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.629122702 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.322697464 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.628852832 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.630833771 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.367084557 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.6323862 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.631180228 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.629653941 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.629872927 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.946222876 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.63143827 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.64114332 seconds)
  done (took 565.72048534 seconds)
done (took 770.000647712 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.628407805 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.636420454 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.636632751 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.635030535 seconds)
  done (took 12.042954329 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.648322428 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.637683257 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.653018234 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.639560336 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.647805777 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.637326256 seconds)
  done (took 11.370947411 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.629965706 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.634022664 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.63630896 seconds)
  done (took 9.407068847 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.880717799 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.640500107 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.053114804 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.63759947 seconds)
  done (took 10.719762894 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.652099867 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.655571895 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.652523554 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.648493352 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.648453016 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.651294746 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.649153918 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.648636332 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.650736447 seconds)
  done (took 16.3621983 seconds)
done (took 61.40974782 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 1.71528396 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 1.716790705 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 2.657673565 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 1.673109058 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 1.775137489 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 1.722666688 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 1.721921485 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 1.723348255 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 1.719411328 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 1.672668983 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 1.719570689 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 1.667225812 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 1.717648633 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 1.837596059 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 1.67191088 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 1.7178539 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 1.663782346 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.810822328 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 1.73516286 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 1.674622811 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 1.742290661 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 1.670307086 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.675319434 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 2.637218349 seconds)
  done (took 44.546400693 seconds)
done (took 46.057689827 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.6682922 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.735115431 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.641675652 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.643631775 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.644237472 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.63831215 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.66545796 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.643886015 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.657476835 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.65764509 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.640497886 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.651860942 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.659877004 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.654399316 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.677330972 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.645360424 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.641108534 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.655268548 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.657964585 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.661982259 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.647128329 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.646488687 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.671616605 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.64367217 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.652334464 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.65230007 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.651478045 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.650802011 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.653009193 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.661012928 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.636795128 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.652950441 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.663571709 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.657878563 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.646463421 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.656092785 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.648089671 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.736315766 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.665102848 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.656634613 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.655883187 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.66162627 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.64995333 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.649690228 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.659287858 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.675096178 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.653769715 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.660033906 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.636692208 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.639815405 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.668785714 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.660620192 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.655048182 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.63809876 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.637375981 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.681834136 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.658549596 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.670603125 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.655874907 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.650534405 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.683410435 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.669950816 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.662691909 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.657191293 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.654747613 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.663930563 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.656687252 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.665893466 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.657250053 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.650986771 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.651593129 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.65781018 seconds)
done (took 128.864038792 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.76928872 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.643364862 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.801354764 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.658656354 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.814839274 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.771486964 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.655825358 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.657544658 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.655877191 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.450532134 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.656502263 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.656936015 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.648270171 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.656068781 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.768474266 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.657948569 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.65594627 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.346855303 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.65846418 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.787237514 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.646560217 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.656821578 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.659241221 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.446377932 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.64604318 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.642250945 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.785216213 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.658836998 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.344191106 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.6434139 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.644374882 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.346162464 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.785787022 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.676464107 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.668077434 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.667047347 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.817459927 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.661472721 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.773674722 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.775810877 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.803218339 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.698298905 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.644318232 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.650368914 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.662590717 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.66186125 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.658479069 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.686531546 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.646283137 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.660617466 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.353789411 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.671948785 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.661849575 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.660659465 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.659846805 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.690313354 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.663791501 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.661583714 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.788352027 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.662110937 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.775844139 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.44875739 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.453642634 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.661359704 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.647782383 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.660912828 seconds)
  done (took 129.729161303 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.722577244 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.728787194 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.775696134 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.654582763 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.700254985 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.778068803 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.654078329 seconds)
  done (took 13.532817538 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.660261894 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.66188373 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.701012143 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.701482632 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.659190558 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.827309637 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.659953358 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.665193152 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.662027714 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.705220678 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.661334014 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.663185838 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.672796226 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.652352444 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.700985503 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.663518937 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.770328604 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.656684266 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.663862884 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.805186044 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.662483102 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.673201906 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.706061406 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.666236604 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.664404757 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.65902227 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.415247575 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.661383814 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.663180842 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.665022771 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.6645656 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.721776104 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.663494688 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.653941666 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.662977542 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.790425513 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.664687386 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.664962179 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.667161096 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.653101633 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.662903322 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.665054666 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.6649669 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.6646081 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.663936354 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.679092724 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.666749096 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.6651154 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.664306811 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.665462288 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.707899979 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.663965378 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.664481035 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.664422846 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.710307297 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.675133643 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.667667355 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.665262027 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.66414287 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.665244552 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.808519138 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.704229518 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.663698103 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.703987593 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.666807867 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.66714914 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.666787437 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.664865267 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.748335268 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.665822181 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.70356872 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.666344729 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.83650457 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.682208939 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.66758418 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.661945385 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.661791582 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.666389247 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.656178919 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.662681703 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.666712207 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.658561544 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.6639429 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.665789504 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.668385419 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.821619049 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.769912705 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.667566118 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.674934434 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.665814864 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.666420632 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.710341225 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.667998984 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.668341559 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.711049447 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.77789415 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.710711582 seconds)
  done (took 169.652545369 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.671800994 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.670599157 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.67337285 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.697287786 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.660167824 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.659847001 seconds)
  done (took 11.558012083 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.659630919 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.672458336 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.669370986 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.669405432 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.670515174 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.670817378 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.6750233 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.663471512 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.674655576 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.672547645 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.671132585 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.668532199 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.669643367 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.670079707 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.673296833 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.669390445 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.674265136 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.66826587 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.670510509 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.672701013 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.658133575 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.671829017 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.672693757 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.665024703 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.674381838 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.670469541 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.682744186 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.670691187 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.670187408 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.672262592 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.67261858 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.67341516 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.663037291 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.668148134 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.678564087 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.664372904 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.675190076 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.673385068 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.67057708 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.672546193 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.672373914 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.672703538 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.670395832 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.672543112 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.665625162 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.667425814 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.676671138 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.687174996 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.677848099 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.672437731 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.670686481 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.672124327 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.673784349 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.672047336 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.668925736 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.665557718 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.675433235 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.677628575 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.676499646 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.663977272 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.673271746 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.675256727 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.667489965 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.6792594 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.673693058 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.673628636 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.665262751 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.676452623 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.674934441 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.673042263 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.675452402 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.673243039 seconds)
  done (took 122.887110606 seconds)
done (took 448.875501035 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.209225784 seconds)
  done (took 4.739747422 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.793610517 seconds)
  done (took 4.32589126 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.671003322 seconds)
  done (took 26.208582186 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.698173211 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.662301926 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.660747493 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.663259056 seconds)
  done (took 12.216054856 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.238474027 seconds)
  done (took 4.767732922 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.669540581 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.664801629 seconds)
  done (took 6.86535874 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 3.072445266 seconds)
  done (took 4.601030082 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.427053777 seconds)
  done (took 4.961738815 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.676242544 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.675815509 seconds)
  done (took 6.886882723 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.644286941 seconds)
  done (took 4.172564061 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.125139828 seconds)
  done (took 16.658851137 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.683421412 seconds)
  done (took 4.218693763 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.729019772 seconds)
  done (took 4.259208342 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.782831891 seconds)
  done (took 7.314371802 seconds)
done (took 113.726138381 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.65910807 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.658621317 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.65901076 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.662814634 seconds)
  done (took 12.170273899 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.737237257 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.74067862 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.747797086 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.735728756 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.731580128 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.741353428 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.703790075 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.702314344 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.731585414 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.729747458 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.743982327 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.733696155 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.742207237 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.70161639 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.728992573 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.742915337 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.731354103 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.749148769 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.70362565 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.733361747 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.676809536 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.735830945 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.728590514 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.678633986 seconds)
  done (took 42.96334224 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.58228555 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.736967045 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.822148013 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.719805501 seconds)
  done (took 9.393362556 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.783501873 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.783812188 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.798920848 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.834801922 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.883727334 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.797499959 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.704221108 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.699293142 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.686892481 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.784161206 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.855586899 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.781102427 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.997474893 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.677837057 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.996196665 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.677483486 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.678066675 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.78121169 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.832259263 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.861049954 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.678140233 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.781528927 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.787903146 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.783184145 seconds)
  done (took 44.459657008 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.686457163 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.69771502 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.680766465 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 1.682136093 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.682118063 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.68392127 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 1.694513427 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 1.684893072 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.687433633 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 1.677491142 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 1.682695762 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 1.682900551 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.693649322 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.681747605 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.681365199 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.688521591 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.742639261 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.69159261 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.751814933 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.680580332 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.681703826 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.68882685 seconds)
  done (took 38.74171808 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.666306974 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.663254017 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.01925122 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.91914151 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.663494286 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.666584632 seconds)
  done (took 16.133268557 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.756841828 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.909638715 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.673237525 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.102139474 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.188861846 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.673686386 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.672304946 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.954755891 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.328377418 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.351257453 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.725837103 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.754346974 seconds)
  done (took 24.629914902 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.759301115 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.677301657 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.676616905 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.751460331 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.676528133 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.678922181 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.759417305 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.232428784 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.682199205 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.953770266 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.689565042 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.761670847 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.927193686 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.686752518 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.680115549 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.663015751 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.908022346 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.277343372 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.677700966 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.679736561 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.709508299 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.678148554 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.683390633 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.934089344 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.679809152 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.679427498 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.943272019 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.678148861 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.013943035 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.987359833 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.989733218 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.68113744 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.956063798 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.170173308 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.786871549 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932517079 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.669865585 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.683597093 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.674749576 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.680416587 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.691348184 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.683266964 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.987703934 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.680763165 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.680037362 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.695567155 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.240365275 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.685715193 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.680108158 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.682560949 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.990777163 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.763661618 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.685668943 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.68048317 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.68271246 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.681491972 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.687192882 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.801858421 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.318741293 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.692227411 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.683610766 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.684528165 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.671596461 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.694380471 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.421919784 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.688213217 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.68746137 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.687044617 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.68503417 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.681960352 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.704512694 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.681413792 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.700899939 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.683466445 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.570568435 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.688274822 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.684119464 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.333884652 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.689733708 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.680782774 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.910258315 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.682823874 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.68285852 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.683389148 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.683556365 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.590965309 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.690447396 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.657425559 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.717273883 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.240359189 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.938773787 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.701663192 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.7144509 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.908440573 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.65858489 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.684763976 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.690526575 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.686726374 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.705324989 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.244495143 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.685324595 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.692456697 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.933497866 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.899378637 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.700434943 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.678836165 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.246579599 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.683946797 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.714160416 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.698079217 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.944639609 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.405700745 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.006555643 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.702995287 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.723469831 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.688337258 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.659203119 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.690183123 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.692692491 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.693152599 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.001617069 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.67812668 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.685922194 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.75853568 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.688084448 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.686968269 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.686173773 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.687397255 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.685267254 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.929377144 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.687833309 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.024748597 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.693789933 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.687299527 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.68767663 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.686609632 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.711211324 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.910209272 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.694723494 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.96518292 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.688149751 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.687850038 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.688286842 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.906376645 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.687210861 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.693557455 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.029959743 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.692191203 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.695914184 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.003602976 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.724709949 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.80015951 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.723258479 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.69350475 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.942611394 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.695493884 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.696233781 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.690217006 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.69103703 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.69419645 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.69631916 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.691826537 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415051801 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.662720751 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.693893212 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.690717777 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.706020313 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.764888783 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.698164935 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.946423073 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.696619572 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.686866354 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.696677559 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.688509249 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.933272983 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.002220568 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.690631798 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.861957145 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.248120759 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.415467766 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.70735843 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.688787297 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.691129569 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.692692554 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.694128017 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.691723411 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.691475733 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947227138 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.010221657 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.707366298 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.418430141 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.694329731 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.689845832 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.701087608 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.003645028 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.700836562 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.692681353 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.692761951 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.708411238 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.702366817 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.008644867 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.914233356 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.708505995 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.693806638 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.212996787 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.69954869 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.695012178 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.692555464 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.716603469 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.691574908 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329665201 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.03425681 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.712339666 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.004929862 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.693556169 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.71207279 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.692477827 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.701915173 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.708853821 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.70162867 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.703549997 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.949869615 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.696383282 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.69572419 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.333444327 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.586714699 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.358044566 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.694969795 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.708412639 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.698551492 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.256947937 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.692890994 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.697563036 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.980251119 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.254340826 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.695502803 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.254737588 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.695961054 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.602445066 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.00878199 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.924648295 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.695658445 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.70648176 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.010956097 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.909891606 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.72206341 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.701473955 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.702696589 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.670253586 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334871386 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.711664155 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.875213138 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.256213304 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.706280748 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.69812968 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.691704007 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.708924896 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.166154753 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.696854403 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.69819533 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.705563247 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.716988848 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339405551 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.703392442 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.699379273 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.440520046 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.71605007 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.262542582 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.69733473 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.954566159 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.011250092 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.994164996 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.714120553 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.70613449 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.945192401 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.012099662 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.698914964 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.698959142 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.366527244 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.558136138 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.707320302 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.699702612 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.672789327 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.712095269 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039346485 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.708294325 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.702516311 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.703860201 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.700231367 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.700532814 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.698716102 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.706055347 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.672423009 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.300565147 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.69703744 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.698137254 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.718224012 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.703084582 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.948912012 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.717093408 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.427418092 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.93088152 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.716208288 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.738192046 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.707204866 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.719361987 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.677644325 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.701615072 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.701941118 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.704955281 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.925746608 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.699911633 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.678588722 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.794133932 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.915338262 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.700211418 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.709525485 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968885238 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.70107564 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.708367111 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.60032109 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.733823494 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.712532007 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.703327844 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.711789211 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.73526106 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.778378701 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.959090017 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 2.015372777 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.016904944 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.173872482 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.717335623 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.704898723 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.721039484 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.785549719 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.714246783 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.703700758 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.701190373 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427815074 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.603505647 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.435885048 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.020499434 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.703354733 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.714101098 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.705186655 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945199694 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.70189046 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.980782013 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.706440258 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.70979749 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.730492308 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.724412935 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.718522895 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.921896718 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.981636588 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.70599229 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.71754912 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.7064089 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.707668934 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.026178936 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.919556974 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.310282935 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.359871095 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.703573448 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.718312558 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.271453177 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.980505225 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.706628868 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.706606986 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.705179664 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.723135595 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.717010059 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.71477641 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.70663092 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930612916 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.020137639 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.20613204 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.019468582 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.739735328 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.581684024 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.725721716 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.956595503 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.539418744 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.966565746 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.439064301 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.558037456 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.960621528 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.781911821 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.964598695 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.705652064 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945519554 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.72139472 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.706984423 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.708001096 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.70791043 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.708049303 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.021814412 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.438590874 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.967383796 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.714105584 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.721797392 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.737730431 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.966715432 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.933056553 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.61806885 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.930466125 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.02696 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.716808553 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.708670708 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.443446136 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.028672131 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.708606689 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.714456902 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97972364 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.709035004 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.743655168 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.585985578 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.706579149 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.370248857 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.921553258 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.731854887 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.71340966 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.583111836 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.448224657 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.716434388 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.310350052 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.710096116 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.719265095 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.98716777 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.718729174 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.712014076 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.998878006 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.71856715 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.713523571 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.975225318 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.439547489 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.625828245 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.736660545 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.712351259 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.714103605 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.711958612 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.803251627 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.713003803 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.712978127 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.176201736 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.713188235 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.712708158 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.725712951 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.730927939 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.717410128 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.713539432 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.713271305 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.720819606 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.688493958 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.687193 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.733877902 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.85963651 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35370585 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.715310558 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.326663315 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.049893439 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.962034295 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.713389456 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.690802463 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.721703665 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.713742927 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.714151001 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.715323315 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.709843631 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.370972459 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.713010887 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.034116171 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.722329588 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.925686508 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.929466807 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.735373395 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.975047741 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.719424825 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.735355912 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.691530958 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.716988181 seconds)
  done (took 1142.61983546 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.719982207 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.719622723 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.740950624 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.750849221 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.732094761 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.765709351 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.767747743 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.760764241 seconds)
  done (took 23.527571677 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.717092777 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.716405687 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.70929467 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.718170793 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.720829346 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.263215222 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.708339091 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.716521594 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.734141403 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.71077611 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.711315827 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.440934341 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.717136302 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.725155725 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.725048781 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.715914294 seconds)
  done (took 38.32675009 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.867319119 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.907090055 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.199507849 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.799187374 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.749449232 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.707594157 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.103621533 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.734906374 seconds)
  done (took 30.641685072 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.72311062 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.721779143 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.723632444 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.721226155 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.722696101 seconds)
  done (took 10.184170565 seconds)
done (took 1435.324940128 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.723104448 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.725776096 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.721630959 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.724195484 seconds)
  done (took 8.467415746 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.6944743 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.692947123 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.690953687 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.705170448 seconds)
  done (took 11.357713443 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.158220706 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.3688084 seconds)
  done (took 6.101796683 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.718433532 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.481280226 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.469590367 seconds)
  done (took 9.244450431 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.026458711 seconds)
  done (took 3.598519387 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.139343589 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.24041713 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.709398166 seconds)
  done (took 8.663579093 seconds)
done (took 49.004220334 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.708836007 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.478733538 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.863451354 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.708189576 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.869069255 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.864543419 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.99882571 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.719129581 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.710228112 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.710701567 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.711188357 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.876084097 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.987456985 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.480198321 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.989129666 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.47538473 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.874431348 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.708969089 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.712671811 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.72294736 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.002837031 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.725381689 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.709396316 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.710027945 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.875228403 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.854053211 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.709310349 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.479093548 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.709598524 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.719604784 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.857840302 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.712697601 seconds)
  done (took 93.810358511 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.712306457 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.727539207 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.710908399 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.712610296 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.714025433 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.712221962 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.709229736 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.713280627 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.712197794 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.730184329 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.710457994 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.7129242 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.714894927 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.713609344 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.712934565 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.714238949 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.722442162 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.710710687 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.729085592 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.71287216 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.71553695 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.712174068 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.733120108 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.736918666 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.713854192 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.712439232 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.721661189 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.712158696 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.713548235 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.726074983 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.713033816 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.713683698 seconds)
  done (took 88.508707666 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.713092421 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.712402277 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.71439401 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.732631293 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.715045538 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.715990706 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.736264752 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.711838448 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.725494809 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.717642124 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.714495031 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.7148469 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.71319605 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.715048876 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.714817332 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.71428582 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.714972051 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.716130654 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.717262455 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.713982884 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.717579649 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.734423673 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.723343496 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.715312125 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.733515723 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.714958889 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.714875874 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.725766804 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.715497899 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.715802227 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.7169521 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.724132165 seconds)
  done (took 88.574180853 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.960205445 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.732074831 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.751120098 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.724683523 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.752986792 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.730573272 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.726872431 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.983990838 seconds)
  done (took 17.942441598 seconds)
done (took 290.41085481 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.728794209 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.725446825 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.753248967 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.725491167 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.743167912 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.755044103 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.964235672 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.754763001 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.951179763 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.741834386 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.743711679 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.746416314 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.683168679 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.881038236 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.720188517 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.729248974 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.719849424 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.725277014 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.727288046 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.982411277 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.755870859 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.736201025 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.728721684 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.733442105 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.70371747 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.828018918 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.804589288 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.89726168 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.858179295 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.805324125 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.721667103 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.733482779 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.73501407 seconds)
  done (took 78.1245291 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.727306807 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.735380345 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.737629458 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.738395512 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.737770272 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.737352668 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.726276445 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.735502087 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.737326834 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.73970801 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.73756 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.73791223 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.737431141 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.737123705 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.737526634 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.715062232 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.727265202 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.738293186 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.72808801 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.718094566 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.737595779 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.736197903 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.742630355 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.73939929 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.738579285 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.739702298 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.737423344 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.738444954 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.738300608 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.736710959 seconds)
  done (took 53.634102573 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.737358718 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.732266902 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.722262777 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.738283585 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.729905082 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.735497612 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.084367753 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.740086088 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.734125321 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.732887831 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.723623214 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.741852207 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.784982355 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.72269525 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.734697424 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.73894516 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.739202873 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.732213374 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.722717733 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.74672589 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.094786295 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.740869947 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.086150472 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.745576368 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.73517423 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.730635334 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.736755843 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.723527403 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.735460007 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.725460442 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.726475866 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.080138098 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.725246125 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.724716787 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.726405412 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.742515992 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.740416076 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.725837682 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.733169805 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.734384469 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.085546664 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.733417036 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.726071301 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.725765808 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.736645928 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.742239843 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.726420662 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.752516075 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.035287668 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.740120784 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.725164971 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.7382406 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.742586569 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.736016828 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.036709574 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.737626567 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.73575171 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.728128199 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.740637022 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.086994516 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.742765232 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.735078831 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.729746134 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.756286168 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.742877886 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.736907577 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.751031853 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.736669642 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.72792655 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.738014417 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.727062757 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.734635918 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.743921869 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.729156795 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.741880428 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.747696813 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.737176524 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.727445789 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.738190349 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.086324919 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.739719764 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.740060235 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.099122608 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.739564341 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.748454904 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.747692725 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.744696879 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.819593076 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.086992577 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.687708296 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.749777581 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.730794498 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.090997019 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.74693854 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.739293294 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.728562384 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.745667494 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.747153723 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.72867107 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.729985642 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.739221992 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.750882218 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.730003532 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.741648502 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.09320618 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.74468173 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.730287128 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.7400226 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.819790533 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.747333253 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.748141175 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.741349608 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.099431902 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.744019377 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.748236874 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.730079533 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.737301164 seconds)
  done (took 247.779346882 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.732316093 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.755053052 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.732588606 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.75355226 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.732546786 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.743447937 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.733279454 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.735601964 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.737696195 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.733728625 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.732574534 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.742820215 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.739836055 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.732661616 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.736910112 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.735368376 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.733293882 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.739987778 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.736735101 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.73390509 seconds)
  done (took 52.346830825 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.747815578 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.420537695 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.394427518 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.749924531 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.750064802 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.740764758 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.811023066 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.751134286 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.749323844 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.103964707 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.955197594 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.753489557 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.750895909 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.749933211 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.395197449 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.755307767 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.108139252 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.419438796 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.751222835 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.420600371 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.74887432 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.751638622 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.741268998 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.420238098 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.118191034 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.095526263 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.812019863 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.423959371 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.751995317 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.749989728 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.422074311 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.75179789 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.742021101 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.415896764 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.751570435 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.76713096 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.752299377 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.815382596 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.814135885 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.108349326 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.428578833 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.107565681 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.763994129 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.937132901 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.754057288 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.730086157 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.43319026 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.751288296 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.729503895 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.753476654 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.757079752 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.410810893 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.744943609 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.413385836 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.755626262 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.754858721 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.425341429 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.411291351 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.404067772 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.957733449 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.747194718 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.098161334 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.753633444 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.435877684 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.752017118 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.752903906 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.754468354 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.961559972 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.427921349 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.097820379 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.113636262 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.112474963 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.757052544 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.826103354 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.755237979 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.111007554 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.824384132 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.205280939 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.117893175 seconds)
  done (took 157.859806273 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 2.096350006 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.85891543 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.191852086 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.38095605 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.315482651 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.905053798 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.881081809 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.016361763 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.749818136 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.858487125 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.518309182 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.84975245 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.592674276 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.82439371 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.867971313 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.877812694 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.219742099 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.741982346 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.472001868 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.491275931 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.748392321 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.858945099 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.587098246 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.169580617 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.761915935 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.586475598 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.74205063 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.337878121 seconds)
  done (took 65.102532533 seconds)
done (took 656.428160364 seconds)
SAVING RESULT...
DONE!
