cset: moving following pidspec: 7898
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.160251533 seconds)
loading group "string"... done (took 0.516892811 seconds)
loading group "linalg"... done (took 9.84985399 seconds)
loading group "parallel"... done (took 0.17008284 seconds)
loading group "find"... done (took 2.614012967 seconds)
loading group "tuple"... done (took 2.105999093 seconds)
loading group "dates"... done (took 1.391052632 seconds)
loading group "micro"... done (took 0.572948503 seconds)
loading group "io"... done (took 0.552799375 seconds)
loading group "scalar"... done (took 54.012389632 seconds)
loading group "sparse"... done (took 13.419623378 seconds)
loading group "broadcast"... done (took 1.302011912 seconds)
loading group "union"... done (took 2.547704951 seconds)
loading group "simd"... done (took 3.556047219 seconds)
loading group "random"... done (took 13.53524292 seconds)
loading group "problem"... done (took 2.249728272 seconds)
loading group "array"... done (took 23.136862506 seconds)
loading group "misc"... done (took 1.092588711 seconds)
loading group "sort"... done (took 3.699416955 seconds)
loading group "collection"... done (took 20.332988637 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.76296151 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.160976369 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.246606442 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.887251578 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.302793961 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.204361324 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.197705901 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.177387292 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.672416824 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.217479807 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.198640202 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.40039375 seconds)
done (took 7.235623473 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.289427306 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.095650197 seconds)
    (2/2) benchmarking "String"...
    done (took 0.213132546 seconds)
  done (took 0.949441052 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.09642692 seconds)
    (2/2) benchmarking "String"...
    done (took 0.146298504 seconds)
  done (took 0.885947651 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.13783737 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.172897009 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.148600315 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.134036818 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.149324104 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.148953471 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.135087854 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.148619457 seconds)
  done (took 1.679028929 seconds)
done (took 4.584700591 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.526430066 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.923668869 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.530450729 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.205261774 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.357168793 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.318047493 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.319055391 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.274444974 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.135620495 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.116680907 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.21252397 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.462825115 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.465961757 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.94662086 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.100742248 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.157051792 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.176824171 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.823676199 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.124361044 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.156438014 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.53381547 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.243566219 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.163254493 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.138797731 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.246833001 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.234698707 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.172141754 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.148951949 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.720167922 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.177785659 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.239358821 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.128619402 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.172152893 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.201885812 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.286486814 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.159857764 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.723518226 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.246871476 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.126779711 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.145025579 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.731299827 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.164007286 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.242118487 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.155895347 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.114866164 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.179492008 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.142747592 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.123359009 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.160110908 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.148126264 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.214822397 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.469749899 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.151633316 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.231398818 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.15478659 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.732144364 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.148412819 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.332925342 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.1819064 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.151030139 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.123265863 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.15005931 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.202950581 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.14206769 seconds)
  done (took 22.768603968 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.21315509 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.226975191 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.141057437 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.205734097 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.175402095 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.14291171 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.134740854 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.141051234 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.160832859 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.241998353 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.18597573 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.2360406 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.120923401 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.153017325 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.201561975 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.279993447 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.172139612 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.170712737 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.135035319 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.156884936 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.170926877 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.16122214 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.155747307 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.142262396 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.219409714 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.253834533 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.165964333 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.169822475 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.149554198 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.144393554 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.188071975 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.208305617 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.12246305 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.150610553 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.219745916 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.16846277 seconds)
  done (took 7.05552522 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.267062898 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.14938804 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.276003491 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.235902315 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.191474889 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.22403976 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.226591672 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.317042025 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.309918687 seconds)
    (10/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 0.248026042 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.232700312 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.207445103 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.173942688 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.16286692 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.124576124 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.142456507 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.125461798 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.887832245 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.220435983 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.205417712 seconds)
    (21/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.129758 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.220176488 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.15977925 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.143218377 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.130955744 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.149910963 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.139229849 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.168768716 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.340219032 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.250014035 seconds)
    (31/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.145337337 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.15842758 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.504638877 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.147313235 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.160122325 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.173800021 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.239868532 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.180952686 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.167982083 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.156728973 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.131746814 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.256910088 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.161502646 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.125427864 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.142782466 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.176663094 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.162996442 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.153942613 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.165519135 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.180943303 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.128842622 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.148633617 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.154938335 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.94427614 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.251013008 seconds)
    (56/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.181206517 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.148828811 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.324583017 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.151623123 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.162426114 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.152578387 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.272697933 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.179100486 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.143063813 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.12610539 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.157343335 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.126245444 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.165280636 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.587793449 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.127688749 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.20547291 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.158401122 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.1654331 seconds)
    (74/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 0.383848505 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.147108596 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.147716462 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.153639422 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.148889027 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.125747674 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.147346879 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.126190164 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.151057427 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.122273435 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.148973109 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.12751994 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.210158663 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.143424567 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.16591808 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.172175474 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.133631819 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.145939941 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.175196075 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.128785836 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.149095324 seconds)
    (95/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.223350106 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.141082928 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.139478331 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.15831539 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.189416264 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.132590037 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.300008307 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.130198154 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.170986436 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.145160722 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.159553625 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.159360365 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.128113642 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.147871101 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.142385226 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.129007681 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.206482867 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.132688815 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.144764995 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.134486961 seconds)
  done (took 27.95618448 seconds)
done (took 58.421631703 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.406665409 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.11113467 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.111974139 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.131656546 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.112522968 seconds)
  done (took 1.601627108 seconds)
done (took 2.306634608 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.249871826 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 0.338584498 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 0.251167282 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 0.150071372 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.213406217 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.216977733 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.202194403 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.211162295 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.221892319 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 0.235386108 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 0.127513467 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 0.239738554 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 0.227281774 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 0.21834772 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 0.126983578 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 0.255887039 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 0.213050543 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.200418598 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 0.255497218 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.148394884 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.144607391 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.165389732 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.144795629 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.148417165 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.145111168 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.163545267 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.144496946 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.162895211 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.139230691 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.1478002 seconds)
  done (took 2.369879943 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 0.17580765 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.148047307 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.162153183 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.137386313 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.142852251 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.149060492 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.143790886 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.161119958 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.14819565 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.161986628 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.139448033 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.147052548 seconds)
  done (took 2.357811225 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 0.126617189 seconds)
done (took 9.91877304 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.080459801 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.427932176 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.196799405 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.277485977 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.376005532 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.29844001 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.594619162 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.23612762 seconds)
  done (took 14.340135467 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.215258317 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.156381888 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.142773702 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.161336648 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.13834696 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.159374643 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.141220364 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.158798615 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.140772084 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.153697377 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.141414983 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.154485782 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.13890109 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.157430458 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.14051992 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.155273713 seconds)
  done (took 3.229868101 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.167245947 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.182164124 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.1448877 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.164384073 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.143204088 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.161750084 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.146463786 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.164165392 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.141457997 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.1583739 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.163648338 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.1455243 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.163176051 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.143326012 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.162381772 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.147692135 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.159029441 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.146308305 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.16377347 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.146923991 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.164154504 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.14512823 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.160452461 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.146133311 seconds)
  done (took 4.522641401 seconds)
done (took 22.809484533 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.200982566 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.150741849 seconds)
  done (took 1.080608605 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.204796052 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.219156808 seconds)
  done (took 1.155746111 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.16176479 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.15972486 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.169512335 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.166847889 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.13996421 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.155565541 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.180801117 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.141020134 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.155273789 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.140517225 seconds)
  done (took 2.307526161 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.145896109 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.159679377 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.153682875 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.207755435 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.167893615 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.141950693 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.160174608 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.14257233 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.161540212 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.139652359 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.16056872 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.155583387 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.161197103 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.157636804 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.160503469 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.144738363 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.164295772 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.159998636 seconds)
  done (took 3.582047265 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.141839169 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.142306373 seconds)
  done (took 1.019804594 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.142883481 seconds)
    (2/7) benchmarking "second"...
    done (took 0.155788674 seconds)
    (3/7) benchmarking "month"...
    done (took 0.141077091 seconds)
    (4/7) benchmarking "year"...
    done (took 0.156385977 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.139560776 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.155058311 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.139500808 seconds)
  done (took 1.770663261 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.614533737 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.2696886 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.420023188 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.12410164 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.137062769 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.364973435 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.157131832 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.108374257 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.106620761 seconds)
  done (took 3.07245046 seconds)
done (took 14.722609258 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.142256255 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.229525395 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.653864605 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.161574387 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.156764141 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.200173863 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.359537808 seconds)
done (took 2.651444237 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.370018621 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.18479352 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.121231224 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.13856675 seconds)
  done (took 1.559237885 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.132577708 seconds)
    (2/2) benchmarking "read"...
    done (took 0.164262378 seconds)
  done (took 1.047513339 seconds)
done (took 3.356793826 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.15599172 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.157848235 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.142955038 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.159941755 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.142090993 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.160158497 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.142640731 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.157138543 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.143694237 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.156484838 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.143103641 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.160313819 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.14058065 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.160268581 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.141543621 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.15868865 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.142536212 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.15667786 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.140366902 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.158379881 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.142573453 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.156197692 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.159621976 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.141603562 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.159734919 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.142351076 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.1572908 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.141293048 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.159384893 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.143443215 seconds)
  done (took 5.270486346 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.169317591 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.153131542 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.139580247 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.164190912 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.137057811 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.140192773 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.153590019 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.138007731 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.157147054 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.139184735 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.157967953 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.139998824 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.271886714 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.141275329 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.157852891 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.163668134 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.165854766 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.137033409 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.153366015 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.14025549 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.159530281 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.13628509 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.157518664 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.139519715 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.156955865 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.137861499 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.157871016 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.138914925 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.156842477 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.139576167 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.160956509 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.142847367 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.157038466 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.150068388 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.160476045 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.13969391 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.164678293 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.136724244 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.159670066 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.136537574 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.154426483 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.139808811 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.154847943 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.145096905 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.157767449 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.140254292 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.154702101 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.141577743 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.139906901 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.1587695 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.137513095 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.154406769 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.141637001 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.157362193 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.143690481 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.153901068 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.140966727 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.154437582 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.140979552 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.158080319 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.137217851 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.154465831 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.144398983 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.159932145 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.155564825 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.163774175 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.138422733 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.159824695 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.140945186 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.163821041 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.142546307 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.169451737 seconds)
  done (took 11.668175633 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.143180679 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.140787925 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.157327631 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.139527864 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.157865244 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.140439964 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.158746788 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.139843019 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.159873318 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.139969103 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.159144982 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.140188153 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.158785596 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.139541531 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.157897084 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.139355978 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.158671324 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.140573183 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.159195195 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.140987905 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.157982595 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.140061788 seconds)
  done (took 4.034298787 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.284892776 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.147328604 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.208397255 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.174793113 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.159252484 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.171703006 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.145747022 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.16473803 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.146078607 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.167735682 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.151240998 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.162948627 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.177842146 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.150330971 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.168922188 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.151512794 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.1631994 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.152252989 seconds)
  done (took 3.817777827 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.143699212 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.141988872 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.159528952 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.141091703 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.158514104 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.142898653 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.158281431 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.141053009 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.15939191 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.141045205 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.159162146 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.141602235 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.160036652 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.140584695 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.159535785 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.14080969 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.159393348 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.140871644 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.16013299 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.141206285 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.160820271 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.141164413 seconds)
  done (took 4.064282553 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.158068938 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.163183397 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.160220389 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.164927925 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.143645048 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.162207228 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.148675781 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.162034378 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.149828416 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.161955237 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.144304803 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.161024467 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.157231208 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.16194144 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.148454466 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.162167042 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.14420765 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.162321563 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.143890418 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.161896567 seconds)
  done (took 3.894934251 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.23671457 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.177701217 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.179778058 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.16791219 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.180259499 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.159341032 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.184005371 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.15897749 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.178613693 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.187847338 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.158959054 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.177433216 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.167242905 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.182920194 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.159803227 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.183853736 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.184320994 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.167899204 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.177059068 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.160916465 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.187195038 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.178717033 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.165416812 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.17766543 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.16098983 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.1778292 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.160956225 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.181124572 seconds)
  done (took 5.694783007 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.158551504 seconds)
    (2/2) benchmarking "in"...
    done (took 0.171664299 seconds)
  done (took 1.106804917 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.146963595 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.145452779 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.161976632 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.1446823 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.163026095 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.145569292 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.16327365 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.145788611 seconds)
  done (took 1.991727007 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.209074066 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.229808777 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.168143084 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.155675002 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.22919742 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.220342171 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.225078783 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.148685543 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.164040005 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.136175978 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.224582684 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.157569358 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.144590801 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.163656531 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.144715461 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.168939482 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.145328213 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.171940509 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.151280127 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.165071004 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.149771064 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.168375981 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.146579983 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.171371626 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.139788128 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.167116815 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.149405261 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.17279997 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.142443695 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.164840261 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.144893593 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.163446291 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.148263256 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.166899998 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.145406568 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.229288463 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.172159011 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.141815426 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.165683745 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.150233442 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.195723726 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.145312551 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.166226056 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.145278652 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.16970547 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.16793444 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.151243485 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.163531284 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.138012068 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.161201401 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.145335061 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.160278058 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.143946477 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.165475582 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.147452783 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.170899481 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.147589822 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.162366253 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.14168834 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.159125363 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.144545576 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.160109711 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.148244913 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.166923889 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.147517039 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.166346486 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.146677409 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.164272608 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.147633473 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.165847951 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.146707039 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.211190567 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.147753085 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.16853166 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.169726791 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.146336685 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.163427034 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.151733627 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.164100191 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.147961734 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.169026942 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.173690307 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.167884169 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.142692952 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.160743915 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.1530765 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.165789421 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.148155961 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.157121669 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.154387549 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.165969487 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.145980997 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.157178235 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.144541136 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.160761081 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.150394442 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.157953917 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.146436462 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.162427034 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.151918697 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.168060466 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.145843635 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.16742126 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.149955721 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.170168433 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.145589771 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.210752317 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.162571761 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.142710038 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.166872045 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.151154379 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.160329539 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.145537304 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.162848235 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.14298384 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.160737805 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.149521459 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.165864427 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.1475048 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.168541716 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.148433805 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.168212977 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.149931961 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.163774746 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.144254683 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.168943938 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.1542624 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.166878235 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.150051195 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.166153199 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.148892876 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.166396462 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.150305252 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.16501652 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.15306452 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.16262353 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.146429187 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.16642657 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.152221088 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.167177407 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.143325807 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.165879982 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.150000734 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.166097801 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.169685676 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.150693034 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.160757578 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.138984624 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.1670107 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.144343065 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.165101198 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.154235955 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.163171886 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.148737954 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.161647786 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.153876689 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.162351531 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.152379311 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.167571604 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.15244477 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.169933461 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.139069004 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.162525387 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.14877586 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.166891231 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.144064716 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.165321113 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.146933961 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.171205756 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.140732475 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.16907914 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.149360246 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.162986595 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.151704847 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.166324756 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.150367301 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.164877564 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.185085572 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.177230265 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.152378462 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.167243737 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.147800294 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.169367048 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.147010436 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.171464718 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.15297109 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.172010824 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.145868555 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.166084514 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.152980503 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.16440638 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.149705192 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.165982436 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.150627444 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.160605355 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.149059767 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.16035102 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.151617905 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.169608443 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.173097279 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.153708179 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.169966941 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.147701897 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.173977696 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.144800874 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.169473125 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.141668168 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.171449334 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.157539638 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.172465858 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.153869026 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.169509068 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.146660901 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.16961647 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.156138363 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.169442308 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.150111739 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.168724839 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.142189659 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.162861309 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.155341825 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.170792514 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.144671178 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.16606652 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.150989935 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.168270765 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.146449188 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.16014763 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.152613011 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.17184291 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.143666858 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.168328256 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.146074628 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.166636969 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.155248055 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.160844913 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.145036381 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.171435616 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.152286741 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.166769155 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.149514553 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.170458703 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.153577084 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.170627336 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.150440786 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.165955771 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.157139854 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.166373086 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.147997578 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.164784121 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.150627742 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.165964384 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.150718248 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.169492496 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.145410774 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.16648035 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.172073652 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.15418363 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.171883944 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.148155807 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.172270153 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.154494001 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.173573176 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.147054854 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.173167894 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.144491694 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.161088745 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.147221566 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.160896645 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.152013343 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.164516883 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.1533238 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.166343878 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.149064802 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.171330864 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.152097891 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.167276027 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.153127447 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.179480172 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.142765636 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.161484816 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.147284444 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.167670258 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.145321995 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.165240618 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.149437864 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.169931189 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.152616186 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.170474757 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.145747146 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.167828589 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.15380219 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.16574029 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.173505122 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.153866177 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.17441102 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.145643212 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.175142136 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.146902221 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.17215382 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.144016 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.16833516 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.149437875 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.168198424 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.14692224 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.167240664 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.145729762 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.161852161 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.145462646 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.174593133 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.149692708 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.173671388 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.149245455 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.167321297 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.14618214 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.165970414 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.155294632 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.168776148 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.156955546 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.169835738 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.142857634 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.163879942 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.155086186 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.16993441 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.155906895 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.163735983 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.153593056 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.175677185 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.154184202 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.170589976 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.158324919 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.179076988 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.154728762 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.175786807 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.143857219 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.16782314 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.155432682 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.17010234 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.151366535 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.17170199 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.143624985 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.172804337 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.154556048 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.172867693 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.168604694 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.143479642 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.149672109 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.17585584 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.154017498 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.172318055 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.151149896 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.171149947 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.14656723 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.176415612 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.154716913 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.172978911 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.176724564 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.151377555 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.173751358 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.148516808 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.174572258 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.150641367 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.166054194 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.143867593 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.168054748 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.156960838 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.16454769 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.155629554 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.174014407 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.148486172 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.168802979 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.155850833 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.166853113 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.153838309 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.175910366 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.149546896 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.180009676 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.152249019 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.168893204 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.154502463 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.177691086 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.146247962 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.169714657 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.15038582 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.176353953 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.150395831 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.175744715 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.151995611 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.174789878 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.154566819 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.176028535 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.154495072 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.175923492 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.144673211 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.176948147 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.154641613 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.17449183 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.148410343 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.169690767 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.146571962 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.17076714 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.157466827 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.169284148 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.159851325 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.176186989 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.14945953 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.170665899 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.155337337 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.171561453 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.157564434 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.169418541 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.153155475 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.165179805 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.153641557 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.171533663 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.178105489 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.149112482 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.167044171 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.156554896 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.176079128 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.155857085 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.174193154 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.157025564 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.165753471 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.145151315 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.17383906 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.148761701 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.179471506 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.155180346 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.169059955 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.150549014 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.174657033 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.153351403 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.177550208 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.14763512 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.169268749 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.153560089 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.172822541 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.150453394 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.166650209 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.154656962 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.171333789 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.155038689 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.171938203 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.148500289 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.172228709 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.15923661 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.171739587 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.14854742 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.171192965 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.158830451 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.171577183 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.149393788 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.167629267 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.158833715 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.176154909 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.157450579 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.1709022 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.151983846 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.170376896 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.15273436 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.178720095 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.170759913 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.153013268 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.170699541 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.156683681 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.175809794 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.144535523 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.170138482 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.161462244 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.177195578 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.155721195 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.174344297 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.152192813 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.179074183 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.159801938 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.174092177 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.147341107 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.167059911 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.151685779 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.166875049 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.155508071 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.17776422 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.153154771 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.171938719 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.156716176 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.176738808 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.155069554 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.175455918 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.146751137 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.179141594 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.15012704 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.176523702 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.147181868 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.167603748 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.155515759 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.17858528 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.153108588 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.172782622 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.15416933 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.175477534 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.148012428 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.171790173 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.156505033 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.177544106 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.158776495 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.172683134 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.15186112 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.175938386 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.162621206 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.173892995 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.152569837 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.180424623 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.159840806 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.174342848 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.152636987 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.178255851 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.158572284 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.17704687 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.159133771 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.174525759 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.172856337 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.159334843 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.18022717 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.162616328 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.172857763 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.147239877 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.177175432 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.15304834 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.168200351 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.158723465 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.180988288 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.159488422 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.17386652 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.150988967 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.181732445 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.158623497 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.174051798 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.151130569 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.171832562 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.158050761 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.173365141 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.156990971 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.171456228 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.161067634 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.180965625 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.159829415 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.182397829 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.148430128 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.179496226 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.155778441 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.180705402 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.154731218 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.168582758 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.14861699 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.176046855 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.161382535 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.179479726 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.156981205 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.177810529 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.157800472 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.176388174 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.154261661 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.17245267 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.159789164 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.179601073 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.155412485 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.176611822 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.152677948 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.175847042 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.154342281 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.17950301 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.160048276 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.177142372 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.16185664 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.179114128 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.174018843 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.151868378 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.175170996 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.15646328 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.175979851 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.161781869 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.171892509 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.149553496 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.179588691 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.163197577 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.174621323 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.161395746 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.18104016 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.1530872 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.177291621 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.162448638 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.177936086 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.15628727 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.17648095 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.157658035 seconds)
  done (took 97.212467176 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.201983118 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.183636496 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.156379763 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.176653846 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.174711141 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.178895378 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.156999071 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.176698487 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.159048546 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.185896002 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.156944182 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.17573244 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.192012559 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.17796997 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.194235067 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.165988513 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.17730518 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.157302534 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.175444729 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.157229942 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.191466789 seconds)
  done (took 4.547827563 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.157670711 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.155759965 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.176012702 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.156197424 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.176482329 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.157116732 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.177465632 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.157547977 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.176931613 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.156231599 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.176473688 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.156778251 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.176792896 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.155734368 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.176287385 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.157101067 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.176665781 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.156980449 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.177522102 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.156502137 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.176663417 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.155857496 seconds)
  done (took 4.522281543 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.186370113 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.180112761 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.153818608 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.157326766 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.181120562 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.157204863 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.181876912 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.156749907 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.185084678 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.151811545 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.170478221 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.152529179 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.175326289 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.156838946 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.173791119 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.157021115 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.184338283 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.160393699 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.1821722 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.15671414 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.170315298 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.156613311 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.179880203 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.149266208 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.18479306 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.161586904 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.183188656 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.160324525 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.170693751 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.161637134 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.179133409 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.15291957 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.169215259 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.149524344 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.170582562 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.16108474 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.181702264 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.157598104 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.179149286 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.151222334 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.180331069 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.161778627 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.148421207 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.181759533 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.157930945 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.173452681 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.159911408 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.179186663 seconds)
  done (took 8.912288536 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.188371607 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.216416426 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.161038161 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.210377952 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.19302832 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.165765605 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.18318357 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.18709778 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.182406736 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.160717198 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.195163663 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.196075675 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.161285742 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.185518456 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.160204426 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.183974948 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.163613293 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.181581275 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.167079811 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.182477277 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.165189468 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.183914888 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.17042967 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.191873975 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.184394813 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.161669805 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.182751601 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.164834159 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.192387461 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.166386046 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.186473843 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.166954166 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.192787732 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.163954258 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.183217287 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.18524686 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.173582233 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.184984855 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.163196411 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.180471843 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.162560775 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.186486702 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.164191462 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.195280943 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.163064588 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.185338627 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.163541358 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.180011243 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.19197859 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.164269597 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.189376449 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.173008265 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.187138927 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.162288709 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.186570482 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.17081273 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.184735234 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.161457116 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.184149278 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.193000044 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.161448868 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.183960501 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.173411795 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.183954462 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.16812291 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.193615157 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.164349293 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.188121961 seconds)
  done (took 13.112325955 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.196701701 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.187881765 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.173373615 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.194013132 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.165550604 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.187574351 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.166242599 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.187641805 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.187954887 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.170528162 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.188432441 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.296656469 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.168504596 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.193343384 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.166145463 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.433217461 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.166382961 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.187319582 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.166569507 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.188848843 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.188357737 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.173007283 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.187625706 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.172998407 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.197433721 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.162979054 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.186602811 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.188036337 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.1720846 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.187533048 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.176868681 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.189037284 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.164968619 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.193542463 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.198566012 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.166506922 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.182169052 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.16524462 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.187562013 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.165623716 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.184037297 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.173413588 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.186997105 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.162420351 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.187249377 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.187048195 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.172903358 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.197756093 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.17047542 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.191829597 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.164835168 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.19351286 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.187815532 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.166026158 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.194530187 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.18121323 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.194794829 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.194298042 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.16462191 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.195794211 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.17359717 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.200656494 seconds)
  done (took 12.508539553 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.162914949 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.160462571 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.183052052 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.160502345 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.181970054 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.160778304 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.18264618 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.162777082 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.182839429 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.161325888 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.182801636 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.161515938 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.182954111 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.161954353 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.183540862 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.162904861 seconds)
  done (took 3.646090902 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.183460799 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.199725578 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.264613608 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.164157498 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.187780853 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.168047088 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.186472092 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.164894956 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.185071293 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.167924247 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.188273333 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.164796846 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.201420294 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.163199499 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.184251249 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.164618273 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.183719597 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.166257787 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.183853346 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.266616741 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.166014937 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.186619423 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.163030028 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.189338101 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.163049292 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.188395285 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.167908937 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.184616075 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.164206429 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.184534636 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.165395963 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.190973096 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.164727585 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.190289608 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.164421775 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.186336729 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.161982064 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.186589167 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.166113955 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.187275146 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.165609075 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.186814556 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.163722242 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.186734968 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.161792581 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.186984791 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.161905262 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.190235827 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.16512308 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.188274965 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.16317169 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.193324446 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.190269927 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.171599859 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.192646263 seconds)
  done (took 10.846412628 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.177439571 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.187446074 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.175437705 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.184506702 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.163792732 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.188640333 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.16520034 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.187637253 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.163666717 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.184605955 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.165933961 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.188106672 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.16513563 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.189274578 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.164054191 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.187039931 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.161836433 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.18738795 seconds)
  done (took 4.107836539 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.165567093 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.16093302 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.185399789 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.161736544 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.185173208 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.163826217 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.185888438 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.161893288 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.186023508 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.161745374 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.184442909 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.162397756 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.184034296 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.162102568 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.184415149 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.162025066 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.184024605 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.162643328 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.184015391 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.162412218 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.184814844 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.162315832 seconds)
  done (took 4.720938259 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.177244507 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.261905898 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.192287329 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.271523003 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.159736092 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.180511787 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.168401775 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.182768189 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.176365579 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.181862182 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.158989396 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.18250668 seconds)
  done (took 3.224357602 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.194485564 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.221758646 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.164325746 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.188929569 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.172817602 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.19127961 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.169417224 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.190783955 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.197283355 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.181873231 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.190905085 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.175876628 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.197991767 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.175829548 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.193382101 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.195032713 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.169435738 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.191131027 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.165224526 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.205454462 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.169305428 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.196637231 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.169347677 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.191343035 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.192411755 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.176234505 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.197899204 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.179840686 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.191796494 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.198556258 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.172671223 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.193039921 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.176122922 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.202940757 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.165739426 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.197031918 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.169981438 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.203573734 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.195500066 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.17664863 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.188595039 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.172607536 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.199098875 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.197324809 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.177002087 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.19196194 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.173785539 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.192829013 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.169902903 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.211221405 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.195182066 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.17865605 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.196383993 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.175289313 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.198996778 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.212440926 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.181736537 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.198580598 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.172884105 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.202770985 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.199760551 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.17573766 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.199087449 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.203803357 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.173639171 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.200522405 seconds)
  done (took 13.324547027 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.208460924 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.19110142 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.170541554 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.203720599 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.177598925 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.192768566 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.193064687 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.17055634 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.194142117 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.16809247 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.23329018 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.173020983 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.199847726 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.199488775 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.171567677 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.19340184 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.170153486 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.200360467 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.16766796 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.211775689 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.193261643 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.178970378 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.19991279 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.17671556 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.203096952 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.196821235 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.171968938 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.19195013 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.172302448 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.192838002 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.175266752 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.193560227 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.177113195 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.189822167 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.201097725 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.171267692 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.192470072 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.176384808 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.194657274 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.174430683 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.200183342 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.207392953 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.171526652 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.192523168 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.182511043 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.195050679 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.17051477 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.191085462 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.171139432 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.189596466 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.182297338 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.2066003 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.204372868 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.178789194 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.194234125 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.170325187 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.192883695 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.194615072 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.170748505 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.198511437 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.17929565 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.195576151 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.18964773 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.195390065 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.19542786 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.179297085 seconds)
  done (took 13.356029046 seconds)
done (took 236.329661806 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.317167352 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.342481778 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.156858187 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 9.356206996 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.165896763 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 4.87865233 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 4.779096508 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.227266195 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.181834939 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.158394267 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.181602241 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.175596284 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 9.53799124 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.15617662 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.178408213 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.194663748 seconds)
  done (took 31.930654266 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.355813028 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.396462411 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.174355009 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.18565562 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.16423276 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.186272542 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.16048278 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.187726661 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.163134293 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.189086052 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.162291297 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.181858019 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.189635188 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.158614109 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.186093675 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.162874347 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.190711652 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.162392557 seconds)
  done (took 4.508342769 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.185751425 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.23461861 seconds)
  done (took 1.381407367 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.196740015 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.282295553 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.385513971 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.237949677 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.183043028 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.203282325 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.235707294 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.17372007 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.274380868 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.198811868 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.175321344 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.184256491 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.188741945 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.191582091 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.178520648 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.184427413 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.190542757 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.200849359 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.176518108 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.188003808 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.212517588 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.16487689 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.191778275 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.178822674 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.267236036 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.199176671 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.16675781 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.187000584 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.164096624 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.201010394 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.170863376 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.203063547 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.174211778 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.245874058 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.189210259 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.239926322 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.167646263 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.187229412 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.177710209 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.18678696 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.166908865 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.188714984 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.197265087 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.161695882 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.184473335 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.168825344 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.186516271 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.164306596 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.194159211 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.166605742 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.195432226 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.169985123 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.237527699 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.190796738 seconds)
  done (took 11.628100761 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.999459113 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.212170579 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.186500795 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.14867101 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.20883817 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.176559023 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.992652862 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.190811953 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.313543334 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.080564602 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.179032915 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.195719702 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.305308212 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.34266498 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.359783124 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.416552628 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.853397414 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.176165994 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.218905402 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.231007175 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.168103688 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.204237135 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.202273698 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.485579671 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.187460141 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.163411161 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.1930638 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.194307737 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.216750977 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.187673319 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.190505328 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.261525151 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.336651295 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.297441998 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.16436404 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.185003076 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.162682966 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.251064492 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.330794978 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.303794957 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.231623436 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.18351779 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.163982544 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.191871185 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.202542679 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.161843526 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.248227226 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.258032632 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.256148191 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.167642036 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.195393286 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.193879907 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.165964667 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.243348043 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.185691396 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.423054343 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.426209795 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.187558113 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.168952022 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.200068636 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.330587196 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.190998531 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.300336911 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.210349319 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.277409377 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.163548839 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.878253268 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.226365268 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.186528928 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.19200522 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.168034053 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.192886171 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.167595763 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.245051817 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.486806232 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.169870182 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.192722363 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.164382868 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.299781975 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.189083239 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.163430275 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.243618933 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.191210712 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.170561189 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.196161356 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.194680531 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.230281809 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.340281376 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.195095218 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.195134508 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.168285407 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.197404196 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.165480689 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.296665017 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.293019773 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.241577159 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.296237402 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.194566378 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.248246387 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.250955014 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.168581129 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.256376562 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.195132232 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.177356971 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.191918879 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.289330112 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.224208943 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.19168799 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.168655947 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.194826669 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.201820669 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.194205435 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.171073288 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.253748518 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.545008543 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.252175551 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.187664719 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.169756532 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.194664293 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.245903566 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.171655779 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.348254904 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.171486841 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.253082177 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.194414538 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.163453644 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.194946882 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.248499108 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.172248513 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.194578096 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.169336162 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.199076006 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.346177072 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.286520417 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.199295313 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.312993317 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.261084608 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.170810399 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.259710133 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.196111716 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.251647141 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.174046493 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.193808737 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.166201984 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.871100514 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.200947259 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.195381903 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.16983243 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.269321048 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.165826361 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.193162113 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.166417731 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.188044734 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.854624505 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.194096547 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.166185599 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.169098675 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.194647329 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.194985066 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.171574796 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.194689442 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.247609606 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.311610437 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.199184422 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.169899797 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.189921307 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.244887357 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.16650246 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.190755968 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.165772601 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.191904428 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.190944836 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.193722213 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.169427249 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.255323101 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.247022155 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.29580375 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.668456002 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.165643732 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.191020657 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.308151628 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.167265254 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.415263897 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.173683029 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.325089375 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.250613237 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.164851421 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.447299901 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.225839529 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.270439912 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.193234382 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.25900451 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.164009806 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.19721583 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.245543879 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.165682018 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.197543727 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.245026912 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.174648364 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.197880493 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.31994233 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.191676196 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.312228254 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.165214594 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.257620397 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.168224435 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.19573634 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.393942445 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.192238516 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.177605025 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.245884768 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.195895519 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.167681519 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.947694229 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.193132911 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.199994379 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.171310729 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.298590983 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.249301617 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.19859094 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.199637232 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.176007213 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.248665996 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.298619957 seconds)
  done (took 62.355749917 seconds)
done (took 112.759101667 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.32377919 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.231241756 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.427120328 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.238988073 seconds)
  done (took 2.282598155 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.353686748 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.208240941 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.304981571 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.18945374 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.313305981 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.163222274 seconds)
  done (took 2.541847756 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.236153302 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.232479862 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.233401716 seconds)
  done (took 1.717423096 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.274842124 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.27773596 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.417191549 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.328952994 seconds)
  done (took 2.374140713 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.343043243 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.182582329 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.222205252 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.293698782 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.309133117 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.273327082 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.190866485 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.241337205 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.221902796 seconds)
  done (took 3.323264953 seconds)
done (took 13.247626086 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 0.207360536 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 0.222625399 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.188072786 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 0.205341161 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 0.194694376 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 0.224933033 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 0.195242711 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 0.220307399 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 0.1944478 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 0.206429153 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 0.193967545 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.202118948 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 0.288155254 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 0.195870468 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 0.202493924 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 0.1937704 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.202338924 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.228123096 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 0.195083614 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 0.202994861 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 0.196938226 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 0.202114602 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.177029085 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.210580475 seconds)
  done (took 5.955590917 seconds)
done (took 6.971512039 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.278004676 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.181532565 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.173995764 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.202936003 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.282374458 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.182843033 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.21922473 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.17762477 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.212500394 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.175993734 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.189650736 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.190203235 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.201110732 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.275949567 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.178401433 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.193536219 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.166160256 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.213233961 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.190623317 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.218038022 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.283284744 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.170313924 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.213144174 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.166158593 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.282549552 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.197334844 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.174933114 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.202975781 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.18835656 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.202344109 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.177306479 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.19140401 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.192071776 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.217944281 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.167671885 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.202167425 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.167330551 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.137025236 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.203109649 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.178777473 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.213724334 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.178474698 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.199677729 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.19333219 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.178261199 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.202429493 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.167762155 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.204843939 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.166885907 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.202367165 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.171137514 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.219043618 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.176744882 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.192336796 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.166757698 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.193817546 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.187767786 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.193790065 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.189872911 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.19364646 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.168710902 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.194731464 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.178361145 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.195545049 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.1766377 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.192664536 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.177881649 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.204170038 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.17644522 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.196839392 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.168979437 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.203169461 seconds)
done (took 15.069795278 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.175477674 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.241206544 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.279311838 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.257691324 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.226807271 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.211274504 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.182743592 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.219953939 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.202641767 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.214424663 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.205381296 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.226976827 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.29120573 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.185279552 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.211304048 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.180440415 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.207243145 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.201267213 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.260592868 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.223190983 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.218735529 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.184922177 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.221133709 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.187397423 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.19813755 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.196543677 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.203327777 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.181310806 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.198759913 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.192041798 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.218329958 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.198129412 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.175933174 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.219068262 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.190967365 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.209963529 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.184294196 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.208082307 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.173233565 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.198913473 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.179628414 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.215477364 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.173704111 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.210723058 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.206211646 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.189243962 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.206104188 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.184710378 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.199430328 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.17960884 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.19916381 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.20018577 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.212429337 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.189696457 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.212868915 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.192532826 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.213657462 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.186473951 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.203705699 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.184757937 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.200985839 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.174405451 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.200141366 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.220219022 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.177491327 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.211574878 seconds)
  done (took 14.514306724 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.191912547 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.229942236 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.183231766 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.210929004 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.177333413 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.193505027 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.16660914 seconds)
  done (took 2.380752151 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.170380945 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.294780919 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.292219282 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.292396637 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.289372775 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.300020082 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.192619631 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.195093737 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.207005726 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.207186487 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.294783179 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.329532896 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.179588381 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.211653838 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.298606296 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.167551158 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.29386496 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.274795563 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.210493657 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.266581872 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.215387541 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.230287463 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.181537352 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.196488371 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.287608305 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.168947392 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.342151709 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.216167491 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.179266285 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.211383785 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.183871031 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.279251663 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.290996459 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.183192648 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.205385769 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.291803879 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.287806375 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.185330866 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.300875544 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.203446637 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.288958854 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.183645598 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.214108708 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.185747897 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.21281274 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.277942101 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.189496076 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.213294676 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.185030336 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.299328434 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.209130183 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.293132469 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.181935078 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.212467276 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.179397372 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.214997433 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.195514344 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.212163476 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.300191143 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.188415654 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.292469597 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.293583184 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.290595441 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.295882036 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.196491734 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.292812354 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.281097115 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.184241886 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.288624641 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.214663272 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.296753673 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.18598814 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.210522281 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.285006208 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.188364879 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.295702068 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.298196867 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.210335805 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.184650083 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.202620307 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.184330379 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.197734345 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.298249956 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.185417697 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.21057774 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.190216314 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.212650677 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.186200907 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.284142715 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.223559602 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.184995118 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.209853069 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.19133803 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.212266037 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.214649058 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.301121951 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.18142263 seconds)
  done (took 23.753664964 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.173335361 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.171782428 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.202924769 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.199808007 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.172608156 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.199598435 seconds)
  done (took 2.193066278 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.212502906 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.213005469 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.195673183 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.214275554 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.239503154 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.299555312 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.305497853 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.210942365 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.204825139 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.223646248 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.30467619 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.307015452 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.304797842 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.189806628 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.306966785 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.217018001 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.310998571 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.18447634 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.22368687 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.186412898 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.213543339 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.218096715 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.185281811 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.293864945 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.186960936 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.21827784 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.207983503 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.197500037 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.22192965 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.181537406 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.217898225 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.18747483 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.205515946 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.181742384 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.306469115 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.209430801 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.183033776 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.217678343 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.190749489 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.216558652 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.308380645 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.184335796 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.222218203 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.217097143 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.180689233 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.20653396 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.189495211 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.205774147 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.311204675 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.189237443 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.217204023 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.188351473 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.21676946 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.190101198 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.205836017 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.181820283 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.216177802 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.310980567 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.191575256 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.208091962 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.216205811 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.189141156 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.208711471 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.191719853 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.215088146 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.191254041 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.207419262 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.189163844 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.211354134 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.18901707 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.217075032 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.189362579 seconds)
  done (took 16.926052106 seconds)
done (took 60.797884541 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.729518703 seconds)
  done (took 2.796951629 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.190772151 seconds)
  done (took 2.271796698 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.140939587 seconds)
  done (took 19.254021793 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.488556379 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.414724608 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.104581657 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.243896516 seconds)
  done (took 3.338733491 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.146480614 seconds)
  done (took 2.237031468 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.483572919 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.344337181 seconds)
  done (took 1.916699554 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.818816663 seconds)
  done (took 1.921481722 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.80877696 seconds)
  done (took 2.900759912 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.36526179 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.288674492 seconds)
  done (took 1.7571636 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.684463525 seconds)
  done (took 1.788896852 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 13.246154909 seconds)
  done (took 14.347066661 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.323610132 seconds)
  done (took 1.430517868 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.363329206 seconds)
  done (took 1.47462277 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.675802439 seconds)
  done (took 4.785162107 seconds)
done (took 63.31029233 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.189224157 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.216760114 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.189378891 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.214762195 seconds)
  done (took 1.906212893 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.192444871 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.214359919 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.18986948 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.213000758 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.19175191 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.21324679 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.185774275 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.216726957 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.187736745 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.215401241 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.187204086 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.213294164 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.188869395 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.213474497 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.184325539 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.215604791 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.190519669 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.214468912 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.187328957 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.214032024 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.18802094 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.216607684 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.190869058 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.218339335 seconds)
  done (took 5.950483675 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.186686884 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.203021982 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.179702308 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.203217997 seconds)
  done (took 1.888033942 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.200076612 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.228729331 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.201527619 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.224844382 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.202648186 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.228027753 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.186518903 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.212772651 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.187222241 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.225213597 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.204318194 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.230249846 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.229186737 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.192150384 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.227559862 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.182620864 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.219566183 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.199597313 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.224396492 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.200232122 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.218774033 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.196377668 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.214447979 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.198599682 seconds)
  done (took 6.147213621 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.264833154 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.228095917 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.213768451 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 0.24457495 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.186171403 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.243568953 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 0.26329057 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 0.192628774 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.223159257 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 0.192543912 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 0.215862167 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 0.187818977 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.26745399 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.222178349 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.19017739 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.216686838 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.195477907 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.220477911 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.230103072 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.219509868 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.193927345 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.226578951 seconds)
  done (took 5.953195701 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.278966081 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.207817877 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.177224296 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.20496438 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.219115918 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.18087514 seconds)
  done (took 2.386488082 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.179244855 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.173030571 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.200651106 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.174208731 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.204235424 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.17312351 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.20074766 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.173684528 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.201318977 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.173516011 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.20183442 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.172025225 seconds)
  done (took 3.345269139 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.309611094 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.21959777 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.355160049 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.470343771 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.259055084 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.261730897 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.375341075 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.231109752 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.278775991 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.236235791 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.283513667 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23045242 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.254057355 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.309978095 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.213181752 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.246013088 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.272549519 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.332160684 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212602743 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.336741133 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.258293225 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.278439145 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.262593692 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.248530935 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.237749513 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234028586 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.217759191 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.197997067 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265995176 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.264536523 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.273290902 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250730617 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.212412646 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2910644 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.311063891 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.275908793 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.369578692 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.230906044 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.231543844 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.289090194 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.332410227 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.240921963 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.291293387 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.254580829 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.199080871 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.314099395 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248870613 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.286555096 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.20370638 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.243634725 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279891233 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249715578 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.269363687 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.237782776 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.400161035 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203010718 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.239503839 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.280824305 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.289505518 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.303596042 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.250660173 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.22343346 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.273758368 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.292581329 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.315362103 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.211448277 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.264106849 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.225224861 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23720084 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.308924842 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.284723862 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.261994477 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.289330354 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202486739 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.272841442 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.268310539 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223445632 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.306224078 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.270977351 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.220971718 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220672279 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233845688 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196322428 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.285710887 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.221651418 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.318751157 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201419309 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.271900283 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.277146482 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.222653547 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.260498904 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.25959819 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233829804 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.248798709 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.158064075 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244057989 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.260970347 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226875514 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228845688 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.253036334 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210204481 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.227229305 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222305991 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.223034397 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271745955 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.193293476 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.258859225 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271560042 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.204203793 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.281082313 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.249938995 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.235080249 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267706569 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.297798864 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20069384 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.233792757 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.325752397 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270833354 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.207534399 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.275036407 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.3005335 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.239261487 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204735814 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265703164 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.297515437 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.215198895 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.303161621 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238532497 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.236006582 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.197409565 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.275364586 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.261821837 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.233647202 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227933561 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.268432826 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.259112117 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.228516889 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.241192027 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.254650816 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.232423414 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225077623 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20766634 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234740162 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.213388558 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.253231181 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.239444433 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224492254 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267316921 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.267166625 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225963176 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235280331 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273846215 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201675677 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.271248121 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.250581398 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.190455818 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.276290429 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.302539311 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.199733178 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.283146954 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.262580982 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.281168048 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.273523406 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20046495 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.285618289 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.231151893 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.191338981 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26322918 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.270971395 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.232750212 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.290914857 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279399109 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.266307106 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.265030452 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218965139 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268532587 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.287135738 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.259001266 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.212125977 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.275930335 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.270263894 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.193433247 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.224154577 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.199339121 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237239758 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233014553 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.208227457 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.279019683 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266195688 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.277380282 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.239685141 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237436158 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.295034215 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.196157907 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.26234763 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.282261146 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208457287 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.292219704 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.293861386 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.28243082 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.241971433 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233307852 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.222716579 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197568265 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.233854837 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.263078437 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.209975265 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.236651469 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243349954 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.266573336 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270298949 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250948059 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.291034619 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265552348 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.308044255 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.192138624 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.26064967 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237456274 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271406994 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.289875132 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205132131 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.263415031 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.296357232 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213470247 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.297345409 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271935201 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.284543701 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.294448475 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.239171355 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.232927782 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.247011676 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233541188 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240339754 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.231724044 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.245265619 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232328873 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219672497 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.238970521 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.243941325 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.25722184 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246868394 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.277669933 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.258186551 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240436903 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.228462695 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243901952 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.247273979 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247890633 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.163202526 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268879832 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.293776437 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250309673 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224663034 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271420496 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.232538288 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.421393399 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.280030015 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.274084924 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.238846504 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208680554 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.277084586 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.259753274 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231087709 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.287017309 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244439344 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.312047096 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.243345317 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.242753495 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234000245 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.220257579 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.25264803 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.198674845 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.253235356 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.266694885 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.216370796 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289833157 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.239432453 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.274989683 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.252340828 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.245195611 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.251950528 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211592153 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.331033428 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.273420863 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.275847429 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.239884201 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.2661318 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.288175819 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195891567 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229090533 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.20472809 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.289683373 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232390195 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249967541 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.266778241 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.280963714 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.276665102 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267204849 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.244144561 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.199822776 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.272384996 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220515394 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.285500376 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23493302 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.24049639 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.258207377 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.217848264 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.203406441 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.264981383 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.394220067 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.247553076 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241859311 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.195436569 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.384586378 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.203320301 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.235534717 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.232398699 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271316078 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.235075963 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.260576192 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.276451266 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243016211 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.233926569 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237848433 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.280713001 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.282008375 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239486657 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.276239727 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.249683702 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.266508636 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230131377 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274388383 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.25042977 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.221402834 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263021402 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.301572561 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.28061452 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.204390097 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274451891 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.275348804 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.246164446 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.274438414 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.24389527 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.258099896 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232036655 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269536813 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213521514 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.22772039 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.261744501 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.236868458 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232118029 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.275437245 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.27692262 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20391023 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.232221456 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219893935 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271786089 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245357046 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.2054989 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287948701 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.234264746 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.256542436 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.31502354 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232993018 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.241253417 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.245684842 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.233008938 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212376724 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247520749 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205923161 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.278847864 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.279283696 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.204415637 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276769575 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270701676 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266772104 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22688717 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.247168089 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.341784323 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.232743167 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.297200891 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.223363908 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.357243193 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.22482391 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.285066796 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.277329891 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222994785 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267018257 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250879252 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.292089012 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268222334 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.27268023 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.207242192 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247644098 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.242912767 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.206923076 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.258122546 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242956077 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24691421 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.239245882 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.242434616 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249662953 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.251717058 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.215132704 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.306659796 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.255284259 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.291849799 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.261125303 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.242061715 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.282260043 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.277899945 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202156788 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.268576312 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.27434042 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.217449639 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256593597 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.208054662 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.241401049 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.321684581 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.200076149 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.265563686 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.282114576 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.279414241 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.248717963 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.239739124 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.284615757 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215303512 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.282914037 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.233638987 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.225348779 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.277312257 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.21002476 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.231981454 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.2790607 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23265844 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.272004761 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.246726987 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.255057395 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.29807072 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.229482951 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208458739 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.393540795 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.261641345 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.302131384 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.195204864 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.242807522 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219825403 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.265533896 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.272166545 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247895239 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.23448265 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206486939 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.249891421 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.252136232 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.200532411 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.276882859 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.290951987 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232662438 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.294587679 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.237690908 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.325427889 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.247558758 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.279947856 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.177955009 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.234803496 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214735466 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239943917 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216675147 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.284954675 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.319512431 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.270626481 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.254911406 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.209230037 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.23386821 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204373117 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.266914803 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225326451 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273987673 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252349879 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.163911214 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.245933191 seconds)
  done (took 123.22655204 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.248467774 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.243262069 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.262732428 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.31324791 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.290060873 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.383194032 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.326587412 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.340690764 seconds)
  done (took 3.653121933 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.19349514 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.261430228 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.247347336 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.221387085 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.186223324 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.549069786 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.243298643 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.19412392 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.266063163 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.231816951 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.212422969 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.646017639 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.19303711 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.225752828 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.223781687 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.211409069 seconds)
  done (took 5.546597335 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.204520623 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.634305566 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.2136566 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.372716362 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.341489611 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.289858954 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.896296633 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.272774371 seconds)
  done (took 13.473276615 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.250313763 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.282725084 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.462400866 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.388238239 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.300228033 seconds)
  done (took 2.939412971 seconds)
done (took 177.508521232 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.199009044 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.233090819 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.199221541 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.234072615 seconds)
  done (took 2.098337093 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.239013933 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.153376196 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.186886997 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.151653912 seconds)
  done (took 1.977427126 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.47562296 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.154259197 seconds)
  done (took 1.907526151 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.220202981 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.239996929 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.210989541 seconds)
  done (took 1.936375716 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.21117111 seconds)
  done (took 1.470062333 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.195396623 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.226146215 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.289545711 seconds)
  done (took 1.972848512 seconds)
done (took 12.616875445 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.219143022 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.046244071 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.660322901 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.210736402 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.846449934 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.539162207 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.475530714 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.256508729 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.314936938 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.186330874 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.252117806 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.7897368 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.49159227 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.948737091 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.474892125 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.951171011 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.802435122 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.188786017 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.224690469 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.189793315 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.486902527 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.186767184 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.219658011 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.190628027 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.798282749 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.495502763 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.218735132 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.994494159 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.18608721 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.229172668 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.475209474 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.217632062 seconds)
  done (took 24.0140736 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.191278514 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.277699055 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.242668885 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.221936017 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.196977348 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.220097586 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.199378425 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.232119255 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.324814662 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.189632773 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.242092474 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.186415206 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.226106573 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.188865931 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.243174196 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.187856252 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.221858665 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.188982648 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.2266291 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.19024573 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.239917623 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.220292014 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.189312332 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.220972955 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.18689992 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.238524353 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.187635936 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.232453159 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.188170309 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.229626443 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.193432552 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.219734584 seconds)
  done (took 8.207622104 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.233376909 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.289178904 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.243611139 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.259805671 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.278211295 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.18966043 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.310223219 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.259720398 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.298911636 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.222153766 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.211668105 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.221972408 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.26305394 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.189618579 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.247289916 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.188162009 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.223278839 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.18927071 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.227724002 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.191581274 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.242731871 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.188673365 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.222304548 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.190892878 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.220551795 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.210944999 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.219522245 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.233919401 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.188930567 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.230277196 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.194005379 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.222589225 seconds)
  done (took 8.5812774 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.20413229 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.236692818 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.212404439 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.245554994 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.197903658 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.235798409 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.203459066 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.232409528 seconds)
  done (took 3.045821521 seconds)
done (took 45.109230982 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.729616698 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.235461702 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.205374128 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.202083758 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.312824339 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.225096801 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.204079719 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.225256031 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.200787931 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.242130377 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.187927873 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.225243193 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.205601839 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.228629061 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.319270737 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.201611699 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.321475647 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.320196075 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.193980141 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.23516302 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.193370891 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.32190875 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.233170912 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.193956682 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.296117628 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.194793033 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.30808811 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.231157263 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.196753274 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.191304004 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.31893042 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.230224271 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.194943689 seconds)
  done (took 9.597239584 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.300763959 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.233003882 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.198459634 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.230910985 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.200851687 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.231258245 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.335240695 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.197557841 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.231519667 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.198130356 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.231623219 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.289300466 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.237006715 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.195437142 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.232610539 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.174176537 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.337024442 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.233013218 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.190162774 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.157160536 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.227429955 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.198341683 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.349194025 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.228158304 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.198513508 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.230810263 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.198694233 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.236395928 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.199342553 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.233120039 seconds)
  done (took 8.23704146 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.204050052 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.246108946 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.217751211 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.299017736 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.228652703 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.244361407 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.21634032 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.242841461 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.221655418 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.22474488 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.208359314 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.261696825 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.24292151 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.20234204 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.224353531 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.20678363 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.24164443 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.192371357 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.23312788 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.209726057 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.246356433 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.20824791 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.246693212 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.200465301 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.223662026 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.200034567 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.236655281 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.205903888 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.233122666 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.209105665 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.227974579 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.194250637 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.227710034 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.226551032 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.22662362 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.207140109 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.245527887 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.20768169 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.239323326 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.260171179 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.193848378 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.228166724 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.218825433 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.284945722 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.195278389 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.236429071 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.194438398 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.24289468 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.191015101 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.245011088 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.235194518 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.225672557 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.214574481 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.224613739 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.191249414 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.233401733 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.193671329 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.231319544 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.208991679 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.227699084 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.214537113 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.232799686 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.205400315 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.228086573 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.204613396 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.223752991 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.19317517 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.229978099 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.221816378 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.232866434 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.232499165 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.225760163 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.206341132 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.239746626 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.207318382 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.237848643 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.193653445 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.23804426 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.20587711 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.229951513 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.207851403 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.228732311 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.196363982 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.24320942 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.247404306 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.207879479 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.239143727 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.204762169 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.227861468 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.195775195 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.245397586 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.194228107 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.231616146 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.206505922 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.227753709 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.197761588 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.238379734 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.202448442 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.22549134 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.219995803 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.230679053 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.192730361 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.254558309 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.196751682 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.231071586 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.203336879 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.268208544 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.194741329 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.235844956 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.204644329 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.227515752 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.201955455 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.228307266 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.193682623 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.242574997 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.209865863 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.233444256 seconds)
  done (took 27.3023276 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.415752651 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.40806908 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.298026877 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.472547819 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.243440127 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.331263015 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.407874765 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.410760211 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.229411552 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.227356197 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.284777505 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.372088631 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.231030236 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.222262939 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.412495982 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.490654695 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.225812272 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.26727601 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.263477174 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.208130042 seconds)
  done (took 7.746092148 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.203349809 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.261081166 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.21352105 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.245541323 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.205164592 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.24146005 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.195060717 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.249511635 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.206026743 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.236180983 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.197278948 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.23392054 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.20677434 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.243212578 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.207115053 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.251118263 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.201094549 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.229746752 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.217385272 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.228789354 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.214590898 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.251708004 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.236024154 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.214502139 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.246090845 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.204027457 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.227354024 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.196988899 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.234120409 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.203894379 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.22841986 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.203164492 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.234441982 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.168762255 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.207099445 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.243394815 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.2005562 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.23057418 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.200502369 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.230031834 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.205913027 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.239987009 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.203890524 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.235177638 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.213668734 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.177579142 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.239933251 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.207522361 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.207189851 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.214407593 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.240188113 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.205977642 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.236300342 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.212769939 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.234104271 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.2112072 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.235357065 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.205529667 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.230626542 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.194110587 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.225870307 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.197500462 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.236545483 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.206765073 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.240367125 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.203866722 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.23787573 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.196199643 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.229570563 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.198349193 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.23088089 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.208192567 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.250278755 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.205321843 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.23676862 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.2065308 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.238481228 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.160998206 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.20382804 seconds)
  done (took 18.657395407 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.220231046 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.235190991 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.21333445 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.261868146 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.204358885 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.235883969 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.201346735 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.248261386 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.203055084 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.244536798 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.204638437 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.243946249 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.218120082 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.241552813 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.203162232 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.245178167 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.202946506 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.268470197 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.208518013 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.254108535 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.204508866 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.234904637 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.208776847 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.24095722 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.221860029 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.240445958 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.220090599 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.237097421 seconds)
  done (took 7.714991692 seconds)
done (took 80.532837381 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.534612 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.659062344 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.436021788 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.436121865 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.431362168 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.439439394 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.4368419 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.438944615 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.868145612 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.41367276 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.43761529 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.435017394 seconds)
done (took 31.350709099 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.494510492 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 2.086004658 seconds)
    (2/2) benchmarking "String"...
    done (took 2.139620872 seconds)
  done (took 5.562087913 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 2.082407443 seconds)
    (2/2) benchmarking "String"...
    done (took 2.101720047 seconds)
  done (took 5.512403625 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.429191592 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.427190254 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.80832431 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.431258368 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.428554874 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.426623475 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.435444621 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.43595602 seconds)
  done (took 17.722242681 seconds)
done (took 35.048275459 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.454285987 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.703380984 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.703045584 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.418274922 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.430417336 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.428396776 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.43160553 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.48795028 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.43803851 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.422673125 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.860779747 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.71636827 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.445881011 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.851905319 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.420001094 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.444981445 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.444848139 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.761231336 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.429243734 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.416912924 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.413911908 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.414552686 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.434965095 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.461543284 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.440635585 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.432925485 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.42155949 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.431164029 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.714566172 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.455318081 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.428325557 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.450043633 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.489611374 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.432758577 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.46080249 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.43981225 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.715582048 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.442771478 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.428922141 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.443192452 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.744437906 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.431481197 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.431738744 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.444372385 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.417223781 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.456057239 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.418371454 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.547918899 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.462188421 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.445934984 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.506147705 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.858637883 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.437280919 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.434445739 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.447718828 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.760380683 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.464037095 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.543547887 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.468787891 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.435611693 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.432201966 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.43366771 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.433522614 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.440108422 seconds)
  done (took 159.290121457 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.43207833 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.434320541 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.435498863 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.441777742 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.435239451 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.435681557 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.434080181 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.432245706 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.437799631 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.44259922 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.435733646 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.435608702 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.436585376 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.402248166 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.443902273 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.457502274 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.435957008 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.451252957 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.464781638 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.434686226 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.440620832 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.436279916 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.43802626 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.436758372 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.481971171 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.528603465 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.481790681 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.438760764 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.445031345 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.43399401 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.444307899 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.444633037 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.114930357 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.305466753 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.45123543 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.479118044 seconds)
  done (took 88.895227747 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.434360736 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.435452241 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.435753426 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.470358435 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.436195718 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.078210445 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.081447793 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.503113068 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.689648169 seconds)
    (10/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 1.841416289 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.435772698 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.923504362 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.716568494 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.436091668 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.531940014 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.448919158 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.440277202 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.533523286 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.462649937 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.439243373 seconds)
    (21/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.436107877 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.437824425 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.080191195 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.45375693 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.622191055 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.437576053 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.471634345 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.836261433 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.007513473 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.439291895 seconds)
    (31/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.437707109 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.473105038 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.778894124 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.472526521 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.4383401 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.806170357 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.014450911 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.552230638 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.438731566 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.474817067 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.438987395 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.724971487 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.437385382 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.438273971 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.440767485 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.106945853 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.438091505 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.081838122 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.440878544 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.448962956 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.43691742 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.437162044 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.438485983 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.834555314 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.199109354 seconds)
    (56/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.43823563 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.438058493 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.441262591 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.438556845 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.439126359 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.475526099 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.095275014 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.355722019 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.439384697 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.441734315 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.474521932 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.440684193 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.438769069 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.666049536 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.498410738 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.583927103 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.084213893 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.44167 seconds)
    (74/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 21.999319452 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.539038279 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.561680051 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.441176548 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.440948401 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.440433531 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.44047269 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.553907177 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.440661558 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.892009836 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.626904059 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.441680358 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.937867335 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.539696307 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.441955839 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.868842525 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.443648807 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.441569569 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.19611236 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.538467352 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.441699372 seconds)
    (95/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.442982517 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.441314996 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.895061188 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.087832423 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.78682757 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.445444512 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.652764079 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.442815166 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.909468544 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 2.053481174 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.116053529 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.443287339 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.556761038 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.629178761 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.444192577 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.441974534 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.934498689 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.443600429 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.499156274 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.446323428 seconds)
  done (took 398.981454672 seconds)
done (took 648.497232916 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.426696272 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.428246483 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.428228015 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.427947897 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.429012465 seconds)
  done (took 13.480886329 seconds)
done (took 14.822274899 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.446000857 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 2.446189804 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 2.449850143 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 2.16319386 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.449689822 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.448365999 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.449270201 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.447192216 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.449986368 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 2.449706308 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 2.152863302 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 2.448531862 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 2.44997208 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 2.333120338 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 2.159924864 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 2.447479732 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 2.261427912 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.447792705 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 2.44764126 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.73472339 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.811293081 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.510786635 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.725488106 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.489500467 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.757764998 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.80010751 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.667440108 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.62214566 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.474035316 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.467328643 seconds)
  done (took 19.402416311 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 2.252774849 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.762311318 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.79398896 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.515430437 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.759245939 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.492263286 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.769619346 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.786636409 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.674238779 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.62639338 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.476972537 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.469423424 seconds)
  done (took 19.471574129 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 2.157653555 seconds)
done (took 89.974833015 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.486142201 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.551772084 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.486418164 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.467583359 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.466156959 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.465415603 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.46889828 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.466233445 seconds)
  done (took 13.204591114 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.46548941 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.464831224 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.464681216 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.46603385 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.466207087 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.465827762 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.465492977 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.467266608 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.465652915 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.463966854 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.465892796 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.467210045 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.465866981 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.466811053 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.466812771 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.466438651 seconds)
  done (took 24.802652679 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.467609387 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.467295639 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.466200833 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.467052922 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.46615738 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.467583537 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.46775046 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.467935297 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.46815791 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.466283068 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.467617566 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.468517076 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.46843614 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.467327578 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.467897539 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.467611668 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.468403102 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.467032469 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.471259352 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.468760713 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.466247831 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.468149354 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.467591934 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.46885584 seconds)
  done (took 36.572730305 seconds)
done (took 75.925626209 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.4683788 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.465603267 seconds)
  done (took 6.282330874 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.526485496 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.526519932 seconds)
  done (took 4.40410616 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.467756133 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.469909203 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.469736326 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.469472836 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.469154161 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.468858314 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.470348065 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.471065524 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.469405668 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.469396524 seconds)
  done (took 16.044380661 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.469646033 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.470519753 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.46682379 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.469657184 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.470539805 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.469372472 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.468681353 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.469393762 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.469999461 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.469525387 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.469651275 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.47084138 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.470122104 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.47051124 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.470517798 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.471801273 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.471266048 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.470572011 seconds)
  done (took 27.80984646 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.484797414 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.488823443 seconds)
  done (took 4.324256109 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.598780074 seconds)
    (2/7) benchmarking "second"...
    done (took 1.51278955 seconds)
    (3/7) benchmarking "month"...
    done (took 1.575374635 seconds)
    (4/7) benchmarking "year"...
    done (took 1.56623641 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.513442702 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.492377858 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.512852855 seconds)
  done (took 12.122255885 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.463342252 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.790007927 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.987346636 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.637957512 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.454846909 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.477831149 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.450797081 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.478847733 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.47931865 seconds)
  done (took 16.572408418 seconds)
done (took 88.907262509 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.455830838 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.491854703 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.485211289 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.47287645 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.811620458 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.501611412 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.458032609 seconds)
done (took 18.029303639 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.443237043 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.452460857 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.44423609 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.468520957 seconds)
  done (took 11.159913836 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.457190422 seconds)
    (2/2) benchmarking "read"...
    done (took 1.804201249 seconds)
  done (took 5.613663663 seconds)
done (took 18.124989669 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.473534687 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.473684001 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.474041212 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.47451777 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.475179583 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.474315793 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.474074679 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.47439363 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.474725485 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.473929596 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.475104726 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.474318785 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.473556619 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.47405548 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.474243055 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.47477332 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.474898826 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.474723927 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.47402939 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.475490147 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.473993189 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.473832021 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.474746339 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.47624372 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.474132726 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.475151229 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.474619208 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.474902592 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.474963799 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.474550263 seconds)
  done (took 45.587586061 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.478713429 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.478807248 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.474862558 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.475853889 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.475948061 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.475124851 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.476058022 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.475966041 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.475238042 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.475574072 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.47710368 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.476666525 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.474595943 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.475386196 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.476808237 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.477850196 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.476938214 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.476674486 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.476182266 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.477160122 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.476849097 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.476203175 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.476871841 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.477787323 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.477531475 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.47655657 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.476486275 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.477443233 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.476582405 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.477105289 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.477088735 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.476017362 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.477089121 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.47687445 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.477324326 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.478397839 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.48245437 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.480587818 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.477553353 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.477332794 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.478708981 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.478228904 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.478279093 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.477850169 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.477402684 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.479144439 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.479603766 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.479681542 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.47867895 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.480262389 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.47857728 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.479791475 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.479544487 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.479248835 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.4794639 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.48011946 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.478517254 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.480399032 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.480158237 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.479811624 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.479269392 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.479792312 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.481062036 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.47950888 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.480011549 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.481690752 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.480379087 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.479700116 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.48060294 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.480444635 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.480014499 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.480284881 seconds)
  done (took 107.78039283 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.479970453 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.479735889 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.47987607 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.479461801 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.478689209 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.480472887 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.48033981 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.480283678 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.480022621 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.478958066 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.479387638 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.481294792 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.480125126 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.481156015 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.480705624 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.481373412 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.480931844 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.480924181 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.481994605 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.482225749 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.48118393 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.480905911 seconds)
  done (took 33.929289965 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.481841233 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.483070301 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.481058864 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.484082595 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.483732148 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.483693887 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.480964777 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.482561113 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.482412708 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.482354535 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.482978773 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.481707791 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.484028395 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.481772311 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.481170085 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.484818287 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.482148416 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.484851817 seconds)
  done (took 28.049853921 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.482296127 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.483224303 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.482876476 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.483543698 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.483291536 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.483337058 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.481849789 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.483393351 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.484049647 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.482784198 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.481946201 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.48402434 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.483420744 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.483737618 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.482642077 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.485294081 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.484711645 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.484492266 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.484781271 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.483583068 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.483938831 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.483548028 seconds)
  done (took 33.998885083 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.484877859 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.483756655 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.484425806 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.483660144 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.484921269 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.484113031 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.484872669 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.484907572 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.4856561 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.484743854 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.483767115 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.484879581 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.487531332 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.485144967 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.483751129 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.485246968 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.486130648 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.486437239 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.485618137 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.48475475 seconds)
  done (took 31.062566254 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.485494924 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.486298482 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.485171444 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.48665139 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.486215902 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.486117165 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.486823342 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.485740123 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.486619778 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.487258799 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.487007217 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.486956325 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.487537602 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.486545511 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.48704691 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.486370929 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.486075674 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.487630728 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.486807319 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.487195859 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.485939867 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.486957167 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.487252471 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.488732543 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.488142544 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.486757037 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.486377473 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.487377891 seconds)
  done (took 42.993997762 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.505784214 seconds)
    (2/2) benchmarking "in"...
    done (took 1.509453753 seconds)
  done (took 4.381003829 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.486758932 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.489769505 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.487334781 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.48927442 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.48827232 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.487717897 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.489576274 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.487604452 seconds)
  done (took 13.27233464 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.480017706 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.489004934 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.488291932 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.488974064 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.488272875 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.481462607 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.487781325 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.493931504 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.481480127 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.481446903 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.48480737 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.484312138 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.483967649 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.483781741 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.48207101 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.487349123 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.493934811 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.492132078 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.490328841 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.490486523 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.49016692 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.484797925 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.487938317 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.495270934 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.482282979 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.494536795 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.490795773 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.495059761 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.484204288 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.489052208 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.485476504 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.493991858 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.493130217 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.490905339 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.492352984 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.492841686 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.493776551 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.490631228 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.493173963 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.497157882 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.493346986 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.493904035 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.486422454 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.489074434 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.488601576 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.496222391 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.493507615 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.492046651 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.483492206 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.487138853 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.497386046 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.483931779 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.495135267 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.491947504 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.490790758 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.496616607 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.501089161 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.486864727 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.488323953 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.496565708 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.505548201 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.49829661 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.494605488 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.498205676 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.490906949 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.494759312 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.498257544 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.500995156 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.494756751 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.493389955 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.496307601 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.510048597 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.50365163 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.498935547 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.494357361 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.49397137 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.486781967 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.498020321 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.497391546 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.497197467 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.500583804 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.496034619 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.491745076 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.495140517 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.489832867 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.498679923 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.49409543 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.496108598 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.487811774 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.501072515 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.504107474 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.497258569 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.486921782 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.489218949 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.493003107 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.498620397 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.488846535 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.492213689 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.498443544 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.49615716 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.496025091 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.4901217 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.496930067 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.502411683 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.497636386 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.500312079 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.503118192 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.490126692 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.501583605 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.504025069 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.497239763 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.49250396 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.496924236 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.501186272 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.49102338 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.497958239 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.503534793 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.493541093 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.502837949 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.498120273 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.49588282 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.505786829 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.504220124 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.498635577 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.492171522 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.505236356 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.498892723 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.49496933 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.504807763 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.498629578 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.499871854 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.494598485 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.50409268 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.492952396 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.50268745 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.493716575 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.501590114 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.498713744 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.499692407 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.493808532 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.498119983 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.49714429 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.498149473 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.50230116 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.504753314 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.495987203 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.509937008 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.499791645 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.499842114 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.500356124 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.506427158 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.500546848 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.495028382 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.50446675 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.492858852 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.502183206 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.494055747 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.505296621 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.50065511 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.500768911 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.500923335 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.491722758 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.496677715 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.504783558 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.499504181 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.4993688 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.503446812 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.50190347 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.502338142 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.495439001 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.504443402 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.492755755 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.497369176 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.507776639 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.502042066 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.502087264 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.498903885 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.508538996 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.502526157 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.50354213 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.4966546 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.502727132 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.507994014 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.504776925 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.510643178 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.503556061 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.503843426 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.496072225 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.498387441 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.505267663 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.496020393 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.510600285 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.513791565 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.515192786 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.500764014 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.506621805 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.495681933 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.506559499 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.503613648 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.513649583 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.50469113 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.50515543 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.49649595 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.509822442 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.499084957 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.509620698 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.496178197 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.506672895 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.505229359 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.504745779 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.505327503 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.499550334 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.502337628 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.507785415 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.506227823 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.505771449 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.498575735 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.508622681 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.496553114 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.499885031 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.509302509 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.506893166 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.508349046 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.513326263 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.504298998 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.508684778 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.50623109 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.502331398 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.509584091 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.505190488 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.50750709 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.512578369 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.50828611 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.504027002 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.512528435 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.508280285 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.502138495 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.506396936 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.515020709 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.506967885 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.501492779 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.512723389 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.509117415 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.507542994 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.507934716 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.502282584 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.512431596 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.511053903 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.517801881 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.501880166 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.513126279 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.502363694 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.511829099 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.504823597 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.510036908 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.508471367 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.512294848 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.516082284 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.510907861 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.504406941 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.514317392 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.508654965 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.508768141 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.503618737 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.514742115 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.510621663 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.509200162 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.507028328 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.507293516 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.514285235 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.50116453 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.512573711 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.503244297 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.523944723 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.528720624 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.517406196 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.514333951 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.514084735 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.512869543 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.512876488 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.508246764 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.506079234 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.508487348 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.507050654 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.50589953 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.513445274 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.506578977 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.514886327 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.509054431 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.510666745 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.515039234 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.511854964 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.504554378 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.515342479 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.513359061 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.512603656 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.503809614 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.513001393 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.508208219 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.51380167 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.512532557 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.510083588 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.519875448 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.516107604 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.510903615 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.511139593 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.50960116 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.506503128 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.510257712 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.519910042 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.507722569 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.519640216 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.507591624 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.514417122 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.509960258 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.519217719 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.523368549 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.508853777 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.518900479 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.514372766 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.504580512 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.50734936 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.516500923 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.518125837 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.525341701 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.507104142 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.518457204 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.515326803 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.515809127 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.515541846 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.515097537 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.515063338 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.515854562 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.520519518 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.517510858 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.511369609 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.517890338 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.52311952 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.515973573 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.516775268 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.507007809 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.518113765 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.523968249 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.509552242 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.516885196 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.511180433 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.517597619 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.516354512 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.517132733 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.516347357 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.516993103 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.52166266 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.521746785 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.520495079 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.516115462 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.523048622 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.5259467 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.520908979 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.528002807 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.512704064 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.523336412 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.517235429 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.512468174 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.511702323 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.513445873 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.520824318 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.509088013 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.522942019 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.517581153 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.514859512 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.518357745 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.52556436 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.509093357 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.516443281 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.529044547 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.511890884 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.52144049 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.518395417 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.510926864 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.522676192 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.518904776 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.509078368 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.514113696 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.517538877 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.525494487 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.512212702 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.523093078 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.512053097 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.525242664 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.519365082 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.518682567 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.518712529 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.519246554 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.512877825 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.520936505 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.520791075 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.527676833 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.514926074 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.519590618 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.514084416 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.524861266 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.530202381 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.515041852 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.52673677 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.521079474 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.513421211 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.51876766 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.525625546 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.514774216 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.523790597 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.512548377 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.516588826 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.518253809 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.520122586 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.523808497 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.525127191 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.513379285 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.515391201 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.52216393 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.521704412 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.522117522 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.516841474 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.529006343 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.514081584 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.515878499 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.5239082 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.515928098 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.528423379 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.515399983 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.520551388 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.520096306 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.526316861 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.521590826 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.523888387 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.515727272 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.517301644 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.53031683 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.526841819 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.522577899 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.522148183 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.527115855 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.515996646 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.52046909 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.524124112 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.520927427 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.519616585 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.528594652 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.519770184 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.519526157 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.518556009 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.525785304 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.528649597 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.525747771 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.518345384 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.530859212 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.529145896 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.532151239 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.516232815 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.520284261 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.520929534 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.525413261 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.525006924 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.518071892 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.530859953 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.527959754 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.52959626 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.522669423 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.523456712 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.518801807 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.528449049 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.524856299 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.520243583 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.532950712 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.521284228 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.532728045 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.525716802 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.525122106 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.517431814 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.520683055 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.520528209 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.522368456 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.529134653 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.523538572 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.525941883 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.524621245 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.532442953 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.527528491 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.525145579 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.527099697 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.518686181 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.529110929 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.518921934 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.526134592 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.525722776 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.522628587 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.529950132 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.527515655 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.520761716 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.526055428 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.533026389 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.526914487 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.520287718 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.526081633 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.531381945 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.536332021 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.529557591 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.522749996 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.527622192 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.533407043 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.529202216 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.527816996 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.522378484 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.539326347 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.541157454 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.522424174 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.52747024 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.533070846 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.537022024 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.528805319 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.529514394 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.524215876 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.528047307 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.536106605 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.529230292 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.533309741 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.533313722 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.526604633 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.533684077 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.523741936 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.527041441 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.53082526 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.537805301 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.529118082 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.524172995 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.540592675 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.539467 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.527779093 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.544909259 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.534359939 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.530566799 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.53630204 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.522647699 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.533369494 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.525884964 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.536459123 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.531231972 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.531533582 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.53110977 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.522934256 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.531685973 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.536624203 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.542483844 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.531022334 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.524310148 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.527078207 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.53455337 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.532791991 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.534873416 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.532835459 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.531559696 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.532640283 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.526726897 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.54798117 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.546832767 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.536802615 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.533285239 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.531415503 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.531086269 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.535562205 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.533138007 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.538634848 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.535221988 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.532578798 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.531015604 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.542461747 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.535156068 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.527164841 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.530374738 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.530373406 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.539069352 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.546465142 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.553319428 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.537311951 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.536882089 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.538248267 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.535702655 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.529660456 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.539179149 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.534319641 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.530562593 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.53270483 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.538716032 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.535543146 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.536981913 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.529235409 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.541681153 seconds)
  done (took 902.635895139 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.535467133 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.536352966 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.535468418 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.536522918 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.534548264 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.535528676 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.536166365 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.538329417 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.537526761 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.53614602 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.536689281 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.535561573 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.537849666 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.537168259 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.537723363 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.536771364 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.536471307 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.537067027 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.536485481 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.536528706 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.538086893 seconds)
  done (took 33.676077149 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.537017273 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.534785392 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.537832833 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.535669498 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.538210634 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.538584378 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.53884718 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.537656597 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.538250191 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.538434954 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.53879899 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.537713753 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.536942212 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.538552887 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.538468431 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.538670865 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.539522279 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.54044065 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.538434799 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.539077786 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.54062912 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.541163495 seconds)
  done (took 35.252874944 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.53931604 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.539422455 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.532678215 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.543416687 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.53989711 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.540421273 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.539957014 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.540806324 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.541034555 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.532648784 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.533328935 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.532956508 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.538249413 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.546911368 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.534861135 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.545573156 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.539377433 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.541615393 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.540458838 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.540519749 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.541298473 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.551768643 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.541187265 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.533527905 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.543280515 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.542175444 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.539558788 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.539738926 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.532982013 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.545495826 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.541795783 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.533858476 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.543216404 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.540655233 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.535029266 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.545991366 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.541726933 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.543673856 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.541953163 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.540868315 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.554888547 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.54341633 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.549486634 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.553144035 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.543171942 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.538705449 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.548798002 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.544423042 seconds)
  done (took 75.390094084 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.544452078 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.541811249 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.543529782 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.544422331 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.545046837 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.545137529 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.544729683 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.544983295 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.543694546 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.544115799 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.542596774 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.54443275 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.544821472 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.545300519 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.544640222 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.544891023 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.543905212 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.544621128 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.544781733 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.54465259 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.544227143 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.544950623 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.545685475 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.546083849 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.545029547 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.546388012 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.544863558 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.54586014 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.545136991 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.547071188 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.547072326 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.544934364 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.545759567 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.545554575 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.545764186 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.546057635 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.54564733 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.545051194 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.545278237 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.545907956 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.548120704 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.547500978 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.545964685 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.547936677 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.547913561 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.547654062 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.548288768 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.548160811 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.547286887 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.547513901 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.546510344 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.548142968 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.548761291 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.54784273 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.54667933 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.547143328 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.548699559 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.549004973 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.548259162 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.548295917 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.547659361 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.548688042 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.547827873 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.547755377 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.546275342 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.54797125 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.548341099 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.547481741 seconds)
  done (took 106.553103672 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.549085712 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.548058067 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.54802447 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.55095475 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.547797647 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.547915362 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.549632352 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.550757394 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.55090281 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.549450667 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.548884477 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.549550147 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.548727164 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.550453291 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.549036574 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.550672673 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.550635701 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.550048274 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.548542769 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.550563594 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.549713986 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.551273556 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.55073114 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.550472157 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.551215547 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.550431483 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.55216331 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.551177909 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.552000376 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.55130223 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.551814937 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.551466871 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.551914358 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.550296094 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.551432807 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.551386848 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.552445541 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.550941163 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.551256478 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.551174312 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.552571938 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.551581469 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.55223196 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.552960493 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.552786217 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.55132317 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.553757526 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.552278889 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.551891486 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.552822221 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.553356918 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.552781709 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.552723654 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.553311364 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.55187536 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.552835456 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.553601736 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.553740491 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.552985203 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.552844799 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.554458081 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.551992478 seconds)
  done (took 97.595268123 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.552074748 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.552339326 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.553203934 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.553455118 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.552919732 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.553858968 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.553429155 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.553650876 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.551905127 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.551908984 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.554681983 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.554025184 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.553619065 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.55400533 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.554834359 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.554934561 seconds)
  done (took 26.277391285 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.553384503 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.553159446 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.557292193 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.555469685 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.5551501 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.554223753 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.554530856 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.554639901 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.553810246 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.55521917 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.553810138 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.555880205 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.554850394 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.55523319 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.554941529 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.555537761 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.556179095 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.555194913 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.55693959 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.55758579 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.557448199 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.554509252 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.555801013 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.554259245 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.55598385 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.557424195 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.557714974 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.557442279 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.556636197 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.557200345 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.557200445 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.557405755 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.55646544 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.557263065 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.557804504 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.558984508 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.557367506 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.55703576 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.557699859 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.558078771 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.55761164 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.55845566 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.557596942 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.558762884 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.558996644 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.558459792 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.557273296 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.558277189 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.557406631 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.558399871 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.557944522 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.558585139 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.559947201 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.560000889 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.558468789 seconds)
  done (took 87.043523381 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.557853852 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.559247314 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.559198153 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.558818449 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.559409521 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.56041288 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.558019356 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.562253843 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.558765125 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.55884693 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.556070484 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.560961527 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.558460542 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.56004413 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.559663478 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.559507148 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.558688757 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.559252211 seconds)
  done (took 29.492582073 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.560629945 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.560574088 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.560369027 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.561082106 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.558574743 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.561147967 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.559720518 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.559692443 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.560412818 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.561814853 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.559784858 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.561011687 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.560127402 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.560439901 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.560198792 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.559784212 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.560830343 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.561317196 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.560911766 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.560859795 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.560968568 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.56060297 seconds)
  done (took 35.759819785 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.552694492 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.551106735 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.551228261 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.565698754 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.563085321 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.551879851 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.551910779 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.550206749 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.56917446 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.575543276 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.573700132 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.560969243 seconds)
  done (took 20.146481857 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.56249534 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.562539471 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.563364973 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.562463199 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.561163939 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.563291637 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.561983247 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.563047547 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.563356197 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.563410123 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.562465852 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.563258523 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.563335278 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.56293971 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.564720652 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.563637974 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.563676762 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.563758548 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.563499088 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.564014906 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.564644671 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.564487468 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.563762726 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.564483617 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.564875969 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.565013414 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.564658628 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.56483896 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.56442577 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.565120567 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.566661775 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.564915955 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.564670122 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.564763907 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.563577014 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.564687425 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.564597846 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.564013478 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.564142372 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.565402181 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.566065891 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.564854241 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.565478718 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.564630891 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.565536504 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.565759674 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.565947055 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.5645722 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.564739834 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.565945392 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.56709894 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.565814666 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.565950797 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.566774988 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.566471938 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.566962839 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.567443188 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.566123863 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.56629671 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.565771447 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.567230763 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.56740089 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.566388002 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.567431781 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.566746095 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.566976699 seconds)
  done (took 104.709892131 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.567454792 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.566941574 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.567812562 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.568020425 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.566675319 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.56810524 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.567807627 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.568051162 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.567930089 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.567957058 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.569093224 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.567661427 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.56804939 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.5688236 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.567424614 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.567053762 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.568306925 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.568822046 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.569276846 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.56849164 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.567542525 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.567850749 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.568570457 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.568405566 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.569329482 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.570229322 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.569644456 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.568966651 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.569468242 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.568419517 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.57122608 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.568836714 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.569305414 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.569251955 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.569086431 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.569088437 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.569601553 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.569872136 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.568721742 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.570923221 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.570629047 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.569227074 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.570089725 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.570443808 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.57029677 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.569580534 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.570831624 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.570377055 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.569788978 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.572509712 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.571196864 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.571813065 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.570411476 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.571361783 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.570882966 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.571467165 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.570034029 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.570718172 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.57278754 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.57205606 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.570791303 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.571594536 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.572960083 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.572500773 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.570497284 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.572248413 seconds)
  done (took 105.028171703 seconds)
done (took 2001.970059801 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.560216098 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.558444413 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.561766002 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 10.80994289 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.566494895 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.32160179 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.290536949 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.562721438 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.562627921 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.564445329 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.563272042 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.556786044 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 10.908613321 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.563489293 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.563136107 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.557916559 seconds)
  done (took 58.510745221 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.592758021 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.572902506 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.702986672 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.569634424 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.593879749 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.782672021 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.63363273 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.570700902 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.766286808 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.570450114 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.562751292 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.591821085 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.567992506 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.561205109 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.589610732 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.782590361 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.861365412 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.563225973 seconds)
  done (took 33.873876527 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.106662676 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.585584953 seconds)
  done (took 6.132068714 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.590931869 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.569109918 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.571559944 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.569028869 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.561911909 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.56060301 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.568425453 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.605120384 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.574367788 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.720301345 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.574302545 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.583566545 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.569485033 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.570340523 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.577383023 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.617019052 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.703106806 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.57858849 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.576042097 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.574643168 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.568425357 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.746068816 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.619378934 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.581698748 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.719046439 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.577027896 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.578626701 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.582185593 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.721551163 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.579830304 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.568807676 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.570992171 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.570343958 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.563302312 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.146833115 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.578558893 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.601245748 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.578227832 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.578525891 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.725700006 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.571750885 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.577161421 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.578778086 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.140631809 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.696159874 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.802224173 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.565609888 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.575236817 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.573985709 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.726800695 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.576480181 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.572232359 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.635080146 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.582289531 seconds)
  done (took 99.198689261 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.584604782 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.564027769 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.751548814 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.589947466 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.565571337 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.58030911 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.565122364 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.90253414 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.616698221 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.565611099 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.913630475 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.255204825 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.57260856 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.612808678 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.612502651 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.591515438 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.565905114 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.565157704 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.566758873 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.570491409 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.170330584 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.58225596 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.567095951 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.720798584 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.609303024 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.170906538 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.580702144 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.565700804 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.570109131 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.56675519 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.221164309 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.569131161 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.626535657 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.566989086 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.890750686 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.022843752 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.978851638 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.574017725 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.58139334 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.570882445 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.566192172 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.17042331 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.999235522 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.567522598 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.568502501 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.174448314 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.568633245 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.567960569 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.56802201 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.84342462 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.570339 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.570114017 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.584081447 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.569334586 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.56748726 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.628237894 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.614393855 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.175746159 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.569446358 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.569967814 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.600665575 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.570415043 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.573275849 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.569446131 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.569851481 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.005436168 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.730092601 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.570113378 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.002245884 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.219358154 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.569403251 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.300013707 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.570265116 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.573088443 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.645874567 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.57056268 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.591505002 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.168515207 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.573418284 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.570166151 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.984205831 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.571529519 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.907203621 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.589931807 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.570892989 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.217350244 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.579806846 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.638465865 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.571563338 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.574545426 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.570346244 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.577779858 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.897882387 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.642396527 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.57070709 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.570072857 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.57462108 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.572441975 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.571503083 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.581427689 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.30588377 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.582342578 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.572336466 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.573586254 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.57161632 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.573832683 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.572936656 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.575704991 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.858085669 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.573366382 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.595851287 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.587610169 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.572734376 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.576616799 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.727208351 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.577616442 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.93992829 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.575394253 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.582229157 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.575803257 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.572220712 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.633740978 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.573498053 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.573595308 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.537258358 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.897275878 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.609036917 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.573148929 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.576300862 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.575028762 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.573510993 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.577720515 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.603917422 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.576703712 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.43715307 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.58591396 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.588377075 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.573622982 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.576040703 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.575028624 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.58306229 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.573826902 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.905720047 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.893998668 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.765542975 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.579282825 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.575977921 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.425405513 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.625742967 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.764164485 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.597097294 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.576933478 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.881821337 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.755683317 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.578543462 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.574387662 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.57689891 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.866092864 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.576245811 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.906302707 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.249364858 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.576083391 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.585588302 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.423011715 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.32959146 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.57902554 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.577485814 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.902378953 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.594796003 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.57830986 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.576609354 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.578579922 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.577499618 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.584549255 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.587417662 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.577762964 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.578774019 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.690679692 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.776206145 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.598052786 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.580309788 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.176178747 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.579783678 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.577077121 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.580807848 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.581864423 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.577768894 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.603546645 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.577491147 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.578464169 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.579696753 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.587608425 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.211895073 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.579234517 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.579449051 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.777645075 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.392166318 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.57973157 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.579304414 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.579750859 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.607132341 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.209984631 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.625474053 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.948870502 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.579782355 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.622520084 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.578841443 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.606186095 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.207628935 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.582858572 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.579896863 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.371376321 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.580221541 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.267630628 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.580330462 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.582167966 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.310866624 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.580095721 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.58103345 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.580134659 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.580786405 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.892372884 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.580366258 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.621974133 seconds)
  done (took 554.248903674 seconds)
done (took 753.402772998 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.581281452 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.58128006 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.584410333 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.584240127 seconds)
  done (took 11.789737716 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.597900553 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.58814216 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.599103266 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.587108422 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.598390666 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.588685931 seconds)
  done (took 11.021034233 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.58079872 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.582276056 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.585190233 seconds)
  done (took 9.208238862 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.828066235 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.587232373 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.004789232 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.586739697 seconds)
  done (took 10.468797951 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.599349757 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.598941103 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.597639817 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.598764881 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.599912567 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.601670448 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.599852222 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.59927556 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.600462651 seconds)
  done (took 15.856463082 seconds)
done (took 59.803193679 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 1.664710284 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 1.666995137 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 2.592683003 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 1.628534567 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 1.732570871 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 1.670978615 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 1.675027842 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 1.676734797 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 1.675051724 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 1.623780922 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 1.671851997 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 1.618522101 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 1.669063731 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 1.806758849 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 1.628784948 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 1.668714786 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 1.61436037 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.765127762 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 1.670691307 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 1.62499071 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 1.693203375 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 1.623786067 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.624169788 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 2.613995527 seconds)
  done (took 43.364079855 seconds)
done (took 44.825159751 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.614869873 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.685551833 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.594218862 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.594066559 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.597038404 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.602910352 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.615001518 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.595506922 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.607798174 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.60879577 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.602894981 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.6021444 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.60959977 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.606599671 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.629549911 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.596471326 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.595679405 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.604222321 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.608965718 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.612268655 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.598136794 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.598050993 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.6224824 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.596516606 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.604729778 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.604758877 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.601903198 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.589231246 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.600854987 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.611132636 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.596232872 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.603194664 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.61288608 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.608489943 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.598522124 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.60664624 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.599845316 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.687906 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.617866744 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.607501561 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.605002753 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.613925694 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.602908249 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.602111421 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.607938546 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.624617485 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.6074801 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.613616548 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.598367118 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.595701981 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.618935962 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.608940708 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.604414581 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.596194345 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.595628982 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.614657071 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.60639572 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.618740897 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.607039664 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.600802281 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.633080151 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.620902624 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.609662504 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.60819312 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.605407058 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.616164439 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.607934218 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.614698038 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.605306631 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.602915971 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.601761551 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.605136864 seconds)
done (took 125.290675801 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.720360287 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.596156134 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.751583769 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.605256324 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.76925176 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.721410745 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.606114627 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.607632126 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.605939748 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.400175706 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.606530795 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.607650145 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.598533373 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.607682236 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.720340481 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.607372809 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.606443651 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.299008113 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.608538306 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.736618144 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.596791429 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.608406406 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.608516426 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.396611355 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.600358075 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.594675366 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.73605803 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.608031605 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.294171402 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.594339998 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.594445298 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.300778728 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.73523965 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.627875609 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.617363838 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.618784982 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.770816669 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.611762319 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.724645211 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.725089891 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.752118157 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.647681249 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.594913779 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.599115467 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.613456495 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.611253558 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.609748539 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.637576781 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.60020735 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.610051612 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.30122513 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.619203964 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.610340345 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.612416352 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.610847979 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.639535036 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.611282577 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.61244389 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.738174336 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.61210855 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.727300284 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.398393161 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.405902788 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.612391096 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.598583037 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.612140201 seconds)
  done (took 126.414927627 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.670544606 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.678136351 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.724780132 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.603286725 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.6529542 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.725548062 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.602664576 seconds)
  done (took 13.130535732 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.608868987 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.612683981 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.651924989 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.652333786 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.612461774 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.776819719 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.611333565 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.615769496 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.612536631 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.654753276 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.614478631 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.612956202 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.621635062 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.60171493 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.649777442 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.616261671 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.72257924 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.604268602 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.613670152 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.760167605 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.613574626 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.620752326 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.65524441 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.615529131 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.6139454 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.611915475 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.363297625 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.614375193 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.615560066 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.614555138 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.613078753 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.672858108 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.614442362 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.604549802 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.614355679 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.719852718 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.615662274 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.613080561 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.615890049 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.60595934 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.614762345 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.614152075 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.615903436 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.614618538 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.615624926 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.629587655 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.614275337 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.615106456 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.61393654 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.615677976 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.656760449 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.616761747 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.612738674 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.61434685 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.662008023 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.626660457 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.617841209 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.615658044 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.616228523 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.616889697 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.763105888 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.654489854 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.615141949 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.655465495 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.61685682 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.616549747 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.616353141 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.615244643 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.702753592 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.615936782 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.654849292 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.616176765 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.790453965 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.63296198 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.619214071 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.611665309 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.611800066 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.617017865 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.603818406 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.61383023 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.616582912 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.610366621 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.614528355 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.617670281 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.616363511 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.769297116 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.7155499 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.618086234 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.625143087 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.616771043 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.617263339 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.660027063 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.6175482 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.617421371 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.659250106 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.726997913 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.66164239 seconds)
  done (took 164.776306003 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.622537654 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.621671037 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.611688817 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.636987724 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.610692201 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.611071529 seconds)
  done (took 11.19214895 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.612057427 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.62200957 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.619547044 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.620355878 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.620221822 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.619914178 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.620039925 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.611925149 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.624015538 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.6200459 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.620035139 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.622330007 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.621170336 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.621659879 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.621961484 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.619821305 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.621550795 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.6205906 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.621761859 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.621051085 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.608380366 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.622160515 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.622093955 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.615571617 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.62550218 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.622364278 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.636674403 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.621001983 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.621028625 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.621802158 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.624003429 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.62214171 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.61468451 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.619192306 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.626000541 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.614896243 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.624885572 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.624180909 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.622095338 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.621811417 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.625392697 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.623864929 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.622815913 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.62326929 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.616148615 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.618191825 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.629605829 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.638961382 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.623490324 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.62561807 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.625139567 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.622897927 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.62360186 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.625292717 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.617663409 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.618535174 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.629311302 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.624526313 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.625838539 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.616847504 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.627193934 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.625503461 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.617643356 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.629338888 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.623892254 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.62706205 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.617935861 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.629302666 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.625381793 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.624447644 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.626990433 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.624963277 seconds)
  done (took 119.29049253 seconds)
done (took 436.271695264 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.971309066 seconds)
  done (took 4.456240487 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.788400913 seconds)
  done (took 4.275072593 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.321418912 seconds)
  done (took 25.812594613 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.641249279 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.614118823 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.63893153 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.610482724 seconds)
  done (took 11.987438126 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.234713079 seconds)
  done (took 4.718366291 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.618520883 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.634611607 seconds)
  done (took 6.737890263 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 3.000407518 seconds)
  done (took 4.48505592 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.330783664 seconds)
  done (took 4.823490537 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.633539008 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.618865649 seconds)
  done (took 6.74212126 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.594741798 seconds)
  done (took 4.079961398 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.931523418 seconds)
  done (took 16.416578417 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.640363921 seconds)
  done (took 4.126777312 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.6130142 seconds)
  done (took 4.096972843 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.69686364 seconds)
  done (took 7.182361707 seconds)
done (took 111.424064574 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.611466756 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.614154337 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.616694014 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.615545592 seconds)
  done (took 11.941898418 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.691186761 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.691662757 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.700389317 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.686212106 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.6813106 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.693344462 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.653639847 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.653309343 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.682302951 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.678835369 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.695398304 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.685521025 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.693439863 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.654113445 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.678933024 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.696536116 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.68470226 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.69986091 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.65496542 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.6862157 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.62893119 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.687855039 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.680759834 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.628372823 seconds)
  done (took 41.758464528 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.12085577 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.691907533 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.776326039 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.671261986 seconds)
  done (took 8.746849099 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.733323284 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.734123853 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.751396788 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.788099462 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.834789128 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.748329098 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.655280788 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.651512932 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.6376289 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.736083222 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.808240928 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.733590702 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.949524378 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.630383362 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.948802689 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.630376715 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.630370996 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.735856307 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.783813476 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.811442793 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.631352389 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.734300676 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.738081549 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.734738676 seconds)
  done (took 43.258920934 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.638733658 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.649127158 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.633256326 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 1.632985795 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.633823501 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.6342298 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 1.647079361 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 1.634483544 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.6396197 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 1.6328809 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 1.632520575 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 1.632241483 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.646810433 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.632299552 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.633051059 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.639623596 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.634680518 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.640484558 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.641367049 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.633547328 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.631778886 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.639661247 seconds)
  done (took 37.504638502 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.618205202 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.617601484 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.96976727 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.872224537 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.617386122 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.618620644 seconds)
  done (took 15.804273392 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.707909279 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.855683813 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.624024806 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.051128441 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.135532442 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.625952425 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.625692777 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.901003147 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.270123707 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.300711868 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.695436689 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.70457304 seconds)
  done (took 23.990797108 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.708288243 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.630013793 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.635212686 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.668787809 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.631064223 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.630335745 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.671908077 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.195530226 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.637670215 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.905560484 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.629491983 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.712371166 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.879109957 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.633843781 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.632093421 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.604263983 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.859524817 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.236994379 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.63293913 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.632710436 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.661266135 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.634734998 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.632353191 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.889587043 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.636293463 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.630551271 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.892954365 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.628711922 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972888655 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.949863843 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946989281 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.634935519 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.907447975 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.149582221 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.743064523 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885764111 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.633551521 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.652426178 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.606563551 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.636971147 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.652409907 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.637338331 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944159864 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.634794004 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.631450376 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.64310907 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.186397329 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.641726822 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.631376651 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.632714008 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.947194805 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.719325068 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.637861575 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.63266317 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.707569857 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.634873694 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.640954078 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.754683216 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.2745908 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.632983323 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.645770457 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.635099458 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.633455826 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.648871358 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.355679944 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.641797758 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.641489884 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.639515194 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.633555126 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.639561985 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.65583328 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.633934898 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.652615921 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.633710613 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.504401054 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.638498907 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.635391747 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.299167328 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.637152265 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.640010955 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.86390464 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.635018814 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.635128159 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.635732232 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.636057533 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.578791126 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.643776326 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.609031996 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.671719749 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.212395284 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.895345707 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.66048034 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.667263074 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.858961559 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.610912373 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.63653481 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.651872641 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.639886941 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.658874346 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.189754946 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.636941922 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.642554714 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.885675215 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.849262126 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.644126208 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.613784026 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.191619254 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.637275081 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.665755351 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.643675047 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.892448947 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.343148558 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.960083997 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.636083144 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.671717678 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.637502262 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.637479329 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.637516532 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.646136218 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.637204684 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.950759245 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.616244586 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.638301564 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.710837866 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.639383048 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.636453673 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.642876145 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.639543716 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.638033677 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.869299565 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.650886615 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.958864902 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.64114551 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.637657639 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.651251911 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.637604334 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.639298926 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.862259068 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.641676873 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.915527377 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.63821541 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.639467733 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.638591243 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.857512791 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.65539983 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.64542199 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.981668637 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.640077859 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.649546333 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.958658687 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.675975867 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.75366623 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.672318058 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.650885014 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.888307543 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.643037865 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.646422855 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.648911283 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.642157105 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.643634114 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.648832392 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.640498572 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34400162 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.616132694 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.643705853 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.640222169 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.655820847 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.713314387 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.647084946 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.896360821 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.641402777 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.639915635 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.648821794 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.653743142 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.86253461 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.961293768 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.642369039 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.813747853 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.196401484 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.346723992 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.658904037 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.642027133 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.639891095 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.640076946 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.643285071 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.642363999 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.642529552 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891967418 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.970401559 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.643509448 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.353709846 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.645627226 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.644823722 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.650386642 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.961620275 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.651887216 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.642041688 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.640933266 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.660645495 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.647843544 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.964903254 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.864786895 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.658297649 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.64279693 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.161706477 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.650415346 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.644686407 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.642274469 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.668862005 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.650002276 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.260767951 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.988901119 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.657275328 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.970645802 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.647056096 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.663691205 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.643083666 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.649574745 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.648282143 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.660470495 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.653607679 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.901684692 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.656497896 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.648350935 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.287056993 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.54784473 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.300982455 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.649950775 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.649977837 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.646455055 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.205403912 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.649125817 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.648513688 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.927033711 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.205879986 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.647514182 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.204453207 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.647814806 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.571649635 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.972741753 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.877849926 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.646573759 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.662331296 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.975771214 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.865142351 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.676947581 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.653838271 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.649029798 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.62330631 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.267109466 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.650505823 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.832188641 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.207304487 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.65799747 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.653535755 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.667760953 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.668943763 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.151563612 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.65307112 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.64972939 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.657225917 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.657487126 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.273008727 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.656701786 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.648258936 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.377223417 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.659713138 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.210131849 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.651337801 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.911963214 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.978448458 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.953634961 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.662633326 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.652766024 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.897679819 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.978331437 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.655251027 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.656994399 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.267527547 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.514854863 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.658925917 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.652470559 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.664219269 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.653305198 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997704196 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.65579178 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.649964749 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.654813795 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.652163604 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.651018004 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.650211342 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.656031517 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.623154679 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.269109883 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.662628153 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.649166699 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.672890426 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.653265662 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.900705385 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.667498131 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.360716877 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.884336947 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.647070784 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.687606492 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.657565949 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.651011601 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.630318776 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.654184024 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.652334829 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.735473221 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.877239885 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.653336636 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.626700932 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.728810628 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.865919145 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.652497333 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.657833162 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.923524296 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.655970356 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.674224537 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.571759777 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.687782901 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.658618321 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.654899687 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.643970717 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.691016741 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.727362237 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.913420011 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.979014408 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.978355004 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.157922535 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.675699183 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.658762261 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.669659805 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.736710769 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.653616902 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.658002552 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.652057388 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363670359 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.551984549 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.372114793 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.980501612 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.655595379 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.665694467 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.655714243 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.899467738 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.654846917 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.932922893 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.65749405 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.66039739 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.679939207 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.666038016 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.657251682 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.870434434 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.931106191 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.657029374 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.666314995 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.659530019 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.656548425 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.985098136 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.872411769 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.273629795 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.339414355 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.661591311 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.657713297 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.224506904 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.937025303 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.657502757 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.658046565 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.657536236 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.659422048 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.674237814 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.666161318 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.659174119 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.891108551 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.97971628 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.181658384 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.983033245 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.687146435 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.532111495 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.659311121 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.907918557 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.489983128 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.921081295 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379806518 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.48518137 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.913640532 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.733072123 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.921335009 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.663424795 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.897286254 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.669584394 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.658996926 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.657833198 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.65835001 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.65839936 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.983581991 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377530591 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.919004326 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.664280286 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.670838637 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.688979158 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.922755172 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.886720074 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.661107728 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.885886702 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.994019381 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.675629987 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.659861612 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369684921 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.992768352 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.663369537 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.665847227 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932978502 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.664644246 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.697275953 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.533314545 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.660262882 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.34660482 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.876665608 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.682682942 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.667364457 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.500467018 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380683757 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.666432073 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.291855858 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.667198902 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.666950513 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.938784125 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.667949482 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.660771573 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.950860116 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.667193753 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.668040781 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.929035249 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.368118265 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.577295986 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.670516246 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.667689116 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.667745301 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.663411763 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.704810327 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.666118836 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.664034803 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.159101375 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.665579241 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.663289137 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.676770114 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.680303194 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.679204936 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.664355609 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.664076894 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.672042463 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.652795698 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.652371407 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.677353542 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.791675676 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325904728 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.671084997 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.277064529 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.009292495 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.912820028 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.674468847 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.6407982 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.67037734 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.665484135 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.665267337 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.664585301 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.67293243 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.364392154 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.677469166 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.990762853 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.672678773 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.87799475 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.877451188 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.670366922 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.933494379 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.677395072 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.689705314 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.639113462 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.666740577 seconds)
  done (took 1119.586485331 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.695185743 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.724799896 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.668766185 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.759861671 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.708990591 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.730403471 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.665770806 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.727171348 seconds)
  done (took 23.20161415 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.658548601 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.668865677 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.676260943 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.667448919 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.675694668 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.207558706 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.67100726 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.668211313 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.686359352 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.67799783 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.670346194 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.379282291 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.670428891 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.671259485 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.661125208 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.671820937 seconds)
  done (took 37.516309009 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.798560064 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.868234833 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.158133987 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.659905247 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.697840612 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.674697439 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.068906725 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.69731526 seconds)
  done (took 30.148074547 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.673525112 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.673962459 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.676517 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.674541088 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.677859205 seconds)
  done (took 9.900642417 seconds)
done (took 1404.845030261 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.675090475 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.674571275 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.675419242 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.675685008 seconds)
  done (took 8.22494815 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.644201844 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.64464792 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.645227481 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.65693964 seconds)
  done (took 11.11736965 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.089697959 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.343165712 seconds)
  done (took 5.959190522 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.669322319 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.432889033 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.421383852 seconds)
  done (took 9.050019817 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.986097739 seconds)
  done (took 3.512409605 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.07366412 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.177393379 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.661389738 seconds)
  done (took 8.438995188 seconds)
done (took 47.828135875 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.65971798 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.422828227 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.833020904 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.662013555 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.861102607 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.832588849 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.884422016 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.670673568 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.660616251 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.666301858 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.659995269 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.854376589 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.870002783 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.421955261 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.8717098 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.425392884 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.834229831 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.661981336 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.660150058 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.671163261 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.883879001 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.675936785 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.678857993 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.661321749 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.836686654 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.817332473 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.662118213 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.445137207 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.660955429 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.662538929 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.828965129 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.663145345 seconds)
  done (took 92.088356918 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.673748716 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.67849112 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.664970256 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.663912801 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.673879286 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.665781574 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.666932058 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.680567884 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.674963009 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.681144296 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.668109815 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.665954391 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.666016315 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.666179938 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.668320156 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.665737209 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.668053894 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.66902283 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.686302418 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.667404883 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.666443129 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.677749257 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.666671839 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.66707304 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.666340667 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.669574208 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.67077961 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.681224343 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.667663455 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.668419566 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.668387991 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.675459795 seconds)
  done (took 86.990884941 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.665281882 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.669808619 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.669398657 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.68541021 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.665806308 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.667605486 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.670710319 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.680468287 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.666071358 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.682793993 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.668358225 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.668584055 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.667110753 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.665955869 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.669521314 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.666407829 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.666514829 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.683594809 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.686489401 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.66681167 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.668005004 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.672896382 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.666328371 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.678834663 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.677276915 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.666187916 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.668682111 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.67957605 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.666046281 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.676573264 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.67031049 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.670394166 seconds)
  done (took 87.025389671 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.906888508 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.682793753 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.686375684 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.67603546 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.686421194 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.68154801 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.678119272 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.914563202 seconds)
  done (took 17.444618987 seconds)
done (took 285.076565547 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.676979376 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.676771188 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.706207036 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.691620958 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.695974445 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.706564793 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.908835497 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.705827284 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.899786133 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.685315764 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.694974997 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.695180269 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.64107886 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.826153829 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.672267862 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.699630054 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.672584088 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.672812018 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.678872454 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.929560877 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.710313179 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.685545984 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.679259351 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.688929381 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.656218781 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.753227882 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.757236973 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.843529976 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.808309822 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.752648137 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.6736368 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.680763693 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.68134279 seconds)
  done (took 76.441660776 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.677114133 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.686471551 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.687553605 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.689294222 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.686636783 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.687769851 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.678823257 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.688606305 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.687539962 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.687999724 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.687794435 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.689374096 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.689934006 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.688581685 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.688272756 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.668247261 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.679256524 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.687918527 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.678367046 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.666048559 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.68894299 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.689427971 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.688713171 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.688419195 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.689898061 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.68845867 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.688269298 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.689969215 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.690351167 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.690455977 seconds)
  done (took 52.111314284 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.690686265 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.681232557 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.675234415 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.687765209 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.681529758 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.685964619 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.047181305 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.692849363 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.685980435 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.68535657 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.676666041 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.714772306 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.738407591 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.675985331 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.684286648 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.691425377 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.690152988 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.68274274 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.695732757 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.698930898 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.055392153 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.696099409 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.045548944 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.703953877 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.686565282 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.6852075 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.688722742 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.675006768 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.686348957 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.688482018 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.649999937 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.034495926 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.680058359 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.721536191 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.645209711 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.696466236 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.69252 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.699707902 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.687723575 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.684544849 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.039270096 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.691308126 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.675010936 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.681059894 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.692266974 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.693660579 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.677858791 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.701572101 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.98294454 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.695523906 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.67895816 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.694304913 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.696769906 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.688984402 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.981013269 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.69151168 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.687721274 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.67834241 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.696633785 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.040590258 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.699212447 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.686528276 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.678651522 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.691967995 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.680435194 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.693573851 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.701879913 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.690475853 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.698558963 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.693709589 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.680279189 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.69170917 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.695725287 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.692435541 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.686424691 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.684188393 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.693108937 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.683726438 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.686076279 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.035941841 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.696725125 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.680567329 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.055602876 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.696253351 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.699601596 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.700576572 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.695987466 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.760893178 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.034676519 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.650759677 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.707072228 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.686874251 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.050076255 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.700828544 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.690976396 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.681252525 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.702027377 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.69919037 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.683058477 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.685566412 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.692403605 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.703819747 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.68235707 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.696041567 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.045719443 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.699738424 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.683482029 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.695112122 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.762520768 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.697074514 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.704779208 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.694101152 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.055724403 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.697075738 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.698904471 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.68387753 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.689448191 seconds)
  done (took 242.258598755 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.687122725 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.691802364 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.686614778 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.697015323 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.685116593 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.69413936 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.683748749 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.686169696 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.68976524 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.685505948 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.687292384 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.695561884 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.693005205 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.685727283 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.688244205 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.690928797 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.686676397 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.690585771 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.691963531 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.68611511 seconds)
  done (took 51.331204092 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.702536245 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.377764808 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.328372019 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.706557079 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.70051013 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.692338784 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.761494845 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.705793445 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.701422324 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.057562602 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.909767024 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.707856083 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.703114985 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.702565293 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.322594587 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.707041536 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.058552731 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.372104378 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.708712626 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.368109769 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.707567592 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.705475609 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.693141877 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.370840747 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.078642454 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.046994449 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.768859844 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.386640352 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.708192893 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.704747745 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.382317431 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.707237973 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.696480373 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.375770138 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.706572051 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.717176239 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.703396203 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.768086505 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.774415414 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.069701019 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.384444592 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.057429387 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.718634853 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.868142692 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.705830952 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.68277688 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.399217445 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.710019372 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.682731639 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.705451579 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.710679635 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.358307834 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.701278487 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.358877 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.709852203 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.706791405 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.398679248 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.366434196 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.353947449 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.911531764 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.69976557 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.051520136 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.711682964 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.408746222 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.711811229 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.705452991 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.707392635 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.909994672 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.394241731 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.054833994 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.07756732 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.075029682 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.711721914 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.781027339 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.712020873 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.073310314 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.782532042 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.104125337 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.073738811 seconds)
  done (took 154.155344423 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 2.016487382 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.815455803 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.165875993 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.356633713 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.287745947 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.857821886 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.830427316 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.972807129 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.706557983 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.811781967 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.50541689 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.810431081 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.506534799 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.779757362 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.822611533 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.839086354 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.198063598 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.69924693 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.499113046 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.477676815 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.728045034 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.815733196 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.530784525 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.111179547 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.711970736 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.514449852 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.704065131 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.316801866 seconds)
  done (took 63.947823051 seconds)
done (took 641.778117992 seconds)
SAVING RESULT...
DONE!
